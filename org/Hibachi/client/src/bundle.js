<<<<<<< HEAD
<<<<<<< HEAD
var hibachi=webpackJsonphibachi([0],[function(e,t,i){"use strict";var r=i(9),n=i(482),o=i(36),s=i(58),a=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var i=new e;return i.source=this,i.operator=t,i},e.prototype.subscribe=function(e,t,i){var r=this.operator,o=n.toSubscriber(e,t,i);if(r?r.call(o,this.source):o.add(this.source||!o.syncErrorThrowable?this._subscribe(o):this._trySubscribe(o)),o.syncErrorThrowable&&(o.syncErrorThrowable=!1,o.syncErrorThrown))throw o.syncErrorValue;return o},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.syncErrorThrown=!0,e.syncErrorValue=t,e.error(t)}},e.prototype.forEach=function(e,t){var i=this;if(t||(r.root.Rx&&r.root.Rx.config&&r.root.Rx.config.Promise?t=r.root.Rx.config.Promise:r.root.Promise&&(t=r.root.Promise)),!t)throw new Error("no Promise impl found");return new t(function(t,r){var n;n=i.subscribe(function(t){if(n)try{e(t)}catch(e){r(e),n.unsubscribe()}else e(t)},r,t)})},e.prototype._subscribe=function(e){return this.source.subscribe(e)},e.prototype[o.observable]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return 0===e.length?this:s.pipeFromArray(e)(this)},e.prototype.toPromise=function(e){var t=this;if(e||(r.root.Rx&&r.root.Rx.config&&r.root.Rx.config.Promise?e=r.root.Rx.config.Promise:r.root.Promise&&(e=r.root.Promise)),!e)throw new Error("no Promise impl found");return new e(function(e,i){var r;t.subscribe(function(e){return r=e},function(e){return i(e)},function(){return e(r)})})},e.create=function(t){return new e(t)},e}();t.Observable=a},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(41),o=i(5),s=i(66),a=i(37),c=function(e){function t(i,r,n){switch(e.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=s.empty;break;case 1:if(!i){this.destination=s.empty;break}if("object"==typeof i){i instanceof t?(this.syncErrorThrowable=i.syncErrorThrowable,this.destination=i,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new l(this,i));break}default:this.syncErrorThrowable=!0,this.destination=new l(this,i,r,n)}}return r(t,e),t.prototype[a.rxSubscriber]=function(){return this},t.create=function(e,i,r){var n=new t(e,i,r);return n.syncErrorThrowable=!1,n},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this,t=e._parent,i=e._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=t,this._parents=i,this},t}(o.Subscription);t.Subscriber=c;var l=function(e){function t(t,i,r,o){e.call(this),this._parentSubscriber=t;var a,c=this;n.isFunction(i)?a=i:i&&(a=i.next,r=i.error,o=i.complete,i!==s.empty&&(c=Object.create(i),n.isFunction(c.unsubscribe)&&this.add(c.unsubscribe.bind(c)),c.unsubscribe=this.unsubscribe.bind(this))),this._context=c,this._next=a,this._error=r,this._complete=o}return r(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber;if(this._error)t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else{if(!t.syncErrorThrowable)throw this.unsubscribe(),e;t.syncErrorValue=e,t.syncErrorThrown=!0,this.unsubscribe()}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var i=function(){return e._complete.call(e._context)};t.syncErrorThrowable?(this.__tryOrSetError(t,i),this.unsubscribe()):(this.__tryOrUnsub(i),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){throw this.unsubscribe(),e}},t.prototype.__tryOrSetError=function(e,t,i){try{t.call(this._context,i)}catch(t){return e.syncErrorValue=t,e.syncErrorThrown=!0,!0}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(c)},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(1),o=function(e){function t(){e.apply(this,arguments)}return r(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.destination.next(t)},t.prototype.notifyError=function(e,t){this.destination.error(e)},t.prototype.notifyComplete=function(e){this.destination.complete()},t}(n.Subscriber);t.OuterSubscriber=o},function(e,t,i){"use strict";function r(e,t,i,r){var f=new u.InnerSubscriber(e,i,r);if(f.closed)return null;if(t instanceof c.Observable)return t._isScalar?(f.next(t.value),f.complete(),null):(f.syncErrorThrowable=!0,t.subscribe(f));if(o.isArrayLike(t)){for(var p=0,h=t.length;p<h&&!f.closed;p++)f.next(t[p]);f.closed||f.complete()}else{if(s.isPromise(t))return t.then(function(e){f.closed||(f.next(e),f.complete())},function(e){return f.error(e)}).then(null,function(e){n.root.setTimeout(function(){throw e})}),f;if(t&&"function"==typeof t[l.iterator])for(var g=t[l.iterator]();;){var y=g.next();if(y.done){f.complete();break}if(f.next(y.value),f.closed)break}else if(t&&"function"==typeof t[d.observable]){var v=t[d.observable]();if("function"==typeof v.subscribe)return v.subscribe(new u.InnerSubscriber(e,i,r));f.error(new TypeError("Provided object does not correctly implement Symbol.observable"))}else{var m=a.isObject(t)?"an invalid object":"'"+t+"'",b="You provided "+m+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.";f.error(new TypeError(b))}}return null}var n=i(9),o=i(163),s=i(165),a=i(164),c=i(0),l=i(24),u=i(189),d=i(36);t.subscribeToResult=r},function(e,t,i){"use strict";var r=i(22),n=i(23);t.async=new n.AsyncScheduler(r.AsyncAction)},function(e,t,i){"use strict";function r(e){return e.reduce(function(e,t){return e.concat(t instanceof l.UnsubscriptionError?t.errors:t)},[])}var n=i(11),o=i(164),s=i(41),a=i(8),c=i(7),l=i(160),u=function(){function e(e){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}return e.prototype.unsubscribe=function(){var e,t=!1;if(!this.closed){var i=this,u=i._parent,d=i._parents,f=i._unsubscribe,p=i._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var h=-1,g=d?d.length:0;u;)u.remove(this),u=++h<g&&d[h]||null;if(s.isFunction(f)){var y=a.tryCatch(f).call(this);y===c.errorObject&&(t=!0,e=e||(c.errorObject.e instanceof l.UnsubscriptionError?r(c.errorObject.e.errors):[c.errorObject.e]))}if(n.isArray(p))for(h=-1,g=p.length;++h<g;){var v=p[h];if(o.isObject(v)){var y=a.tryCatch(v.unsubscribe).call(v);if(y===c.errorObject){t=!0,e=e||[];var m=c.errorObject.e;m instanceof l.UnsubscriptionError?e=e.concat(r(m.errors)):e.push(m)}}}if(t)throw new l.UnsubscriptionError(e)}},e.prototype.add=function(t){if(!t||t===e.EMPTY)return e.EMPTY;if(t===this)return this;var i=t;switch(typeof t){case"function":i=new e(t);case"object":if(i.closed||"function"!=typeof i.unsubscribe)return i;if(this.closed)return i.unsubscribe(),i;if("function"!=typeof i._addParent){var r=i;i=new e,i._subscriptions=[r]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}return(this._subscriptions||(this._subscriptions=[])).push(i),i._addParent(this),i},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var i=t.indexOf(e);-1!==i&&t.splice(i,1)}},e.prototype._addParent=function(e){var t=this,i=t._parent,r=t._parents;i&&i!==e?r?-1===r.indexOf(e)&&r.push(e):this._parents=[e]:this._parent=e},e.EMPTY=function(e){return e.closed=!0,e}(new e),e}();t.Subscription=u},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(1),s=i(5),a=i(39),c=i(67),l=i(37),u=function(e){function t(t){e.call(this,t),this.destination=t}return r(t,e),t}(o.Subscriber);t.SubjectSubscriber=u;var d=function(e){function t(){e.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return r(t,e),t.prototype[l.rxSubscriber]=function(){return new u(this)},t.prototype.lift=function(e){var t=new f(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new a.ObjectUnsubscribedError;if(!this.isStopped)for(var t=this.observers,i=t.length,r=t.slice(),n=0;n<i;n++)r[n].next(e)},t.prototype.error=function(e){if(this.closed)throw new a.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,i=t.length,r=t.slice(),n=0;n<i;n++)r[n].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new a.ObjectUnsubscribedError;this.isStopped=!0;for(var e=this.observers,t=e.length,i=e.slice(),r=0;r<t;r++)i[r].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new a.ObjectUnsubscribedError;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new a.ObjectUnsubscribedError;return this.hasError?(e.error(this.thrownError),s.Subscription.EMPTY):this.isStopped?(e.complete(),s.Subscription.EMPTY):(this.observers.push(e),new c.SubjectSubscription(this,e))},t.prototype.asObservable=function(){var e=new n.Observable;return e.source=this,e},t.create=function(e,t){return new f(e,t)},t}(n.Observable);t.Subject=d;var f=function(e){function t(t,i){e.call(this),this.destination=t,this.source=i}return r(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):s.Subscription.EMPTY},t}(d);t.AnonymousSubject=f},function(e,t,i){"use strict";t.errorObject={e:{}}},function(e,t,i){"use strict";function r(){try{return o.apply(this,arguments)}catch(e){return s.errorObject.e=e,s.errorObject}}function n(e){return o=e,r}var o,s=i(7);t.tryCatch=n},function(e,t,i){"use strict";(function(e){var i="undefined"!=typeof window&&window,r="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,n=void 0!==e&&e,o=i||n||r;t.root=o,function(){if(!o)throw new Error("RxJS could not find any global context (window, self, global)")}()}).call(t,i(62))},function(e,t,i){"use strict";function r(e){return e&&"function"==typeof e.schedule}t.isScheduler=r},function(e,t,i){"use strict";t.isArray=Array.isArray||function(e){return e&&"number"==typeof e.length}},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(42),s=i(13),a=i(10),c=function(e){function t(t,i){e.call(this),this.array=t,this.scheduler=i,i||1!==t.length||(this._isScalar=!0,this.value=t[0])}return r(t,e),t.create=function(e,i){return new t(e,i)},t.of=function(){for(var e=[],i=0;i<arguments.length;i++)e[i-0]=arguments[i];var r=e[e.length-1];a.isScheduler(r)?e.pop():r=null;var n=e.length;return n>1?new t(e,r):1===n?new o.ScalarObservable(e[0],r):new s.EmptyObservable(r)},t.dispatch=function(e){var t=e.array,i=e.index,r=e.count,n=e.subscriber;if(i>=r)return void n.complete();n.next(t[i]),n.closed||(e.index=i+1,this.schedule(e))},t.prototype._subscribe=function(e){var i=this.array,r=i.length,n=this.scheduler;if(n)return n.schedule(t.dispatch,0,{array:i,index:0,count:r,subscriber:e});for(var o=0;o<r&&!e.closed;o++)e.next(i[o]);e.complete()},t}(n.Observable);t.ArrayObservable=c},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=function(e){function t(t){e.call(this),this.scheduler=t}return r(t,e),t.create=function(e){return new t(e)},t.dispatch=function(e){e.subscriber.complete()},t.prototype._subscribe=function(e){var i=this.scheduler;if(i)return i.schedule(t.dispatch,0,{subscriber:e});e.complete()},t}(n.Observable);t.EmptyObservable=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(168),o=i(573),s=i(579),a=function(e){function t(t,i,r,n,a){var c=e.call(this,t)||this;return c.$injector=t,c.$hibachi=i,c.utilityService=r,c.baseObjectName=n,c.objectName=a,c.newEntity=function(e,t){return t||(t=e),c.newObject("Entity",e,t)},c.newProcessObject=function(e,t){return t||(t=e),c.newObject("Process",e,t)},c.newObject=function(e,t,i){i||(i=t);var r=c.$hibachi.getEntityDefinition(t);if(r){var n={};if("Entity"===e?n=o:"Process"===e&&(n=s),n[i]){c.utilityService.extend(n[i],r);var a=new n[i](c.$injector)}else var a=new r;return a}return{}},c.utilityService=r,c.$hibachi=i,c.$injector=t,c.objectName||(c.objectName=c.baseObjectName),c["new"+c.objectName]=function(){return c.newEntity(c.baseObjectName,c.objectName)},c}return r(t,e),t}(n.BaseObject);t.BaseEntityService=a},function(e,t,i){"use strict";function r(e,t){return function(i){var r;if(r="function"==typeof e?e:function(){return e},"function"==typeof t)return i.lift(new o(r,t));var s=Object.create(i,n.connectableObservableDescriptor);return s.source=i,s.subjectFactory=r,s}}var n=i(68);t.multicast=r;var o=function(){function e(e,t){this.subjectFactory=e,this.selector=t}return e.prototype.call=function(e,t){var i=this.selector,r=this.subjectFactory(),n=i(r).subscribe(e);return n.add(t.subscribe(r)),n},e}();t.MulticastOperator=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(590),n=i(591),o=i(583),s=i(602),a=i(582),c=i(584),l=i(585),u=i(609),d=i(606),f=i(599),p=i(601),h=i(600),g=i(589),y=i(588),v=i(587),m=i(598),b=i(603),w=i(608),S=i(593),C=i(596),P=i(597),O=i(594),D=i(592),I=i(604),_=i(605),T=i(607),$=i(595),A=i(586),x=i(564),E=i(567),k=i(566),j=i(568),F=i(569),L=i(565),R=i(525),N=i(562),B=i(559),M=i(560),U=i(563),W=i(561),V=i(529),q=i(530),G=i(531),K=i(528),H=i(526),J=i(532),z=i(533),Y=i(535),Q=i(536),X=i(537),Z=i(538),ee=i(539),te=i(540),ie=i(542),re=i(545),ne=i(546),oe=i(547),se=i(548),ae=i(544),ce=i(553),le=i(557),ue=i(556),de=i(558),fe=i(552),pe=i(549),he=i(554),ge=i(527),ye=i(534),ve=i(541),me=i(543),be=i(551),we=i(555),Se=i(550),Ce=i(59),Pe=i(171),Oe=angular.module("hibachi.core",["ngAnimate","ngRoute","ngSanitize","ui.bootstrap",Ce.alertmodule.name,Pe.dialogmodule.name]).config(["$compileProvider","$httpProvider","$logProvider","$filterProvider","$provide","hibachiPathBuilder","appConfig",function(e,t,i,r,n,o,s){o.setBaseURL(s.baseURL),o.setBasePartialsPath("/org/Hibachi/client/src/"),s.debugFlag||(s.debugFlag=!1),i.debugEnabled(s.debugFlag),r.register("likeFilter",function(){return function(e){if(angular.isDefined(e)&&angular.isString(e))return e.replace(new RegExp("%","g"),"")}}),r.register("truncate",function(){return function(e,t,i){if(isNaN(t))return e;if(t<=0)return"";if(e&&e.length>t){if(e=e.substring(0,t),i)for(;" "===e.charAt(e.length-1);)e=e.substr(0,e.length-1);else{var r=e.lastIndexOf(" ");-1!==r&&(e=e.substr(0,r))}return e+"..."}return e}}),r.register("pretruncate",function(){return function(e,t,i){if(isNaN(t))return e;if(t<=0)return"";if(e&&e.length>t){if(e=e.slice("-"+t),i)for(;" "===e.charAt(e.length-1);)e=e.substr(0,e.length-1);else{var r=e.lastIndexOf(" ");-1!==r&&(e=e.substr(0,r))}return"..."+e}return e}}),o.setBaseURL(s.baseURL),o.setBasePartialsPath("/org/Hibachi/client/src/"),t.interceptors.push("hibachiInterceptor"),t.useApplyAsync(!0)}]).run(["$rootScope","$hibachi","$route","$location",function(e,t,i,r){e.buildUrl=t.buildUrl;var n=r.path;r.path=function(t,o){if(!1===o)var s=i.current,a=e.$on("$locationChangeSuccess",function(){i.current=s,a()});return n.apply(r,[t])}}]).constant("hibachiPathBuilder",new n.HibachiPathBuilder).constant("corePartialsPath","core/components/").service("cacheService",o.CacheService).service("publicService",s.PublicService).service("utilityService",u.UtilityService).service("selectionService",d.SelectionService).service("observerService",f.ObserverService).service("draggableService",l.DraggableService).service("expandableService",v.ExpandableService).service("filterService",y.FilterService).service("formService",g.FormService).service("historyService",C.HistoryService).service("metadataService",m.MetaDataService).service("rbkeyService",b.RbKeyService).service("typeaheadService",w.TypeaheadService).provider("$hibachi",S.$Hibachi).decorator("$hibachi",O.HibachiServiceDecorator).service("hibachiInterceptor",r.HibachiInterceptor.Factory()).service("hibachiScope",D.HibachiScope).service("scopeService",_.ScopeService).service("skuService",T.SkuService).service("localStorageService",P.LocalStorageService).service("requestService",I.RequestService).service("accountService",a.AccountService).service("orderService",p.OrderService).service("orderPaymentService",h.OrderPaymentService).service("cartService",c.CartService).service("hibachiValidationService",$.HibachiValidationService).service("entityService",A.EntityService).controller("globalSearch",x.GlobalSearchController).filter("dateFilter",["$filter",L.DateFilter.Factory]).filter("percentage",[E.PercentageFilter.Factory]).filter("trim",[j.SWTrim.Factory]).filter("entityRBKey",["rbkeyService",k.EntityRBKey.Factory]).filter("swdate",["$filter",L.DateFilter.Factory]).filter("unique",[F.SWUnique.Factory]).directive("swCollectionConfig",V.SWCollectionConfig.Factory()).directive("swCollectionColumn",K.SWCollectionColumn.Factory()).directive("swCollectionFilter",q.SWCollectionFilter.Factory()).directive("swCollectionOrderBy",G.SWCollectionOrderBy.Factory()).directive("swTypeaheadSearch",N.SWTypeaheadSearch.Factory()).directive("swTypeaheadInputField",B.SWTypeaheadInputField.Factory()).directive("swTypeaheadMultiselect",M.SWTypeaheadMultiselect.Factory()).directive("swTypeaheadSearchLineItem",U.SWTypeaheadSearchLineItem.Factory()).directive("swTypeaheadRemoveSelection",W.SWTypeaheadRemoveSelection.Factory()).directive("swActionCaller",R.SWActionCaller.Factory()).directive("swActionCallerDropdown",H.SWActionCallerDropdown.Factory()).directive("swColumnSorter",J.SWColumnSorter.Factory()).directive("swConfirm",z.SWConfirm.Factory()).directive("swEntityActionBar",X.SWEntityActionBar.Factory()).directive("swEntityActionBarButtonGroup",Z.SWEntityActionBarButtonGroup.Factory()).directive("swExpandableRecord",ee.SWExpandableRecord.Factory()).directive("swExpiringSessionNotifier",te.SWExpiringSessionNotifier.Factory()).directive("swGravatar",ie.SWGravatar.Factory()).directive("swDraggable",Y.SWDraggable.Factory()).directive("swDraggableContainer",Q.SWDraggableContainer.Factory()).directive("swLogin",re.SWLogin.Factory()).directive("swModalLauncher",ne.SWModalLauncher.Factory()).directive("swModalWindow",oe.SWModalWindow.Factory()).directive("swNumbersOnly",se.SWNumbersOnly.Factory()).directive("swLoading",ae.SWLoading.Factory()).directive("swScrollTrigger",ce.SWScrollTrigger.Factory()).directive("swRbkey",fe.SWRbKey.Factory()).directive("swOptions",pe.SWOptions.Factory()).directive("swSelection",he.SWSelection.Factory()).directive("swTabGroup",le.SWTabGroup.Factory()).directive("swTabContent",ue.SWTabContent.Factory()).directive("swTooltip",de.SWTooltip.Factory()).directive("swClickOutside",ge.SWClickOutside.Factory()).directive("swDirective",ye.SWDirective.Factory()).directive("swExportAction",ve.SWExportAction.Factory()).directive("swHref",me.SWHref.Factory()).directive("swProcessCaller",be.SWProcessCaller.Factory()).directive("sw:sortable",we.SWSortable.Factory()).directive("swOrderByControls",Se.SWOrderByControls.Factory());t.coremodule=Oe},function(e,t,i){"use strict";var r=i(0),n=function(){function e(e,t,i){this.kind=e,this.value=t,this.error=i,this.hasValue="N"===e}return e.prototype.observe=function(e){switch(this.kind){case"N":return e.next&&e.next(this.value);case"E":return e.error&&e.error(this.error);case"C":return e.complete&&e.complete()}},e.prototype.do=function(e,t,i){switch(this.kind){case"N":return e&&e(this.value);case"E":return t&&t(this.error);case"C":return i&&i()}},e.prototype.accept=function(e,t,i){return e&&"function"==typeof e.next?this.observe(e):this.do(e,t,i)},e.prototype.toObservable=function(){switch(this.kind){case"N":return r.Observable.of(this.value);case"E":return r.Observable.throw(this.error);case"C":return r.Observable.empty()}throw new Error("unexpected notification kind value")},e.createNext=function(t){return void 0!==t?new e("N",t):e.undefinedValueNotification},e.createError=function(t){return new e("E",void 0,t)},e.createComplete=function(){return e.completeNotification},e.completeNotification=new e("C"),e.undefinedValueNotification=new e("N",void 0),e}();t.Notification=n},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return 1===e.length||2===e.length&&n.isScheduler(e[1])?s.from(e[0]):a.concatAll()(o.of.apply(void 0,e))}var n=i(10),o=i(73),s=i(72),a=i(45);t.concat=r},function(e,t,i){"use strict";function r(e,t){return function(i){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return i.lift(new s(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.map=r;var s=function(){function e(e,t){this.project=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.project,this.thisArg))},e}();t.MapOperator=s;var a=function(e){function t(t,i,r){e.call(this,t),this.project=i,this.count=0,this.thisArg=r||this}return n(t,e),t.prototype._next=function(e){var t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),function(r){return"number"==typeof t&&(i=t,t=null),r.lift(new a(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(3),s=i(2);t.mergeMap=r;var a=function(){function e(e,t,i){void 0===i&&(i=Number.POSITIVE_INFINITY),this.project=e,this.resultSelector=t,this.concurrent=i}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.project,this.resultSelector,this.concurrent))},e}();t.MergeMapOperator=a;var c=function(e){function t(t,i,r,n){void 0===n&&(n=Number.POSITIVE_INFINITY),e.call(this,t),this.project=i,this.resultSelector=r,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return n(t,e),t.prototype._next=function(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)},t.prototype._tryNext=function(e){var t,i=this.index++;try{t=this.project(e,i)}catch(e){return void this.destination.error(e)}this.active++,this._innerSub(t,e,i)},t.prototype._innerSub=function(e,t,i){this.add(o.subscribeToResult(this,e,t,i))},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){this.resultSelector?this._notifyResultSelector(e,t,i,r):this.destination.next(t)},t.prototype._notifyResultSelector=function(e,t,i,r){var n;try{n=this.resultSelector(e,t,i,r)}catch(e){return void this.destination.error(e)}this.destination.next(n)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},t}(s.OuterSubscriber);t.MergeMapSubscriber=c},function(e,t,i){"use strict";function r(e,t){return arguments.length>=2?function(i){return a.pipe(n.scan(e,t),o.takeLast(1),s.defaultIfEmpty(t))(i)}:function(t){return a.pipe(n.scan(function(t,i,r){return e(t,i,r+1)}),o.takeLast(1))(t)}}var n=i(53),o=i(55),s=i(47),a=i(58);t.reduce=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(9),o=i(463),s=function(e){function t(t,i){e.call(this,t,i),this.scheduler=t,this.work=i,this.pending=!1}return r(t,e),t.prototype.schedule=function(e,t){if(void 0===t&&(t=0),this.closed)return this;this.state=e,this.pending=!0;var i=this.id,r=this.scheduler;return null!=i&&(this.id=this.recycleAsyncId(r,i,t)),this.delay=t,this.id=this.id||this.requestAsyncId(r,this.id,t),this},t.prototype.requestAsyncId=function(e,t,i){return void 0===i&&(i=0),n.root.setInterval(e.flush.bind(e,this),i)},t.prototype.recycleAsyncId=function(e,t,i){return void 0===i&&(i=0),null!==i&&this.delay===i&&!1===this.pending?t:n.root.clearInterval(t)&&void 0||void 0},t.prototype.execute=function(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var i=this._execute(e,t);if(i)return i;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},t.prototype._execute=function(e,t){var i=!1,r=void 0;try{this.work(e)}catch(e){i=!0,r=!!e&&e||new Error(e)}if(i)return this.unsubscribe(),r},t.prototype._unsubscribe=function(){var e=this.id,t=this.scheduler,i=t.actions,r=i.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&i.splice(r,1),null!=e&&(this.id=this.recycleAsyncId(t,e,null)),this.delay=null},t}(o.Action);t.AsyncAction=s},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(191),o=function(e){function t(){e.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return r(t,e),t.prototype.flush=function(e){var t=this.actions;if(this.active)return void t.push(e);var i;this.active=!0;do{if(i=e.execute(e.state,e.delay))break}while(e=t.shift());if(this.active=!1,i){for(;e=t.shift();)e.unsubscribe();throw i}},t}(n.Scheduler);t.AsyncScheduler=o},function(e,t,i){"use strict";function r(e){var t=e.Symbol;if("function"==typeof t)return t.iterator||(t.iterator=t("iterator polyfill")),t.iterator;var i=e.Set;if(i&&"function"==typeof(new i)["@@iterator"])return"@@iterator";var r=e.Map;if(r)for(var n=Object.getOwnPropertyNames(r.prototype),o=0;o<n.length;++o){var s=n[o];if("entries"!==s&&"size"!==s&&r.prototype[s]===r.prototype.entries)return s}return"@@iterator"}var n=i(9);t.symbolIteratorPonyfill=r,t.iterator=r(n.root),t.$$iterator=t.iterator},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=function(e){function t(){var t=e.call(this,"argument out of range");this.name=t.name="ArgumentOutOfRangeError",this.stack=t.stack,this.message=t.message}return r(t,e),t}(Error);t.ArgumentOutOfRangeError=n},function(e,t,i){"use strict";function r(e){return!n.isArray(e)&&e-parseFloat(e)+1>=0}var n=i(11);t.isNumeric=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(60),o=function(e){function t(t){return e.call(this,t)||this}return r(t,e),t}(n.BaseTransient);t.BaseEntity=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(5),s=function(e){function t(){e.apply(this,arguments),this.value=null,this.hasNext=!1,this.hasCompleted=!1}return r(t,e),t.prototype._subscribe=function(t){return this.hasError?(t.error(this.thrownError),o.Subscription.EMPTY):this.hasCompleted&&this.hasNext?(t.next(this.value),t.complete(),o.Subscription.EMPTY):e.prototype._subscribe.call(this,t)},t.prototype.next=function(e){this.hasCompleted||(this.value=e,this.hasNext=!0)},t.prototype.error=function(t){this.hasCompleted||e.prototype.error.call(this,t)},t.prototype.complete=function(){this.hasCompleted=!0,this.hasNext&&e.prototype.next.call(this,this.value),e.prototype.complete.call(this)},t}(n.Subject);t.AsyncSubject=s},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(156),s=i(5),a=i(33),c=i(39),l=i(67),u=function(e){function t(t,i,r){void 0===t&&(t=Number.POSITIVE_INFINITY),void 0===i&&(i=Number.POSITIVE_INFINITY),e.call(this),this.scheduler=r,this._events=[],this._bufferSize=t<1?1:t,this._windowTime=i<1?1:i}return r(t,e),t.prototype.next=function(t){var i=this._getNow();this._events.push(new d(i,t)),this._trimBufferThenGetEvents(),e.prototype.next.call(this,t)},t.prototype._subscribe=function(e){var t,i=this._trimBufferThenGetEvents(),r=this.scheduler;if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError?t=s.Subscription.EMPTY:this.isStopped?t=s.Subscription.EMPTY:(this.observers.push(e),t=new l.SubjectSubscription(this,e)),r&&e.add(e=new a.ObserveOnSubscriber(e,r));for(var n=i.length,o=0;o<n&&!e.closed;o++)e.next(i[o].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),t},t.prototype._getNow=function(){return(this.scheduler||o.queue).now()},t.prototype._trimBufferThenGetEvents=function(){for(var e=this._getNow(),t=this._bufferSize,i=this._windowTime,r=this._events,n=r.length,o=0;o<n&&!(e-r[o].time<i);)o++;return n>t&&(o=Math.max(o,n-t)),o>0&&r.splice(0,o),r},t}(n.Subject);t.ReplaySubject=u;var d=function(){function e(e,t){this.time=e,this.value=t}return e}()},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=Number.POSITIVE_INFINITY,r=null,c=e[e.length-1];return s.isScheduler(c)?(r=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(i=e.pop())):"number"==typeof c&&(i=e.pop()),null===r&&1===e.length&&e[0]instanceof n.Observable?e[0]:a.mergeAll(i)(new o.ArrayObservable(e,r))}var n=i(0),o=i(12),s=i(10),a=i(32);t.merge=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=null;return"function"==typeof e[e.length-1]&&(i=e.pop()),1===e.length&&s.isArray(e[0])&&(e=e[0].slice()),function(t){return t.lift.call(new o.ArrayObservable([t].concat(e)),new u(i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(12),s=i(11),a=i(2),c=i(3),l={};t.combineLatest=r;var u=function(){function e(e){this.project=e}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.project))},e}();t.CombineLatestOperator=u;var d=function(e){function t(t,i){e.call(this,t),this.project=i,this.active=0,this.values=[],this.observables=[]}return n(t,e),t.prototype._next=function(e){this.values.push(l),this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(var i=0;i<t;i++){var r=e[i];this.add(c.subscribeToResult(this,r,r,i))}}},t.prototype.notifyComplete=function(e){0==(this.active-=1)&&this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){var o=this.values,s=o[i],a=this.toRespond?s===l?--this.toRespond:this.toRespond:0;o[i]=t,0===a&&(this.project?this._tryProject(o):this.destination.next(o.slice()))},t.prototype._tryProject=function(e){var t;try{t=this.project.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(a.OuterSubscriber);t.CombineLatestSubscriber=d},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=Number.POSITIVE_INFINITY),n.mergeMap(o.identity,null,e)}var n=i(20),o=i(162);t.mergeAll=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(17);t.observeOn=r;var a=function(){function e(e,t){void 0===t&&(t=0),this.scheduler=e,this.delay=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.scheduler,this.delay))},e}();t.ObserveOnOperator=a;var c=function(e){function t(t,i,r){void 0===r&&(r=0),e.call(this,t),this.scheduler=i,this.delay=r}return n(t,e),t.dispatch=function(e){var t=e.notification,i=e.destination;t.observe(i),this.unsubscribe()},t.prototype.scheduleMessage=function(e){this.add(this.scheduler.schedule(t.dispatch,this.delay,new l(e,this.destination)))},t.prototype._next=function(e){this.scheduleMessage(s.Notification.createNext(e))},t.prototype._error=function(e){this.scheduleMessage(s.Notification.createError(e))},t.prototype._complete=function(){this.scheduleMessage(s.Notification.createComplete())},t}(o.Subscriber);t.ObserveOnSubscriber=c;var l=function(){function e(e,t){this.notification=e,this.destination=t}return e}();t.ObserveOnMessage=l},function(e,t,i){"use strict";function r(e,i){return void 0===i&&(i=t.defaultThrottleConfig),function(t){return t.lift(new a(e,i.leading,i.trailing))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.defaultThrottleConfig={leading:!0,trailing:!1},t.throttle=r;var a=function(){function e(e,t,i){this.durationSelector=e,this.leading=t,this.trailing=i}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.durationSelector,this.leading,this.trailing))},e}(),c=function(e){function t(t,i,r,n){e.call(this,t),this.destination=t,this.durationSelector=i,this._leading=r,this._trailing=n,this._hasTrailingValue=!1}return n(t,e),t.prototype._next=function(e){if(this.throttled)this._trailing&&(this._hasTrailingValue=!0,this._trailingValue=e);else{var t=this.tryDurationSelector(e);t&&this.add(this.throttled=s.subscribeToResult(this,t)),this._leading&&(this.destination.next(e),this._trailing&&(this._hasTrailingValue=!0,this._trailingValue=e))}},t.prototype.tryDurationSelector=function(e){try{return this.durationSelector(e)}catch(e){return this.destination.error(e),null}},t.prototype._unsubscribe=function(){var e=this,t=e.throttled;e._trailingValue,e._hasTrailingValue,e._trailing,this._trailingValue=null,this._hasTrailingValue=!1,t&&(this.remove(t),this.throttled=null,t.unsubscribe())},t.prototype._sendTrailing=function(){var e=this,t=e.destination,i=e.throttled,r=e._trailing,n=e._trailingValue,o=e._hasTrailingValue;i&&r&&o&&(t.next(n),this._trailingValue=null,this._hasTrailingValue=!1)},t.prototype.notifyNext=function(e,t,i,r,n){this._sendTrailing(),this._unsubscribe()},t.prototype.notifyComplete=function(){this._sendTrailing(),this._unsubscribe()},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){return t.lift.call(n.apply(void 0,[t].concat(e)))}}function n(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=e[e.length-1];return"function"==typeof i&&e.pop(),new s.ArrayObservable(e).lift(new f(i))}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(12),a=i(11),c=i(1),l=i(2),u=i(3),d=i(24);t.zip=r,t.zipStatic=n;var f=function(){function e(e){this.project=e}return e.prototype.call=function(e,t){return t.subscribe(new p(e,this.project))},e}();t.ZipOperator=f;var p=function(e){function t(t,i,r){void 0===r&&(r=Object.create(null)),e.call(this,t),this.iterators=[],this.active=0,this.project="function"==typeof i?i:null,this.values=r}return o(t,e),t.prototype._next=function(e){var t=this.iterators;a.isArray(e)?t.push(new g(e)):"function"==typeof e[d.iterator]?t.push(new h(e[d.iterator]())):t.push(new y(this.destination,this,e))},t.prototype._complete=function(){var e=this.iterators,t=e.length;if(0===t)return void this.destination.complete();this.active=t;for(var i=0;i<t;i++){var r=e[i];r.stillUnsubscribed?this.add(r.subscribe(r,i)):this.active--}},t.prototype.notifyInactive=function(){0==--this.active&&this.destination.complete()},t.prototype.checkIterators=function(){for(var e=this.iterators,t=e.length,i=this.destination,r=0;r<t;r++){var n=e[r];if("function"==typeof n.hasValue&&!n.hasValue())return}for(var o=!1,s=[],r=0;r<t;r++){var n=e[r],a=n.next();if(n.hasCompleted()&&(o=!0),a.done)return void i.complete();s.push(a.value)}this.project?this._tryProject(s):i.next(s),o&&i.complete()},t.prototype._tryProject=function(e){var t;try{t=this.project.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(c.Subscriber);t.ZipSubscriber=p;var h=function(){function e(e){this.iterator=e,this.nextResult=e.next()}return e.prototype.hasValue=function(){return!0},e.prototype.next=function(){var e=this.nextResult;return this.nextResult=this.iterator.next(),e},e.prototype.hasCompleted=function(){var e=this.nextResult;return e&&e.done},e}(),g=function(){function e(e){this.array=e,this.index=0,this.length=0,this.length=e.length}return e.prototype[d.iterator]=function(){return this},e.prototype.next=function(e){var t=this.index++,i=this.array;return t<this.length?{value:i[t],done:!1}:{value:null,done:!0}},e.prototype.hasValue=function(){return this.array.length>this.index},e.prototype.hasCompleted=function(){return this.array.length===this.index},e}(),y=function(e){function t(t,i,r){e.call(this,t),this.parent=i,this.observable=r,this.stillUnsubscribed=!0,this.buffer=[],this.isComplete=!1}return o(t,e),t.prototype[d.iterator]=function(){return this},t.prototype.next=function(){var e=this.buffer;return 0===e.length&&this.isComplete?{value:null,done:!0}:{value:e.shift(),done:!1}},t.prototype.hasValue=function(){return this.buffer.length>0},t.prototype.hasCompleted=function(){return 0===this.buffer.length&&this.isComplete},t.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=!0,this.parent.notifyInactive()):this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){this.buffer.push(t),this.parent.checkIterators()},t.prototype.subscribe=function(e,t){return u.subscribeToResult(this,this.observable,this,t)},t}(l.OuterSubscriber)},function(e,t,i){"use strict";function r(e){var t,i=e.Symbol;return"function"==typeof i?i.observable?t=i.observable:(t=i("observable"),i.observable=t):t="@@observable",t}var n=i(9);t.getSymbolObservable=r,t.observable=r(n.root),t.$$observable=t.observable},function(e,t,i){"use strict";var r=i(9),n=r.root.Symbol;t.rxSubscriber="function"==typeof n&&"function"==typeof n.for?n.for("rxSubscriber"):"@@rxSubscriber",t.$$rxSubscriber=t.rxSubscriber},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=function(e){function t(){var t=e.call(this,"no elements in sequence");this.name=t.name="EmptyError",this.stack=t.stack,this.message=t.message}return r(t,e),t}(Error);t.EmptyError=n},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=function(e){function t(){var t=e.call(this,"object unsubscribed");this.name=t.name="ObjectUnsubscribedError",this.stack=t.stack,this.message=t.message}return r(t,e),t}(Error);t.ObjectUnsubscribedError=n},function(e,t,i){"use strict";function r(e){return e instanceof Date&&!isNaN(+e)}t.isDate=r},function(e,t,i){"use strict";function r(e){return"function"==typeof e}t.isFunction=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=function(e){function t(t,i){e.call(this),this.value=t,this.scheduler=i,this._isScalar=!0,i&&(this._isScalar=!1)}return r(t,e),t.create=function(e,i){return new t(e,i)},t.dispatch=function(e){var t=e.done,i=e.value,r=e.subscriber;if(t)return void r.complete();r.next(i),r.closed||(e.done=!0,this.schedule(e))},t.prototype._subscribe=function(e){var i=this.value,r=this.scheduler;if(r)return r.schedule(t.dispatch,0,{done:!1,value:i,subscriber:e});e.next(i),e.closed||e.complete()},t}(n.Observable);t.ScalarObservable=o},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];if(1===e.length){if(!o.isArray(e[0]))return e[0];e=e[0]}return new s.ArrayObservable(e).lift(new l)}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(11),s=i(12),a=i(2),c=i(3);t.race=r;var l=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new u(e))},e}();t.RaceOperator=l;var u=function(e){function t(t){e.call(this,t),this.hasFirst=!1,this.observables=[],this.subscriptions=[]}return n(t,e),t.prototype._next=function(e){this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{for(var i=0;i<t&&!this.hasFirst;i++){var r=e[i],n=c.subscribeToResult(this,r,r,i);this.subscriptions&&this.subscriptions.push(n),this.add(n)}this.observables=null}},t.prototype.notifyNext=function(e,t,i,r,n){if(!this.hasFirst){this.hasFirst=!0;for(var o=0;o<this.subscriptions.length;o++)if(o!==i){var s=this.subscriptions[o];s.unsubscribe(),this.remove(s)}this.subscriptions=null}this.destination.next(t)},t}(a.OuterSubscriber);t.RaceSubscriber=u},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new l(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(8),s=i(7),a=i(2),c=i(3);t.audit=r;var l=function(){function e(e){this.durationSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.durationSelector))},e}(),u=function(e){function t(t,i){e.call(this,t),this.durationSelector=i,this.hasValue=!1}return n(t,e),t.prototype._next=function(e){if(this.value=e,this.hasValue=!0,!this.throttled){var t=o.tryCatch(this.durationSelector)(e);if(t===s.errorObject)this.destination.error(s.errorObject.e);else{var i=c.subscribeToResult(this,t);i.closed?this.clearThrottle():this.add(this.throttled=i)}}},t.prototype.clearThrottle=function(){var e=this,t=e.value,i=e.hasValue,r=e.throttled;r&&(this.remove(r),this.throttled=null,r.unsubscribe()),i&&(this.value=null,this.hasValue=!1,this.destination.next(t))},t.prototype.notifyNext=function(e,t,i,r){this.clearThrottle()},t.prototype.notifyComplete=function(){this.clearThrottle()},t}(a.OuterSubscriber)},function(e,t,i){"use strict";function r(){return n.mergeAll(1)}var n=i(32);t.concatAll=r},function(e,t,i){"use strict";function r(e,t){return n.mergeMap(e,t,1)}var n=i(20);t.concatMap=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=null),function(t){return t.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.defaultIfEmpty=r;var s=function(){function e(e){this.defaultValue=e}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.defaultValue))},e}(),a=function(e){function t(t,i){e.call(this,t),this.defaultValue=i,this.isEmpty=!0}return n(t,e),t.prototype._next=function(e){this.isEmpty=!1,this.destination.next(e)},t.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new c(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(8),a=i(7);t.distinctUntilChanged=r;var c=function(){function e(e,t){this.compare=e,this.keySelector=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.compare,this.keySelector))},e}(),l=function(e){function t(t,i,r){e.call(this,t),this.keySelector=r,this.hasKey=!1,"function"==typeof i&&(this.compare=i)}return n(t,e),t.prototype.compare=function(e,t){return e===t},t.prototype._next=function(e){var t=this.keySelector,i=e;if(t&&(i=s.tryCatch(this.keySelector)(e))===a.errorObject)return this.destination.error(a.errorObject.e);var r=!1;if(this.hasKey){if((r=s.tryCatch(this.compare)(this.key,i))===a.errorObject)return this.destination.error(a.errorObject.e)}else this.hasKey=!0;!1===Boolean(r)&&(this.key=i,this.destination.next(e))},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new s(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.filter=r;var s=function(){function e(e,t){this.predicate=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate,this.thisArg))},e}(),a=function(e){function t(t,i,r){e.call(this,t),this.predicate=i,this.thisArg=r,this.count=0}return n(t,e),t.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){if("function"!=typeof e)throw new TypeError("predicate is not a function");return function(i){return i.lift(new s(e,i,!1,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.find=r;var s=function(){function e(e,t,i,r){this.predicate=e,this.source=t,this.yieldIndex=i,this.thisArg=r}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate,this.source,this.yieldIndex,this.thisArg))},e}();t.FindValueOperator=s;var a=function(e){function t(t,i,r,n,o){e.call(this,t),this.predicate=i,this.source=r,this.yieldIndex=n,this.thisArg=o,this.index=0}return n(t,e),t.prototype.notifyComplete=function(e){var t=this.destination;t.next(e),t.complete()},t.prototype._next=function(e){var t=this,i=t.predicate,r=t.thisArg,n=this.index++;try{i.call(r||this,e,n,this.source)&&this.notifyComplete(this.yieldIndex?n:e)}catch(e){this.destination.error(e)}},t.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:void 0)},t}(o.Subscriber);t.FindValueSubscriber=a},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return 1===e.length&&a.isArray(e[0])&&(e=e[0]),function(t){return t.lift(new u(e))}}function n(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=null;return 1===e.length&&a.isArray(e[0])&&(e=e[0]),i=e.shift(),new s.FromObservable(i,null).lift(new u(e))}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(69),a=i(11),c=i(2),l=i(3);t.onErrorResumeNext=r,t.onErrorResumeNextStatic=n;var u=function(){function e(e){this.nextSources=e}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.nextSources))},e}(),d=function(e){function t(t,i){e.call(this,t),this.destination=t,this.nextSources=i}return o(t,e),t.prototype.notifyError=function(e,t){this.subscribeToNextSource()},t.prototype.notifyComplete=function(e){this.subscribeToNextSource()},t.prototype._error=function(e){this.subscribeToNextSource()},t.prototype._complete=function(){this.subscribeToNextSource()},t.prototype.subscribeToNextSource=function(){var e=this.nextSources.shift();e?this.add(l.subscribeToResult(this,e)):this.destination.complete()},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.refCount=r;var s=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var i=this.connectable;i._refCount++;var r=new a(e,i),n=t.subscribe(r);return r.closed||(r.connection=i.connect()),n},e}(),a=function(e){function t(t,i){e.call(this,t),this.connectable=i}return n(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(!e)return void(this.connection=null);this.connectable=null;var t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);var i=this.connection,r=e._connection;this.connection=null,!r||i&&r!==i||r.unsubscribe()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){var i=!1;return arguments.length>=2&&(i=!0),function(r){return r.lift(new s(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.scan=r;var s=function(){function e(e,t,i){void 0===i&&(i=!1),this.accumulator=e,this.seed=t,this.hasSeed=i}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.accumulator,this.seed,this.hasSeed))},e}(),a=function(e){function t(t,i,r,n){e.call(this,t),this.accumulator=i,this._seed=r,this.hasSeed=n,this.index=0}return n(t,e),Object.defineProperty(t.prototype,"seed",{get:function(){return this._seed},set:function(e){this.hasSeed=!0,this._seed=e},enumerable:!0,configurable:!0}),t.prototype._next=function(e){if(this.hasSeed)return this._tryNext(e);this.seed=e,this.destination.next(e)},t.prototype._tryNext=function(e){var t,i=this.index++;try{t=this.accumulator(this.seed,e,i)}catch(e){this.destination.error(e)}this.seed=t,this.destination.next(t)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.switchMap=r;var a=function(){function e(e,t){this.project=e,this.resultSelector=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.project,this.resultSelector))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.project=i,this.resultSelector=r,this.index=0}return n(t,e),t.prototype._next=function(e){var t,i=this.index++;try{t=this.project(e,i)}catch(e){return void this.destination.error(e)}this._innerSub(t,e,i)},t.prototype._innerSub=function(e,t,i){var r=this.innerSubscription;r&&r.unsubscribe(),this.add(this.innerSubscription=s.subscribeToResult(this,e,t,i))},t.prototype._complete=function(){var t=this.innerSubscription;t&&!t.closed||e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){this.innerSubscription=null},t.prototype.notifyComplete=function(t){this.remove(t),this.innerSubscription=null,this.isStopped&&e.prototype._complete.call(this)},t.prototype.notifyNext=function(e,t,i,r,n){this.resultSelector?this._tryNotifyNext(e,t,i,r):this.destination.next(t)},t.prototype._tryNotifyNext=function(e,t,i,r){var n;try{n=this.resultSelector(e,t,i,r)}catch(e){return void this.destination.error(e)}this.destination.next(n)},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return 0===e?new a.EmptyObservable:t.lift(new c(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(25),a=i(13);t.takeLast=r;var c=function(){function e(e){if(this.total=e,this.total<0)throw new s.ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.total))},e}(),l=function(e){function t(t,i){e.call(this,t),this.total=i,this.ring=new Array,this.count=0}return n(t,e),t.prototype._next=function(e){var t=this.ring,i=this.total,r=this.count++;t.length<i?t.push(e):t[r%i]=e},t.prototype._complete=function(){var e=this.destination,t=this.count;if(t>0)for(var i=this.count>=this.total?this.total:this.count,r=this.ring,n=0;n<i;n++){var o=t++%i;e.next(r[o])}e.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=n.async),o.map(function(t){return new s(t,e.now())})}var n=i(4),o=i(19);t.timestamp=r;var s=function(){function e(e,t){this.value=e,this.timestamp=t}return e}();t.Timestamp=s},function(e,t,i){"use strict";function r(){}t.noop=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n(e)}function n(e){return e?1===e.length?e[0]:function(t){return e.reduce(function(e,t){return t(e)},t)}:o.noop}var o=i(57);t.pipe=r,t.pipeFromArray=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(484),n=i(486),o=angular.module("hibachi.alert",[]).controller("alertController",r.AlertController).service("alertService",n.AlertService);t.alertmodule=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(168),o=function(e){function t(t){var i=e.call(this,t)||this;return i.errors={},i.messages={},i.populate=function(e){var t=e;e.data&&(t=e.data),t=i.utilityService.nvpToObject(t);for(var r in t)!function(){var e=r.replace(i.className.toLowerCase()+".",""),n=e.split("."),o=e.replace(/\./g,"_"),s=i;angular.forEach(n,function(e,a){if(s.metaData[e])if(a===n.length-1)if(angular.isObject(t[r])&&s.metaData[e].fieldtype&&"many-to-one"===s.metaData[e].fieldtype){var c=i.entityService.newEntity(s.metaData[e].cfc);c.populate?(c.populate(t[r]),s["$$set"+s.metaData[e].name.charAt(0).toUpperCase()+s.metaData[e].name.slice(1)](c)):(c.$$init(t[r]),s["$$set"+s.metaData[e].name.charAt(0).toUpperCase()+s.metaData[e].name.slice(1)](c))}else angular.isArray(t[o])&&s.metaData[e].fieldtype&&"one-to-many"===s.metaData[e].fieldtype?(s[e]=[],angular.forEach(t[r],function(t,r){var n=i.entityService.newEntity(s.metaData[e].cfc);if(n.populate){n.populate(t);var o=!1;for(var a in s[e])if(s[e][a].$$getID().length>0&&s[e][a].$$getID()===n.$$getID()){o=!0;break}o||s["$$add"+s.metaData[e].singularname.charAt(0).toUpperCase()+s.metaData[e].singularname.slice(1)](n)}else n.$$init(t),s["$$add"+s.metaData[e].singularname.charAt(0).toUpperCase()+s.metaData[e].singularname.slice(1)](n)})):s[e]=t[r];else{var l=s.metaData[e];c=angular.isUndefined(s.data[e])||s.data[e]&&null===s.data[e]?"one-to-many"===l.fieldtype?[]:i.$hibachi["new"+l.cfc]():s.data[e],s["$$set"+l.name.charAt(0).toUpperCase()+l.name.slice(1)](c),s=c}else i[r]=t[r]})}();e.errors&&(i.errors=e.errors,i.messages=e.messages)},i.addError=function(e,t){i.errors[e]||(i.errors[e]=[]),angular.isArray(t)?i.addErrorsByArray(e,t):angular.isObject(t)?i.addErrorsByObject(e,t):i.errors[e].push(t)},i.addErrorsByArray=function(e,t){for(var r=0;r<t.length;r++){var n=t[r];i.errors[e].push(n)}},i.addErrorsByObject=function(e,t){i.errors[e]||(i.errors[e]=[]);for(var r in t)for(var n=0;n<t[r].length;n++){var o=t[n];i.errors[e].push(o)}},i.addErrors=function(e){for(var t in e){i.errors[t]||(i.errors[t]=[]);for(var r in e[t])i.errors[t].push(r)}},i.getError=function(e){return i.getErrorByErrorName(e)},i.getErrorByErrorName=function(e){return i.errors[e]},i.hasError=function(e){return i.hasErrorByErrorName(e)},i.hasErrorByErrorName=function(e){return angular.isDefined(i.errors[e])},i.hasErrors=function(){return Object.keys(i.errors).length},i.hasSuccessfulAction=function(e){},i.$hibachi=i.getService("$hibachi"),i.hibachiValidationService=i.getService("hibachiValidationService"),i.utilityService=i.getService("utilityService"),i.entityService=i.getService("entityService"),i}return r(t,e),t}(n.BaseObject);t.BaseTransient=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.BaseService=r},function(e,t){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(i=window)}e.exports=i},function(e,t){var i={utf8:{stringToBytes:function(e){return i.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(i.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],i=0;i<e.length;i++)t.push(255&e.charCodeAt(i));return t},bytesToString:function(e){for(var t=[],i=0;i<e.length;i++)t.push(String.fromCharCode(e[i]));return t.join("")}}};e.exports=i},function(e,t,i){!function(){var t=i(186),r=i(63).utf8,n=i(187),o=i(63).bin,s=function(e,i){e.constructor==String?e=i&&"binary"===i.encoding?o.stringToBytes(e):r.stringToBytes(e):n(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||(e=e.toString());for(var a=t.bytesToWords(e),c=8*e.length,l=1732584193,u=-271733879,d=-1732584194,f=271733878,p=0;p<a.length;p++)a[p]=16711935&(a[p]<<8|a[p]>>>24)|4278255360&(a[p]<<24|a[p]>>>8);a[c>>>5]|=128<<c%32,a[14+(c+64>>>9<<4)]=c;for(var h=s._ff,g=s._gg,y=s._hh,v=s._ii,p=0;p<a.length;p+=16){var m=l,b=u,w=d,S=f;l=h(l,u,d,f,a[p+0],7,-680876936),f=h(f,l,u,d,a[p+1],12,-389564586),d=h(d,f,l,u,a[p+2],17,606105819),u=h(u,d,f,l,a[p+3],22,-1044525330),l=h(l,u,d,f,a[p+4],7,-176418897),f=h(f,l,u,d,a[p+5],12,1200080426),d=h(d,f,l,u,a[p+6],17,-1473231341),u=h(u,d,f,l,a[p+7],22,-45705983),l=h(l,u,d,f,a[p+8],7,1770035416),f=h(f,l,u,d,a[p+9],12,-1958414417),d=h(d,f,l,u,a[p+10],17,-42063),u=h(u,d,f,l,a[p+11],22,-1990404162),l=h(l,u,d,f,a[p+12],7,1804603682),f=h(f,l,u,d,a[p+13],12,-40341101),d=h(d,f,l,u,a[p+14],17,-1502002290),u=h(u,d,f,l,a[p+15],22,1236535329),l=g(l,u,d,f,a[p+1],5,-165796510),f=g(f,l,u,d,a[p+6],9,-1069501632),d=g(d,f,l,u,a[p+11],14,643717713),u=g(u,d,f,l,a[p+0],20,-373897302),l=g(l,u,d,f,a[p+5],5,-701558691),f=g(f,l,u,d,a[p+10],9,38016083),d=g(d,f,l,u,a[p+15],14,-660478335),u=g(u,d,f,l,a[p+4],20,-405537848),l=g(l,u,d,f,a[p+9],5,568446438),f=g(f,l,u,d,a[p+14],9,-1019803690),d=g(d,f,l,u,a[p+3],14,-187363961),u=g(u,d,f,l,a[p+8],20,1163531501),l=g(l,u,d,f,a[p+13],5,-1444681467),f=g(f,l,u,d,a[p+2],9,-51403784),d=g(d,f,l,u,a[p+7],14,1735328473),u=g(u,d,f,l,a[p+12],20,-1926607734),l=y(l,u,d,f,a[p+5],4,-378558),f=y(f,l,u,d,a[p+8],11,-2022574463),d=y(d,f,l,u,a[p+11],16,1839030562),u=y(u,d,f,l,a[p+14],23,-35309556),l=y(l,u,d,f,a[p+1],4,-1530992060),f=y(f,l,u,d,a[p+4],11,1272893353),d=y(d,f,l,u,a[p+7],16,-155497632),u=y(u,d,f,l,a[p+10],23,-1094730640),l=y(l,u,d,f,a[p+13],4,681279174),f=y(f,l,u,d,a[p+0],11,-358537222),d=y(d,f,l,u,a[p+3],16,-722521979),u=y(u,d,f,l,a[p+6],23,76029189),l=y(l,u,d,f,a[p+9],4,-640364487),f=y(f,l,u,d,a[p+12],11,-421815835),d=y(d,f,l,u,a[p+15],16,530742520),u=y(u,d,f,l,a[p+2],23,-995338651),l=v(l,u,d,f,a[p+0],6,-198630844),f=v(f,l,u,d,a[p+7],10,1126891415),d=v(d,f,l,u,a[p+14],15,-1416354905),u=v(u,d,f,l,a[p+5],21,-57434055),l=v(l,u,d,f,a[p+12],6,1700485571),f=v(f,l,u,d,a[p+3],10,-1894986606),d=v(d,f,l,u,a[p+10],15,-1051523),u=v(u,d,f,l,a[p+1],21,-2054922799),l=v(l,u,d,f,a[p+8],6,1873313359),f=v(f,l,u,d,a[p+15],10,-30611744),d=v(d,f,l,u,a[p+6],15,-1560198380),u=v(u,d,f,l,a[p+13],21,1309151649),l=v(l,u,d,f,a[p+4],6,-145523070),f=v(f,l,u,d,a[p+11],10,-1120210379),d=v(d,f,l,u,a[p+2],15,718787259),u=v(u,d,f,l,a[p+9],21,-343485551),l=l+m>>>0,u=u+b>>>0,d=d+w>>>0,f=f+S>>>0}return t.endian([l,u,d,f])};s._ff=function(e,t,i,r,n,o,s){var a=e+(t&i|~t&r)+(n>>>0)+s;return(a<<o|a>>>32-o)+t},s._gg=function(e,t,i,r,n,o,s){var a=e+(t&r|i&~r)+(n>>>0)+s;return(a<<o|a>>>32-o)+t},s._hh=function(e,t,i,r,n,o,s){var a=e+(t^i^r)+(n>>>0)+s;return(a<<o|a>>>32-o)+t},s._ii=function(e,t,i,r,n,o,s){var a=e+(i^(t|~r))+(n>>>0)+s;return(a<<o|a>>>32-o)+t},s._blocksize=16,s._digestsize=16,e.exports=function(e,i){if(void 0===e||null===e)throw new Error("Illegal argument "+e);var r=t.wordsToBytes(s(e,i));return i&&i.asBytes?r:i&&i.asString?o.bytesToString(r):t.bytesToHex(r)}}()},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(39),s=function(e){function t(t){e.call(this),this._value=t}return r(t,e),Object.defineProperty(t.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),t.prototype._subscribe=function(t){var i=e.prototype._subscribe.call(this,t);return i&&!i.closed&&t.next(this._value),i},t.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new o.ObjectUnsubscribedError;return this._value},t.prototype.next=function(t){e.prototype.next.call(this,this._value=t)},t}(n.Subject);t.BehaviorSubject=s},function(e,t,i){"use strict";t.empty={closed:!0,next:function(e){},error:function(e){throw e},complete:function(){}}},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(5),o=function(e){function t(t,i){e.call(this),this.subject=t,this.subscriber=i,this.closed=!1}return r(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var i=t.indexOf(this.subscriber);-1!==i&&t.splice(i,1)}}},t}(n.Subscription);t.SubjectSubscription=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(0),s=i(1),a=i(5),c=i(52),l=function(e){function t(t,i){e.call(this),this.source=t,this.subjectFactory=i,this._refCount=0,this._isComplete=!1}return r(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,e=this._connection=new a.Subscription,e.add(this.source.subscribe(new d(this.getSubject(),this))),e.closed?(this._connection=null,e=a.Subscription.EMPTY):this._connection=e),e},t.prototype.refCount=function(){return c.refCount()(this)},t}(o.Observable);t.ConnectableObservable=l;var u=l.prototype;t.connectableObservableDescriptor={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:u._subscribe},_isComplete:{value:u._isComplete,writable:!0},getSubject:{value:u.getSubject},connect:{value:u.connect},refCount:{value:u.refCount}};var d=function(e){function t(t,i){e.call(this,t),this.connectable=i}return r(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(n.SubjectSubscriber),f=(function(){function e(e){this.connectable=e}e.prototype.call=function(e,t){var i=this.connectable;i._refCount++;var r=new f(e,i),n=t.subscribe(r);return r.closed||(r.connection=i.connect()),n}}(),function(e){function t(t,i){e.call(this,t),this.connectable=i}return r(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(!e)return void(this.connection=null);this.connectable=null;var t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);var i=this.connection,r=e._connection;this.connection=null,!r||i&&r!==i||r.unsubscribe()},t}(s.Subscriber))},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(11),o=i(163),s=i(165),a=i(70),c=i(332),l=i(12),u=i(321),d=i(24),f=i(0),p=i(33),h=i(36),g=function(e){function t(t,i){e.call(this,null),this.ish=t,this.scheduler=i}return r(t,e),t.create=function(e,i){if(null!=e){if("function"==typeof e[h.observable])return e instanceof f.Observable&&!i?e:new t(e,i);if(n.isArray(e))return new l.ArrayObservable(e,i);if(s.isPromise(e))return new a.PromiseObservable(e,i);if("function"==typeof e[d.iterator]||"string"==typeof e)return new c.IteratorObservable(e,i);if(o.isArrayLike(e))return new u.ArrayLikeObservable(e,i)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")},t.prototype._subscribe=function(e){var t=this.ish,i=this.scheduler;return null==i?t[h.observable]().subscribe(e):t[h.observable]().subscribe(new p.ObserveOnSubscriber(e,i,0))},t}(f.Observable);t.FromObservable=g},function(e,t,i){"use strict";function r(e){var t=e.value,i=e.subscriber;i.closed||(i.next(t),i.complete())}function n(e){var t=e.err,i=e.subscriber;i.closed||i.error(t)}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(9),a=i(0),c=function(e){function t(t,i){e.call(this),this.promise=t,this.scheduler=i}return o(t,e),t.create=function(e,i){return new t(e,i)},t.prototype._subscribe=function(e){var t=this,i=this.promise,o=this.scheduler;if(null==o)this._isScalar?e.closed||(e.next(this.value),e.complete()):i.then(function(i){t.value=i,t._isScalar=!0,e.closed||(e.next(i),e.complete())},function(t){e.closed||e.error(t)}).then(null,function(e){s.root.setTimeout(function(){throw e})});else if(this._isScalar){if(!e.closed)return o.schedule(r,0,{value:this.value,subscriber:e})}else i.then(function(i){t.value=i,t._isScalar=!0,e.closed||e.add(o.schedule(r,0,{value:i,subscriber:e}))},function(t){e.closed||e.add(o.schedule(n,0,{err:t,subscriber:e}))}).then(null,function(e){s.root.setTimeout(function(){throw e})})},t}(a.Observable);t.PromiseObservable=c},function(e,t,i){"use strict";function r(){if(p.root.XMLHttpRequest)return new p.root.XMLHttpRequest;if(p.root.XDomainRequest)return new p.root.XDomainRequest;throw new Error("CORS is not supported by your browser")}function n(){if(p.root.XMLHttpRequest)return new p.root.XMLHttpRequest;var e=void 0;try{for(var t=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],i=0;i<3;i++)try{if(e=t[i],new p.root.ActiveXObject(e))break}catch(e){}return new p.root.ActiveXObject(e)}catch(e){throw new Error("XMLHttpRequest is not supported by your browser")}}function o(e,t){return void 0===t&&(t=null),new w({method:"GET",url:e,headers:t})}function s(e,t,i){return new w({method:"POST",url:e,body:t,headers:i})}function a(e,t){return new w({method:"DELETE",url:e,headers:t})}function c(e,t,i){return new w({method:"PUT",url:e,body:t,headers:i})}function l(e,t,i){return new w({method:"PATCH",url:e,body:t,headers:i})}function u(e,t){return b(new w({method:"GET",url:e,responseType:"json",headers:t}))}function d(e,t){switch(e){case"json":return"response"in t?t.responseType?t.response:JSON.parse(t.response||t.responseText||"null"):JSON.parse(t.responseText||"null");case"xml":return t.responseXML;case"text":default:return"response"in t?t.response:t.responseText}}var f=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},p=i(9),h=i(8),g=i(7),y=i(0),v=i(1),m=i(19);t.ajaxGet=o,t.ajaxPost=s,t.ajaxDelete=a,t.ajaxPut=c,t.ajaxPatch=l;var b=m.map(function(e,t){return e.response});t.ajaxGetJSON=u;var w=function(e){function t(t){e.call(this);var i={async:!0,createXHR:function(){return this.crossDomain?r.call(this):n()},crossDomain:!1,withCredentials:!1,headers:{},method:"GET",responseType:"json",timeout:0};if("string"==typeof t)i.url=t;else for(var o in t)t.hasOwnProperty(o)&&(i[o]=t[o]);this.request=i}return f(t,e),t.prototype._subscribe=function(e){return new S(e,this.request)},t.create=function(){var e=function(e){return new t(e)};return e.get=o,e.post=s,e.delete=a,e.put=c,e.patch=l,e.getJSON=u,e}(),t}(y.Observable);t.AjaxObservable=w;var S=function(e){function t(t,i){e.call(this,t),this.request=i,this.done=!1;var r=i.headers=i.headers||{};i.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),"Content-Type"in r||p.root.FormData&&i.body instanceof p.root.FormData||void 0===i.body||(r["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),i.body=this.serializeBody(i.body,i.headers["Content-Type"]),this.send()}return f(t,e),t.prototype.next=function(e){this.done=!0;var t=this,i=t.xhr,r=t.request,n=t.destination,o=new C(e,i,r);n.next(o)},t.prototype.send=function(){var e=this,t=e.request,i=e.request,r=i.user,n=i.method,o=i.url,s=i.async,a=i.password,c=i.headers,l=i.body,u=t.createXHR,d=h.tryCatch(u).call(t);if(d===g.errorObject)this.error(g.errorObject.e);else{if(this.xhr=d,this.setupEvents(d,t),(r?h.tryCatch(d.open).call(d,n,o,s,r,a):h.tryCatch(d.open).call(d,n,o,s))===g.errorObject)return this.error(g.errorObject.e),null;if(s&&(d.timeout=t.timeout,d.responseType=t.responseType),"withCredentials"in d&&(d.withCredentials=!!t.withCredentials),this.setHeaders(d,c),(l?h.tryCatch(d.send).call(d,l):h.tryCatch(d.send).call(d))===g.errorObject)return this.error(g.errorObject.e),null}return d},t.prototype.serializeBody=function(e,t){if(!e||"string"==typeof e)return e;if(p.root.FormData&&e instanceof p.root.FormData)return e;if(t){var i=t.indexOf(";");-1!==i&&(t=t.substring(0,i))}switch(t){case"application/x-www-form-urlencoded":return Object.keys(e).map(function(t){return encodeURI(t)+"="+encodeURI(e[t])}).join("&");case"application/json":return JSON.stringify(e);default:return e}},t.prototype.setHeaders=function(e,t){for(var i in t)t.hasOwnProperty(i)&&e.setRequestHeader(i,t[i])},t.prototype.setupEvents=function(e,t){function i(e){var t=i,r=t.subscriber,n=t.progressSubscriber,o=t.request;n&&n.error(e),r.error(new O(this,o))}function r(e){var t=r,i=t.subscriber,n=t.progressSubscriber,o=t.request;if(4===this.readyState){var s=1223===this.status?204:this.status,a="text"===this.responseType?this.response||this.responseText:this.response;0===s&&(s=a?200:0),200<=s&&s<300?(n&&n.complete(),i.next(e),i.complete()):(n&&n.error(e),i.error(new P("ajax error "+s,this,o)))}}var n=t.progressSubscriber;if(e.ontimeout=i,i.request=t,i.subscriber=this,i.progressSubscriber=n,e.upload&&"withCredentials"in e){if(n){var o;o=function(e){o.progressSubscriber.next(e)},p.root.XDomainRequest?e.onprogress=o:e.upload.onprogress=o,o.progressSubscriber=n}var s;s=function(e){var t=s,i=t.progressSubscriber,r=t.subscriber,n=t.request;i&&i.error(e),r.error(new P("ajax error",this,n))},e.onerror=s,s.request=t,s.subscriber=this,s.progressSubscriber=n}e.onreadystatechange=r,r.subscriber=this,r.progressSubscriber=n,r.request=t},t.prototype.unsubscribe=function(){var t=this,i=t.done,r=t.xhr;!i&&r&&4!==r.readyState&&"function"==typeof r.abort&&r.abort(),e.prototype.unsubscribe.call(this)},t}(v.Subscriber);t.AjaxSubscriber=S;var C=function(){function e(e,t,i){this.originalEvent=e,this.xhr=t,this.request=i,this.status=t.status,this.responseType=t.responseType||i.responseType,this.response=d(this.responseType,t)}return e}();t.AjaxResponse=C;var P=function(e){function t(t,i,r){e.call(this,t),this.message=t,this.xhr=i,this.request=r,this.status=i.status,this.responseType=i.responseType||r.responseType,this.response=d(this.responseType,i)}return f(t,e),t}(Error);t.AjaxError=P;var O=function(e){function t(t,i){e.call(this,"ajax timeout",t,i)}return f(t,e),t}(P);t.AjaxTimeoutError=O},function(e,t,i){"use strict";var r=i(69);t.from=r.FromObservable.create},function(e,t,i){"use strict";var r=i(12);t.of=r.ArrayObservable.of},function(e,t,i){"use strict";var r=i(337);t.timer=r.TimerObservable.create},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=n.async),o.timeInterval(e)(this)}var n=i(4),o=i(143);t.TimeInterval=o.TimeInterval,t.timeInterval=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.audit(function(){return s.timer(e,t)})}var n=i(4),o=i(44),s=i(74);t.auditTime=r},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.buffer=r;var a=function(){function e(e){this.closingNotifier=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.closingNotifier))},e}(),c=function(e){function t(t,i){e.call(this,t),this.buffer=[],this.add(s.subscribeToResult(this,i))}return n(t,e),t.prototype._next=function(e){this.buffer.push(e)},t.prototype.notifyNext=function(e,t,i,r,n){var o=this.buffer;this.buffer=[],this.destination.next(o)},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=null),function(i){return i.lift(new s(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.bufferCount=r;var s=function(){function e(e,t){this.bufferSize=e,this.startBufferEvery=t,this.subscriberClass=t&&e!==t?c:a}return e.prototype.call=function(e,t){return t.subscribe(new this.subscriberClass(e,this.bufferSize,this.startBufferEvery))},e}(),a=function(e){function t(t,i){e.call(this,t),this.bufferSize=i,this.buffer=[]}return n(t,e),t.prototype._next=function(e){var t=this.buffer;t.push(e),t.length==this.bufferSize&&(this.destination.next(t),this.buffer=[])},t.prototype._complete=function(){var t=this.buffer;t.length>0&&this.destination.next(t),e.prototype._complete.call(this)},t}(o.Subscriber),c=function(e){function t(t,i,r){e.call(this,t),this.bufferSize=i,this.startBufferEvery=r,this.buffers=[],this.count=0}return n(t,e),t.prototype._next=function(e){var t=this,i=t.bufferSize,r=t.startBufferEvery,n=t.buffers,o=t.count;this.count++,o%r==0&&n.push([]);for(var s=n.length;s--;){var a=n[s];a.push(e),a.length===i&&(n.splice(s,1),this.destination.next(a))}},t.prototype._complete=function(){for(var t=this,i=t.buffers,r=t.destination;i.length>0;){var n=i.shift();n.length>0&&r.next(n)}e.prototype._complete.call(this)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){var t=arguments.length,i=c.async;u.isScheduler(arguments[arguments.length-1])&&(i=arguments[arguments.length-1],t--);var r=null;t>=2&&(r=arguments[1]);var n=Number.POSITIVE_INFINITY;return t>=3&&(n=arguments[2]),function(t){return t.lift(new d(e,r,n,i))}}function n(e){var t=e.subscriber,i=e.context;i&&t.closeContext(i),t.closed||(e.context=t.openContext(),e.context.closeAction=this.schedule(e,e.bufferTimeSpan))}function o(e){var t=e.bufferCreationInterval,i=e.bufferTimeSpan,r=e.subscriber,n=e.scheduler,o=r.openContext(),a=this;r.closed||(r.add(o.closeAction=n.schedule(s,i,{subscriber:r,context:o})),a.schedule(e,t))}function s(e){var t=e.subscriber,i=e.context;t.closeContext(i)}var a=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},c=i(4),l=i(1),u=i(10);t.bufferTime=r;var d=function(){function e(e,t,i,r){this.bufferTimeSpan=e,this.bufferCreationInterval=t,this.maxBufferSize=i,this.scheduler=r}return e.prototype.call=function(e,t){return t.subscribe(new p(e,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler))},e}(),f=function(){function e(){this.buffer=[]}return e}(),p=function(e){function t(t,i,r,a,c){e.call(this,t),this.bufferTimeSpan=i,this.bufferCreationInterval=r,this.maxBufferSize=a,this.scheduler=c,this.contexts=[];var l=this.openContext();if(this.timespanOnly=null==r||r<0,this.timespanOnly){var u={subscriber:this,context:l,bufferTimeSpan:i};this.add(l.closeAction=c.schedule(n,i,u))}else{var d={subscriber:this,context:l},f={bufferTimeSpan:i,bufferCreationInterval:r,subscriber:this,scheduler:c};this.add(l.closeAction=c.schedule(s,i,d)),this.add(c.schedule(o,r,f))}}return a(t,e),t.prototype._next=function(e){for(var t,i=this.contexts,r=i.length,n=0;n<r;n++){var o=i[n],s=o.buffer;s.push(e),s.length==this.maxBufferSize&&(t=o)}t&&this.onBufferFull(t)},t.prototype._error=function(t){this.contexts.length=0,e.prototype._error.call(this,t)},t.prototype._complete=function(){for(var t=this,i=t.contexts,r=t.destination;i.length>0;){var n=i.shift();r.next(n.buffer)}e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){this.contexts=null},t.prototype.onBufferFull=function(e){this.closeContext(e);var t=e.closeAction;if(t.unsubscribe(),this.remove(t),!this.closed&&this.timespanOnly){e=this.openContext();var i=this.bufferTimeSpan,r={subscriber:this,context:e,bufferTimeSpan:i};this.add(e.closeAction=this.scheduler.schedule(n,i,r))}},t.prototype.openContext=function(){var e=new f;return this.contexts.push(e),e},t.prototype.closeContext=function(e){this.destination.next(e.buffer);var t=this.contexts;(t?t.indexOf(e):-1)>=0&&t.splice(t.indexOf(e),1)},t}(l.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new c(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(5),s=i(3),a=i(2);t.bufferToggle=r;var c=function(){function e(e,t){this.openings=e,this.closingSelector=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.openings,this.closingSelector))},e}(),l=function(e){function t(t,i,r){e.call(this,t),this.openings=i,this.closingSelector=r,this.contexts=[],this.add(s.subscribeToResult(this,i))}return n(t,e),t.prototype._next=function(e){for(var t=this.contexts,i=t.length,r=0;r<i;r++)t[r].buffer.push(e)},t.prototype._error=function(t){for(var i=this.contexts;i.length>0;){var r=i.shift();r.subscription.unsubscribe(),r.buffer=null,r.subscription=null}this.contexts=null,e.prototype._error.call(this,t)},t.prototype._complete=function(){for(var t=this.contexts;t.length>0;){var i=t.shift();this.destination.next(i.buffer),i.subscription.unsubscribe(),i.buffer=null,i.subscription=null}this.contexts=null,e.prototype._complete.call(this)},t.prototype.notifyNext=function(e,t,i,r,n){e?this.closeBuffer(e):this.openBuffer(t)},t.prototype.notifyComplete=function(e){this.closeBuffer(e.context)},t.prototype.openBuffer=function(e){try{var t=this.closingSelector,i=t.call(this,e);i&&this.trySubscribe(i)}catch(e){this._error(e)}},t.prototype.closeBuffer=function(e){var t=this.contexts;if(t&&e){var i=e.buffer,r=e.subscription;this.destination.next(i),t.splice(t.indexOf(e),1),this.remove(r),r.unsubscribe()}},t.prototype.trySubscribe=function(e){var t=this.contexts,i=[],r=new o.Subscription,n={buffer:i,subscription:r};t.push(n);var a=s.subscribeToResult(this,e,n);!a||a.closed?this.closeBuffer(n):(a.context=n,this.add(a),r.add(a))},t}(a.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new u(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(5),s=i(8),a=i(7),c=i(2),l=i(3);t.bufferWhen=r;var u=function(){function e(e){this.closingSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.closingSelector))},e}(),d=function(e){function t(t,i){e.call(this,t),this.closingSelector=i,this.subscribing=!1,this.openBuffer()}return n(t,e),t.prototype._next=function(e){this.buffer.push(e)},t.prototype._complete=function(){var t=this.buffer;t&&this.destination.next(t),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){this.buffer=null,this.subscribing=!1},t.prototype.notifyNext=function(e,t,i,r,n){this.openBuffer()},t.prototype.notifyComplete=function(){this.subscribing?this.complete():this.openBuffer()},t.prototype.openBuffer=function(){var e=this.closingSubscription;e&&(this.remove(e),e.unsubscribe());var t=this.buffer;this.buffer&&this.destination.next(t),this.buffer=[];var i=s.tryCatch(this.closingSelector)();i===a.errorObject?this.error(a.errorObject.e):(e=new o.Subscription,this.closingSubscription=e,this.add(e),this.subscribing=!0,e.add(l.subscribeToResult(this,i)),this.subscribing=!1)},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){var i=new a(e),r=t.lift(i);return i.caught=r}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.catchError=r;var a=function(){function e(e){this.selector=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.selector,this.caught))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.selector=i,this.caught=r}return n(t,e),t.prototype.error=function(t){if(!this.isStopped){var i=void 0;try{i=this.selector(t,this.caught)}catch(t){return void e.prototype.error.call(this,t)}this._unsubscribeAndRecycle(),this.add(s.subscribeToResult(this,i))}},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new n.CombineLatestOperator(e))}}var n=i(31);t.combineAll=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){return t.lift.call(n.concat.apply(void 0,[t].concat(e)))}}var n=i(18),o=i(18);t.concatStatic=o.concat,t.concat=r},function(e,t,i){"use strict";function r(e,t){return n.concatMap(function(){return e},t)}var n=i(46);t.concatMapTo=r},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new s(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.count=r;var s=function(){function e(e,t){this.predicate=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate,this.source))},e}(),a=function(e){function t(t,i,r){e.call(this,t),this.predicate=i,this.source=r,this.count=0,this.index=0}return n(t,e),t.prototype._next=function(e){this.predicate?this._tryPredicate(e):this.count++},t.prototype._tryPredicate=function(e){var t;try{t=this.predicate(e,this.index++,this.source)}catch(e){return void this.destination.error(e)}t&&this.count++},t.prototype._complete=function(){this.destination.next(this.count),this.destination.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.debounce=r;var a=function(){function e(e){this.durationSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.durationSelector))},e}(),c=function(e){function t(t,i){e.call(this,t),this.durationSelector=i,this.hasValue=!1,this.durationSubscription=null}return n(t,e),t.prototype._next=function(e){try{var t=this.durationSelector.call(this,e);t&&this._tryNext(e,t)}catch(e){this.destination.error(e)}},t.prototype._complete=function(){this.emitValue(),this.destination.complete()},t.prototype._tryNext=function(e,t){var i=this.durationSubscription;this.value=e,this.hasValue=!0,i&&(i.unsubscribe(),this.remove(i)),i=s.subscribeToResult(this,t),i.closed||this.add(this.durationSubscription=i)},t.prototype.notifyNext=function(e,t,i,r,n){this.emitValue()},t.prototype.notifyComplete=function(){this.emitValue()},t.prototype.emitValue=function(){if(this.hasValue){var t=this.value,i=this.durationSubscription;i&&(this.durationSubscription=null,i.unsubscribe(),this.remove(i)),this.value=null,this.hasValue=!1,e.prototype._next.call(this,t)}},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=a.async),function(i){return i.lift(new c(e,t))}}function n(e){e.debouncedNext()}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(1),a=i(4);t.debounceTime=r;var c=function(){function e(e,t){this.dueTime=e,this.scheduler=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.dueTime,this.scheduler))},e}(),l=function(e){function t(t,i,r){e.call(this,t),this.dueTime=i,this.scheduler=r,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}return o(t,e),t.prototype._next=function(e){this.clearDebounce(),this.lastValue=e,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(n,this.dueTime,this))},t.prototype._complete=function(){this.debouncedNext(),this.destination.complete()},t.prototype.debouncedNext=function(){this.clearDebounce(),this.hasValue&&(this.destination.next(this.lastValue),this.lastValue=null,this.hasValue=!1)},t.prototype.clearDebounce=function(){var e=this.debouncedSubscription;null!==e&&(this.remove(e),e.unsubscribe(),this.debouncedSubscription=null)},t}(s.Subscriber)},function(e,t,i){"use strict";function r(e,t){void 0===t&&(t=o.async);var i=s.isDate(e),r=i?+e-t.now():Math.abs(e);return function(e){return e.lift(new l(r,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(4),s=i(40),a=i(1),c=i(17);t.delay=r;var l=function(){function e(e,t){this.delay=e,this.scheduler=t}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.delay,this.scheduler))},e}(),u=function(e){function t(t,i,r){e.call(this,t),this.delay=i,this.scheduler=r,this.queue=[],this.active=!1,this.errored=!1}return n(t,e),t.dispatch=function(e){for(var t=e.source,i=t.queue,r=e.scheduler,n=e.destination;i.length>0&&i[0].time-r.now()<=0;)i.shift().notification.observe(n);if(i.length>0){var o=Math.max(0,i[0].time-r.now());this.schedule(e,o)}else t.active=!1},t.prototype._schedule=function(e){this.active=!0,this.add(e.schedule(t.dispatch,this.delay,{source:this,destination:this.destination,scheduler:e}))},t.prototype.scheduleNotification=function(e){if(!0!==this.errored){var t=this.scheduler,i=new d(t.now()+this.delay,e);this.queue.push(i),!1===this.active&&this._schedule(t)}},t.prototype._next=function(e){this.scheduleNotification(c.Notification.createNext(e))},t.prototype._error=function(e){this.errored=!0,this.queue=[],this.destination.error(e)},t.prototype._complete=function(){this.scheduleNotification(c.Notification.createComplete())},t}(a.Subscriber),d=function(){function e(e,t){this.time=e,this.notification=t}return e}()},function(e,t,i){"use strict";function r(e,t){return t?function(i){return new d(i,t).lift(new l(e))}:function(t){return t.lift(new l(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(0),a=i(2),c=i(3);t.delayWhen=r;var l=function(){function e(e){this.delayDurationSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.delayDurationSelector))},e}(),u=function(e){function t(t,i){e.call(this,t),this.delayDurationSelector=i,this.completed=!1,this.delayNotifierSubscriptions=[],this.values=[]}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.destination.next(e),this.removeSubscription(n),this.tryComplete()},t.prototype.notifyError=function(e,t){this._error(e)},t.prototype.notifyComplete=function(e){var t=this.removeSubscription(e);t&&this.destination.next(t),this.tryComplete()},t.prototype._next=function(e){try{var t=this.delayDurationSelector(e);t&&this.tryDelay(t,e)}catch(e){this.destination.error(e)}},t.prototype._complete=function(){this.completed=!0,this.tryComplete()},t.prototype.removeSubscription=function(e){e.unsubscribe();var t=this.delayNotifierSubscriptions.indexOf(e),i=null;return-1!==t&&(i=this.values[t],this.delayNotifierSubscriptions.splice(t,1),this.values.splice(t,1)),i},t.prototype.tryDelay=function(e,t){var i=c.subscribeToResult(this,e,t);i&&!i.closed&&(this.add(i),this.delayNotifierSubscriptions.push(i)),this.values.push(t)},t.prototype.tryComplete=function(){this.completed&&0===this.delayNotifierSubscriptions.length&&this.destination.complete()},t}(a.OuterSubscriber),d=function(e){function t(t,i){e.call(this),this.source=t,this.subscriptionDelay=i}return n(t,e),t.prototype._subscribe=function(e){this.subscriptionDelay.subscribe(new f(e,this.source))},t}(s.Observable),f=function(e){function t(t,i){e.call(this),this.parent=t,this.source=i,this.sourceSubscribed=!1}return n(t,e),t.prototype._next=function(e){this.subscribeToSource()},t.prototype._error=function(e){this.unsubscribe(),this.parent.error(e)},t.prototype._complete=function(){this.subscribeToSource()},t.prototype.subscribeToSource=function(){this.sourceSubscribed||(this.sourceSubscribed=!0,this.unsubscribe(),this.source.subscribe(this.parent))},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new s)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.dematerialize=r;var s=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new a(e))},e}(),a=function(e){function t(t){e.call(this,t)}return n(t,e),t.prototype._next=function(e){e.observe(this.destination)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new c(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3),a=i(479);t.distinct=r;var c=function(){function e(e,t){this.keySelector=e,this.flushes=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.keySelector,this.flushes))},e}(),l=function(e){function t(t,i,r){e.call(this,t),this.keySelector=i,this.values=new a.Set,r&&this.add(s.subscribeToResult(this,r))}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.values.clear()},t.prototype.notifyError=function(e,t){this._error(e)},t.prototype._next=function(e){this.keySelector?this._useKeySelector(e):this._finalizeNext(e,e)},t.prototype._useKeySelector=function(e){var t,i=this.destination;try{t=this.keySelector(e)}catch(e){return void i.error(e)}this._finalizeNext(t,e)},t.prototype._finalizeNext=function(e,t){var i=this.values;i.has(e)||(i.add(e),this.destination.next(t))},t}(o.OuterSubscriber);t.DistinctSubscriber=l},function(e,t,i){"use strict";function r(e,t){return n.distinctUntilChanged(function(i,r){return t?t(i[e],r[e]):i[e]===r[e]})}var n=i(48);t.distinctUntilKeyChanged=r},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(25);t.elementAt=r;var a=function(){function e(e,t){if(this.index=e,this.defaultValue=t,e<0)throw new s.ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.index,this.defaultValue))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.index=i,this.defaultValue=r}return n(t,e),t.prototype._next=function(e){0==this.index--&&(this.destination.next(e),this.destination.complete())},t.prototype._complete=function(){var e=this.destination;this.index>=0&&(void 0!==this.defaultValue?e.next(this.defaultValue):e.error(new s.ArgumentOutOfRangeError)),e.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new s(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.every=r;var s=function(){function e(e,t,i){this.predicate=e,this.thisArg=t,this.source=i}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate,this.thisArg,this.source))},e}(),a=function(e){function t(t,i,r,n){e.call(this,t),this.predicate=i,this.thisArg=r,this.source=n,this.index=0,this.thisArg=r||this}return n(t,e),t.prototype.notifyComplete=function(e){this.destination.next(e),this.destination.complete()},t.prototype._next=function(e){var t=!1;try{t=this.predicate.call(this.thisArg,e,this.index++,this.source)}catch(e){return void this.destination.error(e)}t||this.notifyComplete(!1)},t.prototype._complete=function(){this.notifyComplete(!0)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new a)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.exhaust=r;var a=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new c(e))},e}(),c=function(e){function t(t){e.call(this,t),this.hasCompleted=!1,this.hasSubscription=!1}return n(t,e),t.prototype._next=function(e){this.hasSubscription||(this.hasSubscription=!0,this.add(s.subscribeToResult(this,e)))},t.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete()},t.prototype.notifyComplete=function(e){this.remove(e),this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.exhaustMap=r;var a=function(){function e(e,t){this.project=e,this.resultSelector=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.project,this.resultSelector))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.project=i,this.resultSelector=r,this.hasSubscription=!1,this.hasCompleted=!1,this.index=0}return n(t,e),t.prototype._next=function(e){this.hasSubscription||this.tryNext(e)},t.prototype.tryNext=function(e){var t=this.index++,i=this.destination;try{var r=this.project(e,t);this.hasSubscription=!0,this.add(s.subscribeToResult(this,r,e,t))}catch(e){i.error(e)}},t.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){var o=this,s=o.resultSelector,a=o.destination;s?this.trySelectResult(e,t,i,r):a.next(t)},t.prototype.trySelectResult=function(e,t,i,r){var n=this,o=n.resultSelector,s=n.destination;try{var a=o(e,t,i,r);s.next(a)}catch(e){s.error(e)}},t.prototype.notifyError=function(e){this.destination.error(e)},t.prototype.notifyComplete=function(e){this.remove(e),this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t,i){return void 0===t&&(t=Number.POSITIVE_INFINITY),void 0===i&&(i=void 0),t=(t||0)<1?Number.POSITIVE_INFINITY:t,function(r){return r.lift(new l(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(8),s=i(7),a=i(2),c=i(3);t.expand=r;var l=function(){function e(e,t,i){this.project=e,this.concurrent=t,this.scheduler=i}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.project,this.concurrent,this.scheduler))},e}();t.ExpandOperator=l;var u=function(e){function t(t,i,r,n){e.call(this,t),this.project=i,this.concurrent=r,this.scheduler=n,this.index=0,this.active=0,this.hasCompleted=!1,r<Number.POSITIVE_INFINITY&&(this.buffer=[])}return n(t,e),t.dispatch=function(e){var t=e.subscriber,i=e.result,r=e.value,n=e.index;t.subscribeToProjection(i,r,n)},t.prototype._next=function(e){var i=this.destination;if(i.closed)return void this._complete();var r=this.index++;if(this.active<this.concurrent){i.next(e);var n=o.tryCatch(this.project)(e,r);if(n===s.errorObject)i.error(s.errorObject.e);else if(this.scheduler){var a={subscriber:this,result:n,value:e,index:r};this.add(this.scheduler.schedule(t.dispatch,0,a))}else this.subscribeToProjection(n,e,r)}else this.buffer.push(e)},t.prototype.subscribeToProjection=function(e,t,i){this.active++,this.add(c.subscribeToResult(this,e,t,i))},t.prototype._complete=function(){this.hasCompleted=!0,this.hasCompleted&&0===this.active&&this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){this._next(t)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t&&t.length>0&&this._next(t.shift()),this.hasCompleted&&0===this.active&&this.destination.complete()},t}(a.OuterSubscriber);t.ExpandSubscriber=u},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(5);t.finalize=r;var a=function(){function e(e){this.callback=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.callback))},e}(),c=function(e){function t(t,i){e.call(this,t),this.add(new s.Subscription(i))}return n(t,e),t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new n.FindValueOperator(e,i,!0,t))}}var n=i(50);t.findIndex=r},function(e,t,i){"use strict";function r(e,t,i){return function(r){return r.lift(new a(e,t,i,r))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(38);t.first=r;var a=function(){function e(e,t,i,r){this.predicate=e,this.resultSelector=t,this.defaultValue=i,this.source=r}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.predicate,this.resultSelector,this.defaultValue,this.source))},e}(),c=function(e){function t(t,i,r,n,o){e.call(this,t),this.predicate=i,this.resultSelector=r,this.defaultValue=n,this.source=o,this.index=0,this.hasCompleted=!1,this._emitted=!1}return n(t,e),t.prototype._next=function(e){var t=this.index++;this.predicate?this._tryPredicate(e,t):this._emit(e,t)},t.prototype._tryPredicate=function(e,t){var i;try{i=this.predicate(e,t,this.source)}catch(e){return void this.destination.error(e)}i&&this._emit(e,t)},t.prototype._emit=function(e,t){if(this.resultSelector)return void this._tryResultSelector(e,t);this._emitFinal(e)},t.prototype._tryResultSelector=function(e,t){var i;try{i=this.resultSelector(e,t)}catch(e){return void this.destination.error(e)}this._emitFinal(i)},t.prototype._emitFinal=function(e){var t=this.destination;this._emitted||(this._emitted=!0,t.next(e),t.complete(),this.hasCompleted=!0)},t.prototype._complete=function(){var e=this.destination;this.hasCompleted||void 0===this.defaultValue?this.hasCompleted||e.error(new s.EmptyError):(e.next(this.defaultValue),e.complete())},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t,i,r){return function(n){return n.lift(new d(e,t,i,r))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(5),a=i(0),c=i(6),l=i(477),u=i(475);t.groupBy=r;var d=function(){function e(e,t,i,r){this.keySelector=e,this.elementSelector=t,this.durationSelector=i,this.subjectSelector=r}return e.prototype.call=function(e,t){return t.subscribe(new f(e,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector))},e}(),f=function(e){function t(t,i,r,n,o){e.call(this,t),this.keySelector=i,this.elementSelector=r,this.durationSelector=n,this.subjectSelector=o,this.groups=null,this.attemptedToUnsubscribe=!1,this.count=0}return n(t,e),t.prototype._next=function(e){var t;try{t=this.keySelector(e)}catch(e){return void this.error(e)}this._group(e,t)},t.prototype._group=function(e,t){var i=this.groups;i||(i=this.groups="string"==typeof t?new u.FastMap:new l.Map);var r,n=i.get(t);if(this.elementSelector)try{r=this.elementSelector(e)}catch(e){this.error(e)}else r=e;if(!n){n=this.subjectSelector?this.subjectSelector():new c.Subject,i.set(t,n);var o=new h(t,n,this);if(this.destination.next(o),this.durationSelector){var s=void 0;try{s=this.durationSelector(new h(t,n))}catch(e){return void this.error(e)}this.add(s.subscribe(new p(t,n,this)))}}n.closed||n.next(r)},t.prototype._error=function(e){var t=this.groups;t&&(t.forEach(function(t,i){t.error(e)}),t.clear()),this.destination.error(e)},t.prototype._complete=function(){var e=this.groups;e&&(e.forEach(function(e,t){e.complete()}),e.clear()),this.destination.complete()},t.prototype.removeGroup=function(e){this.groups.delete(e)},t.prototype.unsubscribe=function(){this.closed||(this.attemptedToUnsubscribe=!0,0===this.count&&e.prototype.unsubscribe.call(this))},t}(o.Subscriber),p=function(e){function t(t,i,r){e.call(this,i),this.key=t,this.group=i,this.parent=r}return n(t,e),t.prototype._next=function(e){this.complete()},t.prototype._unsubscribe=function(){var e=this,t=e.parent,i=e.key;this.key=this.parent=null,t&&t.removeGroup(i)},t}(o.Subscriber),h=function(e){function t(t,i,r){e.call(this),this.key=t,this.groupSubject=i,this.refCountSubscription=r}return n(t,e),t.prototype._subscribe=function(e){var t=new s.Subscription,i=this,r=i.refCountSubscription,n=i.groupSubject;return r&&!r.closed&&t.add(new g(r)),t.add(n.subscribe(e)),t},t}(a.Observable);t.GroupedObservable=h;var g=function(e){function t(t){e.call(this),this.parent=t,t.count++}return n(t,e),t.prototype.unsubscribe=function(){var t=this.parent;t.closed||this.closed||(e.prototype.unsubscribe.call(this),t.count-=1,0===t.count&&t.attemptedToUnsubscribe&&t.unsubscribe())},t}(s.Subscription)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new a)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(57);t.ignoreElements=r;var a=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new c(e))},e}(),c=function(e){function t(){e.apply(this,arguments)}return n(t,e),t.prototype._next=function(e){s.noop()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new s)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.isEmpty=r;var s=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new a(e))},e}(),a=function(e){function t(t){e.call(this,t)}return n(t,e),t.prototype.notifyComplete=function(e){var t=this.destination;t.next(e),t.complete()},t.prototype._next=function(e){this.notifyComplete(!1)},t.prototype._complete=function(){this.notifyComplete(!0)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t,i){return function(r){return r.lift(new a(e,t,i,r))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(38);t.last=r;var a=function(){function e(e,t,i,r){this.predicate=e,this.resultSelector=t,this.defaultValue=i,this.source=r}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.predicate,this.resultSelector,this.defaultValue,this.source))},e}(),c=function(e){function t(t,i,r,n,o){e.call(this,t),this.predicate=i,this.resultSelector=r,this.defaultValue=n,this.source=o,this.hasValue=!1,this.index=0,void 0!==n&&(this.lastValue=n,this.hasValue=!0)}return n(t,e),t.prototype._next=function(e){var t=this.index++;if(this.predicate)this._tryPredicate(e,t);else{if(this.resultSelector)return void this._tryResultSelector(e,t);this.lastValue=e,this.hasValue=!0}},t.prototype._tryPredicate=function(e,t){var i;try{i=this.predicate(e,t,this.source)}catch(e){return void this.destination.error(e)}if(i){if(this.resultSelector)return void this._tryResultSelector(e,t);this.lastValue=e,this.hasValue=!0}},t.prototype._tryResultSelector=function(e,t){var i;try{i=this.resultSelector(e,t)}catch(e){return void this.destination.error(e)}this.lastValue=i,this.hasValue=!0},t.prototype._complete=function(){var e=this.destination;this.hasValue?(e.next(this.lastValue),e.complete()):e.error(new s.EmptyError)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.mapTo=r;var s=function(){function e(e){this.value=e}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.value))},e}(),a=function(e){function t(t,i){e.call(this,t),this.value=i}return n(t,e),t.prototype._next=function(e){this.destination.next(this.value)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new a)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(17);t.materialize=r;var a=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new c(e))},e}(),c=function(e){function t(t){e.call(this,t)}return n(t,e),t.prototype._next=function(e){this.destination.next(s.Notification.createNext(e))},t.prototype._error=function(e){var t=this.destination;t.next(s.Notification.createError(e)),t.complete()},t.prototype._complete=function(){var e=this.destination;e.next(s.Notification.createComplete()),e.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){var t="function"==typeof e?function(t,i){return e(t,i)>0?t:i}:function(e,t){return e>t?e:t};return n.reduce(t)}var n=i(21);t.max=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){return t.lift.call(n.merge.apply(void 0,[t].concat(e)))}}var n=i(30),o=i(30);t.mergeStatic=o.merge,t.merge=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),"number"==typeof t&&(i=t,t=null),function(r){return r.lift(new a(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.mergeMapTo=r;var a=function(){function e(e,t,i){void 0===i&&(i=Number.POSITIVE_INFINITY),this.ish=e,this.resultSelector=t,this.concurrent=i}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.ish,this.resultSelector,this.concurrent))},e}();t.MergeMapToOperator=a;var c=function(e){function t(t,i,r,n){void 0===n&&(n=Number.POSITIVE_INFINITY),e.call(this,t),this.ish=i,this.resultSelector=r,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return n(t,e),t.prototype._next=function(e){if(this.active<this.concurrent){var t=this.resultSelector,i=this.index++,r=this.ish,n=this.destination;this.active++,this._innerSub(r,n,t,e,i)}else this.buffer.push(e)},t.prototype._innerSub=function(e,t,i,r,n){this.add(s.subscribeToResult(this,e,r,n))},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete()},t.prototype.notifyNext=function(e,t,i,r,n){var o=this,s=o.resultSelector,a=o.destination;s?this.trySelectResult(e,t,i,r):a.next(t)},t.prototype.trySelectResult=function(e,t,i,r){var n,o=this,s=o.resultSelector,a=o.destination;try{n=s(e,t,i,r)}catch(e){return void a.error(e)}a.next(n)},t.prototype.notifyError=function(e){this.destination.error(e)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},t}(o.OuterSubscriber);t.MergeMapToSubscriber=c},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),function(r){return r.lift(new l(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(8),s=i(7),a=i(3),c=i(2);t.mergeScan=r;var l=function(){function e(e,t,i){this.accumulator=e,this.seed=t,this.concurrent=i}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.accumulator,this.seed,this.concurrent))},e}();t.MergeScanOperator=l;var u=function(e){function t(t,i,r,n){e.call(this,t),this.accumulator=i,this.acc=r,this.concurrent=n,this.hasValue=!1,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return n(t,e),t.prototype._next=function(e){if(this.active<this.concurrent){var t=this.index++,i=o.tryCatch(this.accumulator)(this.acc,e),r=this.destination;i===s.errorObject?r.error(s.errorObject.e):(this.active++,this._innerSub(i,e,t))}else this.buffer.push(e)},t.prototype._innerSub=function(e,t,i){this.add(a.subscribeToResult(this,e,t,i))},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())},t.prototype.notifyNext=function(e,t,i,r,n){var o=this.destination;this.acc=t,this.hasValue=!0,o.next(t)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())},t}(c.OuterSubscriber);t.MergeScanSubscriber=u},function(e,t,i){"use strict";function r(e){var t="function"==typeof e?function(t,i){return e(t,i)<0?t:i}:function(e,t){return e<t?e:t};return n.reduce(t)}var n=i(21);t.min=r},function(e,t,i){"use strict";function r(){return function(e){return e.lift(new s)}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.pairwise=r;var s=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new a(e))},e}(),a=function(e){function t(t){e.call(this,t),this.hasPrev=!1}return n(t,e),t.prototype._next=function(e){this.hasPrev?this.destination.next([this.prev,e]):this.hasPrev=!0,this.prev=e},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return[o.filter(e,t)(i),o.filter(n.not(e,t))(i)]}}var n=i(481),o=i(49);t.partition=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=e.length;if(0===i)throw new Error("list of properties cannot be empty.");return function(t){return o.map(n(e,i))(t)}}function n(e,t){return function(i){for(var r=i,n=0;n<t;n++){var o=r[e[n]];if(void 0===o)return;r=o}return r}}var o=i(19);t.pluck=r},function(e,t,i){"use strict";function r(e){return e?o.multicast(function(){return new n.Subject},e):o.multicast(new n.Subject)}var n=i(6),o=i(15);t.publish=r},function(e,t,i){"use strict";function r(e){return function(t){return o.multicast(new n.BehaviorSubject(e))(t)}}var n=i(65),o=i(15);t.publishBehavior=r},function(e,t,i){"use strict";function r(){return function(e){return o.multicast(new n.AsyncSubject)(e)}}var n=i(28),o=i(15);t.publishLast=r},function(e,t,i){"use strict";function r(e,t,i,r){i&&"function"!=typeof i&&(r=i);var s="function"==typeof i?i:void 0,a=new n.ReplaySubject(e,t,r);return function(e){return o.multicast(function(){return a},s)(e)}}var n=i(29),o=i(15);t.publishReplay=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){return 1===e.length&&n.isArray(e[0])&&(e=e[0]),t.lift.call(o.race.apply(void 0,[t].concat(e)))}}var n=i(11),o=i(43);t.race=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=-1),function(t){return 0===e?new s.EmptyObservable:e<0?t.lift(new a(-1,t)):t.lift(new a(e-1,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(13);t.repeat=r;var a=function(){function e(e,t){this.count=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.count,this.source))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.count=i,this.source=r}return n(t,e),t.prototype.complete=function(){if(!this.isStopped){var t=this,i=t.source,r=t.count;if(0===r)return e.prototype.complete.call(this);r>-1&&(this.count=r-1),i.subscribe(this._unsubscribeAndRecycle())}},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new u(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(6),s=i(8),a=i(7),c=i(2),l=i(3);t.repeatWhen=r;var u=function(){function e(e){this.notifier=e}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.notifier,t))},e}(),d=function(e){function t(t,i,r){e.call(this,t),this.notifier=i,this.source=r,this.sourceIsBeingSubscribedTo=!0}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.sourceIsBeingSubscribedTo=!0,this.source.subscribe(this)},t.prototype.notifyComplete=function(t){if(!1===this.sourceIsBeingSubscribedTo)return e.prototype.complete.call(this)},t.prototype.complete=function(){if(this.sourceIsBeingSubscribedTo=!1,!this.isStopped){if(this.retries){if(this.retriesSubscription.closed)return e.prototype.complete.call(this)}else this.subscribeToRetries();this._unsubscribeAndRecycle(),this.notifications.next()}},t.prototype._unsubscribe=function(){var e=this,t=e.notifications,i=e.retriesSubscription;t&&(t.unsubscribe(),this.notifications=null),i&&(i.unsubscribe(),this.retriesSubscription=null),this.retries=null},t.prototype._unsubscribeAndRecycle=function(){var t=this,i=t.notifications,r=t.retries,n=t.retriesSubscription;return this.notifications=null,this.retries=null,this.retriesSubscription=null,e.prototype._unsubscribeAndRecycle.call(this),this.notifications=i,this.retries=r,this.retriesSubscription=n,this},t.prototype.subscribeToRetries=function(){this.notifications=new o.Subject;var t=s.tryCatch(this.notifier)(this.notifications);if(t===a.errorObject)return e.prototype.complete.call(this);this.retries=t,this.retriesSubscription=l.subscribeToResult(this,t)},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=-1),function(t){return t.lift(new s(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.retry=r;var s=function(){function e(e,t){this.count=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.count,this.source))},e}(),a=function(e){function t(t,i,r){e.call(this,t),this.count=i,this.source=r}return n(t,e),t.prototype.error=function(t){if(!this.isStopped){var i=this,r=i.source,n=i.count;if(0===n)return e.prototype.error.call(this,t);n>-1&&(this.count=n-1),r.subscribe(this._unsubscribeAndRecycle())}},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new u(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(6),s=i(8),a=i(7),c=i(2),l=i(3);t.retryWhen=r;var u=function(){function e(e,t){this.notifier=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.notifier,this.source))},e}(),d=function(e){function t(t,i,r){e.call(this,t),this.notifier=i,this.source=r}return n(t,e),t.prototype.error=function(t){if(!this.isStopped){var i=this.errors,r=this.retries,n=this.retriesSubscription;if(r)this.errors=null,this.retriesSubscription=null;else{if(i=new o.Subject,(r=s.tryCatch(this.notifier)(i))===a.errorObject)return e.prototype.error.call(this,a.errorObject.e);n=l.subscribeToResult(this,r)}this._unsubscribeAndRecycle(),this.errors=i,this.retries=r,this.retriesSubscription=n,i.next(t)}},t.prototype._unsubscribe=function(){var e=this,t=e.errors,i=e.retriesSubscription;t&&(t.unsubscribe(),this.errors=null),i&&(i.unsubscribe(),this.retriesSubscription=null),this.retries=null},t.prototype.notifyNext=function(e,t,i,r,n){var o=this,s=o.errors,a=o.retries,c=o.retriesSubscription;this.errors=null,this.retries=null,this.retriesSubscription=null,this._unsubscribeAndRecycle(),this.errors=s,this.retries=a,this.retriesSubscription=c,this.source.subscribe(this)},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.sample=r;var a=function(){function e(e){this.notifier=e}return e.prototype.call=function(e,t){var i=new c(e),r=t.subscribe(i);return r.add(s.subscribeToResult(i,this.notifier)),r},e}(),c=function(e){function t(){e.apply(this,arguments),this.hasValue=!1}return n(t,e),t.prototype._next=function(e){this.value=e,this.hasValue=!0},t.prototype.notifyNext=function(e,t,i,r,n){this.emitValue()},t.prototype.notifyComplete=function(){this.emitValue()},t.prototype.emitValue=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.value))},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=a.async),function(i){return i.lift(new c(e,t))}}function n(e){var t=e.subscriber,i=e.period;t.notifyNext(),this.schedule(e,i)}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(1),a=i(4);t.sampleTime=r;var c=function(){function e(e,t){this.period=e,this.scheduler=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.period,this.scheduler))},e}(),l=function(e){function t(t,i,r){e.call(this,t),this.period=i,this.scheduler=r,this.hasValue=!1,this.add(r.schedule(n,i,{subscriber:this,period:i}))}return o(t,e),t.prototype._next=function(e){this.lastValue=e,this.hasValue=!0},t.prototype.notifyNext=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.lastValue))},t}(s.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new c(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(8),a=i(7);t.sequenceEqual=r;var c=function(){function e(e,t){this.compareTo=e,this.comparor=t}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.compareTo,this.comparor))},e}();t.SequenceEqualOperator=c;var l=function(e){function t(t,i,r){e.call(this,t),this.compareTo=i,this.comparor=r,this._a=[],this._b=[],this._oneComplete=!1,this.add(i.subscribe(new u(t,this)))}return n(t,e),t.prototype._next=function(e){this._oneComplete&&0===this._b.length?this.emit(!1):(this._a.push(e),this.checkValues())},t.prototype._complete=function(){this._oneComplete?this.emit(0===this._a.length&&0===this._b.length):this._oneComplete=!0},t.prototype.checkValues=function(){for(var e=this,t=e._a,i=e._b,r=e.comparor;t.length>0&&i.length>0;){var n=t.shift(),o=i.shift(),c=!1;r?(c=s.tryCatch(r)(n,o))===a.errorObject&&this.destination.error(a.errorObject.e):c=n===o,c||this.emit(!1)}},t.prototype.emit=function(e){var t=this.destination;t.next(e),t.complete()},t.prototype.nextB=function(e){this._oneComplete&&0===this._a.length?this.emit(!1):(this._b.push(e),this.checkValues())},t}(o.Subscriber);t.SequenceEqualSubscriber=l;var u=function(e){function t(t,i){e.call(this,t),this.parent=i}return n(t,e),t.prototype._next=function(e){this.parent.nextB(e)},t.prototype._error=function(e){this.parent.error(e)},t.prototype._complete=function(){this.parent._complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){return new a.Subject}function n(){return function(e){return s.refCount()(o.multicast(r)(e))}}var o=i(15),s=i(52),a=i(6);t.share=n},function(e,t,i){"use strict";function r(e,t,i){return function(r){return r.lift(n(e,t,i))}}function n(e,t,i){var r,n,s=0,a=!1,c=!1;return function(l){s++,r&&!a||(a=!1,r=new o.ReplaySubject(e,t,i),n=l.subscribe({next:function(e){r.next(e)},error:function(e){a=!0,r.error(e)},complete:function(){c=!0,r.complete()}}));var u=r.subscribe(this);return function(){s--,u.unsubscribe(),n&&0===s&&c&&n.unsubscribe()}}}var o=i(29);t.shareReplay=r},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(38);t.single=r;var a=function(){function e(e,t){this.predicate=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.predicate,this.source))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.predicate=i,this.source=r,this.seenValue=!1,this.index=0}return n(t,e),t.prototype.applySingleValue=function(e){this.seenValue?this.destination.error("Sequence contains more than one element"):(this.seenValue=!0,this.singleValue=e)},t.prototype._next=function(e){var t=this.index++;this.predicate?this.tryNext(e,t):this.applySingleValue(e)},t.prototype.tryNext=function(e,t){try{this.predicate(e,t,this.source)&&this.applySingleValue(e)}catch(e){this.destination.error(e)}},t.prototype._complete=function(){var e=this.destination;this.index>0?(e.next(this.seenValue?this.singleValue:void 0),e.complete()):e.error(new s.EmptyError)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.skip=r;var s=function(){function e(e){this.total=e}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.total))},e}(),a=function(e){function t(t,i){e.call(this,t),this.total=i,this.count=0}return n(t,e),t.prototype._next=function(e){++this.count>this.total&&this.destination.next(e)},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(25);t.skipLast=r;var a=function(){function e(e){if(this._skipCount=e,this._skipCount<0)throw new s.ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return 0===this._skipCount?t.subscribe(new o.Subscriber(e)):t.subscribe(new c(e,this._skipCount))},e}(),c=function(e){function t(t,i){e.call(this,t),this._skipCount=i,this._count=0,this._ring=new Array(i)}return n(t,e),t.prototype._next=function(e){var t=this._skipCount,i=this._count++;if(i<t)this._ring[i]=e;else{var r=i%t,n=this._ring,o=n[r];n[r]=e,this.destination.next(o)}},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.skipUntil=r;var a=function(){function e(e){this.notifier=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.notifier))},e}(),c=function(e){function t(t,i){e.call(this,t),this.hasValue=!1,this.isInnerStopped=!1,this.add(s.subscribeToResult(this,i))}return n(t,e),t.prototype._next=function(t){this.hasValue&&e.prototype._next.call(this,t)},t.prototype._complete=function(){this.isInnerStopped?e.prototype._complete.call(this):this.unsubscribe()},t.prototype.notifyNext=function(e,t,i,r,n){this.hasValue=!0},t.prototype.notifyComplete=function(){this.isInnerStopped=!0,this.isStopped&&e.prototype._complete.call(this)},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.skipWhile=r;var s=function(){function e(e){this.predicate=e}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate))},e}(),a=function(e){function t(t,i){e.call(this,t),this.predicate=i,this.skipping=!0,this.index=0}return n(t,e),t.prototype._next=function(e){var t=this.destination;this.skipping&&this.tryCallPredicate(e),this.skipping||t.next(e)},t.prototype.tryCallPredicate=function(e){try{var t=this.predicate(e,this.index++);this.skipping=Boolean(t)}catch(e){this.destination.error(e)}},t}(o.Subscriber)},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){var i=e[e.length-1];c.isScheduler(i)?e.pop():i=null;var r=e.length;return 1===r?a.concat(new o.ScalarObservable(e[0],i),t):r>1?a.concat(new n.ArrayObservable(e,i),t):a.concat(new s.EmptyObservable(i),t)}}var n=i(12),o=i(42),s=i(13),a=i(18),c=i(10);t.startWith=r},function(e,t,i){"use strict";function r(){return n.switchMap(o.identity)}var n=i(54),o=i(162);t.switchAll=r},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.switchMapTo=r;var a=function(){function e(e,t){this.observable=e,this.resultSelector=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.observable,this.resultSelector))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.inner=i,this.resultSelector=r,this.index=0}return n(t,e),t.prototype._next=function(e){var t=this.innerSubscription;t&&t.unsubscribe(),this.add(this.innerSubscription=s.subscribeToResult(this,this.inner,e,this.index++))},t.prototype._complete=function(){var t=this.innerSubscription;t&&!t.closed||e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){this.innerSubscription=null},t.prototype.notifyComplete=function(t){this.remove(t),this.innerSubscription=null,this.isStopped&&e.prototype._complete.call(this)},t.prototype.notifyNext=function(e,t,i,r,n){var o=this,s=o.resultSelector,a=o.destination;s?this.tryResultSelector(e,t,i,r):a.next(t)},t.prototype.tryResultSelector=function(e,t,i,r){var n,o=this,s=o.resultSelector,a=o.destination;try{n=s(e,t,i,r)}catch(e){return void a.error(e)}a.next(n)},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return 0===e?new a.EmptyObservable:t.lift(new c(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(25),a=i(13);t.take=r;var c=function(){function e(e){if(this.total=e,this.total<0)throw new s.ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.total))},e}(),l=function(e){function t(t,i){e.call(this,t),this.total=i,this.count=0}return n(t,e),t.prototype._next=function(e){var t=this.total,i=++this.count;i<=t&&(this.destination.next(e),i===t&&(this.destination.complete(),this.unsubscribe()))},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new a(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.takeUntil=r;var a=function(){function e(e){this.notifier=e}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.notifier))},e}(),c=function(e){function t(t,i){e.call(this,t),this.notifier=i,this.add(s.subscribeToResult(this,i))}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.complete()},t.prototype.notifyComplete=function(){},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new s(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.takeWhile=r;var s=function(){function e(e){this.predicate=e}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.predicate))},e}(),a=function(e){function t(t,i){e.call(this,t),this.predicate=i,this.index=0}return n(t,e),t.prototype._next=function(e){var t,i=this.destination;try{t=this.predicate(e,this.index++)}catch(e){return void i.error(e)}this.nextOrComplete(e,t)},t.prototype.nextOrComplete=function(e,t){var i=this.destination;Boolean(t)?i.next(e):i.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t,i){return function(r){return r.lift(new s(e,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1);t.tap=r;var s=function(){function e(e,t,i){this.nextOrObserver=e,this.error=t,this.complete=i}return e.prototype.call=function(e,t){return t.subscribe(new a(e,this.nextOrObserver,this.error,this.complete))},e}(),a=function(e){function t(t,i,r,n){e.call(this,t);var s=new o.Subscriber(i,r,n);s.syncErrorThrowable=!0,this.add(s),this.safeSubscriber=s}return n(t,e),t.prototype._next=function(e){var t=this.safeSubscriber;t.next(e),t.syncErrorThrown?this.destination.error(t.syncErrorValue):this.destination.next(e)},t.prototype._error=function(e){var t=this.safeSubscriber;t.error(e),t.syncErrorThrown?this.destination.error(t.syncErrorValue):this.destination.error(e)},t.prototype._complete=function(){var e=this.safeSubscriber;e.complete(),e.syncErrorThrown?this.destination.error(e.syncErrorValue):this.destination.complete()},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t,i){return void 0===t&&(t=a.async),void 0===i&&(i=c.defaultThrottleConfig),function(r){return r.lift(new l(e,t,i.leading,i.trailing))}}function n(e){e.subscriber.clearThrottle()}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(1),a=i(4),c=i(34);t.throttleTime=r;var l=function(){function e(e,t,i,r){this.duration=e,this.scheduler=t,this.leading=i,this.trailing=r}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.duration,this.scheduler,this.leading,this.trailing))},e}(),u=function(e){function t(t,i,r,n,o){e.call(this,t),this.duration=i,this.scheduler=r,this.leading=n,this.trailing=o,this._hasTrailingValue=!1,this._trailingValue=null}return o(t,e),t.prototype._next=function(e){this.throttled?this.trailing&&(this._trailingValue=e,this._hasTrailingValue=!0):(this.add(this.throttled=this.scheduler.schedule(n,this.duration,{subscriber:this})),this.leading&&this.destination.next(e))},t.prototype.clearThrottle=function(){var e=this.throttled;e&&(this.trailing&&this._hasTrailingValue&&(this.destination.next(this._trailingValue),this._trailingValue=null,this._hasTrailingValue=!1),e.unsubscribe(),this.remove(e),this.throttled=null)},t}(s.Subscriber)},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=s.async),function(t){return t.lift(new c(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(4);t.timeInterval=r;var a=function(){function e(e,t){this.value=e,this.interval=t}return e}();t.TimeInterval=a;var c=function(){function e(e){this.scheduler=e}return e.prototype.call=function(e,t){return t.subscribe(new l(e,this.scheduler))},e}(),l=function(e){function t(t,i){e.call(this,t),this.scheduler=i,this.lastTime=0,this.lastTime=i.now()}return n(t,e),t.prototype._next=function(e){var t=this.scheduler.now(),i=t-this.lastTime;this.lastTime=t,this.destination.next(new a(e,i))},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e,t){void 0===t&&(t=o.async);var i=s.isDate(e),r=i?+e-t.now():Math.abs(e);return function(e){return e.lift(new l(r,i,t,new c.TimeoutError))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(4),s=i(40),a=i(1),c=i(159);t.timeout=r;var l=function(){function e(e,t,i,r){this.waitFor=e,this.absoluteTimeout=t,this.scheduler=i,this.errorInstance=r}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.absoluteTimeout,this.waitFor,this.scheduler,this.errorInstance))},e}(),u=function(e){function t(t,i,r,n,o){e.call(this,t),this.absoluteTimeout=i,this.waitFor=r,this.scheduler=n,this.errorInstance=o,this.action=null,this.scheduleTimeout()}return n(t,e),t.dispatchTimeout=function(e){e.error(e.errorInstance)},t.prototype.scheduleTimeout=function(){var e=this.action;e?this.action=e.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(t.dispatchTimeout,this.waitFor,this))},t.prototype._next=function(t){this.absoluteTimeout||this.scheduleTimeout(),e.prototype._next.call(this,t)},t.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.errorInstance=null},t}(a.Subscriber)},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=o.async),function(r){var n=s.isDate(e),o=n?+e-i.now():Math.abs(e);return r.lift(new l(o,n,t,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(4),s=i(40),a=i(2),c=i(3);t.timeoutWith=r;var l=function(){function e(e,t,i,r){this.waitFor=e,this.absoluteTimeout=t,this.withObservable=i,this.scheduler=r}return e.prototype.call=function(e,t){return t.subscribe(new u(e,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},e}(),u=function(e){function t(t,i,r,n,o){e.call(this,t),this.absoluteTimeout=i,this.waitFor=r,this.withObservable=n,this.scheduler=o,this.action=null,this.scheduleTimeout()}return n(t,e),t.dispatchTimeout=function(e){var t=e.withObservable;e._unsubscribeAndRecycle(),e.add(c.subscribeToResult(e,t))},t.prototype.scheduleTimeout=function(){var e=this.action;e?this.action=e.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(t.dispatchTimeout,this.waitFor,this))},t.prototype._next=function(t){this.absoluteTimeout||this.scheduleTimeout(),e.prototype._next.call(this,t)},t.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.withObservable=null},t}(a.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t,i){return 0===i?[t]:(e.push(t),e)}function n(){return o.reduce(r,[])}var o=i(21);t.toArray=n},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new c(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(6),s=i(2),a=i(3);t.window=r;var c=function(){function e(e){this.windowBoundaries=e}return e.prototype.call=function(e,t){var i=new l(e),r=t.subscribe(i);return r.closed||i.add(a.subscribeToResult(i,this.windowBoundaries)),r},e}(),l=function(e){function t(t){e.call(this,t),this.window=new o.Subject,t.next(this.window)}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.openWindow()},t.prototype.notifyError=function(e,t){this._error(e)},t.prototype.notifyComplete=function(e){this._complete()},t.prototype._next=function(e){this.window.next(e)},t.prototype._error=function(e){this.window.error(e),this.destination.error(e)},t.prototype._complete=function(){this.window.complete(),this.destination.complete()},t.prototype._unsubscribe=function(){this.window=null},t.prototype.openWindow=function(){var e=this.window;e&&e.complete();var t=this.destination,i=this.window=new o.Subject;t.next(i)},t}(s.OuterSubscriber)},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),function(i){return i.lift(new a(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(1),s=i(6);t.windowCount=r;var a=function(){function e(e,t){this.windowSize=e,this.startWindowEvery=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.windowSize,this.startWindowEvery))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.destination=t,this.windowSize=i,this.startWindowEvery=r,this.windows=[new s.Subject],this.count=0,t.next(this.windows[0])}return n(t,e),t.prototype._next=function(e){for(var t=this.startWindowEvery>0?this.startWindowEvery:this.windowSize,i=this.destination,r=this.windowSize,n=this.windows,o=n.length,a=0;a<o&&!this.closed;a++)n[a].next(e);var c=this.count-r+1;if(c>=0&&c%t==0&&!this.closed&&n.shift().complete(),++this.count%t==0&&!this.closed){var l=new s.Subject;n.push(l),i.next(l)}},t.prototype._error=function(e){var t=this.windows;if(t)for(;t.length>0&&!this.closed;)t.shift().error(e);this.destination.error(e)},t.prototype._complete=function(){var e=this.windows;if(e)for(;e.length>0&&!this.closed;)e.shift().complete();this.destination.complete()},t.prototype._unsubscribe=function(){this.count=0,this.windows=null},t}(o.Subscriber)},function(e,t,i){"use strict";function r(e){var t=l.async,i=null,r=Number.POSITIVE_INFINITY;return f.isScheduler(arguments[3])&&(t=arguments[3]),f.isScheduler(arguments[2])?t=arguments[2]:d.isNumeric(arguments[2])&&(r=arguments[2]),f.isScheduler(arguments[1])?t=arguments[1]:d.isNumeric(arguments[1])&&(i=arguments[1]),function(n){return n.lift(new p(e,i,r,t))}}function n(e){var t=e.subscriber,i=e.windowTimeSpan,r=e.window;r&&t.closeWindow(r),e.window=t.openWindow(),this.schedule(e,i)}function o(e){var t=e.windowTimeSpan,i=e.subscriber,r=e.scheduler,n=e.windowCreationInterval,o=i.openWindow(),a=this,c={action:a,subscription:null},l={subscriber:i,window:o,context:c};c.subscription=r.schedule(s,t,l),a.add(c.subscription),a.schedule(e,n)}function s(e){var t=e.subscriber,i=e.window,r=e.context;r&&r.action&&r.subscription&&r.action.remove(r.subscription),t.closeWindow(i)}var a=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},c=i(6),l=i(4),u=i(1),d=i(26),f=i(10);t.windowTime=r;var p=function(){function e(e,t,i,r){this.windowTimeSpan=e,this.windowCreationInterval=t,this.maxWindowSize=i,this.scheduler=r}return e.prototype.call=function(e,t){return t.subscribe(new g(e,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler))},e}(),h=function(e){function t(){e.apply(this,arguments),this._numberOfNextedValues=0}return a(t,e),t.prototype.next=function(t){this._numberOfNextedValues++,e.prototype.next.call(this,t)},Object.defineProperty(t.prototype,"numberOfNextedValues",{get:function(){return this._numberOfNextedValues},enumerable:!0,configurable:!0}),t}(c.Subject),g=function(e){function t(t,i,r,a,c){e.call(this,t),this.destination=t,this.windowTimeSpan=i,this.windowCreationInterval=r,this.maxWindowSize=a,this.scheduler=c,this.windows=[];var l=this.openWindow();if(null!==r&&r>=0){var u={subscriber:this,window:l,context:null},d={windowTimeSpan:i,windowCreationInterval:r,subscriber:this,scheduler:c};this.add(c.schedule(s,i,u)),this.add(c.schedule(o,r,d))}else{var f={subscriber:this,window:l,windowTimeSpan:i};this.add(c.schedule(n,i,f))}}return a(t,e),t.prototype._next=function(e){for(var t=this.windows,i=t.length,r=0;r<i;r++){var n=t[r];n.closed||(n.next(e),n.numberOfNextedValues>=this.maxWindowSize&&this.closeWindow(n))}},t.prototype._error=function(e){for(var t=this.windows;t.length>0;)t.shift().error(e);this.destination.error(e)},t.prototype._complete=function(){for(var e=this.windows;e.length>0;){var t=e.shift();t.closed||t.complete()}this.destination.complete()},t.prototype.openWindow=function(){var e=new h;return this.windows.push(e),this.destination.next(e),e},t.prototype.closeWindow=function(e){e.complete();var t=this.windows;t.splice(t.indexOf(e),1)},t}(u.Subscriber)},function(e,t,i){"use strict";function r(e,t){return function(i){return i.lift(new d(e,t))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(6),s=i(5),a=i(8),c=i(7),l=i(2),u=i(3);t.windowToggle=r;var d=function(){function e(e,t){this.openings=e,this.closingSelector=t}return e.prototype.call=function(e,t){return t.subscribe(new f(e,this.openings,this.closingSelector))},e}(),f=function(e){function t(t,i,r){e.call(this,t),this.openings=i,this.closingSelector=r,this.contexts=[],this.add(this.openSubscription=u.subscribeToResult(this,i,i))}return n(t,e),t.prototype._next=function(e){var t=this.contexts;if(t)for(var i=t.length,r=0;r<i;r++)t[r].window.next(e)},t.prototype._error=function(t){var i=this.contexts;if(this.contexts=null,i)for(var r=i.length,n=-1;++n<r;){var o=i[n];o.window.error(t),o.subscription.unsubscribe()}e.prototype._error.call(this,t)},t.prototype._complete=function(){var t=this.contexts;if(this.contexts=null,t)for(var i=t.length,r=-1;++r<i;){var n=t[r];n.window.complete(),n.subscription.unsubscribe()}e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.contexts;if(this.contexts=null,e)for(var t=e.length,i=-1;++i<t;){var r=e[i];r.window.unsubscribe(),r.subscription.unsubscribe()}},t.prototype.notifyNext=function(e,t,i,r,n){if(e===this.openings){var l=this.closingSelector,d=a.tryCatch(l)(t);if(d===c.errorObject)return this.error(c.errorObject.e);var f=new o.Subject,p=new s.Subscription,h={window:f,subscription:p};this.contexts.push(h);var g=u.subscribeToResult(this,d,h);g.closed?this.closeWindow(this.contexts.length-1):(g.context=h,p.add(g)),this.destination.next(f)}else this.closeWindow(this.contexts.indexOf(e))},t.prototype.notifyError=function(e){this.error(e)},t.prototype.notifyComplete=function(e){e!==this.openSubscription&&this.closeWindow(this.contexts.indexOf(e.context))},t.prototype.closeWindow=function(e){if(-1!==e){var t=this.contexts,i=t[e],r=i.window,n=i.subscription;t.splice(e,1),r.complete(),n.unsubscribe()}},t}(l.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new u(e))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(6),s=i(8),a=i(7),c=i(2),l=i(3);t.windowWhen=r;var u=function(){function e(e){this.closingSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new d(e,this.closingSelector))},e}(),d=function(e){function t(t,i){e.call(this,t),this.destination=t,this.closingSelector=i,this.openWindow()}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.openWindow(n)},t.prototype.notifyError=function(e,t){this._error(e)},t.prototype.notifyComplete=function(e){this.openWindow(e)},t.prototype._next=function(e){this.window.next(e)},t.prototype._error=function(e){this.window.error(e),this.destination.error(e),this.unsubscribeClosingNotification()},t.prototype._complete=function(){this.window.complete(),this.destination.complete(),this.unsubscribeClosingNotification()},t.prototype.unsubscribeClosingNotification=function(){this.closingNotification&&this.closingNotification.unsubscribe()},t.prototype.openWindow=function(e){void 0===e&&(e=null),e&&(this.remove(e),e.unsubscribe());var t=this.window;t&&t.complete();var i=this.window=new o.Subject;this.destination.next(i);var r=s.tryCatch(this.closingSelector)();if(r===a.errorObject){var n=a.errorObject.e;this.destination.error(n),this.window.error(n)}else this.add(this.closingNotification=l.subscribeToResult(this,r))},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return function(t){var i;"function"==typeof e[e.length-1]&&(i=e.pop());var r=e;return t.lift(new a(r,i))}}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(2),s=i(3);t.withLatestFrom=r;var a=function(){function e(e,t){this.observables=e,this.project=t}return e.prototype.call=function(e,t){return t.subscribe(new c(e,this.observables,this.project))},e}(),c=function(e){function t(t,i,r){e.call(this,t),this.observables=i,this.project=r,this.toRespond=[];var n=i.length;this.values=new Array(n);for(var o=0;o<n;o++)this.toRespond.push(o);for(var o=0;o<n;o++){var a=i[o];this.add(s.subscribeToResult(this,a,a,o))}}return n(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.values[i]=t;var o=this.toRespond;if(o.length>0){var s=o.indexOf(i);-1!==s&&o.splice(s,1)}},t.prototype.notifyComplete=function(){},t.prototype._next=function(e){if(0===this.toRespond.length){var t=[e].concat(this.values);this.project?this._tryProject(t):this.destination.next(t)}},t.prototype._tryProject=function(e){var t;try{t=this.project.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(o.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return function(t){return t.lift(new n.ZipOperator(e))}}var n=i(35);t.zipAll=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(22),o=i(23),s=function(e){function t(t,i){var r=this;void 0===t&&(t=a),void 0===i&&(i=Number.POSITIVE_INFINITY),e.call(this,t,function(){return r.frame}),this.maxFrames=i,this.frame=0,this.index=-1}return r(t,e),t.prototype.flush=function(){for(var e,t,i=this,r=i.actions,n=i.maxFrames;(t=r.shift())&&(this.frame=t.delay)<=n&&!(e=t.execute(t.state,t.delay)););if(e){for(;t=r.shift();)t.unsubscribe();throw e}},t.frameTimeFactor=10,t}(o.AsyncScheduler);t.VirtualTimeScheduler=s;var a=function(e){function t(t,i,r){void 0===r&&(r=t.index+=1),e.call(this,t,i),this.scheduler=t,this.work=i,this.index=r,this.active=!0,this.index=t.index=r}return r(t,e),t.prototype.schedule=function(i,r){if(void 0===r&&(r=0),!this.id)return e.prototype.schedule.call(this,i,r);this.active=!1;var n=new t(this.scheduler,this.work);return this.add(n),n.schedule(i,r)},t.prototype.requestAsyncId=function(e,i,r){void 0===r&&(r=0),this.delay=e.frame+r;var n=e.actions;return n.push(this),n.sort(t.sortActions),!0},t.prototype.recycleAsyncId=function(e,t,i){void 0===i&&(i=0)},t.prototype._execute=function(t,i){if(!0===this.active)return e.prototype._execute.call(this,t,i)},t.sortActions=function(e,t){return e.delay===t.delay?e.index===t.index?0:e.index>t.index?1:-1:e.delay>t.delay?1:-1},t}(n.AsyncAction);t.VirtualAction=a},function(e,t,i){"use strict";var r=i(466),n=i(467);t.asap=new n.AsapScheduler(r.AsapAction)},function(e,t,i){"use strict";var r=i(468),n=i(469);t.queue=new n.QueueScheduler(r.QueueAction)},function(e,t,i){"use strict";var r=function(){function e(e,t){void 0===t&&(t=Number.POSITIVE_INFINITY),this.subscribedFrame=e,this.unsubscribedFrame=t}return e}();t.SubscriptionLog=r},function(e,t,i){"use strict";var r=i(157),n=function(){function e(){this.subscriptions=[]}return e.prototype.logSubscribedFrame=function(){return this.subscriptions.push(new r.SubscriptionLog(this.scheduler.now())),this.subscriptions.length-1},e.prototype.logUnsubscribedFrame=function(e){var t=this.subscriptions,i=t[e];t[e]=new r.SubscriptionLog(i.subscribedFrame,this.scheduler.now())},e}();t.SubscriptionLoggable=n},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=function(e){function t(){var t=e.call(this,"Timeout has occurred");this.name=t.name="TimeoutError",this.stack=t.stack,this.message=t.message}return r(t,e),t}(Error);t.TimeoutError=n},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=function(e){function t(t){e.call(this),this.errors=t;var i=Error.call(this,t?t.length+" errors occurred during unsubscription:\n  "+t.map(function(e,t){return t+1+") "+e.toString()}).join("\n  "):"");this.name=i.name="UnsubscriptionError",this.stack=i.stack,this.message=i.message}return r(t,e),t}(Error);t.UnsubscriptionError=n},function(e,t,i){"use strict";function r(e,t){for(var i=0,r=t.length;i<r;i++)for(var n=t[i],o=Object.getOwnPropertyNames(n.prototype),s=0,a=o.length;s<a;s++){var c=o[s];e.prototype[c]=n.prototype[c]}}t.applyMixins=r},function(e,t,i){"use strict";function r(e){return e}t.identity=r},function(e,t,i){"use strict";t.isArrayLike=function(e){return e&&"number"==typeof e.length}},function(e,t,i){"use strict";function r(e){return null!=e&&"object"==typeof e}t.isObject=r},function(e,t,i){"use strict";function r(e){return e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}t.isPromise=r},function(e,t,i){(function(e){function r(e,t){this._id=e,this._clearFn=t}var n=Function.prototype.apply;t.setTimeout=function(){return new r(n.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new r(n.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},i(483),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(t,i(62))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(16),n=i(523),o=i(524),s=i(518),a=i(520),c=i(519),l=i(521),u=i(497),d=i(496),f=i(512),p=i(510),h=i(511),g=i(498),y=i(499),v=i(500),m=i(501),b=i(502),w=i(503),S=i(504),C=i(505),P=i(506),O=i(507),D=i(508),I=i(509),_=i(513),T=i(515),$=i(516),A=i(514),x=i(517),E=i(522),k=angular.module("hibachi.collection",[r.coremodule.name]).config([function(){}]).run([function(){}]).constant("collectionPartialsPath","collection/components/").controller("collections",s.CollectionController).controller("confirmationController",c.ConfirmationController).controller("createCollection",a.CreateCollection).controller("entity_createcollection",l.CollectionCreateController).factory("collectionConfigService",["rbkeyService","$hibachi","utilityService","observerService",function(e,t,i,r){return new n.CollectionConfig(e,t,i,r)}]).service("collectionService",o.CollectionService).directive("swRestrictionConfig",x.SWRestrictionConfig.Factory()).directive("swCollection",u.SWCollection.Factory()).directive("swAddFilterButtons",d.SWAddFilterButtons.Factory()).directive("swDisplayOptions",f.SWDisplayOptions.Factory()).directive("swDisplayItem",p.SWDisplayItem.Factory()).directive("swDisplayItemAggregate",h.SWDisplayItemAggregate.Factory()).directive("swCollectionTable",g.SWCollectionTable.Factory()).directive("swColumnItem",y.SWColumnItem.Factory()).directive("swConditionCriteria",v.SWConditionCriteria.Factory()).directive("swCriteria",m.SWCriteria.Factory()).directive("swCriteriaBoolean",b.SWCriteriaBoolean.Factory()).directive("swCriteriaDate",w.SWCriteriaDate.Factory()).directive("swCriteriaManyToMany",S.SWCriteriaManyToMany.Factory()).directive("swCriteriaManyToOne",C.SWCriteriaManyToOne.Factory()).directive("swCriteriaNumber",P.SWCriteriaNumber.Factory()).directive("swCriteriaOneToMany",O.SWCriteriaOneToMany.Factory()).directive("swCriteriaRelatedObject",D.SWCriteriaRelatedObject.Factory()).directive("swCriteriaString",I.SWCriteriaString.Factory()).directive("swEditFilterItem",_.SWEditFilterItem.Factory()).directive("swFilterGroups",T.SWFilterGroups.Factory()).directive("swFilterItem",$.SWFilterItem.Factory()).directive("swFilterGroupItem",A.SWFilterGroupItem.Factory()).filter("aggregateFilter",["$filter",E.AggregateFilter.Factory]);t.collectionmodule=k},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.getService=function(e){if(t.$injector.has(e))return t.$injector.get(e)},this.getHibachiScope=function(){return t.getService("publicService")},this.getAppConfig=function(){return t.getService("appConfig")},this.$injector=e;var i=this.constructor.toString();this.className=i.match(/\w+/g)[1]}return e}();t.BaseObject=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(60),o=function(e){function t(t,i,r,n,o){var s=e.call(this,o)||this;s.loading=!0,s.errors={},s.processResponse=function(e){s.loading=!1,e.errors&&(s.errors=e.errors),e.messages&&(s.messages=e.messages)},s.getAction=function(){var e=s.getAppConfig(),t=e.action,i=s.utilityService.getQueryParamsFromUrl(s.url);return i[t]?i[t]:s.data&&s.data[t]?s.data[t]:s.url.indexOf("api/scope/")>0?s.extractPublicAction(s.url):void 0},s.extractPublicAction=function(e){return/\api\/scope\/(.*?)(?=\/|\?|$)/.exec(e)[1]},s.processSuccess=function(e){s.processResponse(e)},s.processError=function(e){s.processResponse(e)},s.toFormParams=function(e){return e?$.param(e):""},s.serializeData=function(e){if(!angular.isObject(e))return null==e?"":e.toString();var t=[];for(var i in e)if(e.hasOwnProperty(i)){var r=e[i];t.push(encodeURIComponent(i)+"="+encodeURIComponent(null==r?"":r))}return t.join("&").replace(/%20/g,"+")},s.headers=n,s.$q=s.getService("$q"),s.$http=s.getService("$http"),s.$window=s.getService("$window"),s.url=t,s.data=i,s.method=r,s.utilityService=s.getService("utilityService"),r||(r=void 0==i?"get":"post");var a=s.$q.defer();return"post"==r?("application/json"!==s.headers["Content-Type"]&&(i=s.toFormParams(i)),s.$http({url:t,data:i,headers:s.headers,method:"post"}).success(function(e){s.processSuccess(e),a.resolve(e)}).error(function(e){s.processError(e),a.reject(e)}),s.promise=a.promise):(s.$http({url:t,method:"get"}).success(function(e){s.processSuccess(e),a.resolve(e)}).error(function(e){s.processError(e),a.reject(e)}),s.promise=a.promise),s}return r(t,e),t}(n.BaseTransient);t.Request=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(190),n=function(){function e(e,t,i){var n=this;return this.initialState=e,this.reducer=t,this.middleware=i,this.dispatch=function(e){return n.actionStream$.next(e)},this.getInstance=function(){return n.store$},this.actionStream$=new r.Subject,this.store$=this.actionStream$.startWith(e).scan(t),i&&this.store$,this}return e}();t.IStore=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(611),n=i(610),o=angular.module("hibachi.dialog",[]).config(function(){}).service("dialogService",r.DialogService).controller("pageDialog",n.PageDialogController).constant("dialogPartials","dialog/components/");t.dialogmodule=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){var s=this;this.$filter=e,this.utilityService=t,this.$injector=i,this.metadataService=r,this.observerService=n,this.listingService=o,this.saved=!1,this.$onInit=function(){var e=s.$injector.get("swPropertyDisplayDirective")[0].bindToController;for(var t in e)!s[t]&&s.swForm&&s.swForm[t]&&(s[t]=s.swForm[t]);if(s.errors={},s.edited=!1,s.edit=s.edit||s.editing,s.editing=s.editing||s.edit,s.errorName=s.errorName||s.name,s.initialValue=s.object[s.property],s.propertyDisplayID=s.utilityService.createID(32),angular.isUndefined(s.showSave)&&(s.showSave=!0),angular.isUndefined(s.inListingDisplay)&&(s.inListingDisplay=!1),angular.isUndefined(s.rowSaveEnabled)&&(s.rowSaveEnabled=s.inListingDisplay),angular.isDefined(s.revertToValue)&&angular.isUndefined(s.showRevert)&&(s.showRevert=!0),angular.isDefined(s.revertToValue)&&angular.isUndefined(s.revertText)&&(s.revertText=s.revertToValue),angular.isUndefined(s.showRevert)&&(s.showRevert=!1),angular.isUndefined(s.rawFileTarget)&&(s.rawFileTarget=s.property),angular.isUndefined(s.editing)&&(s.editing=!1),angular.isUndefined(s.editable)&&(s.editable=!0),angular.isUndefined(s.isHidden)&&(s.isHidden=!1),angular.isUndefined(s.noValidate)&&(s.noValidate=!1),angular.isUndefined(s.inModal)&&(s.inModal=!1),angular.isUndefined(s.optionsArguments)&&(s.optionsArguments={}),"hidden"!==s.fieldType&&angular.isUndefined(s.inListingDisplay)||angular.isDefined(s.inListingDisplay)&&!s.inListingDisplay?s.showLabel=!0:s.showLabel=!1,angular.isDefined(s.pageRecord)&&angular.isUndefined(s.pageRecord.edited)&&(s.pageRecord.edited=!1),s.applyFilter=function(e,t){try{return s.$filter(t)(e)}catch(t){return e}},angular.isUndefined(s.fieldType)&&s.object&&s.object.metaData&&(s.fieldType=s.metadataService.getPropertyFieldType(s.object,s.propertyIdentifier)),angular.isUndefined(s.title)&&s.object&&s.object.metaData&&(s.labelText=s.metadataService.getPropertyTitle(s.object,s.propertyIdentifier)),s.labelText=s.labelText||s.title,s.title=s.title||s.labelText,s.fieldType=s.fieldType||"text",s.class=s.class||"form-control",s.fieldAttributes=s.fieldAttributes||"",s.label=s.label||"true",s.labelText=s.labelText||"",s.labelClass=s.labelClass||"",s.name=s.name||"unnamed",s.value=s.value||s.initialValue,s.object=s.object||s.swForm.object,s.options&&angular.isString(s.options)){var i=[];i=s.options.toString().split(","),angular.forEach(i,function(e){var t={name:"",value:""};t.name=e,t.value=e,s.optionValues.push(t)})}"yesno"==s.fieldType&&s.value&&angular.isString(s.value)&&(s.selected,s.value),angular.isUndefined(s.hint)&&s.object&&s.object.metaData&&(s.hint=s.metadataService.getPropertyHintByObjectAndPropertyIdentifier(s.object,s.propertyIdentifier)),(s.hasOnChangeCallback||s.inListingDisplay||s.onChangeEvent)&&angular.isDefined(s.swForm)&&angular.isDefined(s.name)&&(s.swInputOnChangeEvent=s.swForm.name+s.name+"change",s.observerService.attach(s.onChange,s.swInputOnChangeEvent))},this.onChange=function(e){s.edited=!0,s.saved&&(s.saved=!1),s.hasOnChangeCallback&&s.onChangeCallback(e),s.inListingDisplay&&s.rowSaveEnabled&&s.listingService.markEdited(s.listingID,s.pageRecordIndex,s.propertyDisplayID,s.save),angular.isDefined(s.onChangeEvent)&&s.observerService.notify(s.onChangeEvent,e)},this.clear=function(){s.reverted&&(s.reverted=!1,s.showRevert=!0),s.edited=!1,s.object.data[s.property]=s.initialValue,s.inListingDisplay&&s.rowSaveEnabled&&s.listingService.markUnedited(s.listingID,s.pageRecordIndex,s.propertyDisplayID)},this.revert=function(){s.showRevert=!1,s.reverted=!0,s.object.data[s.property]=s.revertToValue,s.onChange()},this.save=function(){s.edited=!1,s.saved=!0,s.inModal?s.hasModalCallback&&s.modalCallback():s.object.$$save().then(function(e){s.hasSaveCallback&&s.saveCallback(e)},function(e){s.edited=!0,s.saved=!1})}}return e}();t.SWPropertyDisplayController=r;var n=function(){function e(e,t,i,n,o){var s=this;this.$compile=e,this.scopeService=t,this.coreFormPartialsPath=i,this.hibachiPathBuilder=n,this.swpropertyPartialPath=o,this.require={swForm:"?^swForm",form:"?^form"},this.restrict="AE",this.scope={},this.bindToController={name:"@?",errorName:"@?",class:"@?",edit:"@?",valueObject:"=?",valueObjectProperty:"=?",propertyIdentifier:"@?",valueOptions:"=?",fieldAttributes:"@?",label:"@?",labelText:"@?",labelClass:"@?",errorText:"@?",errorClass:"@?",formTemplate:"@?",eventAnnouncers:"@",hideErrors:"=?",value:"@?",property:"@?",object:"=?",editable:"=?",editing:"=?",isHidden:"=?",title:"=?",hint:"@?",options:"=?",optionsArguments:"=?",eagerLoadOptions:"=?",isDirty:"=?",onChangeCallback:"&?onChange",onChangeEvent:"@?",saveCallback:"&?",fieldType:"@?",rawFileTarget:"@?",binaryFileTarget:"@?",noValidate:"=?",inListingDisplay:"=?",inModal:"=?",modalCallback:"&?",hasModalCallback:"=?",rowSaveEnabled:"=?",revertToValue:"=?",revertText:"@?",showRevert:"=?",showSave:"=?",placeholderText:"@",placeholderRbKey:"@",inputAttributes:"@?",optionValues:"=?",eventListeners:"=?",context:"@?"},this.controller=r,this.controllerAs="swPropertyDisplay",this.templateUrlPath="propertydisplay.html",this.link=function(e,t,i,r){if(e.frmController=r,e.swfPropertyDisplay=e.swPropertyDisplay,angular.isDefined(i.onChange)?e.swPropertyDisplay.hasOnChangeCallback=!0:e.swPropertyDisplay.hasOnChangeCallback=!1,angular.isDefined(i.saveCallback)?e.swPropertyDisplay.hasSaveCallback=!0:e.swPropertyDisplay.hasSaveCallback=!1,angular.isDefined(e.swPropertyDisplay.inListingDisplay)&&e.swPropertyDisplay.inListingDisplay){var n=s.scopeService.getRootParentScope(e,"pageRecord");angular.isDefined(n.pageRecord)&&(e.swPropertyDisplay.pageRecord=n.pageRecord);var n=s.scopeService.getRootParentScope(e,"pageRecordKey");angular.isDefined(n.pageRecordKey)&&(e.swPropertyDisplay.pageRecordIndex=n.pageRecordKey);var n=s.scopeService.getRootParentScope(e,"swListingDisplay");angular.isDefined(n.swListingDisplay)&&(e.swPropertyDisplay.listingID=n.swListingDisplay.tableID)}if(angular.isDefined(e.swPropertyDisplay.inModal)&&e.swPropertyDisplay.inModal){var o=s.scopeService.getRootParentScope(e,"swModalLauncher");e.swPropertyDisplay.modalName=o.swModalLauncher.modalName,angular.isFunction(o.swModalLauncher.launchModal)&&(e.swPropertyDisplay.modalCallback=o.swModalLauncher.launchModal,e.swPropertyDisplay.hasModalCallback=!0)}},this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath)+o}return e.Factory=function(e,t){var i=function(i,r,n,o){return new e(i,r,n,o,t)};return i.$inject=["$compile","scopeService","coreFormPartialsPath","hibachiPathBuilder"],i},e.$inject=["coreFormPartialsPath","hibachiPathBuilder"],e}();t.SWPropertyDisplay=n},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),n=i(487),o=i(633),s=i(650),a=function(e){function t(){var t=this;return(t=e.call(this,[o.hibachimodule.name,s.loggermodule.name])||this).bootstrap(),t}return r(t,e),t}(n.BaseBootStrapper);e.exports=new a},,,,,,,,,,,,,function(e,t){!function(){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&i.rotl(e,8)|4278255360&i.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=i.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],i=0,r=0;i<e.length;i++,r+=8)t[r>>>5]|=e[i]<<24-r%32;return t},wordsToBytes:function(e){for(var t=[],i=0;i<32*e.length;i+=8)t.push(e[i>>>5]>>>24-i%32&255);return t},bytesToHex:function(e){for(var t=[],i=0;i<e.length;i++)t.push((e[i]>>>4).toString(16)),t.push((15&e[i]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],i=0;i<e.length;i+=2)t.push(parseInt(e.substr(i,2),16));return t},bytesToBase64:function(e){for(var i=[],r=0;r<e.length;r+=3)for(var n=e[r]<<16|e[r+1]<<8|e[r+2],o=0;o<4;o++)8*r+6*o<=8*e.length?i.push(t.charAt(n>>>6*(3-o)&63)):i.push("=");return i.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var i=[],r=0,n=0;r<e.length;n=++r%4)0!=n&&i.push((t.indexOf(e.charAt(r-1))&Math.pow(2,-2*n+8)-1)<<2*n|t.indexOf(e.charAt(r))>>>6-2*n);return i}};e.exports=i}()},function(e,t){function i(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&i(e.slice(0,0))}e.exports=function(e){return null!=e&&(i(e)||r(e)||!!e._isBuffer)}},function(e,t){function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function n(e){if(u===setTimeout)return setTimeout(e,0);if((u===i||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function o(e){if(d===clearTimeout)return clearTimeout(e);if((d===r||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(e);try{return d(e)}catch(t){try{return d.call(null,e)}catch(t){return d.call(this,e)}}}function s(){g&&p&&(g=!1,p.length?h=p.concat(h):y=-1,h.length&&a())}function a(){if(!g){var e=n(s);g=!0;for(var t=h.length;t;){for(p=h,h=[];++y<t;)p&&p[y].run();y=-1,t=h.length}p=null,g=!1,o(e)}}function c(e,t){this.fun=e,this.array=t}function l(){}var u,d,f=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:i}catch(e){u=i}try{d="function"==typeof clearTimeout?clearTimeout:r}catch(e){d=r}}();var p,h=[],g=!1,y=-1;f.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];h.push(new c(e,t)),1!==h.length||g||n(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},f.title="browser",f.browser=!0,f.env={},f.argv=[],f.version="",f.versions={},f.on=l,f.addListener=l,f.once=l,f.off=l,f.removeListener=l,f.removeAllListeners=l,f.emit=l,f.prependListener=l,f.prependOnceListener=l,f.listeners=function(e){return[]},f.binding=function(e){throw new Error("process.binding is not supported")},f.cwd=function(){return"/"},f.chdir=function(e){throw new Error("process.chdir is not supported")},f.umask=function(){return 0}},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(1),o=function(e){function t(t,i,r){e.call(this),this.parent=t,this.outerValue=i,this.outerIndex=r,this.index=0}return r(t,e),t.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)},t.prototype._error=function(e){this.parent.notifyError(e,this),this.unsubscribe()},t.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t}(n.Subscriber);t.InnerSubscriber=o},function(e,t,i){"use strict";var r=i(6);t.Subject=r.Subject,t.AnonymousSubject=r.AnonymousSubject;var n=i(0);t.Observable=n.Observable,i(192),i(193),i(194),i(195),i(196),i(199),i(200),i(201),i(202),i(203),i(204),i(205),i(206),i(207),i(208),i(213),i(209),i(210),i(211),i(212),i(214),i(217),i(215),i(216),i(218),i(197),i(198),i(221),i(222),i(223),i(224),i(225),i(226),i(227),i(228),i(229),i(230),i(231),i(232),i(233),i(239),i(234),i(235),i(236),i(237),i(238),i(240),i(241),i(242),i(243),i(246),i(247),i(248),i(244),i(249),i(250),i(251),i(252),i(253),i(254),i(255),i(256),i(219),i(220),i(257),i(258),i(245),i(259),i(260),i(261),i(262),i(263),i(264),i(265),i(266),i(267),i(268),i(269),i(270),i(271),i(272),i(273),i(274),i(275),i(276),i(278),i(277),i(279),i(280),i(281),i(282),i(283),i(284),i(285),i(286),i(287),i(288),i(289),i(290),i(291),i(292),i(293),i(294),i(295),i(296),i(297),i(298),i(299),i(300),i(301),i(302),i(303),i(304),i(305),i(306),i(307),i(308),i(309),i(310),i(311),i(312),i(313),i(314),i(315),i(316),i(317),i(318),i(319),i(320);var o=i(5);t.Subscription=o.Subscription;var s=i(1);t.Subscriber=s.Subscriber;var a=i(28);t.AsyncSubject=a.AsyncSubject;var c=i(29);t.ReplaySubject=c.ReplaySubject;var l=i(65);t.BehaviorSubject=l.BehaviorSubject;var u=i(68);t.ConnectableObservable=u.ConnectableObservable;var d=i(17);t.Notification=d.Notification;var f=i(38);t.EmptyError=f.EmptyError;var p=i(25);t.ArgumentOutOfRangeError=p.ArgumentOutOfRangeError;var h=i(39);t.ObjectUnsubscribedError=h.ObjectUnsubscribedError;var g=i(159);t.TimeoutError=g.TimeoutError;var y=i(160);t.UnsubscriptionError=y.UnsubscriptionError;var v=i(75);t.TimeInterval=v.TimeInterval;var m=i(56);t.Timestamp=m.Timestamp;var b=i(473);t.TestScheduler=b.TestScheduler;var w=i(154);t.VirtualTimeScheduler=w.VirtualTimeScheduler;var S=i(71);t.AjaxResponse=S.AjaxResponse,t.AjaxError=S.AjaxError,t.AjaxTimeoutError=S.AjaxTimeoutError;var C=i(58);t.pipe=C.pipe;var P=i(155),O=i(4),D=i(156),I=i(470),_=i(37),T=i(24),$=i(36),A=i(461);t.operators=A;var x={asap:P.asap,queue:D.queue,animationFrame:I.animationFrame,async:O.async};t.Scheduler=x;var E={rxSubscriber:_.rxSubscriber,observable:$.observable,iterator:T.iterator};t.Symbol=E},function(e,t,i){"use strict";var r=function(){function e(t,i){void 0===i&&(i=e.now),this.SchedulerAction=t,this.now=i}return e.prototype.schedule=function(e,t,i){return void 0===t&&(t=0),new this.SchedulerAction(this,e).schedule(i,t)},e.now=Date.now?Date.now:function(){return+new Date},e}();t.Scheduler=r},function(e,t,i){"use strict";var r=i(0),n=i(339);r.Observable.bindCallback=n.bindCallback},function(e,t,i){"use strict";var r=i(0),n=i(340);r.Observable.bindNodeCallback=n.bindNodeCallback},function(e,t,i){"use strict";var r=i(0),n=i(341);r.Observable.combineLatest=n.combineLatest},function(e,t,i){"use strict";var r=i(0),n=i(18);r.Observable.concat=n.concat},function(e,t,i){"use strict";var r=i(0),n=i(342);r.Observable.defer=n.defer},function(e,t,i){"use strict";var r=i(0),n=i(344);r.Observable.ajax=n.ajax},function(e,t,i){"use strict";var r=i(0),n=i(345);r.Observable.webSocket=n.webSocket},function(e,t,i){"use strict";var r=i(0),n=i(346);r.Observable.empty=n.empty},function(e,t,i){"use strict";var r=i(0),n=i(347);r.Observable.forkJoin=n.forkJoin},function(e,t,i){"use strict";var r=i(0),n=i(72);r.Observable.from=n.from},function(e,t,i){"use strict";var r=i(0),n=i(348);r.Observable.fromEvent=n.fromEvent},function(e,t,i){"use strict";var r=i(0),n=i(349);r.Observable.fromEventPattern=n.fromEventPattern},function(e,t,i){"use strict";var r=i(0),n=i(350);r.Observable.fromPromise=n.fromPromise},function(e,t,i){"use strict";var r=i(0),n=i(351);r.Observable.generate=n.generate},function(e,t,i){"use strict";var r=i(0),n=i(352);r.Observable.if=n._if},function(e,t,i){"use strict";var r=i(0),n=i(353);r.Observable.interval=n.interval},function(e,t,i){"use strict";var r=i(0),n=i(30);r.Observable.merge=n.merge},function(e,t,i){"use strict";var r=i(0),n=i(354);r.Observable.never=n.never},function(e,t,i){"use strict";var r=i(0),n=i(73);r.Observable.of=n.of},function(e,t,i){"use strict";var r=i(0),n=i(355);r.Observable.onErrorResumeNext=n.onErrorResumeNext},function(e,t,i){"use strict";var r=i(0),n=i(356);r.Observable.pairs=n.pairs},function(e,t,i){"use strict";var r=i(0),n=i(43);r.Observable.race=n.race},function(e,t,i){"use strict";var r=i(0),n=i(357);r.Observable.range=n.range},function(e,t,i){"use strict";var r=i(0),n=i(358);r.Observable.throw=n._throw},function(e,t,i){"use strict";var r=i(0),n=i(74);r.Observable.timer=n.timer},function(e,t,i){"use strict";var r=i(0),n=i(359);r.Observable.using=n.using},function(e,t,i){"use strict";var r=i(0),n=i(360);r.Observable.zip=n.zip},function(e,t,i){"use strict";var r=i(0),n=i(361);r.Observable.prototype.audit=n.audit},function(e,t,i){"use strict";var r=i(0),n=i(362);r.Observable.prototype.auditTime=n.auditTime},function(e,t,i){"use strict";var r=i(0),n=i(363);r.Observable.prototype.buffer=n.buffer},function(e,t,i){"use strict";var r=i(0),n=i(364);r.Observable.prototype.bufferCount=n.bufferCount},function(e,t,i){"use strict";var r=i(0),n=i(365);r.Observable.prototype.bufferTime=n.bufferTime},function(e,t,i){"use strict";var r=i(0),n=i(366);r.Observable.prototype.bufferToggle=n.bufferToggle},function(e,t,i){"use strict";var r=i(0),n=i(367);r.Observable.prototype.bufferWhen=n.bufferWhen},function(e,t,i){"use strict";var r=i(0),n=i(368);r.Observable.prototype.catch=n._catch,r.Observable.prototype._catch=n._catch},function(e,t,i){"use strict";var r=i(0),n=i(369);r.Observable.prototype.combineAll=n.combineAll},function(e,t,i){"use strict";var r=i(0),n=i(370);r.Observable.prototype.combineLatest=n.combineLatest},function(e,t,i){"use strict";var r=i(0),n=i(371);r.Observable.prototype.concat=n.concat},function(e,t,i){"use strict";var r=i(0),n=i(372);r.Observable.prototype.concatAll=n.concatAll},function(e,t,i){"use strict";var r=i(0),n=i(373);r.Observable.prototype.concatMap=n.concatMap},function(e,t,i){"use strict";var r=i(0),n=i(374);r.Observable.prototype.concatMapTo=n.concatMapTo},function(e,t,i){"use strict";var r=i(0),n=i(375);r.Observable.prototype.count=n.count},function(e,t,i){"use strict";var r=i(0),n=i(376);r.Observable.prototype.debounce=n.debounce},function(e,t,i){"use strict";var r=i(0),n=i(377);r.Observable.prototype.debounceTime=n.debounceTime},function(e,t,i){"use strict";var r=i(0),n=i(378);r.Observable.prototype.defaultIfEmpty=n.defaultIfEmpty},function(e,t,i){"use strict";var r=i(0),n=i(379);r.Observable.prototype.delay=n.delay},function(e,t,i){"use strict";var r=i(0),n=i(380);r.Observable.prototype.delayWhen=n.delayWhen},function(e,t,i){"use strict";var r=i(0),n=i(381);r.Observable.prototype.dematerialize=n.dematerialize},function(e,t,i){"use strict";var r=i(0),n=i(382);r.Observable.prototype.distinct=n.distinct},function(e,t,i){"use strict";var r=i(0),n=i(383);r.Observable.prototype.distinctUntilChanged=n.distinctUntilChanged},function(e,t,i){"use strict";var r=i(0),n=i(384);r.Observable.prototype.distinctUntilKeyChanged=n.distinctUntilKeyChanged},function(e,t,i){"use strict";var r=i(0),n=i(385);r.Observable.prototype.do=n._do,r.Observable.prototype._do=n._do},function(e,t,i){"use strict";var r=i(0),n=i(386);r.Observable.prototype.elementAt=n.elementAt},function(e,t,i){"use strict";var r=i(0),n=i(387);r.Observable.prototype.every=n.every},function(e,t,i){"use strict";var r=i(0),n=i(388);r.Observable.prototype.exhaust=n.exhaust},function(e,t,i){"use strict";var r=i(0),n=i(389);r.Observable.prototype.exhaustMap=n.exhaustMap},function(e,t,i){"use strict";var r=i(0),n=i(390);r.Observable.prototype.expand=n.expand},function(e,t,i){"use strict";var r=i(0),n=i(391);r.Observable.prototype.filter=n.filter},function(e,t,i){"use strict";var r=i(0),n=i(392);r.Observable.prototype.finally=n._finally,r.Observable.prototype._finally=n._finally},function(e,t,i){"use strict";var r=i(0),n=i(393);r.Observable.prototype.find=n.find},function(e,t,i){"use strict";var r=i(0),n=i(394);r.Observable.prototype.findIndex=n.findIndex},function(e,t,i){"use strict";var r=i(0),n=i(395);r.Observable.prototype.first=n.first},function(e,t,i){"use strict";var r=i(0),n=i(396);r.Observable.prototype.groupBy=n.groupBy},function(e,t,i){"use strict";var r=i(0),n=i(397);r.Observable.prototype.ignoreElements=n.ignoreElements},function(e,t,i){"use strict";var r=i(0),n=i(398);r.Observable.prototype.isEmpty=n.isEmpty},function(e,t,i){"use strict";var r=i(0),n=i(399);r.Observable.prototype.last=n.last},function(e,t,i){"use strict";var r=i(0),n=i(400);r.Observable.prototype.let=n.letProto,r.Observable.prototype.letBind=n.letProto},function(e,t,i){"use strict";var r=i(0),n=i(401);r.Observable.prototype.map=n.map},function(e,t,i){"use strict";var r=i(0),n=i(402);r.Observable.prototype.mapTo=n.mapTo},function(e,t,i){"use strict";var r=i(0),n=i(403);r.Observable.prototype.materialize=n.materialize},function(e,t,i){"use strict";var r=i(0),n=i(404);r.Observable.prototype.max=n.max},function(e,t,i){"use strict";var r=i(0),n=i(405);r.Observable.prototype.merge=n.merge},function(e,t,i){"use strict";var r=i(0),n=i(406);r.Observable.prototype.mergeAll=n.mergeAll},function(e,t,i){"use strict";var r=i(0),n=i(407);r.Observable.prototype.mergeMap=n.mergeMap,r.Observable.prototype.flatMap=n.mergeMap},function(e,t,i){"use strict";var r=i(0),n=i(408);r.Observable.prototype.flatMapTo=n.mergeMapTo,r.Observable.prototype.mergeMapTo=n.mergeMapTo},function(e,t,i){"use strict";var r=i(0),n=i(409);r.Observable.prototype.mergeScan=n.mergeScan},function(e,t,i){"use strict";var r=i(0),n=i(410);r.Observable.prototype.min=n.min},function(e,t,i){"use strict";var r=i(0),n=i(411);r.Observable.prototype.multicast=n.multicast},function(e,t,i){"use strict";var r=i(0),n=i(412);r.Observable.prototype.observeOn=n.observeOn},function(e,t,i){"use strict";var r=i(0),n=i(413);r.Observable.prototype.onErrorResumeNext=n.onErrorResumeNext},function(e,t,i){"use strict";var r=i(0),n=i(414);r.Observable.prototype.pairwise=n.pairwise},function(e,t,i){"use strict";var r=i(0),n=i(415);r.Observable.prototype.partition=n.partition},function(e,t,i){"use strict";var r=i(0),n=i(416);r.Observable.prototype.pluck=n.pluck},function(e,t,i){"use strict";var r=i(0),n=i(417);r.Observable.prototype.publish=n.publish},function(e,t,i){"use strict";var r=i(0),n=i(418);r.Observable.prototype.publishBehavior=n.publishBehavior},function(e,t,i){"use strict";var r=i(0),n=i(419);r.Observable.prototype.publishLast=n.publishLast},function(e,t,i){"use strict";var r=i(0),n=i(420);r.Observable.prototype.publishReplay=n.publishReplay},function(e,t,i){"use strict";var r=i(0),n=i(421);r.Observable.prototype.race=n.race},function(e,t,i){"use strict";var r=i(0),n=i(422);r.Observable.prototype.reduce=n.reduce},function(e,t,i){"use strict";var r=i(0),n=i(423);r.Observable.prototype.repeat=n.repeat},function(e,t,i){"use strict";var r=i(0),n=i(424);r.Observable.prototype.repeatWhen=n.repeatWhen},function(e,t,i){"use strict";var r=i(0),n=i(425);r.Observable.prototype.retry=n.retry},function(e,t,i){"use strict";var r=i(0),n=i(426);r.Observable.prototype.retryWhen=n.retryWhen},function(e,t,i){"use strict";var r=i(0),n=i(427);r.Observable.prototype.sample=n.sample},function(e,t,i){"use strict";var r=i(0),n=i(428);r.Observable.prototype.sampleTime=n.sampleTime},function(e,t,i){"use strict";var r=i(0),n=i(429);r.Observable.prototype.scan=n.scan},function(e,t,i){"use strict";var r=i(0),n=i(430);r.Observable.prototype.sequenceEqual=n.sequenceEqual},function(e,t,i){"use strict";var r=i(0),n=i(431);r.Observable.prototype.share=n.share},function(e,t,i){"use strict";var r=i(0),n=i(432);r.Observable.prototype.shareReplay=n.shareReplay},function(e,t,i){"use strict";var r=i(0),n=i(433);r.Observable.prototype.single=n.single},function(e,t,i){"use strict";var r=i(0),n=i(434);r.Observable.prototype.skip=n.skip},function(e,t,i){"use strict";var r=i(0),n=i(435);r.Observable.prototype.skipLast=n.skipLast},function(e,t,i){"use strict";var r=i(0),n=i(436);r.Observable.prototype.skipUntil=n.skipUntil},function(e,t,i){"use strict";var r=i(0),n=i(437);r.Observable.prototype.skipWhile=n.skipWhile},function(e,t,i){"use strict";var r=i(0),n=i(438);r.Observable.prototype.startWith=n.startWith},function(e,t,i){"use strict";var r=i(0),n=i(439);r.Observable.prototype.subscribeOn=n.subscribeOn},function(e,t,i){"use strict";var r=i(0),n=i(440);r.Observable.prototype.switch=n._switch,r.Observable.prototype._switch=n._switch},function(e,t,i){"use strict";var r=i(0),n=i(441);r.Observable.prototype.switchMap=n.switchMap},function(e,t,i){"use strict";var r=i(0),n=i(442);r.Observable.prototype.switchMapTo=n.switchMapTo},function(e,t,i){"use strict";var r=i(0),n=i(443);r.Observable.prototype.take=n.take},function(e,t,i){"use strict";var r=i(0),n=i(444);r.Observable.prototype.takeLast=n.takeLast},function(e,t,i){"use strict";var r=i(0),n=i(445);r.Observable.prototype.takeUntil=n.takeUntil},function(e,t,i){"use strict";var r=i(0),n=i(446);r.Observable.prototype.takeWhile=n.takeWhile},function(e,t,i){"use strict";var r=i(0),n=i(447);r.Observable.prototype.throttle=n.throttle},function(e,t,i){"use strict";var r=i(0),n=i(448);r.Observable.prototype.throttleTime=n.throttleTime},function(e,t,i){"use strict";var r=i(0),n=i(75);r.Observable.prototype.timeInterval=n.timeInterval},function(e,t,i){"use strict";var r=i(0),n=i(449);r.Observable.prototype.timeout=n.timeout},function(e,t,i){"use strict";var r=i(0),n=i(450);r.Observable.prototype.timeoutWith=n.timeoutWith},function(e,t,i){"use strict";var r=i(0),n=i(451);r.Observable.prototype.timestamp=n.timestamp},function(e,t,i){"use strict";var r=i(0),n=i(452);r.Observable.prototype.toArray=n.toArray},function(e,t){},function(e,t,i){"use strict";var r=i(0),n=i(453);r.Observable.prototype.window=n.window},function(e,t,i){"use strict";var r=i(0),n=i(454);r.Observable.prototype.windowCount=n.windowCount},function(e,t,i){"use strict";var r=i(0),n=i(455);r.Observable.prototype.windowTime=n.windowTime},function(e,t,i){"use strict";var r=i(0),n=i(456);r.Observable.prototype.windowToggle=n.windowToggle},function(e,t,i){"use strict";var r=i(0),n=i(457);r.Observable.prototype.windowWhen=n.windowWhen},function(e,t,i){"use strict";var r=i(0),n=i(458);r.Observable.prototype.withLatestFrom=n.withLatestFrom},function(e,t,i){"use strict";var r=i(0),n=i(459);r.Observable.prototype.zip=n.zipProto},function(e,t,i){"use strict";var r=i(0),n=i(460);r.Observable.prototype.zipAll=n.zipAll},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(42),s=i(13),a=function(e){function t(t,i){e.call(this),this.arrayLike=t,this.scheduler=i,i||1!==t.length||(this._isScalar=!0,this.value=t[0])}return r(t,e),t.create=function(e,i){var r=e.length;return 0===r?new s.EmptyObservable:1===r?new o.ScalarObservable(e[0],i):new t(e,i)},t.dispatch=function(e){var t=e.arrayLike,i=e.index,r=e.length,n=e.subscriber;if(!n.closed){if(i>=r)return void n.complete();n.next(t[i]),e.index=i+1,this.schedule(e)}},t.prototype._subscribe=function(e){var i=this,r=i.arrayLike,n=i.scheduler,o=r.length;if(n)return n.schedule(t.dispatch,0,{arrayLike:r,index:0,length:o,subscriber:e});for(var s=0;s<o&&!e.closed;s++)e.next(r[s]);e.complete()},t}(n.Observable);t.ArrayLikeObservable=a},function(e,t,i){"use strict";function r(e){var t=e.value,i=e.subject;i.next(t),i.complete()}function n(e){var t=e.err;e.subject.error(t)}var o=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},s=i(0),a=i(8),c=i(7),l=i(28),u=function(e){function t(t,i,r,n,o){e.call(this),this.callbackFunc=t,this.selector=i,this.args=r,this.context=n,this.scheduler=o}return o(t,e),t.create=function(e,i,r){return void 0===i&&(i=void 0),function(){for(var n=[],o=0;o<arguments.length;o++)n[o-0]=arguments[o];return new t(e,i,n,this,r)}},t.prototype._subscribe=function(e){var i=this.callbackFunc,r=this.args,n=this.scheduler,o=this.subject;if(n)return n.schedule(t.dispatch,0,{source:this,subscriber:e,context:this.context});if(!o){o=this.subject=new l.AsyncSubject;var s=function e(){for(var t=[],i=0;i<arguments.length;i++)t[i-0]=arguments[i];var r=e.source,n=r.selector,o=r.subject;if(n){var s=a.tryCatch(n).apply(this,t);s===c.errorObject?o.error(c.errorObject.e):(o.next(s),o.complete())}else o.next(t.length<=1?t[0]:t),o.complete()};s.source=this,a.tryCatch(i).apply(this.context,r.concat(s))===c.errorObject&&o.error(c.errorObject.e)}return o.subscribe(e)},t.dispatch=function(e){var t=this,i=e.source,o=e.subscriber,s=e.context,u=i.callbackFunc,d=i.args,f=i.scheduler,p=i.subject;if(!p){p=i.subject=new l.AsyncSubject;var h=function e(){for(var i=[],o=0;o<arguments.length;o++)i[o-0]=arguments[o];var s=e.source,l=s.selector,u=s.subject;if(l){var d=a.tryCatch(l).apply(this,i);d===c.errorObject?t.add(f.schedule(n,0,{err:c.errorObject.e,subject:u})):t.add(f.schedule(r,0,{value:d,subject:u}))}else{var p=i.length<=1?i[0]:i;t.add(f.schedule(r,0,{value:p,subject:u}))}};h.source=i,a.tryCatch(u).apply(s,d.concat(h))===c.errorObject&&p.error(c.errorObject.e)}t.add(p.subscribe(o))},t}(s.Observable);t.BoundCallbackObservable=u},function(e,t,i){"use strict";function r(e){var t=this,i=e.source,r=e.subscriber,s=e.context,a=i,d=a.callbackFunc,f=a.args,p=a.scheduler,h=i.subject;if(!h){h=i.subject=new u.AsyncSubject;var g=function e(){for(var i=[],r=0;r<arguments.length;r++)i[r-0]=arguments[r];var s=e.source,a=s.selector,u=s.subject,d=i.shift();if(d)t.add(p.schedule(o,0,{err:d,subject:u}));else if(a){var f=c.tryCatch(a).apply(this,i);f===l.errorObject?t.add(p.schedule(o,0,{err:l.errorObject.e,subject:u})):t.add(p.schedule(n,0,{value:f,subject:u}))}else{var h=i.length<=1?i[0]:i;t.add(p.schedule(n,0,{value:h,subject:u}))}};g.source=i,c.tryCatch(d).apply(s,f.concat(g))===l.errorObject&&t.add(p.schedule(o,0,{err:l.errorObject.e,subject:h}))}t.add(h.subscribe(r))}function n(e){var t=e.value,i=e.subject;i.next(t),i.complete()}function o(e){var t=e.err;e.subject.error(t)}var s=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},a=i(0),c=i(8),l=i(7),u=i(28),d=function(e){function t(t,i,r,n,o){e.call(this),this.callbackFunc=t,this.selector=i,this.args=r,this.context=n,this.scheduler=o}return s(t,e),t.create=function(e,i,r){return void 0===i&&(i=void 0),function(){for(var n=[],o=0;o<arguments.length;o++)n[o-0]=arguments[o];return new t(e,i,n,this,r)}},t.prototype._subscribe=function(e){var t=this.callbackFunc,i=this.args,n=this.scheduler,o=this.subject;if(n)return n.schedule(r,0,{source:this,subscriber:e,context:this.context});if(!o){o=this.subject=new u.AsyncSubject;var s=function e(){for(var t=[],i=0;i<arguments.length;i++)t[i-0]=arguments[i];var r=e.source,n=r.selector,o=r.subject,s=t.shift();if(s)o.error(s);else if(n){var a=c.tryCatch(n).apply(this,t);a===l.errorObject?o.error(l.errorObject.e):(o.next(a),o.complete())}else o.next(t.length<=1?t[0]:t),o.complete()};s.source=this,c.tryCatch(t).apply(this.context,i.concat(s))===l.errorObject&&o.error(l.errorObject.e)}return o.subscribe(e)},t}(a.Observable);t.BoundNodeCallbackObservable=d},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(3),s=i(2),a=function(e){function t(t){e.call(this),this.observableFactory=t}return r(t,e),t.create=function(e){return new t(e)},t.prototype._subscribe=function(e){return new c(e,this.observableFactory)},t}(n.Observable);t.DeferObservable=a;var c=function(e){function t(t,i){e.call(this,t),this.factory=i,this.tryDefer()}return r(t,e),t.prototype.tryDefer=function(){try{this._callFactory()}catch(e){this._error(e)}},t.prototype._callFactory=function(){var e=this.factory();e&&this.add(o.subscribeToResult(this,e))},t}(s.OuterSubscriber)},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=function(e){function t(t,i){e.call(this),this.error=t,this.scheduler=i}return r(t,e),t.create=function(e,i){return new t(e,i)},t.dispatch=function(e){var t=e.error;e.subscriber.error(t)},t.prototype._subscribe=function(e){var i=this.error,r=this.scheduler;if(e.syncErrorThrowable=!0,r)return r.schedule(t.dispatch,0,{error:i,subscriber:e});e.error(i)},t}(n.Observable);t.ErrorObservable=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(13),s=i(11),a=i(3),c=i(2),l=function(e){function t(t,i){e.call(this),this.sources=t,this.resultSelector=i}return r(t,e),t.create=function(){for(var e=[],i=0;i<arguments.length;i++)e[i-0]=arguments[i];if(null===e||0===arguments.length)return new o.EmptyObservable;var r=null;return"function"==typeof e[e.length-1]&&(r=e.pop()),1===e.length&&s.isArray(e[0])&&(e=e[0]),0===e.length?new o.EmptyObservable:new t(e,r)},t.prototype._subscribe=function(e){return new u(e,this.sources,this.resultSelector)},t}(n.Observable);t.ForkJoinObservable=l;var u=function(e){function t(t,i,r){e.call(this,t),this.sources=i,this.resultSelector=r,this.completed=0,this.haveValues=0;var n=i.length;this.total=n,this.values=new Array(n);for(var o=0;o<n;o++){var s=i[o],c=a.subscribeToResult(this,s,null,o);c&&(c.outerIndex=o,this.add(c))}}return r(t,e),t.prototype.notifyNext=function(e,t,i,r,n){this.values[i]=t,n._hasValue||(n._hasValue=!0,this.haveValues++)},t.prototype.notifyComplete=function(e){var t=this.destination,i=this,r=i.haveValues,n=i.resultSelector,o=i.values,s=o.length;if(!e._hasValue)return void t.complete();if(++this.completed===s){if(r===s){var a=n?n.apply(this,o):o;t.next(a)}t.complete()}},t}(c.OuterSubscriber)},function(e,t,i){"use strict";function r(e){return!!e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}function n(e){return!!e&&"function"==typeof e.on&&"function"==typeof e.off}function o(e){return!!e&&"[object NodeList]"===h.call(e)}function s(e){return!!e&&"[object HTMLCollection]"===h.call(e)}function a(e){return!!e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}var c=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},l=i(0),u=i(8),d=i(41),f=i(7),p=i(5),h=Object.prototype.toString,g=function(e){function t(t,i,r,n){e.call(this),this.sourceObj=t,this.eventName=i,this.selector=r,this.options=n}return c(t,e),t.create=function(e,i,r,n){return d.isFunction(r)&&(n=r,r=void 0),new t(e,i,n,r)},t.setupSubscription=function(e,i,c,l,u){var d;if(o(e)||s(e))for(var f=0,h=e.length;f<h;f++)t.setupSubscription(e[f],i,c,l,u);else if(a(e)){var g=e;e.addEventListener(i,c,u),d=function(){return g.removeEventListener(i,c,u)}}else if(n(e)){var y=e;e.on(i,c),d=function(){return y.off(i,c)}}else{if(!r(e))throw new TypeError("Invalid event target");var v=e;e.addListener(i,c),d=function(){return v.removeListener(i,c)}}l.add(new p.Subscription(d))},t.prototype._subscribe=function(e){var i=this.sourceObj,r=this.eventName,n=this.options,o=this.selector,s=o?function(){for(var t=[],i=0;i<arguments.length;i++)t[i-0]=arguments[i];var r=u.tryCatch(o).apply(void 0,t);r===f.errorObject?e.error(f.errorObject.e):e.next(r)}:function(t){return e.next(t)};t.setupSubscription(i,r,s,e,n)},t}(l.Observable);t.FromEventObservable=g},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(41),o=i(0),s=i(5),a=function(e){function t(t,i,r){e.call(this),this.addHandler=t,this.removeHandler=i,this.selector=r}return r(t,e),t.create=function(e,i,r){return new t(e,i,r)},t.prototype._subscribe=function(e){var t=this,i=this.removeHandler,r=this.selector?function(){for(var i=[],r=0;r<arguments.length;r++)i[r-0]=arguments[r];t._callSelector(e,i)}:function(t){e.next(t)},o=this._callAddHandler(r,e);n.isFunction(i)&&e.add(new s.Subscription(function(){i(r,o)}))},t.prototype._callSelector=function(e,t){try{var i=this.selector.apply(this,t);e.next(i)}catch(t){e.error(t)}},t.prototype._callAddHandler=function(e,t){try{return this.addHandler(e)||null}catch(e){t.error(e)}},t}(o.Observable);t.FromEventPatternObservable=a},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(10),s=function(e){return e},a=function(e){function t(t,i,r,n,o){e.call(this),this.initialState=t,this.condition=i,this.iterate=r,this.resultSelector=n,this.scheduler=o}return r(t,e),t.create=function(e,i,r,n,a){return 1==arguments.length?new t(e.initialState,e.condition,e.iterate,e.resultSelector||s,e.scheduler):void 0===n||o.isScheduler(n)?new t(e,i,r,s,n):new t(e,i,r,n,a)},t.prototype._subscribe=function(e){var i=this.initialState;if(this.scheduler)return this.scheduler.schedule(t.dispatch,0,{subscriber:e,iterate:this.iterate,condition:this.condition,resultSelector:this.resultSelector,state:i});for(var r=this,n=r.condition,o=r.resultSelector,s=r.iterate;;){if(n){var a=void 0;try{a=n(i)}catch(t){return void e.error(t)}if(!a){e.complete();break}}var c=void 0;try{c=o(i)}catch(t){return void e.error(t)}if(e.next(c),e.closed)break;try{i=s(i)}catch(t){return void e.error(t)}}},t.dispatch=function(e){var t=e.subscriber,i=e.condition;if(!t.closed){if(e.needIterate)try{e.state=e.iterate(e.state)}catch(e){return void t.error(e)}else e.needIterate=!0;if(i){var r=void 0;try{r=i(e.state)}catch(e){return void t.error(e)}if(!r)return void t.complete();if(t.closed)return}var n;try{n=e.resultSelector(e.state)}catch(e){return void t.error(e)}if(!t.closed&&(t.next(n),!t.closed))return this.schedule(e)}},t}(n.Observable);t.GenerateObservable=a},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(3),s=i(2),a=function(e){function t(t,i,r){e.call(this),this.condition=t,this.thenSource=i,this.elseSource=r}return r(t,e),t.create=function(e,i,r){return new t(e,i,r)},t.prototype._subscribe=function(e){var t=this,i=t.condition,r=t.thenSource,n=t.elseSource;return new c(e,i,r,n)},t}(n.Observable);t.IfObservable=a;var c=function(e){function t(t,i,r,n){e.call(this,t),this.condition=i,this.thenSource=r,this.elseSource=n,this.tryIf()}return r(t,e),t.prototype.tryIf=function(){var e,t=this,i=t.condition,r=t.thenSource,n=t.elseSource;try{e=i();var s=e?r:n;s?this.add(o.subscribeToResult(this,s)):this._complete()}catch(e){this._error(e)}},t}(s.OuterSubscriber)},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(26),o=i(0),s=i(4),a=function(e){function t(t,i){void 0===t&&(t=0),void 0===i&&(i=s.async),e.call(this),this.period=t,this.scheduler=i,(!n.isNumeric(t)||t<0)&&(this.period=0),i&&"function"==typeof i.schedule||(this.scheduler=s.async)}return r(t,e),t.create=function(e,i){return void 0===e&&(e=0),void 0===i&&(i=s.async),new t(e,i)},t.dispatch=function(e){var t=e.index,i=e.subscriber,r=e.period;i.next(t),i.closed||(e.index+=1,this.schedule(e,r))},t.prototype._subscribe=function(e){var i=this.period,r=this.scheduler;e.add(r.schedule(t.dispatch,i,{index:0,subscriber:e,period:i}))},t}(o.Observable);t.IntervalObservable=a},function(e,t,i){"use strict";function r(e){var t=e[u.iterator];if(!t&&"string"==typeof e)return new f(e);if(!t&&void 0!==e.length)return new p(e);if(!t)throw new TypeError("object is not iterable");return e[u.iterator]()}function n(e){var t=+e.length;return isNaN(t)?0:0!==t&&o(t)?(t=s(t)*Math.floor(Math.abs(t)),t<=0?0:t>h?h:t):t}function o(e){return"number"==typeof e&&c.root.isFinite(e)}function s(e){var t=+e;return 0===t?t:isNaN(t)?t:t<0?-1:1}var a=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},c=i(9),l=i(0),u=i(24),d=function(e){function t(t,i){if(e.call(this),this.scheduler=i,null==t)throw new Error("iterator cannot be null.");this.iterator=r(t)}return a(t,e),t.create=function(e,i){return new t(e,i)},t.dispatch=function(e){var t=e.index,i=e.hasError,r=e.iterator,n=e.subscriber;if(i)return void n.error(e.error);var o=r.next();return o.done?void n.complete():(n.next(o.value),e.index=t+1,n.closed?void("function"==typeof r.return&&r.return()):void this.schedule(e))},t.prototype._subscribe=function(e){var i=this,r=i.iterator,n=i.scheduler;if(n)return n.schedule(t.dispatch,0,{index:0,iterator:r,subscriber:e});for(;;){var o=r.next();if(o.done){e.complete();break}if(e.next(o.value),e.closed){"function"==typeof r.return&&r.return();break}}},t}(l.Observable);t.IteratorObservable=d;var f=function(){function e(e,t,i){void 0===t&&(t=0),void 0===i&&(i=e.length),this.str=e,this.idx=t,this.len=i}return e.prototype[u.iterator]=function(){return this},e.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.str.charAt(this.idx++)}:{done:!0,value:void 0}},e}(),p=function(){function e(e,t,i){void 0===t&&(t=0),void 0===i&&(i=n(e)),this.arr=e,this.idx=t,this.len=i}return e.prototype[u.iterator]=function(){return this},e.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.arr[this.idx++]}:{done:!0,value:void 0}},e}(),h=Math.pow(2,53)-1},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(57),s=function(e){function t(){e.call(this)}return r(t,e),t.create=function(){return new t},t.prototype._subscribe=function(e){o.noop()},t}(n.Observable);t.NeverObservable=s},function(e,t,i){"use strict";function r(e){var t=e.obj,i=e.keys,r=e.length,n=e.index,o=e.subscriber;if(n===r)return void o.complete();var s=i[n];o.next([s,t[s]]),e.index=n+1,this.schedule(e)}var n=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},o=i(0),s=function(e){function t(t,i){e.call(this),this.obj=t,this.scheduler=i,this.keys=Object.keys(t)}return n(t,e),t.create=function(e,i){return new t(e,i)},t.prototype._subscribe=function(e){var t=this,i=t.keys,n=t.scheduler,o=i.length;if(n)return n.schedule(r,0,{obj:this.obj,keys:i,length:o,index:0,subscriber:e});for(var s=0;s<o;s++){var a=i[s];e.next([a,this.obj[a]])}e.complete()},t}(o.Observable);t.PairsObservable=s},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=function(e){function t(t,i,r){e.call(this),this.start=t,this._count=i,this.scheduler=r}return r(t,e),t.create=function(e,i,r){return void 0===e&&(e=0),void 0===i&&(i=0),new t(e,i,r)},t.dispatch=function(e){var t=e.start,i=e.index,r=e.count,n=e.subscriber;if(i>=r)return void n.complete();n.next(t),n.closed||(e.index=i+1,e.start=t+1,this.schedule(e))},t.prototype._subscribe=function(e){var i=0,r=this.start,n=this._count,o=this.scheduler;if(o)return o.schedule(t.dispatch,0,{index:i,count:n,start:r,subscriber:e});for(;;){if(i++>=n){e.complete();break}if(e.next(r++),e.closed)break}},t}(n.Observable);t.RangeObservable=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(155),s=i(26),a=function(e){function t(t,i,r){void 0===i&&(i=0),void 0===r&&(r=o.asap),e.call(this),this.source=t,this.delayTime=i,this.scheduler=r,(!s.isNumeric(i)||i<0)&&(this.delayTime=0),r&&"function"==typeof r.schedule||(this.scheduler=o.asap)}return r(t,e),t.create=function(e,i,r){return void 0===i&&(i=0),void 0===r&&(r=o.asap),new t(e,i,r)},t.dispatch=function(e){var t=e.source,i=e.subscriber;return this.add(t.subscribe(i))},t.prototype._subscribe=function(e){var i=this.delayTime,r=this.source;return this.scheduler.schedule(t.dispatch,i,{source:r,subscriber:e})},t}(n.Observable);t.SubscribeOnObservable=a},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(26),o=i(0),s=i(4),a=i(10),c=i(40),l=function(e){function t(t,i,r){void 0===t&&(t=0),e.call(this),this.period=-1,this.dueTime=0,n.isNumeric(i)?this.period=Number(i)<1&&1||Number(i):a.isScheduler(i)&&(r=i),a.isScheduler(r)||(r=s.async),this.scheduler=r,this.dueTime=c.isDate(t)?+t-this.scheduler.now():t}return r(t,e),t.create=function(e,i,r){return void 0===e&&(e=0),new t(e,i,r)},t.dispatch=function(e){var t=e.index,i=e.period,r=e.subscriber,n=this;if(r.next(t),!r.closed){if(-1===i)return r.complete();e.index=t+1,n.schedule(e,i)}},t.prototype._subscribe=function(e){var i=this,r=i.period,n=i.dueTime;return i.scheduler.schedule(t.dispatch,n,{index:0,period:r,subscriber:e})},t}(o.Observable);t.TimerObservable=l},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(3),s=i(2),a=function(e){function t(t,i){e.call(this),this.resourceFactory=t,this.observableFactory=i}return r(t,e),t.create=function(e,i){return new t(e,i)},t.prototype._subscribe=function(e){var t,i=this,r=i.resourceFactory,n=i.observableFactory;try{return t=r(),new c(e,t,n)}catch(t){e.error(t)}},t}(n.Observable);t.UsingObservable=a;var c=function(e){function t(t,i,r){e.call(this,t),this.resource=i,this.observableFactory=r,t.add(i),this.tryUse()}return r(t,e),t.prototype.tryUse=function(){try{var e=this.observableFactory.call(this,this.resource);e&&this.add(o.subscribeToResult(this,e))}catch(e){this._error(e)}},t}(s.OuterSubscriber)},function(e,t,i){"use strict";var r=i(322);t.bindCallback=r.BoundCallbackObservable.create},function(e,t,i){"use strict";var r=i(323);t.bindNodeCallback=r.BoundNodeCallbackObservable.create},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];var i=null,r=null;return n.isScheduler(e[e.length-1])&&(r=e.pop()),"function"==typeof e[e.length-1]&&(i=e.pop()),1===e.length&&o.isArray(e[0])&&(e=e[0]),new s.ArrayObservable(e,r).lift(new a.CombineLatestOperator(i))}var n=i(10),o=i(11),s=i(12),a=i(31);t.combineLatest=r},function(e,t,i){"use strict";var r=i(324);t.defer=r.DeferObservable.create},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(1),s=i(0),a=i(5),c=i(9),l=i(29),u=i(8),d=i(7),f=i(480),p=function(e){function t(t,i){if(t instanceof s.Observable)e.call(this,i,t);else{if(e.call(this),this.WebSocketCtor=c.root.WebSocket,this._output=new n.Subject,"string"==typeof t?this.url=t:f.assign(this,t),!this.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new l.ReplaySubject}}return r(t,e),t.prototype.resultSelector=function(e){return JSON.parse(e.data)},t.create=function(e){return new t(e)},t.prototype.lift=function(e){var i=new t(this,this.destination);return i.operator=e,i},t.prototype._resetState=function(){this.socket=null,this.source||(this.destination=new l.ReplaySubject),this._output=new n.Subject},t.prototype.multiplex=function(e,t,i){var r=this;return new s.Observable(function(n){var o=u.tryCatch(e)();o===d.errorObject?n.error(d.errorObject.e):r.next(o);var s=r.subscribe(function(e){var t=u.tryCatch(i)(e);t===d.errorObject?n.error(d.errorObject.e):t&&n.next(e)},function(e){return n.error(e)},function(){return n.complete()});return function(){var e=u.tryCatch(t)();e===d.errorObject?n.error(d.errorObject.e):r.next(e),s.unsubscribe()}})},t.prototype._connectSocket=function(){var e=this,t=this.WebSocketCtor,i=this._output,r=null;try{r=this.protocol?new t(this.url,this.protocol):new t(this.url),this.socket=r,this.binaryType&&(this.socket.binaryType=this.binaryType)}catch(e){return void i.error(e)}var n=new a.Subscription(function(){e.socket=null,r&&1===r.readyState&&r.close()});r.onopen=function(t){var s=e.openObserver;s&&s.next(t);var a=e.destination;e.destination=o.Subscriber.create(function(e){return 1===r.readyState&&r.send(e)},function(t){var n=e.closingObserver;n&&n.next(void 0),t&&t.code?r.close(t.code,t.reason):i.error(new TypeError("WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }")),e._resetState()},function(){var t=e.closingObserver;t&&t.next(void 0),r.close(),e._resetState()}),a&&a instanceof l.ReplaySubject&&n.add(a.subscribe(e.destination))},r.onerror=function(t){e._resetState(),i.error(t)},r.onclose=function(t){e._resetState();var r=e.closeObserver;r&&r.next(t),t.wasClean?i.complete():i.error(t)},r.onmessage=function(t){var r=u.tryCatch(e.resultSelector)(t);r===d.errorObject?i.error(d.errorObject.e):i.next(r)}},t.prototype._subscribe=function(e){var t=this,i=this.source;if(i)return i.subscribe(e);this.socket||this._connectSocket();var r=new a.Subscription;return r.add(this._output.subscribe(e)),r.add(function(){var e=t.socket;0===t._output.observers.length&&(e&&1===e.readyState&&e.close(),t._resetState())}),r},t.prototype.unsubscribe=function(){var t=this,i=t.source,r=t.socket;r&&1===r.readyState&&(r.close(),this._resetState()),e.prototype.unsubscribe.call(this),i||(this.destination=new l.ReplaySubject)},t}(n.AnonymousSubject);t.WebSocketSubject=p},function(e,t,i){"use strict";var r=i(71);t.ajax=r.AjaxObservable.create},function(e,t,i){"use strict";var r=i(343);t.webSocket=r.WebSocketSubject.create},function(e,t,i){"use strict";var r=i(13);t.empty=r.EmptyObservable.create},function(e,t,i){"use strict";var r=i(326);t.forkJoin=r.ForkJoinObservable.create},function(e,t,i){"use strict";var r=i(327);t.fromEvent=r.FromEventObservable.create},function(e,t,i){"use strict";var r=i(328);t.fromEventPattern=r.FromEventPatternObservable.create},function(e,t,i){"use strict";var r=i(70);t.fromPromise=r.PromiseObservable.create},function(e,t,i){"use strict";var r=i(329);t.generate=r.GenerateObservable.create},function(e,t,i){"use strict";var r=i(330);t._if=r.IfObservable.create},function(e,t,i){"use strict";var r=i(331);t.interval=r.IntervalObservable.create},function(e,t,i){"use strict";var r=i(333);t.never=r.NeverObservable.create},function(e,t,i){"use strict";var r=i(51);t.onErrorResumeNext=r.onErrorResumeNextStatic},function(e,t,i){"use strict";var r=i(334);t.pairs=r.PairsObservable.create},function(e,t,i){"use strict";var r=i(335);t.range=r.RangeObservable.create},function(e,t,i){"use strict";var r=i(325);t._throw=r.ErrorObservable.create},function(e,t,i){"use strict";var r=i(338);t.using=r.UsingObservable.create},function(e,t,i){"use strict";var r=i(35);t.zip=r.zipStatic},function(e,t,i){"use strict";function r(e){return n.audit(e)(this)}var n=i(44);t.audit=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.auditTime(e,t)(this)}var n=i(4),o=i(76);t.auditTime=r},function(e,t,i){"use strict";function r(e){return n.buffer(e)(this)}var n=i(77);t.buffer=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=null),n.bufferCount(e,t)(this)}var n=i(78);t.bufferCount=r},function(e,t,i){"use strict";function r(e){var t=arguments.length,i=n.async;o.isScheduler(arguments[arguments.length-1])&&(i=arguments[arguments.length-1],t--);var r=null;t>=2&&(r=arguments[1]);var a=Number.POSITIVE_INFINITY;return t>=3&&(a=arguments[2]),s.bufferTime(e,r,a,i)(this)}var n=i(4),o=i(10),s=i(79);t.bufferTime=r},function(e,t,i){"use strict";function r(e,t){return n.bufferToggle(e,t)(this)}var n=i(80);t.bufferToggle=r},function(e,t,i){"use strict";function r(e){return n.bufferWhen(e)(this)}var n=i(81);t.bufferWhen=r},function(e,t,i){"use strict";function r(e){return n.catchError(e)(this)}var n=i(82);t._catch=r},function(e,t,i){"use strict";function r(e){return n.combineAll(e)(this)}var n=i(83);t.combineAll=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.combineLatest.apply(void 0,e)(this)}var n=i(31);t.combineLatest=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.concat.apply(void 0,e)(this)}var n=i(84),o=i(18);t.concatStatic=o.concat,t.concat=r},function(e,t,i){"use strict";function r(){return n.concatAll()(this)}var n=i(45);t.concatAll=r},function(e,t,i){"use strict";function r(e,t){return n.concatMap(e,t)(this)}var n=i(46);t.concatMap=r},function(e,t,i){"use strict";function r(e,t){return n.concatMapTo(e,t)(this)}var n=i(85);t.concatMapTo=r},function(e,t,i){"use strict";function r(e){return n.count(e)(this)}var n=i(86);t.count=r},function(e,t,i){"use strict";function r(e){return n.debounce(e)(this)}var n=i(87);t.debounce=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.debounceTime(e,t)(this)}var n=i(4),o=i(88);t.debounceTime=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=null),n.defaultIfEmpty(e)(this)}var n=i(47);t.defaultIfEmpty=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.delay(e,t)(this)}var n=i(4),o=i(89);t.delay=r},function(e,t,i){"use strict";function r(e,t){return n.delayWhen(e,t)(this)}var n=i(90);t.delayWhen=r},function(e,t,i){"use strict";function r(){return n.dematerialize()(this)}var n=i(91);t.dematerialize=r},function(e,t,i){"use strict";function r(e,t){return n.distinct(e,t)(this)}var n=i(92);t.distinct=r},function(e,t,i){"use strict";function r(e,t){return n.distinctUntilChanged(e,t)(this)}var n=i(48);t.distinctUntilChanged=r},function(e,t,i){"use strict";function r(e,t){return n.distinctUntilKeyChanged(e,t)(this)}var n=i(93);t.distinctUntilKeyChanged=r},function(e,t,i){"use strict";function r(e,t,i){return n.tap(e,t,i)(this)}var n=i(141);t._do=r},function(e,t,i){"use strict";function r(e,t){return n.elementAt(e,t)(this)}var n=i(94);t.elementAt=r},function(e,t,i){"use strict";function r(e,t){return n.every(e,t)(this)}var n=i(95);t.every=r},function(e,t,i){"use strict";function r(){return n.exhaust()(this)}var n=i(96);t.exhaust=r},function(e,t,i){"use strict";function r(e,t){return n.exhaustMap(e,t)(this)}var n=i(97);t.exhaustMap=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===t&&(t=Number.POSITIVE_INFINITY),void 0===i&&(i=void 0),t=(t||0)<1?Number.POSITIVE_INFINITY:t,n.expand(e,t,i)(this)}var n=i(98);t.expand=r},function(e,t,i){"use strict";function r(e,t){return n.filter(e,t)(this)}var n=i(49);t.filter=r},function(e,t,i){"use strict";function r(e){return n.finalize(e)(this)}var n=i(99);t._finally=r},function(e,t,i){"use strict";function r(e,t){return n.find(e,t)(this)}var n=i(50);t.find=r},function(e,t,i){"use strict";function r(e,t){return n.findIndex(e,t)(this)}var n=i(100);t.findIndex=r},function(e,t,i){"use strict";function r(e,t,i){return n.first(e,t,i)(this)}var n=i(101);t.first=r},function(e,t,i){"use strict";function r(e,t,i,r){return n.groupBy(e,t,i,r)(this)}var n=i(102);t.GroupedObservable=n.GroupedObservable,t.groupBy=r},function(e,t,i){"use strict";function r(){return n.ignoreElements()(this)}var n=i(103);t.ignoreElements=r},function(e,t,i){"use strict";function r(){return n.isEmpty()(this)}var n=i(104);t.isEmpty=r},function(e,t,i){"use strict";function r(e,t,i){return n.last(e,t,i)(this)}var n=i(105);t.last=r},function(e,t,i){"use strict";function r(e){return e(this)}t.letProto=r},function(e,t,i){"use strict";function r(e,t){return n.map(e,t)(this)}var n=i(19);t.map=r},function(e,t,i){"use strict";function r(e){return n.mapTo(e)(this)}var n=i(106);t.mapTo=r},function(e,t,i){"use strict";function r(){return n.materialize()(this)}var n=i(107);t.materialize=r},function(e,t,i){"use strict";function r(e){return n.max(e)(this)}var n=i(108);t.max=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.merge.apply(void 0,e)(this)}var n=i(109),o=i(30);t.mergeStatic=o.merge,t.merge=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=Number.POSITIVE_INFINITY),n.mergeAll(e)(this)}var n=i(32);t.mergeAll=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),n.mergeMap(e,t,i)(this)}var n=i(20);t.mergeMap=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),n.mergeMapTo(e,t,i)(this)}var n=i(110);t.mergeMapTo=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),n.mergeScan(e,t,i)(this)}var n=i(111);t.mergeScan=r},function(e,t,i){"use strict";function r(e){return n.min(e)(this)}var n=i(112);t.min=r},function(e,t,i){"use strict";function r(e,t){return n.multicast(e,t)(this)}var n=i(15);t.multicast=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),n.observeOn(e,t)(this)}var n=i(33);t.observeOn=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.onErrorResumeNext.apply(void 0,e)(this)}var n=i(51);t.onErrorResumeNext=r},function(e,t,i){"use strict";function r(){return n.pairwise()(this)}var n=i(113);t.pairwise=r},function(e,t,i){"use strict";function r(e,t){return n.partition(e,t)(this)}var n=i(114);t.partition=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.pluck.apply(void 0,e)(this)}var n=i(115);t.pluck=r},function(e,t,i){"use strict";function r(e){return n.publish(e)(this)}var n=i(116);t.publish=r},function(e,t,i){"use strict";function r(e){return n.publishBehavior(e)(this)}var n=i(117);t.publishBehavior=r},function(e,t,i){"use strict";function r(){return n.publishLast()(this)}var n=i(118);t.publishLast=r},function(e,t,i){"use strict";function r(e,t,i,r){return n.publishReplay(e,t,i,r)(this)}var n=i(119);t.publishReplay=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.race.apply(void 0,e)(this)}var n=i(120),o=i(43);t.raceStatic=o.race,t.race=r},function(e,t,i){"use strict";function r(e,t){return arguments.length>=2?n.reduce(e,t)(this):n.reduce(e)(this)}var n=i(21);t.reduce=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=-1),n.repeat(e)(this)}var n=i(121);t.repeat=r},function(e,t,i){"use strict";function r(e){return n.repeatWhen(e)(this)}var n=i(122);t.repeatWhen=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=-1),n.retry(e)(this)}var n=i(123);t.retry=r},function(e,t,i){"use strict";function r(e){return n.retryWhen(e)(this)}var n=i(124);t.retryWhen=r},function(e,t,i){"use strict";function r(e){return n.sample(e)(this)}var n=i(125);t.sample=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.sampleTime(e,t)(this)}var n=i(4),o=i(126);t.sampleTime=r},function(e,t,i){"use strict";function r(e,t){return arguments.length>=2?n.scan(e,t)(this):n.scan(e)(this)}var n=i(53);t.scan=r},function(e,t,i){"use strict";function r(e,t){return n.sequenceEqual(e,t)(this)}var n=i(127);t.sequenceEqual=r},function(e,t,i){"use strict";function r(){return n.share()(this)}var n=i(128);t.share=r},function(e,t,i){"use strict";function r(e,t,i){return n.shareReplay(e,t,i)(this)}var n=i(129);t.shareReplay=r},function(e,t,i){"use strict";function r(e){return n.single(e)(this)}var n=i(130);t.single=r},function(e,t,i){"use strict";function r(e){return n.skip(e)(this)}var n=i(131);t.skip=r},function(e,t,i){"use strict";function r(e){return n.skipLast(e)(this)}var n=i(132);t.skipLast=r},function(e,t,i){"use strict";function r(e){return n.skipUntil(e)(this)}var n=i(133);t.skipUntil=r},function(e,t,i){"use strict";function r(e){return n.skipWhile(e)(this)}var n=i(134);t.skipWhile=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.startWith.apply(void 0,e)(this)}var n=i(135);t.startWith=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),n.subscribeOn(e,t)(this)}var n=i(462);t.subscribeOn=r},function(e,t,i){"use strict";function r(){return n.switchAll()(this)}var n=i(136);t._switch=r},function(e,t,i){"use strict";function r(e,t){return n.switchMap(e,t)(this)}var n=i(54);t.switchMap=r},function(e,t,i){"use strict";function r(e,t){return n.switchMapTo(e,t)(this)}var n=i(137);t.switchMapTo=r},function(e,t,i){"use strict";function r(e){return n.take(e)(this)}var n=i(138);t.take=r},function(e,t,i){"use strict";function r(e){return n.takeLast(e)(this)}var n=i(55);t.takeLast=r},function(e,t,i){"use strict";function r(e){return n.takeUntil(e)(this)}var n=i(139);t.takeUntil=r},function(e,t,i){"use strict";function r(e){return n.takeWhile(e)(this)}var n=i(140);t.takeWhile=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.defaultThrottleConfig),n.throttle(e,t)(this)}var n=i(34);t.throttle=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===t&&(t=n.async),void 0===i&&(i=o.defaultThrottleConfig),s.throttleTime(e,t,i)(this)}var n=i(4),o=i(34),s=i(142);t.throttleTime=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=n.async),o.timeout(e,t)(this)}var n=i(4),o=i(144);t.timeout=r},function(e,t,i){"use strict";function r(e,t,i){return void 0===i&&(i=n.async),o.timeoutWith(e,t,i)(this)}var n=i(4),o=i(145);t.timeoutWith=r},function(e,t,i){"use strict";function r(e){return void 0===e&&(e=n.async),o.timestamp(e)(this)}var n=i(4),o=i(56);t.timestamp=r},function(e,t,i){"use strict";function r(){return n.toArray()(this)}var n=i(146);t.toArray=r},function(e,t,i){"use strict";function r(e){return n.window(e)(this)}var n=i(147);t.window=r},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),n.windowCount(e,t)(this)}var n=i(148);t.windowCount=r},function(e,t,i){"use strict";function r(e){var t=n.async,i=null,r=Number.POSITIVE_INFINITY;return s.isScheduler(arguments[3])&&(t=arguments[3]),s.isScheduler(arguments[2])?t=arguments[2]:o.isNumeric(arguments[2])&&(r=arguments[2]),s.isScheduler(arguments[1])?t=arguments[1]:o.isNumeric(arguments[1])&&(i=arguments[1]),a.windowTime(e,i,r,t)(this)}var n=i(4),o=i(26),s=i(10),a=i(149);t.windowTime=r},function(e,t,i){"use strict";function r(e,t){return n.windowToggle(e,t)(this)}var n=i(150);t.windowToggle=r},function(e,t,i){"use strict";function r(e){return n.windowWhen(e)(this)}var n=i(151);t.windowWhen=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.withLatestFrom.apply(void 0,e)(this)}var n=i(152);t.withLatestFrom=r},function(e,t,i){"use strict";function r(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return n.zip.apply(void 0,e)(this)}var n=i(35);t.zipProto=r},function(e,t,i){"use strict";function r(e){return n.zipAll(e)(this)}var n=i(153);t.zipAll=r},function(e,t,i){"use strict";var r=i(44);t.audit=r.audit;var n=i(76);t.auditTime=n.auditTime;var o=i(77);t.buffer=o.buffer;var s=i(78);t.bufferCount=s.bufferCount;var a=i(79);t.bufferTime=a.bufferTime;var c=i(80);t.bufferToggle=c.bufferToggle;var l=i(81);t.bufferWhen=l.bufferWhen;var u=i(82);t.catchError=u.catchError;var d=i(83);t.combineAll=d.combineAll;var f=i(31);t.combineLatest=f.combineLatest;var p=i(84);t.concat=p.concat;var h=i(45);t.concatAll=h.concatAll;var g=i(46);t.concatMap=g.concatMap;var y=i(85);t.concatMapTo=y.concatMapTo;var v=i(86);t.count=v.count;var m=i(87);t.debounce=m.debounce;var b=i(88);t.debounceTime=b.debounceTime;var w=i(47);t.defaultIfEmpty=w.defaultIfEmpty;var S=i(89);t.delay=S.delay;var C=i(90);t.delayWhen=C.delayWhen;var P=i(91);t.dematerialize=P.dematerialize;var O=i(92);t.distinct=O.distinct;var D=i(48);t.distinctUntilChanged=D.distinctUntilChanged;var I=i(93);t.distinctUntilKeyChanged=I.distinctUntilKeyChanged;var _=i(94);t.elementAt=_.elementAt;var T=i(95);t.every=T.every;var $=i(96);t.exhaust=$.exhaust;var A=i(97);t.exhaustMap=A.exhaustMap;var x=i(98);t.expand=x.expand;var E=i(49);t.filter=E.filter;var k=i(99);t.finalize=k.finalize;var j=i(50);t.find=j.find;var F=i(100);t.findIndex=F.findIndex;var L=i(101);t.first=L.first;var R=i(102);t.groupBy=R.groupBy;var N=i(103);t.ignoreElements=N.ignoreElements;var B=i(104);t.isEmpty=B.isEmpty;var M=i(105);t.last=M.last;var U=i(19);t.map=U.map;var W=i(106);t.mapTo=W.mapTo;var V=i(107);t.materialize=V.materialize;var q=i(108);t.max=q.max;var G=i(109);t.merge=G.merge;var K=i(32);t.mergeAll=K.mergeAll;var H=i(20);t.mergeMap=H.mergeMap;var J=i(20);t.flatMap=J.mergeMap;var z=i(110);t.mergeMapTo=z.mergeMapTo;var Y=i(111);t.mergeScan=Y.mergeScan;var Q=i(112);t.min=Q.min;var X=i(15);t.multicast=X.multicast;var Z=i(33);t.observeOn=Z.observeOn;var ee=i(51);t.onErrorResumeNext=ee.onErrorResumeNext;var te=i(113);t.pairwise=te.pairwise;var ie=i(114);t.partition=ie.partition;var re=i(115);t.pluck=re.pluck;var ne=i(116);t.publish=ne.publish;var oe=i(117);t.publishBehavior=oe.publishBehavior;var se=i(118);t.publishLast=se.publishLast;var ae=i(119);t.publishReplay=ae.publishReplay;var ce=i(120);t.race=ce.race;var le=i(21);t.reduce=le.reduce;var ue=i(121);t.repeat=ue.repeat;var de=i(122);t.repeatWhen=de.repeatWhen;var fe=i(123);t.retry=fe.retry;var pe=i(124);t.retryWhen=pe.retryWhen;var he=i(52);t.refCount=he.refCount;var ge=i(125);t.sample=ge.sample;var ye=i(126);t.sampleTime=ye.sampleTime;var ve=i(53);t.scan=ve.scan;var me=i(127);t.sequenceEqual=me.sequenceEqual;var be=i(128);t.share=be.share;var we=i(129);t.shareReplay=we.shareReplay;var Se=i(130);t.single=Se.single;var Ce=i(131);t.skip=Ce.skip;var Pe=i(132);t.skipLast=Pe.skipLast;var Oe=i(133);t.skipUntil=Oe.skipUntil;var De=i(134);t.skipWhile=De.skipWhile;var Ie=i(135);t.startWith=Ie.startWith;var _e=i(136);t.switchAll=_e.switchAll;var Te=i(54);t.switchMap=Te.switchMap;var $e=i(137);t.switchMapTo=$e.switchMapTo;var Ae=i(138);t.take=Ae.take;var xe=i(55);t.takeLast=xe.takeLast;var Ee=i(139);t.takeUntil=Ee.takeUntil;var ke=i(140);t.takeWhile=ke.takeWhile;var je=i(141);t.tap=je.tap;var Fe=i(34);t.throttle=Fe.throttle;var Le=i(142);t.throttleTime=Le.throttleTime;var Re=i(143);t.timeInterval=Re.timeInterval;var Ne=i(144);t.timeout=Ne.timeout;var Be=i(145);t.timeoutWith=Be.timeoutWith;var Me=i(56);t.timestamp=Me.timestamp;var Ue=i(146);t.toArray=Ue.toArray;var We=i(147);t.window=We.window;var Ve=i(148);t.windowCount=Ve.windowCount;var qe=i(149);t.windowTime=qe.windowTime;var Ge=i(150);t.windowToggle=Ge.windowToggle;var Ke=i(151);t.windowWhen=Ke.windowWhen;var He=i(152);t.withLatestFrom=He.withLatestFrom;var Je=i(35);t.zip=Je.zip;var ze=i(153);t.zipAll=ze.zipAll},function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=0),function(i){return i.lift(new o(e,t))}}var n=i(336);t.subscribeOn=r;var o=function(){function e(e,t){this.scheduler=e,this.delay=t}return e.prototype.call=function(e,t){return new n.SubscribeOnObservable(t,this.delay,this.scheduler).subscribe(e)},e}()},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(5),o=function(e){function t(t,i){e.call(this)}return r(t,e),t.prototype.schedule=function(e,t){return void 0===t&&(t=0),this},t}(n.Subscription);t.Action=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(22),o=i(474),s=function(e){function t(t,i){e.call(this,t,i),this.scheduler=t,this.work=i}return r(t,e),t.prototype.requestAsyncId=function(t,i,r){return void 0===r&&(r=0),null!==r&&r>0?e.prototype.requestAsyncId.call(this,t,i,r):(t.actions.push(this),t.scheduled||(t.scheduled=o.AnimationFrame.requestAnimationFrame(t.flush.bind(t,null))))},t.prototype.recycleAsyncId=function(t,i,r){if(void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,i,r);0===t.actions.length&&(o.AnimationFrame.cancelAnimationFrame(i),t.scheduled=void 0)},t}(n.AsyncAction);t.AnimationFrameAction=s},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(23),o=function(e){function t(){e.apply(this,arguments)}return r(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,i=this.actions,r=-1,n=i.length;e=e||i.shift();do{if(t=e.execute(e.state,e.delay))break}while(++r<n&&(e=i.shift()));if(this.active=!1,t){for(;++r<n&&(e=i.shift());)e.unsubscribe();throw t}},t}(n.AsyncScheduler);t.AnimationFrameScheduler=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(476),o=i(22),s=function(e){function t(t,i){e.call(this,t,i),this.scheduler=t,this.work=i}return r(t,e),t.prototype.requestAsyncId=function(t,i,r){return void 0===r&&(r=0),null!==r&&r>0?e.prototype.requestAsyncId.call(this,t,i,r):(t.actions.push(this),t.scheduled||(t.scheduled=n.Immediate.setImmediate(t.flush.bind(t,null))))},t.prototype.recycleAsyncId=function(t,i,r){if(void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,i,r);0===t.actions.length&&(n.Immediate.clearImmediate(i),t.scheduled=void 0)},t}(o.AsyncAction);t.AsapAction=s},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(23),o=function(e){function t(){e.apply(this,arguments)}return r(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,i=this.actions,r=-1,n=i.length;e=e||i.shift();do{if(t=e.execute(e.state,e.delay))break}while(++r<n&&(e=i.shift()));if(this.active=!1,t){for(;++r<n&&(e=i.shift());)e.unsubscribe();throw t}},t}(n.AsyncScheduler);t.AsapScheduler=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(22),o=function(e){function t(t,i){e.call(this,t,i),this.scheduler=t,this.work=i}return r(t,e),t.prototype.schedule=function(t,i){return void 0===i&&(i=0),i>0?e.prototype.schedule.call(this,t,i):(this.delay=i,this.state=t,this.scheduler.flush(this),this)},t.prototype.execute=function(t,i){return i>0||this.closed?e.prototype.execute.call(this,t,i):this._execute(t,i)},t.prototype.requestAsyncId=function(t,i,r){return void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0?e.prototype.requestAsyncId.call(this,t,i,r):t.flush(this)},t}(n.AsyncAction);t.QueueAction=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(23),o=function(e){function t(){e.apply(this,arguments)}return r(t,e),t}(n.AsyncScheduler);t.QueueScheduler=o},function(e,t,i){"use strict";var r=i(464),n=i(465);t.animationFrame=new n.AnimationFrameScheduler(r.AnimationFrameAction)},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(5),s=i(158),a=i(161),c=function(e){function t(t,i){e.call(this,function(e){var t=this,i=t.logSubscribedFrame();return e.add(new o.Subscription(function(){t.logUnsubscribedFrame(i)})),t.scheduleMessages(e),e}),this.messages=t,this.subscriptions=[],this.scheduler=i}return r(t,e),t.prototype.scheduleMessages=function(e){for(var t=this.messages.length,i=0;i<t;i++){var r=this.messages[i];e.add(this.scheduler.schedule(function(e){var t=e.message,i=e.subscriber;t.notification.observe(i)},r.frame,{message:r,subscriber:e}))}},t}(n.Observable);t.ColdObservable=c,a.applyMixins(c,[s.SubscriptionLoggable])},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(6),o=i(5),s=i(158),a=i(161),c=function(e){function t(t,i){e.call(this),this.messages=t,this.subscriptions=[],this.scheduler=i}return r(t,e),t.prototype._subscribe=function(t){var i=this,r=i.logSubscribedFrame();return t.add(new o.Subscription(function(){i.logUnsubscribedFrame(r)})),e.prototype._subscribe.call(this,t)},t.prototype.setup=function(){for(var e=this,t=e.messages.length,i=0;i<t;i++)!function(){var t=e.messages[i];e.scheduler.schedule(function(){t.notification.observe(e)},t.frame)}()},t}(n.Subject);t.HotObservable=c,a.applyMixins(c,[s.SubscriptionLoggable])},function(e,t,i){"use strict";var r=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},n=i(0),o=i(17),s=i(471),a=i(472),c=i(157),l=i(154),u=750,d=function(e){function t(t){e.call(this,l.VirtualAction,u),this.assertDeepEqual=t,this.hotObservables=[],this.coldObservables=[],this.flushTests=[]}return r(t,e),t.prototype.createTime=function(e){var i=e.indexOf("|");if(-1===i)throw new Error('marble diagram for time should have a completion marker "|"');return i*t.frameTimeFactor},t.prototype.createColdObservable=function(e,i,r){if(-1!==e.indexOf("^"))throw new Error('cold observable cannot have subscription offset "^"');if(-1!==e.indexOf("!"))throw new Error('cold observable cannot have unsubscription marker "!"');var n=t.parseMarbles(e,i,r),o=new s.ColdObservable(n,this);return this.coldObservables.push(o),o},t.prototype.createHotObservable=function(e,i,r){if(-1!==e.indexOf("!"))throw new Error('hot observable cannot have unsubscription marker "!"');var n=t.parseMarbles(e,i,r),o=new a.HotObservable(n,this);return this.hotObservables.push(o),o},t.prototype.materializeInnerObservable=function(e,t){var i=this,r=[];return e.subscribe(function(e){r.push({frame:i.frame-t,notification:o.Notification.createNext(e)})},function(e){r.push({frame:i.frame-t,notification:o.Notification.createError(e)})},function(){r.push({frame:i.frame-t,notification:o.Notification.createComplete()})}),r},t.prototype.expectObservable=function(e,i){var r=this;void 0===i&&(i=null);var s,a=[],c={actual:a,ready:!1},l=t.parseMarblesAsSubscriptions(i).unsubscribedFrame;return this.schedule(function(){s=e.subscribe(function(e){var t=e;e instanceof n.Observable&&(t=r.materializeInnerObservable(t,r.frame)),a.push({frame:r.frame,notification:o.Notification.createNext(t)})},function(e){a.push({frame:r.frame,notification:o.Notification.createError(e)})},function(){a.push({frame:r.frame,notification:o.Notification.createComplete()})})},0),l!==Number.POSITIVE_INFINITY&&this.schedule(function(){return s.unsubscribe()},l),this.flushTests.push(c),{toBe:function(e,i,r){c.ready=!0,c.expected=t.parseMarbles(e,i,r,!0)}}},t.prototype.expectSubscriptions=function(e){var i={actual:e,ready:!1};return this.flushTests.push(i),{toBe:function(e){var r="string"==typeof e?[e]:e;i.ready=!0,i.expected=r.map(function(e){return t.parseMarblesAsSubscriptions(e)})}}},t.prototype.flush=function(){for(var t=this.hotObservables;t.length>0;)t.shift().setup();e.prototype.flush.call(this);for(var i=this.flushTests.filter(function(e){return e.ready});i.length>0;){var r=i.shift();this.assertDeepEqual(r.actual,r.expected)}},t.parseMarblesAsSubscriptions=function(e){if("string"!=typeof e)return new c.SubscriptionLog(Number.POSITIVE_INFINITY);for(var t=e.length,i=-1,r=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,o=0;o<t;o++){var s=o*this.frameTimeFactor,a=e[o];switch(a){case"-":case" ":break;case"(":i=s;break;case")":i=-1;break;case"^":if(r!==Number.POSITIVE_INFINITY)throw new Error("found a second subscription point '^' in a subscription marble diagram. There can only be one.");r=i>-1?i:s;break;case"!":if(n!==Number.POSITIVE_INFINITY)throw new Error("found a second subscription point '^' in a subscription marble diagram. There can only be one.");n=i>-1?i:s;break;default:throw new Error("there can only be '^' and '!' markers in a subscription marble diagram. Found instead '"+a+"'.")}}return n<0?new c.SubscriptionLog(r):new c.SubscriptionLog(r,n)},t.parseMarbles=function(e,t,i,r){if(void 0===r&&(r=!1),-1!==e.indexOf("!"))throw new Error('conventional marble diagrams cannot have the unsubscription marker "!"');for(var n=e.length,a=[],c=e.indexOf("^"),l=-1===c?0:c*-this.frameTimeFactor,u="object"!=typeof t?function(e){return e}:function(e){return r&&t[e]instanceof s.ColdObservable?t[e].messages:t[e]},d=-1,f=0;f<n;f++){var p=f*this.frameTimeFactor+l,h=void 0,g=e[f];switch(g){case"-":case" ":break;case"(":d=p;break;case")":d=-1;break;case"|":h=o.Notification.createComplete();break;case"^":break;case"#":h=o.Notification.createError(i||"error");break;default:h=o.Notification.createNext(u(g))}h&&a.push({frame:d>-1?d:p,notification:h})}return a},t}(l.VirtualTimeScheduler);t.TestScheduler=d},function(e,t,i){"use strict";var r=i(9),n=function(){function e(e){e.requestAnimationFrame?(this.cancelAnimationFrame=e.cancelAnimationFrame.bind(e),this.requestAnimationFrame=e.requestAnimationFrame.bind(e)):e.mozRequestAnimationFrame?(this.cancelAnimationFrame=e.mozCancelAnimationFrame.bind(e),this.requestAnimationFrame=e.mozRequestAnimationFrame.bind(e)):e.webkitRequestAnimationFrame?(this.cancelAnimationFrame=e.webkitCancelAnimationFrame.bind(e),this.requestAnimationFrame=e.webkitRequestAnimationFrame.bind(e)):e.msRequestAnimationFrame?(this.cancelAnimationFrame=e.msCancelAnimationFrame.bind(e),this.requestAnimationFrame=e.msRequestAnimationFrame.bind(e)):e.oRequestAnimationFrame?(this.cancelAnimationFrame=e.oCancelAnimationFrame.bind(e),this.requestAnimationFrame=e.oRequestAnimationFrame.bind(e)):(this.cancelAnimationFrame=e.clearTimeout.bind(e),this.requestAnimationFrame=function(t){return e.setTimeout(t,1e3/60)})}return e}();t.RequestAnimationFrameDefinition=n,t.AnimationFrame=new n(r.root)},function(e,t,i){"use strict";var r=function(){function e(){this.values={}}return e.prototype.delete=function(e){return this.values[e]=null,!0},e.prototype.set=function(e,t){return this.values[e]=t,this},e.prototype.get=function(e){return this.values[e]},e.prototype.forEach=function(e,t){var i=this.values;for(var r in i)i.hasOwnProperty(r)&&null!==i[r]&&e.call(t,i[r],r)},e.prototype.clear=function(){this.values={}},e}();t.FastMap=r},function(e,t,i){"use strict";(function(e,r){var n=i(9),o=function(){function e(e){if(this.root=e,e.setImmediate&&"function"==typeof e.setImmediate)this.setImmediate=e.setImmediate.bind(e),this.clearImmediate=e.clearImmediate.bind(e);else{this.nextHandle=1,this.tasksByHandle={},this.currentlyRunningATask=!1,this.canUseProcessNextTick()?this.setImmediate=this.createProcessNextTickSetImmediate():this.canUsePostMessage()?this.setImmediate=this.createPostMessageSetImmediate():this.canUseMessageChannel()?this.setImmediate=this.createMessageChannelSetImmediate():this.canUseReadyStateChange()?this.setImmediate=this.createReadyStateChangeSetImmediate():this.setImmediate=this.createSetTimeoutSetImmediate();var t=function e(t){delete e.instance.tasksByHandle[t]};t.instance=this,this.clearImmediate=t}}return e.prototype.identify=function(e){return this.root.Object.prototype.toString.call(e)},e.prototype.canUseProcessNextTick=function(){return"[object process]"===this.identify(this.root.process)},e.prototype.canUseMessageChannel=function(){return Boolean(this.root.MessageChannel)},e.prototype.canUseReadyStateChange=function(){var e=this.root.document;return Boolean(e&&"onreadystatechange"in e.createElement("script"))},e.prototype.canUsePostMessage=function(){var e=this.root;if(e.postMessage&&!e.importScripts){var t=!0,i=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=i,t}return!1},e.prototype.partiallyApplied=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var r=function e(){var t=e,i=t.handler,r=t.args;"function"==typeof i?i.apply(void 0,r):new Function(""+i)()};return r.handler=e,r.args=t,r},e.prototype.addFromSetImmediateArguments=function(e){return this.tasksByHandle[this.nextHandle]=this.partiallyApplied.apply(void 0,e),this.nextHandle++},e.prototype.createProcessNextTickSetImmediate=function(){var e=function e(){var t=e.instance,i=t.addFromSetImmediateArguments(arguments);return t.root.process.nextTick(t.partiallyApplied(t.runIfPresent,i)),i};return e.instance=this,e},e.prototype.createPostMessageSetImmediate=function(){var e=this.root,t="setImmediate$"+e.Math.random()+"$",i=function i(r){var n=i.instance;r.source===e&&"string"==typeof r.data&&0===r.data.indexOf(t)&&n.runIfPresent(+r.data.slice(t.length))};i.instance=this,e.addEventListener("message",i,!1);var r=function e(){var t=e,i=t.messagePrefix,r=t.instance,n=r.addFromSetImmediateArguments(arguments);return r.root.postMessage(i+n,"*"),n};return r.instance=this,r.messagePrefix=t,r},e.prototype.runIfPresent=function(e){if(this.currentlyRunningATask)this.root.setTimeout(this.partiallyApplied(this.runIfPresent,e),0);else{var t=this.tasksByHandle[e];if(t){this.currentlyRunningATask=!0;try{t()}finally{this.clearImmediate(e),this.currentlyRunningATask=!1}}}},e.prototype.createMessageChannelSetImmediate=function(){var e=this,t=new this.root.MessageChannel;t.port1.onmessage=function(t){var i=t.data;e.runIfPresent(i)};var i=function e(){var t=e,i=t.channel,r=t.instance,n=r.addFromSetImmediateArguments(arguments);return i.port2.postMessage(n),n};return i.channel=t,i.instance=this,i},e.prototype.createReadyStateChangeSetImmediate=function(){var e=function e(){var t=e.instance,i=t.root,r=i.document,n=r.documentElement,o=t.addFromSetImmediateArguments(arguments),s=r.createElement("script");return s.onreadystatechange=function(){t.runIfPresent(o),s.onreadystatechange=null,n.removeChild(s),s=null},n.appendChild(s),o};return e.instance=this,e},e.prototype.createSetTimeoutSetImmediate=function(){var e=function e(){var t=e.instance,i=t.addFromSetImmediateArguments(arguments);return t.root.setTimeout(t.partiallyApplied(t.runIfPresent,i),0),i};return e.instance=this,e},e}();t.ImmediateDefinition=o,t.Immediate=new o(n.root)}).call(t,i(166).clearImmediate,i(166).setImmediate)},function(e,t,i){"use strict";var r=i(9),n=i(478);t.Map=r.root.Map||function(){return n.MapPolyfill}()},function(e,t,i){"use strict";var r=function(){function e(){this.size=0,this._values=[],this._keys=[]}return e.prototype.get=function(e){var t=this._keys.indexOf(e);return-1===t?void 0:this._values[t]},e.prototype.set=function(e,t){var i=this._keys.indexOf(e);return-1===i?(this._keys.push(e),this._values.push(t),this.size++):this._values[i]=t,this},e.prototype.delete=function(e){var t=this._keys.indexOf(e);return-1!==t&&(this._values.splice(t,1),this._keys.splice(t,1),this.size--,!0)},e.prototype.clear=function(){this._keys.length=0,this._values.length=0,this.size=0},e.prototype.forEach=function(e,t){for(var i=0;i<this.size;i++)e.call(t,this._values[i],this._keys[i])},e}();t.MapPolyfill=r},function(e,t,i){"use strict";function r(){return function(){function e(){this._values=[]}return e.prototype.add=function(e){this.has(e)||this._values.push(e)},e.prototype.has=function(e){return-1!==this._values.indexOf(e)},Object.defineProperty(e.prototype,"size",{get:function(){return this._values.length},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this._values.length=0},e}()}var n=i(9);t.minimalSetImpl=r,t.Set=n.root.Set||r()},function(e,t,i){"use strict";function r(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];for(var r=t.length,n=0;n<r;n++){var o=t[n];for(var s in o)o.hasOwnProperty(s)&&(e[s]=o[s])}return e}function n(e){return e.Object.assign||r}var o=i(9);t.assignImpl=r,t.getAssign=n,t.assign=n(o.root)},function(e,t,i){"use strict";function r(e,t){function i(){return!i.pred.apply(i.thisArg,arguments)}return i.pred=e,i.thisArg=t,i}t.not=r},function(e,t,i){"use strict";function r(e,t,i){if(e){if(e instanceof n.Subscriber)return e;if(e[o.rxSubscriber])return e[o.rxSubscriber]()}return e||t||i?new n.Subscriber(e,t,i):new n.Subscriber(s.empty)}var n=i(1),o=i(37),s=i(66);t.toSubscriber=r},function(e,t,i){(function(e,t){!function(e,i){"use strict";function r(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),i=0;i<t.length;i++)t[i]=arguments[i+1];var r={callback:e,args:t};return l[c]=r,a(c),c++}function n(e){delete l[e]}function o(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(i,r)}}function s(e){if(u)setTimeout(s,0,e);else{var t=l[e];if(t){u=!0;try{o(t)}finally{n(e),u=!1}}}}if(!e.setImmediate){var a,c=1,l={},u=!1,d=e.document,f=Object.getPrototypeOf&&Object.getPrototypeOf(e);f=f&&f.setTimeout?f:e,"[object process]"==={}.toString.call(e.process)?function(){a=function(e){t.nextTick(function(){s(e)})}}():function(){if(e.postMessage&&!e.importScripts){var t=!0,i=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=i,t}}()?function(){var t="setImmediate$"+Math.random()+"$",i=function(i){i.source===e&&"string"==typeof i.data&&0===i.data.indexOf(t)&&s(+i.data.slice(t.length))};e.addEventListener?e.addEventListener("message",i,!1):e.attachEvent("onmessage",i),a=function(i){e.postMessage(t+i,"*")}}():e.MessageChannel?function(){var e=new MessageChannel;e.port1.onmessage=function(e){s(e.data)},a=function(t){e.port2.postMessage(t)}}():d&&"onreadystatechange"in d.createElement("script")?function(){var e=d.documentElement;a=function(t){var i=d.createElement("script");i.onreadystatechange=function(){s(t),i.onreadystatechange=null,e.removeChild(i),i=null},e.appendChild(i)}}():function(){a=function(e){setTimeout(s,0,e)}}(),f.setImmediate=r,f.clearImmediate=n}}("undefined"==typeof self?void 0===e?this:e:self)}).call(t,i(62),i(188))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){e.$id="alertController",e.alerts=t.getAlerts()}return e}();t.AlertController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){this.fade=!1,this.dismissable=!1,this.msg=e,this.type=t,this.fade=i,this.dismissable=r}return e}();t.Alert=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(485),n=function(){function e(e,t){var i=this;this.$timeout=e,this.alerts=t,this.newAlert=function(){return new r.Alert},this.get=function(){return i.alerts||[]},this.addAlert=function(e){i.alerts.push(e),i.$timeout(function(){e.dismissable||i.removeAlert(e)},3500)},this.addAlerts=function(e){angular.forEach(e,function(e){i.addAlert(e)})},this.removeAlert=function(e){var t=i.alerts.indexOf(e,0);void 0!=t&&i.alerts.splice(t,1)},this.getAlerts=function(){return i.alerts},this.formatMessagesToAlerts=function(e){var t=[];if(e&&e.length)for(var n in e){var o=new r.Alert(e[n].message,e[n].messageType);t.push(o),"success"===o.type||"error"===o.type?(i.$timeout(function(){o.fade=!0},3500),o.dismissable=!1):(o.fade=!1,o.dismissable=!0)}return t},this.removeOldestAlert=function(){i.alerts.splice(0,1)},this.alerts=[]}return e.$inject=["$timeout"],e}();t.AlertService=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(16),n=i(64),o=function(){function e(e){var t=this;return this._resourceBundle={},this.getInstantiationKey=function(e){return t.$q(function(i,r){hibachiConfig.instantiationKey?i(hibachiConfig.instantiationKey):t.$http.get(e+"?"+hibachiConfig.action+"=api:main.getInstantiationKey").then(function(e){return i(e.data.data.instantiationKey)})})},this.getData=function(e){var i={};for(var r in e){var n=e[r],o=n.charAt(0).toUpperCase()+n.slice(1);i[n]=t["get"+o+"Data"]()}return t.$q.all(i)},this.getAttributeCacheKeyData=function(){var e="";return hibachiConfig||(hibachiConfig={}),hibachiConfig.baseURL||(hibachiConfig.baseURL=""),e+=hibachiConfig.baseURL,e.length&&"/"!==e.slice(-1)&&(e+="/"),t.$http.get(e+"?"+hibachiConfig.action+"=api:main.getAttributeModel").then(function(e){r.coremodule.constant("attributeMetaData",e.data.data);try{localStorage.setItem("attributeMetaData",JSON.stringify(e.data.data)),localStorage.setItem("attributeChecksum",n(JSON.stringify(e.data.data)))}catch(e){}t.attributeMetaData=e.data.data})},this.getInstantiationKeyData=function(){if(!t.instantiationKey){var e=new Date,i=e.getTime();t.instantiationKey=i.toString()}var n="";return hibachiConfig||(hibachiConfig={}),hibachiConfig.baseURL||(hibachiConfig.baseURL=""),n+=hibachiConfig.baseURL,hibachiConfig.baseURL.length&&"/"!=hibachiConfig.baseURL.charAt(hibachiConfig.baseURL.length-1)&&(n+="/"),t.$http.get(n+"/custom/config/config.json?instantiationKey="+t.instantiationKey).then(function(e){var i=e.data.data;hibachiConfig.baseURL.length&&(i.baseURL=n),r.coremodule.constant("appConfig",e.data.data);try{localStorage.setItem("appConfig",JSON.stringify(e.data.data))}catch(e){}return t.appConfig=i,t.getResourceBundles()})},this.getResourceBundle=function(e){var i=t.$q.defer(),e=e||t.appConfig.rbLocale;if(t._resourceBundle[e])return t._resourceBundle[e];var r=t.appConfig.baseURL+"/custom/config/resourceBundles/"+e+".json?instantiationKey="+t.appConfig.instantiationKey;return t.$http({url:r,method:"GET"}).success(function(r,n,o){t._resourceBundle[e]=r,i.resolve(r)}).error(function(r,n){404===n?(t._resourceBundle[e]={},i.resolve(r)):i.reject(r)}),i.promise},this.getResourceBundles=function(){var e,i=t.appConfig.rbLocale.split("_"),n=[];return e=t.getResourceBundle(t.appConfig.rbLocale),n.push(e),2===i.length&&(e=t.getResourceBundle(i[0]),n.push(e)),"en"!==i[0]&&t.getResourceBundle("en"),t.$q.all(n).then(function(e){r.coremodule.constant("resourceBundles",t._resourceBundle)},function(e){r.coremodule.constant("resourceBundles",t._resourceBundle)})},this.myApplication=e,angular.lazy(this.myApplication).resolve(["$http","$q",function(e,i){t.$http=e,t.$q=i;var n=hibachiConfig.baseURL;return n||(n=""),n.length&&"/"!==n.slice(-1)&&(n+="/"),t.getInstantiationKey(n).then(function(e){t.instantiationKey=e;var i=[];try{var n=localStorage.getItem("attributeChecksum");null!==n&&hibachiConfig.attributeCacheKey===n.toUpperCase()?r.coremodule.constant("attributeMetaData",JSON.parse(localStorage.getItem("attributeMetaData"))):i.push("attributeCacheKey")}catch(e){i.push("attributeCacheKey")}try{if(t.appConfig=JSON.parse(localStorage.getItem("appConfig")),hibachiConfig.instantiationKey===t.appConfig.instantiationKey)return r.coremodule.constant("appConfig",t.appConfig),t.getResourceBundles();i.push("instantiationKey")}catch(e){i.push("instantiationKey")}return t.getData(i)})}])}return e}();t.BaseBootStrapper=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(16),n=i(492),o=i(495),s=i(490),a=i(489),c=i(491),l=i(494),u=i(493),d=angular.module("hibachi.card",[r.coremodule.name]).config([function(){}]).run([function(){}]).constant("cardPartialsPath","card/components/").directive("swCardLayout",n.SWCardLayout.Factory()).directive("swCardView",o.SWCardView.Factory()).directive("swCardHeader",s.SWCardHeader.Factory()).directive("swCardBody",a.SWCardBody.Factory()).directive("swCardIcon",c.SWCardIcon.Factory()).directive("swCardProgressBar",l.SWCardProgressBar.Factory()).directive("swCardListItem",u.SWCardListItem.Factory());t.cardmodule=d},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.$onInit=function(){}}return e}();t.SWCardBodyController=r;var n=function(){function e(e,t){this.controller=r,this.controllerAs="SwCardBodyController",this.scope={},this.bindToController={},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardbody.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardBody=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.$onInit=function(){}}return e}();t.SWCardHeaderController=r;var n=function(){function e(e,t){this.controller=r,this.controllerAs="SwCardHeaderController",this.scope={},this.bindToController={addBorder:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardheader.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardHeader=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.iconMultiplier="1x",this.$onInit=function(){}}return e}();t.SWCardIconController=r;var n=function(){function e(e,t){this.controller=r,this.controllerAs="SwCardIconController",this.scope={},this.bindToController={iconName:"@?",iconMultiplier:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardicon.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardIcon=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.$onInit=function(){}}return e}();t.SWCardLayoutController=r;var n=function(){function e(e,t){this.controller=r,this.controllerAs="SwCardLayoutController",this.scope={},this.bindToController={cardClass:"@?"},this.transclude={cardView:"?swCardView"},this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardlayout.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardLayout=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.strong="false",this.style="padding-top:5px;padding-bottom:5px",this.$onInit=function(){}}return e}();t.SWCardListItemController=r;var n=function(){function e(e,t){this.controller=r,this.controllerAs="SwCardListItemController",this.scope={},this.bindToController={title:"@?",value:"@?",strong:"@?",style:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardlistitem.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardListItem=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.valueMin=0,this.valueMax=100,this.valueNow=0,this.$onInit=function(){}}return e}();t.SWCardProgressBarController=r;var n=function(){function e(e,t){this.controller=r,this.scope={},this.controllerAs="SwCardProgressBarController",this.bindToController={valueMin:"@?",valueMax:"@?",valueNow:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardprogressbar.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardProgressBar=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$log=e,this.cardSize="md"}return e}();t.SWCardViewController=r;var n=function(){function e(e,t){this.controller=r,this.scope={},this.controllerAs="SwCardViewController",this.bindToController={cardTitle:"@?",cardBody:"@?",cardSize:"@?"},this.transclude={cardIcon:"?swCardIcon",cardHeader:"?swCardHeader",cardBody:"?swCardBody",listItem:"?swCardListItem",progressBar:"?swCardProgressBar"},this.templateUrl="",this.templateUrl=t.buildPartialsPath(e+"/cardview.html")}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["cardPartialsPath","hibachiPathBuilder"],t},e}();t.SWCardView=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{require:"^swFilterGroups",restrict:"E",templateUrl:i.buildPartialsPath(t)+"addfilterbuttons.html",scope:{itemInUse:"=",readOnly:"="},link:function(t,i,r,n){t.filterGroupItem=n.getFilterGroupItem(),t.addFilterItem=function(){e.newFilterItem(n.getFilterGroupItem(),n.setItemInUse)},t.addFilterGroupItem=function(){e.newFilterItem(n.getFilterGroupItem(),n.setItemInUse,!0)}}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["collectionService","collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWAddFilterButtons=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"A",templateUrl:e.buildPartialsPath(t)+"collection.html",link:function(e,t,i){e.tabsUniqueID=Math.floor(999*Math.random()),e.toggleCogOpen=i.toggleoption,e.toggleFiltersAndOptions=function(){!1===e.toggleCogOpen?e.toggleCogOpen=!0:e.toggleCogOpen=!1}}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["hibachiPathBuilder","collectionPartialsPath"],t},e}();t.SWCollection=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){return{restrict:"E",templateUrl:t.buildPartialsPath(i)+"collectiontable.html",scope:{collection:"=",collectionConfig:"=",isRadio:"=?",angularLinks:"=?"},link:function(t,i,a){angular.isUndefined(t.angularLinks)&&(t.angularLinks=!1),t.collection.collectionObject?t.collectionObject=n["new"+t.collection.collectionObject]():t.collectionConfig.baseEntityName&&(t.collectionObject=t.collectionConfig.baseEntityName);var c=function(e){return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")};t.replaceAll=function(e,t,i){return e.replace(new RegExp(c(t),"g"),i)},angular.forEach(t.collectionConfig.columns,function(i){e.debug("Config Key : "+i),i.key=i.propertyIdentifier.replace(/\./g,"_").replace(t.collectionConfig.baseEntityAlias+"_","")}),t.addSelection=function(e,t){r.addSelection(e,t)},t.getCellValue=function(e,i){var r="";r=angular.isDefined(i.aggregate)?e[i.aggregate.aggregateAlias]:"."==i.propertyIdentifier.replace(t.collectionConfig.baseEntityAlias,"").charAt(0)?e[i.propertyIdentifier.replace(t.collectionConfig.baseEntityAlias+".","")]:e[i.propertyIdentifier.replace(t.collectionConfig.baseEntityAlias+"_","").replace(/\./g,"_")];var n="none";return angular.isDefined(i.type)&&"none"!=i.type&&(n=i.type),"none"==n&&angular.isDefined(i.ormtype)&&"none"!=i.ormtype&&(n=i.ormtype),"none"!=n&&s.has(n+"Filter")?o(n)(r):r}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$log","hibachiPathBuilder","collectionPartialsPath","selectionService","$hibachi","$filter","$injector"],t},e}();t.SWCollectionTable=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{restrict:"A",require:{swDisplayOptions:"?^swDisplayOptions",swListingControls:"?^swListingControls"},scope:{column:"=",columns:"=",columnIndex:"=",saveCollection:"&?",propertiesList:"<",orderBy:"="},templateUrl:t.buildPartialsPath(i)+"columnitem.html",link:function(t,i,r,n,o){!t.saveCollection&&n.swListingControls&&(t.saveCollection=function(){n.swListingControls.collectionConfig.columns=t.columns,n.swDisplayOptions.columns=t.columns,n.swListingControls.saveCollection()}),t.editingDisplayTitle=!1,t.editDisplayTitle=function(){!angular.isUndefined(t.column.displayTitle)&&t.column.displayTitle.length||(t.column.displayTitle=t.column.title),t.previousDisplayTitle=t.column.displayTitle,t.editingDisplayTitle=!0},t.saveDisplayTitle=function(){t.saveCollection(),t.editingDisplayTitle=!1},t.cancelDisplayTitle=function(){t.column.displayTitle=t.previousDisplayTitle,t.editingDisplayTitle=!1},angular.isUndefined(t.column.sorting)&&(t.column.sorting={active:!1,sortOrder:"asc",priority:0}),t.toggleVisible=function(e){angular.isUndefined(e.isVisible)&&(e.isVisible=!1),e.isVisible=!e.isVisible,t.saveCollection()},t.toggleSearchable=function(e){angular.isUndefined(e.isSearchable)&&(e.isSearchable=!1),e.isSearchable=!e.isSearchable,t.saveCollection()},t.toggleExportable=function(i){e.debug("toggle exporable"),angular.isUndefined(i.isExportable)&&(i.isExportable=!1),i.isExportable=!i.isExportable,t.saveCollection()};var s=function(e,t){if(e.sorting&&t.sorting&&angular.isDefined(e.sorting)&&angular.isDefined(e.sorting.priority)){if(e.sorting.priority<t.sorting.priority)return-1;if(e.sorting.priority>t.sorting.priority)return 1}return 0},a=function(){if(angular.isDefined(t.columns)){var e=angular.copy(t.columns);e.sort(s),t.orderBy=[],angular.forEach(e,function(e){if(angular.isDefined(e.sorting)&&!0===e.sorting.active){var i={propertyIdentifier:e.propertyIdentifier,direction:e.sorting.sortOrder};if(e.aggregate&&e.aggregate.aggregateFunction){var r=e.aggregate.aggregateFunction.toUpperCase();"AVERAGE"==r&&(r="AVG"),i.propertyIdentifier=r+"("+e.propertyIdentifier+")"}t.orderBy.push(i)}})}};t.toggleSortable=function(i){e.debug("toggle sortable"),angular.isUndefined(i.sorting)&&(i.sorting={active:!0,sortOrder:"asc",priority:0}),!0===i.sorting.active?"asc"===i.sorting.sortOrder?i.sorting.sortOrder="desc":(c(i),i.sorting.active=!1):(i.sorting.active=!0,i.sorting.sortOrder="asc",i.sorting.priority=l().length),a(),t.saveCollection()};var c=function(e,i){if(!0===e.sorting.active){for(var r in t.columns)!0===t.columns[r].sorting.active&&t.columns[r].sorting.priority>e.sorting.priority&&(t.columns[r].sorting.priority=t.columns[r].sorting.priority-1);e.sorting.priority=0}i||(a(),t.saveCollection())};t.prioritize=function(e){if(1===e.sorting.priority){var i=l();for(var r in t.columns)!0===t.columns[r].sorting.active&&(t.columns[r].sorting.priority=t.columns[r].sorting.priority-1);e.sorting.priority=i.length}else{for(var r in t.columns)!0===t.columns[r].sorting.active&&t.columns[r].sorting.priority===e.sorting.priority-1&&(t.columns[r].sorting.priority=t.columns[r].sorting.priority+1);e.sorting.priority-=1}a(),t.saveCollection()};var l=function(){var e=[];for(var i in t.columns)!0===t.columns[i].sorting.active&&e.push(t.columns[i]);return e};t.removeColumn=function(e){t.columns[e].isDeletable&&(c(t.columns[e],!0),n.swDisplayOptions.removeColumn(e),a(),t.saveCollection())}}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$log","hibachiPathBuilder","collectionPartialsPath","observerService"],t},e}();t.SWColumnItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c){var l=function(t){var r="";if(angular.isUndefined(t.ormtype)&&angular.isUndefined(t.fieldtype))r=c.buildPartialsPath(s)+"criteria.html";else{var n=t.ormtype,o=t.fieldtype;switch(n){case"boolean":r=c.buildPartialsPath(s)+"criteriaboolean.html";break;case"string":r=c.buildPartialsPath(s)+"criteriastring.html";break;case"timestamp":r=c.buildPartialsPath(s)+"criteriadate.html";break;case"big_decimal":case"integer":case"float":r=c.buildPartialsPath(s)+"criterianumber.html"}switch(o){case"many-to-one":r=c.buildPartialsPath(s)+"criteriamanytoone.html";break;case"many-to-many":r=c.buildPartialsPath(s)+"criteriamanytomany.html";break;case"one-to-many":r=c.buildPartialsPath(s)+"criteriaonetomany.html"}}return e.get(r,{cache:i})},u=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"==e&&(t=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Contains",comparisonOperator:"like",pattern:"%w%"},{display:"Doesn't Contain",comparisonOperator:"not like",pattern:"%w%"},{display:"Starts With",comparisonOperator:"like",pattern:"w%"},{display:"Doesn't Start With",comparisonOperator:"not like",pattern:"w%"},{display:"Ends With",comparisonOperator:"like",pattern:"%w"},{display:"Doesn't End With",comparisonOperator:"not like",pattern:"%w"},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}],"condition"===e&&(t=[{display:"Equals",comparisonOperator:"="},{display:"In List",comparisonOperator:"in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}])),t},d=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"!==e&&"condition"!==e||(t=[{display:"True",comparisonOperator:"=",value:"True"},{display:"False",comparisonOperator:"=",value:"False"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),t},f=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"===e&&(t=[{display:"Date",comparisonOperator:"between",dateInfo:{type:"exactDate"}},{display:"In Range",comparisonOperator:"between",dateInfo:{type:"range"}},{display:"Not In Range",comparisonOperator:"not between",dateInfo:{type:"range"}},{display:"Today",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:0,behavior:"toDate"}},{display:"Yesterday",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:-1,behavior:"toDate"}},{display:"This Week",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",behavior:"toDate"}},{display:"This Month",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",behavior:"toDate"}},{display:"This Quarter",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",behavior:"toDate"}},{display:"This Year",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",behavior:"toDate"}},{display:"Last N Hour(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"h",measureTypeDisplay:"Hours"}},{display:"Last N Day(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureTypeDisplay:"Days"}},{display:"Last N Week(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",measureTypeDisplay:"Weeks"}},{display:"Last N Month(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",measureTypeDisplay:"Months"}},{display:"Last N Quarter(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",measureTypeDisplay:"Quarters"}},{display:"Last N Year(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",measureTypeDisplay:"Years"}},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),"condition"===e&&(t=[{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),t},p=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"==e&&(t=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"In Range",comparisonOperator:"between",type:"range"},{display:"Not In Range",comparisonOperator:"not between",type:"range"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),"condition"===e&&(t=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),t},h=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"==e&&(t=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"}]),"condition"===e&&(t=[]),t},g=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"==e&&(t=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"},{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]),"condition"===e&&(t=[{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]),t},y=function(e){var t=[];return angular.isUndefined(e)&&(e="filter"),"filter"==e&&(t={drillEntity:{},hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"}}),t};return{restrict:"A",scope:{workflowCondition:"=",selectedFilterProperty:"=",filterPropertiesList:"=",selectedFilterPropertyChanged:"&"},link:function(e,i,s){e.$watch("selectedFilterProperty.criteriaValue",function(t){angular.isDefined(t)&&(e.selectedFilterProperty.criteriaValue=o("likeFilter")(t))}),e.$watch("selectedFilterProperty",function(o){if(angular.isDefined(o)){if(r.debug("watchSelectedFilterProperty"),r.debug(e.selectedFilterProperty),null===o)return;if(angular.isDefined(o.ormtype))switch(e.selectedFilterProperty.ormtype){case"boolean":e.conditionOptions=d();break;case"string":e.conditionOptions=u(),e.selectedConditionChanged=function(e){angular.isDefined(e.selectedCriteriaType.value)?e.showCriteriaValue=!1:e.showCriteriaValue=!0};break;case"timestamp":e.conditionOptions=f(),e.today=function(){angular.isDefined(e.selectedFilterProperty)&&(e.selectedFilterProperty.criteriaRangeStart=(new Date).getTime(),e.selectedFilterProperty.criteriaRangeEnd=(new Date).getTime())},e.clear=function(){e.selectedFilterProperty.criteriaRangeStart=null,e.selectedFilterProperty.criteriaRangeEnd=null},e.openCalendarStart=function(t){t.preventDefault(),t.stopPropagation(),e.openedCalendarStart=!0},e.openCalendarEnd=function(t){t.preventDefault(),t.stopPropagation(),e.openedCalendarEnd=!0},e.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],e.format=e.formats[1],e.selectedConditionChanged=function(e){r.debug("selectedConditionChanged Begin");var t=e.selectedCriteriaType;if(angular.isDefined(t.dateInfo)){if("calculation"===t.dateInfo.type)if(t.showCriteriaStart=!0,t.showCriteriaEnd=!0,t.disableCriteriaStart=!0,t.disableCriteriaEnd=!0,angular.isUndefined(t.dateInfo.behavior))r.debug("Not toDate"),t.showNumberOf=!0,t.conditionDisplay="Number of "+t.dateInfo.measureTypeDisplay+" :";else{r.debug("toDate");var i=Date.parse("today"),n=i.setHours(23,59,59,999);switch(e.criteriaRangeEnd=n,t.dateInfo.measureType){case"d":var o=Date.parse("today").add(t.dateInfo.measureCount).days();o.setHours(0,0,0,0),e.criteriaRangeStart=o.getTime();break;case"w":var s=Date.today().last().monday();e.criteriaRangeStart=s.getTime();break;case"m":var a=Date.today().moveToFirstDayOfMonth();e.criteriaRangeStart=a.getTime();break;case"q":var c=Date.parse("today").toString("MM"),l=Date.parse("today").toString("yyyy"),u=3*Math.floor(c/3),d=new Date(l,u,1);e.criteriaRangeStart=d.getTime();break;case"y":var l=Date.parse("today").toString("yyyy"),f=new Date(l,0,1);e.criteriaRangeStart=f.getTime()}}"range"===t.dateInfo.type&&(t.showCriteriaStart=!0,t.showCriteriaEnd=!0,t.disableCriteriaStart=!1,t.disableCriteriaEnd=!1,t.showNumberOf=!1),"exactDate"===t.dateInfo.type&&(t.showCriteriaEnd=!1,t.disableCriteriaStart=!1,t.disableCriteriaEnd=!0,t.dateInfo.measureType?(t.conditionDisplay="How many "+t.dateInfo.measureTypeDisplay+" ago?",t.showCriteriaStart=!1,t.showNumberOf=!0):(t.conditionDisplay="",t.showCriteriaStart=!0,t.showNumberOf=!1,e.criteriaRangeStart=new Date(e.criteriaRangeStart).setHours(0,0,0,0),e.criteriaRangeEnd=new Date(e.criteriaRangeStart).setHours(23,59,59,999)))}else t.showCriteriaStart=!1,t.showCriteriaEnd=!1,t.showNumberOf=!1,t.conditionDisplay="";r.debug("selectedConditionChanged End"),r.debug("selectedConditionChanged Result"),r.debug(t),r.debug(e)},e.criteriaRangeChanged=function(e){var t=e.selectedCriteriaType;if("calculation"===t.dateInfo.type){var i=e.criteriaNumberOf;switch(t.dateInfo.measureType){case"h":var n=Date.parse("today");e.criteriaRangeEnd=n.getTime();var o=Date.parse("today").add(-i).hours();e.criteriaRangeStart=o.getTime();break;case"d":var s=Date.parse("today").add(-1).days();s.setHours(23,59,59,999),e.criteriaRangeEnd=s.getTime();var a=Date.parse("today").add(-i).days();e.criteriaRangeStart=a.getTime();break;case"w":var c=Date.today().last().sunday();c.setHours(23,59,59,999),e.criteriaRangeEnd=c.getTime();var l=Date.today().last().sunday().add(-i).weeks();e.criteriaRangeStart=l.getTime();break;case"m":var u=Date.today().add(-1).months().moveToLastDayOfMonth();u.setHours(23,59,59,999),e.criteriaRangeEnd=u.getTime();var d=Date.today().add(-1).months().moveToLastDayOfMonth().add(-i).months();e.criteriaRangeStart=d.getTime();break;case"q":var f=Math.floor(Date.parse("today").getMonth()/3),p=new Date(Date.parse("today").getFullYear(),3*f,1),h=p.add(-1).days();h.setHours(23,59,59,999),e.criteriaRangeEnd=h.getTime();var g=new Date(Date.parse("today").getFullYear(),3*f,1);g.add(-3*i).months(),e.criteriaRangeStart=g.getTime();break;case"y":var y=new Date((new Date).getFullYear(),11,31).add(-1).years();y.setHours(23,59,59,999),e.criteriaRangeEnd=y.getTime();var v=new Date((new Date).getFullYear(),11,31).add(-i-1).years();e.criteriaRangeStart=v.getTime()}}"exactDate"===t.dateInfo.type&&(e.criteriaRangeStart=e.criteriaRangeStart.setHours(0,0,0,0),e.criteriaRangeEnd=new Date(e.criteriaRangeStart).setHours(23,59,59,999)),"range"===t.dateInfo.type&&(angular.isDefined(e.criteriaRangeStart)&&(e.criteriaRangeStart=new Date(e.criteriaRangeStart).setHours(0,0,0,0)),angular.isDefined(e.criteriaRangeEnd)&&(e.criteriaRangeEnd=new Date(e.criteriaRangeEnd).setHours(23,59,59,999))),r.debug("criteriaRangeChanged"),r.debug(t),r.debug(e)};break;case"big_decimal":case"integer":case"float":e.conditionOptions=p(),e.criteriaRangeChanged=function(e){e.selectedCriteriaType},e.selectedConditionChanged=function(e){e.showCriteriaValue=!0,angular.isDefined(e.selectedCriteriaType.type)&&(e.showCriteriaValue=!1,e.selectedCriteriaType.showCriteriaStart=!0,e.selectedCriteriaType.showCriteriaEnd=!0),angular.isDefined(e.selectedCriteriaType.value)&&(e.showCriteriaValue=!1)}}if(angular.isDefined(e.selectedFilterProperty.fieldtype))switch(e.selectedFilterProperty.fieldtype){case"many-to-one":e.conditionOptions=y(e.comparisonType),r.debug("many-to-one"),r.debug(e.selectedFilterProperty),r.debug(e.filterPropertiesList),angular.isUndefined(e.filterPropertiesList[e.selectedFilterProperty.propertyIdentifier])&&n.getFilterPropertiesByBaseEntityName(e.selectedFilterProperty.cfc).then(function(t){e.filterPropertiesList[e.selectedFilterProperty.propertyIdentifier]=t,a.formatPropertiesList(e.filterPropertiesList[e.selectedFilterProperty.propertyIdentifier],e.selectedFilterProperty.propertyIdentifier)},function(e){});break;case"many-to-many":case"one-to-many":e.manyToManyOptions=g(),e.oneToManyOptions=h(),n.getExistingCollectionsByBaseEntity(o.cfc).then(function(t){if(e.collectionOptions=t.data,angular.isDefined(e.workflowCondition.collectionID)){for(var i in e.collectionOptions)e.collectionOptions[i].collectionID===e.workflowCondition.collectionID&&(e.selectedFilterProperty.selectedCollection=e.collectionOptions[i]);for(var i in e.oneToManyOptions)e.oneToManyOptions[i].comparisonOperator===e.workflowCondition.criteria&&(e.selectedFilterProperty.selectedCriteriaType=e.oneToManyOptions[i])}})}r.debug("workflowCondition"),r.debug(e.workflowCondition),angular.forEach(e.conditionOptions,function(t){if(t.display==e.workflowCondition.conditionDisplay){if(e.selectedFilterProperty.selectedCriteriaType=t,e.selectedFilterProperty.criteriaValue=e.workflowCondition.value,angular.isDefined(e.selectedFilterProperty.selectedCriteriaType.dateInfo)&&angular.isDefined(e.workflowCondition.value)&&e.workflowCondition.value.length){var i=e.workflowCondition.value.split("-");e.selectedFilterProperty.criteriaRangeStart=new Date(parseInt(i[0])),e.selectedFilterProperty.criteriaRangeEnd=new Date(parseInt(i[1]))}angular.isDefined(e.workflowCondition.criteriaNumberOf)&&(e.selectedFilterProperty.criteriaNumberOf=e.workflowCondition.criteriaNumberOf),angular.isDefined(e.selectedConditionChanged)&&e.selectedConditionChanged(e.selectedFilterProperty)}}),r.debug("templateLoader"),r.debug(o);l(o).success(function(r){i.html(r),t(i.contents())(e)})}}),e.selectedCriteriaChanged=function(t){r.debug(t),r.debug(e.selectedFilterProperty);var i={entityAlias:e.selectedFilterProperty.name,cfc:e.selectedFilterProperty.cfc,propertyIdentifier:e.selectedFilterProperty.propertyIdentifier};e.workflowCondition.breadCrumbs.push(i),e.selectedFilterPropertyChanged({selectedFilterProperty:e.selectedFilterProperty.selectedCriteriaType})}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c,l){return new e(t,i,r,n,o,s,a,c,l)};return t.$inject=["$http","$compile","$templateCache","$log","$hibachi","$filter","collectionPartialsPath","metadataService","hibachiPathBuilder"],t},e}();t.SWConditionCriteria=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",scope:{filterItem:"=",selectedFilterProperty:"=",filterPropertiesList:"=",selectedFilterPropertyChanged:"&",comparisonType:"=",collectionConfig:"="},templateUrl:t.buildPartialsPath(e)+"criteria.html",link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWCriteria=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",templateUrl:t.buildPartialsPath(e)+"criteriaboolean.html",link:function(e,t,i){e.conditionOptions=function(e){angular.isUndefined(e)&&(e="filter");var t=[];return"filter"===e?t=[{display:"True",comparisonOperator:"=",value:"True"},{display:"False",comparisonOperator:"=",value:"False"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===e&&(t=[{display:"True",comparisonOperator:"eq",value:"True"},{display:"False",comparisonOperator:"eq",value:"False"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),t}(e.comparisonType),angular.forEach(e.conditionOptions,function(t){t.display==e.filterItem.conditionDisplay&&(e.selectedFilterProperty.selectedCriteriaType=t,e.selectedFilterProperty.criteriaValue=e.filterItem.value,angular.isDefined(e.selectedConditionChanged)&&e.selectedConditionChanged(e.selectedFilterProperty))})}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWCriteriaBoolean=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"E",templateUrl:i.buildPartialsPath(t)+"criteriadate.html",link:function(t,i,r){t.conditionOptions=function(e){angular.isUndefined(e)&&(e="filter");var t=[];return"filter"===e?t=[{display:"Date",comparisonOperator:"between",dateInfo:{type:"exactDate"}},{display:"In Range",comparisonOperator:"between",dateInfo:{type:"range"}},{display:"Not In Range",comparisonOperator:"not between",dateInfo:{type:"range"}},{display:"Today",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:0,behavior:"toDate"}},{display:"Yesterday",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:-1,behavior:"toDate"}},{display:"This Week",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",behavior:"toDate"}},{display:"This Month",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",behavior:"toDate"}},{display:"This Quarter",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",behavior:"toDate"}},{display:"This Year",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",behavior:"toDate"}},{display:"Last N Hour(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"h",measureTypeDisplay:"Hours"}},{display:"Last N Day(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureTypeDisplay:"Days"}},{display:"Last N Week(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",measureTypeDisplay:"Weeks"}},{display:"Last N Month(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",measureTypeDisplay:"Months"}},{display:"Last N Quarter(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",measureTypeDisplay:"Quarters"}},{display:"Last N Year(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",measureTypeDisplay:"Years"}},{display:"Exact N Day(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"d",measureTypeDisplay:"Days"}},{display:"Exact N Month(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"m",measureTypeDisplay:"Months"}},{display:"Exact N Year(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"y",measureTypeDisplay:"Years"}},{display:"Exact N Day(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"d",measureTypeDisplay:"Days"}},{display:"Exact N Month(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"m",measureTypeDisplay:"Months"}},{display:"Exact N Year(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"y",measureTypeDisplay:"Years"}},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===e&&(t=[{display:"Equals",comparisonOperator:"eq"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),t}(t.comparisonType),t.today=function(){angular.isDefined(t.selectedFilterProperty)&&(t.selectedFilterProperty.criteriaRangeStart=(new Date).getTime(),t.selectedFilterProperty.criteriaRangeEnd=(new Date).getTime())},t.clear=function(){t.selectedFilterProperty.criteriaRangeStart=null,t.selectedFilterProperty.criteriaRangeEnd=null},t.openCalendarStart=function(e){e.preventDefault(),e.stopPropagation(),t.openedCalendarStart=!0},t.openCalendarEnd=function(e){e.preventDefault(),e.stopPropagation(),t.openedCalendarEnd=!0},t.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],t.format=t.formats[1],t.selectedConditionChanged=function(t){e.debug("selectedConditionChanged Begin");var i=t.selectedCriteriaType;if(angular.isDefined(i.dateInfo)){if("calculation"===i.dateInfo.type)if(i.showCriteriaStart=!0,i.showCriteriaEnd=!0,i.disableCriteriaStart=!0,i.disableCriteriaEnd=!0,angular.isUndefined(i.dateInfo.behavior))e.debug("Not toDate"),i.showNumberOf=!0,i.conditionDisplay="Number of "+i.dateInfo.measureTypeDisplay+" :";else{e.debug("toDate");var r=Date.parse("today"),n=r.setHours(23,59,59,999);switch(t.criteriaRangeEnd=n,i.dateInfo.measureType){case"d":var o=Date.parse("today").add(i.dateInfo.measureCount).days();o.setHours(0,0,0,0),t.criteriaRangeStart=o.getTime();break;case"w":var s=Date.today().last().monday();t.criteriaRangeStart=s.getTime();break;case"m":var a=Date.today().moveToFirstDayOfMonth();t.criteriaRangeStart=a.getTime();break;case"q":var c=Date.parse("today").toString("MM"),l=Date.parse("today").toString("yyyy"),u=3*Math.floor(c/3),d=new Date(l,u,1);t.criteriaRangeStart=d.getTime();break;case"y":var l=Date.parse("today").toString("yyyy"),f=new Date(l,0,1);t.criteriaRangeStart=f.getTime()}}"range"===i.dateInfo.type&&(i.showCriteriaStart=!0,i.showCriteriaEnd=!0,i.disableCriteriaStart=!1,i.disableCriteriaEnd=!1,i.showNumberOf=!1),"exactDate"===i.dateInfo.type&&(i.showCriteriaStart=!0,i.showCriteriaEnd=!1,i.disableCriteriaStart=!1,i.disableCriteriaEnd=!0,i.dateInfo.measureType?(i.conditionDisplay="How many "+i.dateInfo.measureTypeDisplay+" ago?",i.showCriteriaStart=!1,i.showNumberOf=!0):(i.conditionDisplay="",i.showCriteriaStart=!0,i.showNumberOf=!1,t.criteriaRangeStart=new Date(t.criteriaRangeStart).setHours(0,0,0,0),t.criteriaRangeEnd=new Date(t.criteriaRangeStart).setHours(23,59,59,999)))}else i.showCriteriaStart=!1,i.showCriteriaEnd=!1,i.showNumberOf=!1,i.conditionDisplay="";e.debug("selectedConditionChanged End"),e.debug("selectedConditionChanged Result"),e.debug(i),e.debug(t)},t.criteriaRangeChanged=function(t){e.debug("criteriaRangeChanged"),e.debug(t);var i=t.selectedCriteriaType;if("calculation"===i.dateInfo.type){var r=t.criteriaNumberOf;switch(i.dateInfo.measureType){case"h":var n=Date.parse("today");t.criteriaRangeEnd=n.getTime();var o=Date.parse("today").add(-r).hours();t.criteriaRangeStart=o.getTime();break;case"d":var s=Date.parse("today").add(-1).days();s.setHours(23,59,59,999),t.criteriaRangeEnd=s.getTime();var a=Date.parse("today").add(-r).days();t.criteriaRangeStart=a.getTime();break;case"w":var c=Date.today().last().sunday();c.setHours(23,59,59,999),t.criteriaRangeEnd=c.getTime();var l=Date.today().last().sunday().add(-r).weeks();t.criteriaRangeStart=l.getTime();break;case"m":var u=Date.today().add(-1).months().moveToLastDayOfMonth();u.setHours(23,59,59,999),t.criteriaRangeEnd=u.getTime();var d=Date.today().add(-1).months().moveToLastDayOfMonth().add(-r).months();t.criteriaRangeStart=d.getTime();break;case"q":var f=Math.floor(Date.parse("today").getMonth()/3),p=new Date(Date.parse("today").getFullYear(),3*f,1),h=p.add(-1).days();h.setHours(23,59,59,999),t.criteriaRangeEnd=h.getTime();var g=new Date(Date.parse("today").getFullYear(),3*f,1);g.add(-3*r).months(),t.criteriaRangeStart=g.getTime();break;case"y":var y=new Date((new Date).getFullYear(),11,31).add(-1).years();y.setHours(23,59,59,999),t.criteriaRangeEnd=y.getTime();var v=new Date((new Date).getFullYear(),11,31).add(-r-1).years();t.criteriaRangeStart=v.getTime()}}"exactDate"===i.dateInfo.type&&angular.isDefined(t.criteriaRangeStart)&&angular.isDefined(t.criteriaRangeStart.setHours)&&(t.criteriaRangeStart=t.criteriaRangeStart.setHours(0,0,0,0),t.criteriaRangeEnd=new Date(t.criteriaRangeStart).setHours(23,59,59,999)),"range"===i.dateInfo.type&&(angular.isDefined(t.criteriaRangeStart)&&angular.isDefined(t.criteriaRangeStart)&&(t.criteriaRangeStart=new Date(t.criteriaRangeStart).setHours(0,0,0,0)),angular.isDefined(t.criteriaRangeEnd)&&angular.isDefined(t.criteriaRangeStart)&&(t.criteriaRangeEnd=new Date(t.criteriaRangeEnd).setHours(23,59,59,999))),e.debug("criteriaRangeChanged"),e.debug(i),e.debug(t)},angular.isUndefined(t.filterItem.$$isNew)||!1===t.filterItem.$$isNew?angular.forEach(t.conditionOptions,function(e){if(e.display==t.filterItem.conditionDisplay){if(t.selectedFilterProperty.selectedCriteriaType=e,t.selectedFilterProperty.criteriaValue=t.filterItem.value,angular.isDefined(t.selectedFilterProperty.selectedCriteriaType.dateInfo)&&angular.isDefined(t.filterItem.value)&&t.filterItem.value.length){var i=t.filterItem.value.split("-"),r=new Date(parseInt(i[0])).toUTCString();r=r.split(" ").slice(0,5).join(" ");var n=new Date(parseInt(i[1])).toUTCString();n=n.split(" ").slice(0,5).join(" "),t.selectedFilterProperty.criteriaRangeStart=r,t.selectedFilterProperty.criteriaRangeEnd=n}angular.isDefined(t.selectedConditionChanged)&&t.selectedConditionChanged(t.selectedFilterProperty)}}):(t.selectedFilterProperty.criteriaValue="",t.selectedFilterProperty.criteriaRangeStart="",t.selectedFilterProperty.criteriaRangeEnd="")}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$log","collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWCriteriaDate=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){return{restrict:"E",templateUrl:o.buildPartialsPath(i)+"criteriamanytomany.html",link:function(i,o,a){function c(e){i.collectionOptions.push(e),i.selectedFilterProperty.selectedCollection=e,i.selectedFilterProperty.selectedCriteriaType=i.manyToManyOptions[2]}i.data={},i.collectionOptionsOpen=!1,i.toggleCollectionOptions=function(e){i.collectionOptionsOpen=angular.isUndefined(e)?!i.collectionOptionsOpen:e},i.selectCollection=function(e){i.toggleCollectionOptions(),i.selectedFilterProperty.selectedCollection=e,i.selectedFilterProperty.selectedCriteriaType=i.manyToManyOptions[2]},i.cleanSelection=function(){i.toggleCollectionOptions(!1),i.data.collectionName="",i.selectedFilterProperty.selectedCollection=null},i.manyToManyOptions=function(t){angular.isUndefined(t)&&(t="filter"),e.debug("type",t);var i=[];return"filter"==t?i=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"},{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]:"condition"===t&&(i=[]),i}(i.comparisonType),t.getExistingCollectionsByBaseEntity(i.selectedFilterProperty.cfc).then(function(e){if(i.collectionOptions=e.data,angular.isDefined(i.filterItem.collectionID)){for(var t in i.collectionOptions)i.collectionOptions[t].collectionID===i.filterItem.collectionID&&(i.selectedFilterProperty.selectedCollection=i.collectionOptions[t]);for(var t in i.manyToManyOptions)i.manyToManyOptions[t].comparisonOperator===i.filterItem.criteria&&(i.selectedFilterProperty.selectedCriteriaType=i.manyToManyOptions[t])}}),n.attach(c,"addCollection","addCollection"),i.selectedCriteriaChanged=function(t){e.debug(t),e.debug(i.selectedFilterProperty);var r={entityAlias:i.selectedFilterProperty.name,cfc:i.selectedFilterProperty.cfc,propertyIdentifier:i.selectedFilterProperty.propertyIdentifier,rbKey:s.getRBKey("entity."+i.selectedFilterProperty.cfc.replace("_",""))};i.filterItem.breadCrumbs.push(r),i.selectedFilterPropertyChanged({selectedFilterProperty:i.selectedFilterProperty.selectedCriteriaType})},i.addNewCollection=function(){r.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:i.selectedFilterProperty.cfc,collectionName:i.data.collectionName,parentEntity:i.collectionConfig.baseEntityName}),i.cleanSelection()},i.viewSelectedCollection=function(){r.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"collection",entityId:i.selectedFilterProperty.selectedCollection.collectionID,parentEntity:i.collectionConfig.baseEntityName})}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c,l,u){return new e(t,i,n,a,c,l,u)};return t.$inject=["$log","$hibachi","collectionPartialsPath","dialogService","observerService","hibachiPathBuilder","rbkeyService"],t},e}();t.SWCriteriaManyToMany=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){return{restrict:"E",templateUrl:n.buildPartialsPath(i)+"criteriamanytoone.html",link:function(i,n,s){var a=function(){return{drillEntity:{},hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"}}};i.manyToOneOptions=a(),i.conditionOptions=a(),e.debug("many-to-one"),e.debug(i.selectedFilterProperty),e.debug(i.filterPropertiesList),i.$watch("selectedFilterProperty",function(n){angular.isUndefined(i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier])&&t.getFilterPropertiesByBaseEntityName(n.cfc).then(function(e){i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier]=e,r.formatPropertiesList(i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier],i.selectedFilterProperty.propertyIdentifier)},function(e){}),i.selectedCriteriaChanged=function(t){e.debug(t),e.debug("changed"),e.debug(i.selectedFilterProperty);var r={entityAlias:i.selectedFilterProperty.name,cfc:i.selectedFilterProperty.cfc,propertyIdentifier:i.selectedFilterProperty.propertyIdentifier,rbKey:o.getRBKey("entity."+i.selectedFilterProperty.cfc.replace("_",""))};e.debug("breadcrumb"),e.debug(r),e.debug(i.filterItem.breadCrumbs),i.filterItem.breadCrumbs.push(r),i.selectedFilterPropertyChanged({selectedFilterProperty:i.selectedFilterProperty.selectedCriteriaType}),e.debug(i.selectedFilterProperty)}})}}}return e.Factory=function(){var t=function(t,i,r,n,o,s){return new e(t,i,r,n,o,s)};return t.$inject=["$log","$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder","rbkeyService"],t},e}();t.SWCriteriaManyToOne=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"E",templateUrl:i.buildPartialsPath(t)+"criterianumber.html",link:function(t,i,r){t.$watch("selectedFilterProperty.criteriaValue",function(i){angular.isDefined(i)&&(t.selectedFilterProperty.criteriaValue=i,e.debug(t.selectedFilterProperty))}),t.conditionOptions=function(e){angular.isUndefined(e)&&(e="filter");var t=[];return"filter"===e?t=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"In Range",comparisonOperator:"between",type:"range"},{display:"Not In Range",comparisonOperator:"not between",type:"range"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===e&&(t=[{display:"Equals",comparisonOperator:"eq"},{display:"Greater Than",comparisonOperator:"gt"},{display:"Greater Than Or Equal",comparisonOperator:"gte"},{display:"Less Than",comparisonOperator:"lt"},{display:"Less Than Or Equal",comparisonOperator:"lte"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),t}(t.comparisonType),t.criteriaRangeChanged=function(e){e.selectedCriteriaType},t.selectedConditionChanged=function(e){e.showCriteriaValue=!0,angular.isDefined(e.selectedCriteriaType.type)&&(e.showCriteriaValue=!1,e.selectedCriteriaType.showCriteriaStart=!0,e.selectedCriteriaType.showCriteriaEnd=!0),angular.isDefined(e.selectedCriteriaType.value)&&(e.showCriteriaValue=!1)},angular.forEach(t.conditionOptions,function(i){if(e.debug("populate"),i.display==t.filterItem.conditionDisplay){if(t.selectedFilterProperty.selectedCriteriaType=i,e.debug(t.filterItem),"between"===t.filterItem.comparisonOperator||"not between"===t.filterItem.comparisonOperator){var r=t.filterItem.value.split("-");e.debug(r),t.selectedFilterProperty.criteriaRangeStart=parseInt(r[0]),t.selectedFilterProperty.criteriaRangeEnd=parseInt(r[1])}else t.selectedFilterProperty.criteriaValue=t.filterItem.value;angular.isDefined(t.filterItem.criteriaNumberOf)&&(t.selectedFilterProperty.criteriaNumberOf=t.filterItem.criteriaNumberOf),angular.isDefined(t.selectedConditionChanged)&&t.selectedConditionChanged(t.selectedFilterProperty)}})}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$log","collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWCriteriaNumber=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){return{restrict:"E",templateUrl:o.buildPartialsPath(i)+"criteriaonetomany.html",link:function(i,o,a){function c(e){i.collectionOptions.push(e),i.selectedFilterProperty.selectedCollection=e,i.selectedFilterProperty.selectedCriteriaType=i.oneToManyOptions[2]}i.data={},i.collectionOptionsOpen=!1,i.toggleCollectionOptions=function(e){i.collectionOptionsOpen=angular.isUndefined(e)?!i.collectionOptionsOpen:e},i.selectCollection=function(e){i.toggleCollectionOptions(),i.selectedFilterProperty.selectedCollection=e,i.selectedFilterProperty.selectedCriteriaType=i.oneToManyOptions[2]},i.cleanSelection=function(){i.toggleCollectionOptions(!1),i.data.collectionName="",i.selectedFilterProperty.selectedCollection=null},e.debug("onetomany"),e.debug(i.selectedFilterProperty),i.oneToManyOptions=function(e){angular.isUndefined(e)&&(e="filter");var t=[];return"filter"==e?t=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"}]:"condition"===e&&(t=[]),t}(i.comparisonType),t.getExistingCollectionsByBaseEntity(i.selectedFilterProperty.cfc).then(function(e){if(i.collectionOptions=e.data,angular.isDefined(i.filterItem.collectionID)){for(var t in i.collectionOptions)i.collectionOptions[t].collectionID===i.filterItem.collectionID&&(i.selectedFilterProperty.selectedCollection=i.collectionOptions[t]);for(var t in i.oneToManyOptions)i.oneToManyOptions[t].comparisonOperator===i.filterItem.criteria&&(i.selectedFilterProperty.selectedCriteriaType=i.oneToManyOptions[t])}}),n.attach(c,"addCollection","addCollection"),i.selectedCriteriaChanged=function(t){e.debug(t),e.debug(i.selectedFilterProperty);var r={entityAlias:i.selectedFilterProperty.name,cfc:i.selectedFilterProperty.cfc,propertyIdentifier:i.selectedFilterProperty.propertyIdentifier,rbKey:s.getRBKey("entity."+i.selectedFilterProperty.cfc.replace("_","")),filterProperty:i.selectedFilterProperty};i.filterItem.breadCrumbs.push(r),e.debug("criteriaChanged"),e.debug(i.selectedFilterProperty),i.selectedFilterPropertyChanged({selectedFilterProperty:i.selectedFilterProperty.selectedCriteriaType})},i.addNewCollection=function(){r.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:i.selectedFilterProperty.cfc,collectionName:i.data.collectionName,parentEntity:i.collectionConfig.baseEntityName}),i.cleanSelection()},i.viewSelectedCollection=function(){i.toggleCollectionOptions(),r.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"collection",entityId:i.selectedFilterProperty.selectedCollection.collectionID,parentEntity:i.collectionConfig.baseEntityName})}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$log","$hibachi","collectionPartialsPath","dialogService","observerService","hibachiPathBuilder","rbkeyService"],t},e}();t.SWCriteriaOneToMany=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a){return{restrict:"E",templateUrl:s.buildPartialsPath(r)+"criteriarelatedobject.html",link:function(i,r,n){var s=function(){return{drillEntity:null,hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"},aggregate:{aggregate:""}}};i.aggegate={},i.aggegate.selectedAggregate="",i.aggregateOptions=["Average","Count","Sum"],i.selectAggregate=function(e){i.selectedFilterProperty.selectedCriteriaType.aggregate=e},i.relatedObjectOptions=s(),i.conditionOptions=s(),e.debug("many-to-one"),e.debug(i.selectedFilterProperty),e.debug(i.filterPropertiesList),i.$watch("selectedFilterProperty",function(r){angular.isUndefined(i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier])&&t.getFilterPropertiesByBaseEntityName(r.cfc).then(function(e){i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier]=e,o.formatPropertiesList(i.filterPropertiesList[i.selectedFilterProperty.propertyIdentifier],i.selectedFilterProperty.propertyIdentifier)},function(e){}),i.selectedCriteriaChanged=function(t,r){var n={entityAlias:i.selectedFilterProperty.name,cfc:i.selectedFilterProperty.cfc,propertyIdentifier:i.selectedFilterProperty.propertyIdentifier,rbKey:a.getRBKey("entity."+i.selectedFilterProperty.cfc.replace("_",""))};e.debug("breadcrumb"),e.debug(n),e.debug(i.filterItem.breadCrumbs),i.filterItem.breadCrumbs.push(n),r&&(i.selectedFilterProperty.selectedCriteriaType.ormtype="integer",i.selectedFilterProperty.selectedCriteriaType.aggregate=r),i.selectedFilterPropertyChanged({selectedFilterProperty:i.selectedFilterProperty.selectedCriteriaType}),e.debug(i.selectedFilterProperty)}})}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c){return new e(t,i,r,n,o,s,a,c)};return t.$inject=["$log","$hibachi","$filter","collectionPartialsPath","collectionService","metadataService","hibachiPathBuilder","rbkeyService"],t},e}();t.SWCriteriaRelatedObject=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",templateUrl:t.buildPartialsPath(e)+"criteriastring.html",link:function(e,t,i){e.conditionOptions=function(e){angular.isUndefined(e)&&(e="filter");var t=[];return"filter"===e?t=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Contains",comparisonOperator:"like",pattern:"%w%"},{display:"Doesn't Contain",comparisonOperator:"not like",pattern:"%w%"},{display:"Starts With",comparisonOperator:"like",pattern:"w%"},{display:"Doesn't Start With",comparisonOperator:"not like",pattern:"w%"},{display:"Ends With",comparisonOperator:"like",pattern:"%w"},{display:"Doesn't End With",comparisonOperator:"not like",pattern:"%w"},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===e&&(t=[{display:"Equals",comparisonOperator:"eq"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),t}(e.comparisonType),e.inListArray=[],angular.isDefined(e.filterItem.value)&&(e.inListArray=e.filterItem.value.split(",")),e.newListItem="",e.addToValueInListFormat=function(t){e.inListArray.push(t),e.filterItem.value=e.inListArray.toString(),e.filterItem.displayValue=e.inListArray.toString().replace(/,/g,", "),e.newListItem=""},e.removelistItem=function(t){e.inListArray.splice(t,1),e.filterItem.value=e.inListArray.toString(),e.filterItem.displayValue=e.inListArray.toString().replace(/,/g,", ")},e.clearField=function(){e.newListItem=""},e.selectedConditionChanged=function(t){angular.isDefined(t.selectedCriteriaType.value)?t.showCriteriaValue=!1:"in"===t.selectedCriteriaType.comparisonOperator||"not in"===t.selectedCriteriaType.comparisonOperator?(t.showCriteriaValue=!1,e.comparisonOperatorInAndNotInFlag=!0):t.showCriteriaValue=!0},e.$watch("filterItem.value",function(t){angular.isDefined(e.filterItem)&&angular.isDefined(e.filterItem.value)&&(e.filterItem.value=e.filterItem.value.replace("%",""))}),e.$watch("selectedFilterProperty",function(t){angular.isDefined(t)&&angular.forEach(e.conditionOptions,function(t){t.display==e.filterItem.conditionDisplay&&(e.selectedFilterProperty.selectedCriteriaType=t,e.selectedFilterProperty.criteriaValue=e.filterItem.value,angular.isDefined(e.selectedConditionChanged)&&e.selectedConditionChanged(e.selectedFilterProperty))})})}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWCriteriaString=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{require:"?^swDisplayOptions",restrict:"A",scope:{selectedProperty:"=",propertiesList:"=",breadCrumbs:"=",selectedPropertyChanged:"&"},templateUrl:r.buildPartialsPath(t)+"displayitem.html",link:function(t,r,n,o){t.showDisplayItem=!1,t.selectedDisplayOptionChanged=function(e){var i={entityAlias:t.selectedProperty.name,cfc:t.selectedProperty.cfc,propertyIdentifier:t.selectedProperty.propertyIdentifier};t.breadCrumbs.push(i),t.selectedPropertyChanged({selectedProperty:e})},t.$watch("selectedProperty",function(r){angular.isDefined(r)&&angular.isUndefined(t.propertiesList[r.propertyIdentifier])&&e.getFilterPropertiesByBaseEntityName(r.cfc).then(function(e){i.setPropertiesList(e,r.propertyIdentifier),t.propertiesList[r.propertyIdentifier]=i.getPropertiesListByBaseEntityAlias(r.propertyIdentifier),i.formatPropertiesList(t.propertiesList[r.propertyIdentifier],r.propertyIdentifier)},function(e){})})}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder"],t},e}();t.SWDisplayItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{require:"^swDisplayOptions",restrict:"A",scope:{selectedProperty:"=",propertiesList:"=",breadCrumbs:"=",selectedPropertyChanged:"&"},templateUrl:r.buildPartialsPath(t)+"displayitemaggregate.html",link:function(t,r,n,o){t.showDisplayItem=!1,t.aggegate={},t.aggegate.selectedAggregate="",t.aggregateOptions=[{id:"average",value:"Average"},{id:"count",value:"Count"},{id:"sum",value:"Sum"}],t.selectAggregate=function(e){"count"==e?(t.selectedProperty.aggregate=e,t.selectedPropertyChanged({selectedProperty:t.selectedProperty})):t.aggegate.currentObject=t.selectedProperty.cfc},t.selectedDisplayOptionChanged=function(e){e.aggregate=t.aggegate.selectedAggregate,e.aggregateObject=t.aggegate.currentObject,t.selectedPropertyChanged({selectedProperty:e})},t.$watch("selectedProperty",function(r){angular.isDefined(r)&&(angular.isUndefined(t.propertiesList[r.propertyIdentifier])&&e.getFilterPropertiesByBaseEntityName(r.cfc).then(function(e){i.setPropertiesList(e,r.propertyIdentifier),t.propertiesList[r.propertyIdentifier]=i.getPropertiesListByBaseEntityAlias(r.propertyIdentifier),i.formatPropertiesList(t.propertiesList[r.propertyIdentifier],r.propertyIdentifier)},function(e){}),t.showDisplayItem=!0)})}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder"],t},e}();t.SWDisplayItemAggregate=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"E",require:{swListingDisplay:"?^swListingDisplay",swListingControls:"?^swListingControls"},transclude:!0,scope:{orderBy:"<",columns:"=",joins:"<",groupBys:"<",propertiesList:"<",saveCollection:"&?",baseEntityAlias:"<?",baseEntityName:"<?",listingName:"@?"},templateUrl:i.buildPartialsPath(r)+"displayoptions.html",controller:["$scope","$element","$attrs",function(e,t,i){this.removeColumn=function(t){e.columns.length&&e.columns.splice(t,1)}}],link:function(i,r,o,s,a){i.breadCrumbs=[{entityAlias:i.baseEntityAlias,cfc:i.baseEntityAlias,propertyIdentifier:i.baseEntityAlias}],i.getPropertiesList=function(){return i.propertiesList},i.addDisplayDialog={isOpen:!1,toggleDisplayDialog:function(){i.addDisplayDialog.isOpen=!i.addDisplayDialog.isOpen}};var c=function(e){var r,o=i.baseEntityName.replace("Slatwall","").charAt(0).toLowerCase()+i.baseEntityName.replace("Slatwall","").slice(1),s=e.propertyIdentifier,a="",c=s.replace(/^_/,"").split(/[._]+/);return"attribute"==e.$$group?e.displayPropertyIdentifier:(angular.forEach(c,function(e,s){if(0!==s){if(1===s)l=t["new"+i.baseEntityName.replace("Slatwall","")](),r=l.metaData[c[s]],a+=n.getRBKey("entity."+o+"."+e);else{var l=t["new"+r.cfc.charAt(0).toUpperCase()+r.cfc.slice(1)]();r=l.metaData[c[s]],a+=n.getRBKey("entity."+l.metaData.className+"."+r.name)}s<c.length-1&&(a+=" | ")}}),a)};i.addColumn=function(r){var o=i.selectedProperty;if(angular.isDefined(i.selectedAggregate)&&(o=i.selectedAggregate),o.$$group,e.debug(i.columns),angular.isDefined(o)){var a={title:c(o),propertyIdentifier:o.propertyIdentifier,isVisible:!0,isDeletable:!0,isSearchable:!0,isExportable:!0};if(angular.isDefined(o.attributeID)&&(a.attributeID=o.attributeID,a.attributeSetObject=o.attributeSetObject),angular.isDefined(o.ormtype)&&(a.ormtype=o.ormtype),a.type&&"none"!=a.type||!o.hb_formattype?a.type="none":a.type=o.hb_formattype,angular.isDefined(o.aggregate)&&(a.ormtype="string",a.aggregate={aggregateFunction:o.aggregate.toUpperCase(),aggregateAlias:o.propertyIdentifier.split(/[._]+/).pop()+o.aggregate.charAt(0).toUpperCase()+o.aggregate.slice(1)},a.title+=" "+n.getRBKey("define."+a.aggregate.aggregateFunction)),i.columns.push(a),(o.propertyIdentifier.match(/_/g)||[]).length>1){var l=o.propertyIdentifier.length;-1!=o.propertyIdentifier.indexOf(".")&&(l=o.propertyIdentifier.indexOf("."));var u=o.propertyIdentifier.substring(1,l),d=u.split("_"),f=t.getEntityExample(i.baseEntityName),p="",h=[];angular.isDefined(i.joins)&&(h=i.joins);for(var g=1;g<d.length;g++)if(angular.isDefined(f.metaData[d[g]])&&"cfc"in f.metaData[d[g]]){f=t.getEntityExample(f.metaData[d[g]].cfc),p+="_"+d[g];for(var y={associationName:p.replace(/_([^_]+)$/,".$1").substring(1),alias:"_"+d[0]+p},v=!1,m=0;m<h.length;m++)if(h[m].alias===y.alias){v=!0;break}v||h.push(y)}if(i.joins=h,angular.isUndefined(i.groupBys)||i.groupBys.split(",").length!=i.columns.length){for(var b=angular.isUndefined(i.groupBys)?[]:i.groupBys.split(","),w=0;w<i.columns.length;w++)"attributeID"in i.columns[w]||-1==b.indexOf(i.columns[w].propertyIdentifier)&&b.push(i.columns[w].propertyIdentifier);i.groupBys=b.join(",")}}s.swListingControls&&(s.swListingControls.columnIsControllableMap[a.propertyIdentifier]=!0),i.saveCollection(),angular.isDefined(r)&&!0===r&&(i.addDisplayDialog.toggleDisplayDialog(),i.selectBreadCrumb(0))}},i.selectBreadCrumb=function(e){var t=i.breadCrumbs.length-1-e;i.breadCrumbs.splice(e+1,t),i.selectedPropertyChanged(null)};var l=i.$watch("baseEntityAlias",function(e,t){e!==t&&(i.breadCrumbs=[{entityAlias:i.baseEntityAlias,cfc:i.baseEntityAlias,propertyIdentifier:i.baseEntityAlias}],l())});i.selectedPropertyChanged=function(e,t){t?i.selectedAggregate=e:(i.selectedProperty=e,i.selectedAggregate=void 0)},jQuery(function(e){var t=angular.element(r).children("ul");t.sortable({handle:".s-pannel-name",update:function(r,n){var o=[];e(".s-pannel-name",t).each(function(t,r){var n=e(r).attr("j-column-index"),s=i.columns[n];o.push(s)}),i.columns=o,i.saveCollection()}})}),!i.saveCollection&&s.swListingControls&&(i.saveCollection=function(){s.swListingControls.collectionConfig.columns=i.columns,s.swListingDisplay&&(s.swListingDisplay.columns=i.columns),s.swListingControls.saveCollection()}),s.swListingDisplay&&(i.getCollection=s.swListingDisplay.getCollection)}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$log","$hibachi","hibachiPathBuilder","collectionPartialsPath","rbkeyService"],t},e}();t.SWDisplayOptions=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u){return{require:{swFilterGroups:"^swFilterGroups",swListingControls:"?^swListingControls"},restrict:"E",scope:{collectionConfig:"=",filterItem:"=",filterPropertiesList:"=",saveCollection:"&?",removeFilterItem:"&",filterItemIndex:"=",comparisonType:"=",simple:"="},templateUrl:a.buildPartialsPath(n)+"editfilteritem.html",link:function(n,a,d,f){function p(e,t){var i=new Date(e.getFullYear(),e.getMonth(),e.getDate()),r=new Date(t.getFullYear(),t.getMonth(),t.getDate()),n=r.getTime()-i.getTime(),o=n/864e5;return Math.floor(o)}if(!n.saveCollection&&f.swListingControls&&(n.saveCollection=function(){f.swListingControls.collectionConfig=n.collectionConfig,f.swListingControls.saveCollection()}),angular.isUndefined(n.filterItem.breadCrumbs))if(n.filterItem.breadCrumbs=[],""===n.filterItem.propertyIdentifier)n.filterItem.breadCrumbs=[{rbKey:c.getRBKey("entity."+n.collectionConfig.baseEntityAlias.replace("_","")),entityAlias:n.collectionConfig.baseEntityAlias,cfc:n.collectionConfig.baseEntityAlias,propertyIdentifier:n.collectionConfig.baseEntityAlias}];else{var h=n.filterItem.propertyIdentifier.split(".");h.pop();for(var g in h){var y={rbKey:c.getRBKey("entity."+n.collectionConfig.baseEntityAlias.replace("_","")),entityAlias:h[g],cfc:h[g],propertyIdentifier:h[g]};n.filterItem.breadCrumbs.push(y)}}else angular.forEach(n.filterItem.breadCrumbs,function(e,t){if(angular.isUndefined(n.filterPropertiesList[e.propertyIdentifier]))r.getFilterPropertiesByBaseEntityName(e.cfc).then(function(t){s.setPropertiesList(t,e.propertyIdentifier),n.filterPropertiesList[e.propertyIdentifier]=s.getPropertiesListByBaseEntityAlias(e.propertyIdentifier),s.formatPropertiesList(n.filterPropertiesList[e.propertyIdentifier],e.propertyIdentifier);var i=n.filterItem.propertyIdentifier.split(".");if(i.pop(),i=i.join(".").trim(),angular.isDefined(n.filterPropertiesList[i]))for(var r in n.filterPropertiesList[i].data){var o=n.filterPropertiesList[i].data[r];o.propertyIdentifier===n.filterItem.propertyIdentifier&&(n.selectedFilterProperty=o,n.selectedFilterProperty.value=n.filterItem.value,n.selectedFilterProperty.comparisonOperator=n.filterItem.comparisonOperator)}});else{var i=n.filterItem.propertyIdentifier.split(".");if(i.pop(),i=i.join(".").trim(),angular.isDefined(n.filterPropertiesList[i]))for(var o in n.filterPropertiesList[i].data){var a=n.filterPropertiesList[i].data[o];a.propertyIdentifier===n.filterItem.propertyIdentifier&&(n.selectedFilterProperty=a,n.selectedFilterProperty.value=n.filterItem.value,n.selectedFilterProperty.comparisonOperator=n.filterItem.comparisonOperator)}}});angular.isUndefined(n.filterItem.$$isClosed)&&(n.filterItem.$$isClosed=!0),n.filterGroupItem=f.swFilterGroups.getFilterGroupItem(),n.togglePrepareForFilterGroup=function(){n.filterItem.$$prepareForFilterGroup=!n.filterItem.$$prepareForFilterGroup},n.selectBreadCrumb=function(t){var i=n.filterItem.breadCrumbs.length-1-t;n.filterItem.breadCrumbs.splice(t+1,i),e.debug("selectBreadCrumb"),e.debug(n.selectedFilterProperty),n.selectedFilterPropertyChanged(null)},n.selectedFilterPropertyChanged=function(t){e.debug("selectedFilterProperty"),e.debug(t),angular.isDefined(n.selectedFilterProperty)&&null===n.selectedFilterProperty&&(n.selectedFilterProperty={}),angular.isDefined(n.selectedFilterProperty)&&angular.isDefined(n.selectedFilterProperty.selectedCriteriaType)&&delete n.selectedFilterProperty.selectedCriteriaType,angular.isDefined(n.filterItem.value)&&delete n.filterItem.value,n.selectedFilterProperty.showCriteriaValue=!1,n.selectedFilterProperty=t},n.addFilterItem=function(){o.newFilterItem(f.swFilterGroups.getFilterGroupItem(),f.swFilterGroups.setItemInUse),this.observerService.notify("collectionConfigUpdated",{collectionConfig:o})},n.cancelFilterItem=function(){e.debug("cancelFilterItem"),e.debug(n.filterItemIndex),n.filterItem.setItemInUse(!1),n.filterItem.$$isClosed=!0;for(var t in n.filterItem.$$siblingItems)n.filterItem.$$siblingItems[t].$$disabled=!1;!0===n.filterItem.$$isNew?(l.notify("filterItemAction",{action:"remove",filterItemIndex:n.filterItemIndex}),n.removeFilterItem({filterItemIndex:n.filterItemIndex})):l.notify("filterItemAction",{action:"close",filterItemIndex:n.filterItemIndex})},n.saveFilter=function(s,a,c){var d=this;if(e.debug("saveFilter begin"),!angular.isDefined(s.selectedCriteriaType)||!angular.equals({},s.selectedCriteriaType)){if((s.propertyIdentifier.match(/_/g)||[]).length>1){var h="_"==s.propertyIdentifier.charAt(0)?1:0,g=-1==s.propertyIdentifier.indexOf(".")?s.propertyIdentifier.length:s.propertyIdentifier.indexOf("."),y=s.propertyIdentifier.substring(h,g),v=y.split("_"),m=r.getEntityExample(n.collectionConfig.baseEntityName),b="",w=[];angular.isDefined(n.collectionConfig.joins)&&(w=n.collectionConfig.joins);for(var S=1;S<v.length;S++)if(angular.isDefined(m.metaData[v[S]])&&"cfc"in m.metaData[v[S]]){m=r.getEntityExample(m.metaData[v[S]].cfc),b+="_"+v[S];for(var C={associationName:b.replace(/_([^_]+)$/,".$1").substring(1),alias:"_"+v[0]+b},P=!1,O=0;O<w.length;O++)if(w[O].alias===C.alias){P=!0;break}P||w.push(C)}if(n.collectionConfig.joins=w,angular.isDefined(n.collectionConfig.columns)&&(angular.isUndefined(n.collectionConfig.groupBys)||n.collectionConfig.groupBys.split(",").length!=n.collectionConfig.columns.length)){for(var D=angular.isUndefined(n.collectionConfig.groupBys)?[]:n.collectionConfig.groupBys.split(","),I=0;I<n.collectionConfig.columns.length;I++)-1==D.indexOf(n.collectionConfig.columns[I].propertyIdentifier)&&D.push(n.collectionConfig.columns[I].propertyIdentifier);n.collectionConfig.groupBys=D.join(",")}}if(angular.isDefined(s)&&angular.isDefined(s.selectedCriteriaType)){switch(a.$$isNew=!1,a.propertyIdentifier=s.propertyIdentifier,a.displayPropertyIdentifier=s.displayPropertyIdentifier,s.ormtype){case"boolean":a.comparisonOperator=s.selectedCriteriaType.comparisonOperator,a.value=s.selectedCriteriaType.value,a.displayValue=a.value;break;case"string":angular.isDefined(s.attributeID)&&(a.attributeID=s.attributeID,a.attributeSetObject=s.attributeSetObject),a.comparisonOperator=s.selectedCriteriaType.comparisonOperator,angular.isDefined(s.selectedCriteriaType.value)?a.value=s.selectedCriteriaType.value.toString():angular.isDefined(s.selectedCriteriaType.pattern)&&(a.pattern=s.selectedCriteriaType.pattern),a.displayValue=a.value;break;case"timestamp":if(a.comparisonOperator=s.selectedCriteriaType.comparisonOperator,angular.isDefined(s.selectedCriteriaType.value))a.value=s.selectedCriteriaType.value,a.displayValue=a.value;else if(angular.isDefined(s.selectedCriteriaType.dateInfo.type)&&"calculation"===s.selectedCriteriaType.dateInfo.type){var _=p(new Date(s.criteriaRangeStart),new Date(s.criteriaRangeEnd));a.value=_,a.displayValue=s.selectedCriteriaType.display,angular.isDefined(s.criteriaNumberOf)&&(a.criteriaNumberOf=s.criteriaNumberOf)}else if(angular.isDefined(s.selectedCriteriaType.dateInfo.type)&&"exactDate"===s.selectedCriteriaType.dateInfo.type)if(angular.isUndefined(s.selectedCriteriaType.dateInfo.measureType))a.value=s.criteriaRangeStart+"-"+s.criteriaRangeEnd,a.displayValue=t("date")(angular.copy(s.criteriaRangeStart),"MM/dd/yyyy @ h:mma")+"-"+t("date")(angular.copy(s.criteriaRangeEnd),"MM/dd/yyyy @ h:mma");else{switch(a.measureType=s.selectedCriteriaType.dateInfo.measureType,a.measureCriteria=s.selectedCriteriaType.dateInfo.type,a.criteriaNumberOf="0",angular.isDefined(s.criteriaNumberOf)&&(a.criteriaNumberOf=s.criteriaNumberOf),a.value=a.criteriaNumberOf,a.displayValue=a.criteriaNumberOf,a.measureType){case"d":a.displayValue+=" Day";break;case"m":a.displayValue+=" Month";break;case"y":a.displayValue+=" Year"}a.displayValue+=(a.criteriaNumberOf>1?"s":"")+" Ago"}else{var T=u.removeTimeOffset(s.criteriaRangeStart)+"-"+u.removeTimeOffset(s.criteriaRangeEnd);a.value=T;var $=t("date")(angular.copy(s.criteriaRangeStart),"MM/dd/yyyy @ h:mma")+"-"+t("date")(angular.copy(s.criteriaRangeEnd),"MM/dd/yyyy @ h:mma");a.displayValue=$,angular.isDefined(s.criteriaNumberOf)&&(a.criteriaNumberOf=s.criteriaNumberOf)}break;case"big_decimal":case"integer":case"float":if(a.comparisonOperator=s.selectedCriteriaType.comparisonOperator,angular.isDefined(s.selectedCriteriaType.value))a.value=s.selectedCriteriaType.value;else if(angular.isUndefined(s.selectedCriteriaType.type))a.value=s.criteriaValue;else{var A=s.criteriaRangeStart+"-"+s.criteriaRangeEnd;a.value=A}angular.isDefined(s.aggregate)&&(a.aggregate=s.aggregate),a.displayValue=a.value}switch(s.fieldtype){case"one-to-many":case"many-to-many":case"many-to-one":a.comparisonOperator=s.selectedCriteriaType.comparisonOperator,angular.isDefined(s.selectedCriteriaType.value)&&(a.value=s.selectedCriteriaType.value),a.displayValue=a.value}angular.isUndefined(a.displayValue)&&(a.displayValue=a.value),angular.isDefined(s.ormtype)&&(a.ormtype=s.ormtype),angular.isDefined(s.fieldtype)&&(a.fieldtype=s.fieldtype);for(var x in a.$$siblingItems)a.$$siblingItems[x].$$disabled=!1;a.conditionDisplay=s.selectedCriteriaType.display,!0===a.$$prepareForFilterGroup&&o.transplantFilterItemIntoFilterGroup(f.swFilterGroups.getFilterGroupItem(),a),n.saveCollection(),e.debug(s),e.debug(a),i(function(){c()}).then(function(){l.notify("filterItemAction",{action:"add",filterItemIndex:n.filterItemIndex,collectionConfig:d.collectionConfig})}),e.debug("saveFilter end")}}}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c,l,u,d){return new e(t,i,r,n,o,s,a,c,l,u,d)};return t.$inject=["$log","$filter","$timeout","$hibachi","collectionPartialsPath","collectionService","metadataService","hibachiPathBuilder","rbkeyService","observerService","utilityService"],t},e}();t.SWEditFilterItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){return{restrict:"A",require:"^swFilterGroups",scope:{collectionConfig:"=",filterGroupItem:"=",siblingItems:"=",filterPropertiesList:"=",filterGroupItemIndex:"=",saveCollection:"&",comparisonType:"="},link:function(a,c,l,u){var d=s.buildPartialsPath(o)+"filtergroupitem.html";e.get(d,{cache:i}).success(function(e){c.html(e)}).then(function(e){c.replaceWith(t(c.html())(a))}),a.filterGroupItem.setItemInUse=u.setItemInUse,a.filterGroupItem.$$index=a.filterGroupItemIndex,a.removeFilterGroupItem=function(){u.removeFilterGroupItem(a.filterGroupItemIndex)},a.filterGroupItem.removeFilterGroupItem=a.removeFilterGroupItem,a.filterGroupItem.$$disabled=!1,angular.isUndefined(a.filterGroupItem.$$isClosed)&&(a.filterGroupItem.$$isClosed=!0),a.filterGroupItem.$$siblingItems=a.siblingItems,a.selectFilterGroupItem=function(e){n.selectFilterGroupItem(e)},a.logicalOperatorChanged=function(e){r.debug("logicalOperatorChanged"),r.debug(e),a.filterGroupItem.logicalOperator=e,u.saveCollection()}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$http","$compile","$templateCache","$log","collectionService","collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWFilterGroupItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{restrict:"EA",scope:{collectionConfig:"=?",filterGroupItem:"=?",filterPropertiesList:"=?",saveCollection:"&",filterGroup:"=?",comparisonType:"=?",simple:"=",readOnly:"="},templateUrl:i.buildPartialsPath(t)+"filtergroups.html",controller:["$scope","$element","$attrs",function(t,i,r){angular.isDefined(t.comparisonType)||(t.comparisonType="filter"),t.itemInUse=!1,e.debug("collectionConfig"),e.debug(t.collectionConfig),this.getFilterGroup=function(){return t.filterGroup},this.getFilterGroupItem=function(){return t.filterGroupItem},this.setItemInUse=function(e){t.itemInUse=e},this.getItemInUse=function(){return t.itemInUse},this.saveCollection=function(){t.saveCollection()},t.deselectItems=function(e){for(var t in e.$$siblingItems)e.$$siblingItems[t].$$disabled=!1},this.removeFilterItem=function(i){angular.isDefined(i)&&(t.deselectItems(t.filterGroupItem[i]),t.filterGroupItem[i].setItemInUse(!1),e.debug("removeFilterItem"),e.debug(i),t.filterGroupItem.splice(i,1),t.filterGroupItem.length&&delete t.filterGroupItem[0].logicalOperator,e.debug("removeFilterItem"),e.debug(i),t.saveCollection())},this.removeFilterGroupItem=function(i){t.deselectItems(t.filterGroupItem[i]),t.filterGroupItem[i].setItemInUse(!1),t.filterGroupItem.splice(i,1),t.filterGroupItem.length&&delete t.filterGroupItem[0].logicalOperator,e.debug("removeFilterGroupItem"),e.debug(i),t.saveCollection()}}]}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$log","collectionPartialsPath","hibachiPathBuilder","observerService"],t},e}();t.SWFilterGroups=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{restrict:"A",require:"^swFilterGroups",scope:{collectionConfig:"=",filterItem:"=",siblingItems:"=",filterPropertiesList:"=",filterItemIndex:"=",saveCollection:"&",comparisonType:"=",simple:"="},templateUrl:r.buildPartialsPath(i)+"filteritem.html",link:function(i,r,n,o){i.baseEntityAlias=i.collectionConfig.baseEntityAlias,angular.isUndefined(i.filterItem.$$isClosed)&&(i.filterItem.$$isClosed=!0),angular.isUndefined(i.filterItem.$$disabled)&&(i.filterItem.$$disabled=!1),angular.isUndefined(i.filterItem.siblingItems)&&(i.filterItem.$$siblingItems=i.siblingItems),i.filterItem.setItemInUse=o.setItemInUse,i.selectFilterItem=function(e){t.selectFilterItem(e)},i.removeFilterItem=function(){o.removeFilterItem(i.filterItemIndex,o.getFilterGroupItem())},i.filterGroupItem=o.getFilterGroupItem(),i.logicalOperatorChanged=function(t){e.debug("logicalOperatorChanged"),e.debug(t),i.filterItem.logicalOperator=t,o.saveCollection()}}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$log","collectionService","collectionPartialsPath","hibachiPathBuilder"],t},e}();t.SWFilterItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){var n=this;this.$timeout=e,this.collectionConfigService=t,this.$hibachi=i,this.observerService=r,this.$onDestroy=function(){n.observerService.detachByEvent("saveCollection")},this.setCollectionConfig=function(e){n.permissionRecordRestriction.data.collectionConfig=angular.toJson(e.collectionConfig.getCollectionConfig()),n.permissionRecordRestriction.forms.permissionRecordRestrictionForm.collectionConfig.$setViewValue(e.collectionConfig.getCollectionConfig()),n.permissionRecordRestriction.forms.permissionRecordRestrictionForm.$setDirty(!0),n.permissionRecordRestriction.$$save()};var o=this.$hibachi.getPermissionRecordRestriction(this.permissionRecordRestrictionId);o.promise.then(function(){var e=n.collectionConfigService.newCollectionConfig();n.permissionRecordRestriction=o.value,e.loadJson(n.permissionRecordRestriction.collectionConfig),n.collectionConfig=e}),r.attach(this.setCollectionConfig,"saveCollection")}return e}(),n=function(){function e(e,t){this.restrict="E",this.scope={},this.bindToController={permissionRecordRestrictionId:"@?"},this.controller=r,this.controllerAs="swRestrictionConfig",this.link=function(e,t,i){},this.templateUrl=e.buildPartialsPath(t)+"restrictionconfig.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["hibachiPathBuilder","collectionPartialsPath"],t},e}();t.SWRestrictionConfig=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d){e.saveCollection=function(e){var i={collectionID:t.collectionId,collectionConfig:e.collectionConfig};n.saveEntity("Collection",t.collectionId,i,"save").then(function(e){},function(e){})},d.attach(e.saveCollection,"swPaginationUpdate",t.tableId)}return e}();t.CollectionController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){e.deleteEntity=function(i){t.debug("Deleting an entity."),t.debug(e.entity),this.close()},e.fireCallback=function(e){e(),this.close()},e.close=function(){i.close()},e.cancel=function(){i.dismiss("cancel")}}return e}();t.ConfirmationController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f){f.scrollTo(0,0),e.params=a.getCurrentDialog().params,e.readOnly=angular.isDefined(e.params.readOnly)&&1==e.params.readOnly,e.myCollection=u.newCollectionConfig(e.params.entityName);var p=r.getConfig();if("Type"==e.params.entityName&&angular.isUndefined(e.params.entityId)&&angular.isDefined(e.params.parentEntity)){e.params.parentEntity=e.params.parentEntity.replace(new RegExp("^"+p.applicationKey,"i"),"");var h=e.params.parentEntity.charAt(0).toLowerCase()+e.params.parentEntity.slice(1)+"Type";e.myCollection.addFilter("parentType.systemCode",h)}e.keywords="",e.paginator=s.createPagination(),e.hideEditView=!0,e.hasSelection=l.getSelectionCount,e.idsSelected=l.getSelections,e.unselectAll=function(){l.clearSelections("collectionSelection"),e.getCollection()},e.newCollection=r.newCollection(),e.newCollection.data.collectionCode=e.params.entityName+"-"+(new Date).valueOf(),e.newCollection.data.collectionObject=e.params.entityName,angular.isDefined(e.params.entityId)&&(e.newCollection.data.collectionID=e.params.entityId,i(function(){e.newCollection.forms["form.createCollection"].$setDirty()})),angular.isDefined(e.params.collectionName)&&(e.newCollection.data.collectionName=e.params.collectionName,i(function(){e.newCollection.forms["form.createCollection"].$setDirty()})),e.saveCollection=function(){e.myCollection.loadJson(e.collectionConfig),e.getCollection()},e.getCollection=function(){e.closeSaving=!0,e.myCollection.setPageShow(e.paginator.getPageShow()),e.myCollection.setCurrentPage(e.paginator.getCurrentPage()),e.myCollection.setKeywords(e.keywords);var i;i=angular.isDefined(e.params.entityId)?{id:e.params.entityId,currentPage:e.paginator.getCurrentPage(),pageShow:e.paginator.getPageShow(),keywords:e.keywords}:e.myCollection.getOptions(),t.debug(e.myCollection.getOptions());var o=r.getEntity(e.myCollection.getEntityName(),i);return o.then(function(t){if(angular.isDefined(e.params.entityId)&&(e.newCollection.data.collectionName=t.collectionName),e.collection=t,e.collection.collectionObject=e.myCollection.baseEntityName,e.collectionInitial=angular.copy(e.collection),e.paginator.setRecordsCount(e.collection.recordsCount),e.paginator.setPageRecordsInfo(e.collection),angular.isUndefined(e.myCollection.columns)){var i=angular.fromJson(t.collectionConfig);i.baseEntityName=i.baseEntityName.replace(new RegExp("^"+p.applicationKey,"i"),""),e.myCollection.loadJson(i)}if(angular.isUndefined(e.collectionConfig)){var r=u.newCollectionConfig();r.loadJson(t.collectionConfig),e.collectionConfig=r.getCollectionConfig()}!angular.isUndefined(e.collectionConfig.filterGroups)&&e.collectionConfig.filterGroups.length||(e.collectionConfig.filterGroups=[{filterGroup:[]}]),n.setFilterCount(y()),e.loadingCollection=!1,e.closeSaving=!1},function(e){}),o},e.paginator.collection=e.newCollection,e.paginator.getCollection=e.getCollection;var g=e.$watch("collection",function(t,i){t!==i&&(angular.isUndefined(e.filterPropertiesList)&&(e.filterPropertiesList={},r.getFilterPropertiesByBaseEntityName(e.collectionConfig.baseEntityAlias).then(function(t){o.setPropertiesList(t,e.collectionConfig.baseEntityAlias),e.filterPropertiesList[e.collectionConfig.baseEntityAlias]=o.getPropertiesListByBaseEntityAlias(e.collectionConfig.baseEntityAlias),o.formatPropertiesList(e.filterPropertiesList[e.collectionConfig.baseEntityAlias],e.collectionConfig.baseEntityAlias)})),g())}),y=function(t){var i=0;angular.isDefined(t)||(t=e.collectionConfig.filterGroups[0].filterGroup);for(var r in t)if(t[r].$$isNew||angular.isDefined(t[r].filterGroup)){if(!angular.isDefined(t[r].filterGroup))break;i+=y(t[r].filterGroup)}else i++;return i};e.getCollection(),e.copyExistingCollection=function(){e.collection.collectionConfig=e.selectedExistingCollection},e.setSelectedExistingCollection=function(t){e.selectedExistingCollection=t},e.setSelectedFilterProperty=function(t){e.selectedFilterProperty=t},e.loadingCollection=!1;var v;e.searchCollection=function(){v&&i.cancel(v),v=i(function(){e.paginator.setCurrentPage(1),e.loadingCollection=!0},500)},e.filterCount=n.getFilterCount,e.hideExport=!0,e.saveNewCollection=function(t){e.closeSaving||(e.closeSaving=!0,!angular.isUndefined(l.getSelections("collectionSelection"))&&l.getSelections("collectionSelection").length>0&&(e.collectionConfig.filterGroups[0].filterGroup=[{displayPropertyIdentifier:d.getRBKey("entity."+e.myCollection.baseEntityName.toLowerCase()+"."+e.myCollection.collection.$$getIDName().toLowerCase()),propertyIdentifier:e.myCollection.baseEntityAlias+"."+e.myCollection.collection.$$getIDName(),comparisonOperator:"in",value:l.getSelections("collectionSelection").join(),displayValue:l.getSelections("collectionSelection").join(),ormtype:"string",fieldtype:"id",conditionDisplay:"In List"}]),e.newCollection.data.collectionConfig=e.collectionConfig,0!==e.newCollection.data.collectionConfig.baseEntityName.lastIndexOf(p.applicationKey,0)&&(e.newCollection.data.collectionConfig.baseEntityName=p.applicationKey+e.newCollection.data.collectionConfig.baseEntityName),e.newCollection.$$save().then(function(){c.notify("addCollection",e.newCollection.data),l.clearSelection("collectionSelection"),a.removePageDialog(t),e.closeSaving=!1},function(){e.closeSaving=!1}))}}return e}();t.CreateCollection=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.$scope=e,this.collectionConfigService=t,this.$scope.entity_createcollectionCtrl={},this.$scope.entity_createcollectionCtrl.baseCollections=[],this.collection=this.collectionConfigService.newCollectionConfig("Collection"),this.collection.setDisplayProperties("collectionID,collectionName"),this.getBaseCollections("Access"),this.$scope.entity_createcollectionCtrl.collectionObjectChanged=function(){i.getBaseCollections(i.$scope.entity_createcollectionCtrl.selectedOption)}}return e.prototype.getBaseCollections=function(e){var t=this;this.collection.clearFilters(),this.collection.addFilter("collectionObject",e),this.collection.setPageShow(50),this.collection.getEntity().then(function(e){t.$scope.entity_createcollectionCtrl.baseCollections=e.pageRecords})},e}();t.CollectionCreateController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(e){return function(e){return e.filter(function(e){return!(e.fieldtype&&"id"!==e.fieldtype||e.ormtype&&["big_decimal","double","float","integer"].indexOf(e.ormtype)<0)})}},e}();t.AggregateFilter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u){void 0===i&&(i=!0),void 0===r&&(r=!0),void 0===n&&(n=!0),void 0===o&&(o=!0),this.propertyIdentifier=e,this.title=t,this.isVisible=i,this.isDeletable=r,this.isSearchable=n,this.isExportable=o,this.persistent=s,this.ormtype=a,this.attributeID=c,this.attributeSetObject=l,this.type=u}return e}();t.Column=r;var n=function(){function e(e,t,i,r,n,o,s,a){void 0===s&&(s=!1),this.propertyIdentifier=e,this.value=t,this.comparisonOperator=i,this.logicalOperator=r,this.displayPropertyIdentifier=n,this.displayValue=o,this.hidden=s,this.pattern=a}return e}();t.Filter=n;var o=function(){function e(e,t,i,r,n,o,s){void 0===s&&(s=!1),this.propertyIdentifier=e,this.displayPropertyIdentifier=t,this.displayValue=i,this.collectionID=r,this.criteria=n,this.fieldtype=o,this.readOnly=s}return e}();t.CollectionFilter=o;var s=function(){function e(e,t){this.associationName=e,this.alias=t}return e}();t.Join=s;var a=function(){function e(e,t){this.propertyIdentifier=e,this.direction=t}return e}();t.OrderBy=a;var c=function(){function e(t,i,a,c,l,u,d,f,p,h,g,y,v,m,b,w,S,C,P,O){void 0===f&&(f=[]),void 0===p&&(p=[{filterGroup:[]}]),void 0===h&&(h=[{filterGroup:[]}]),void 0===b&&(b=1),void 0===w&&(w=10),void 0===S&&(S=""),void 0===C&&(C=!1),void 0===P&&(P=!1),void 0===O&&(O=!1);var D=this;this.rbkeyService=t,this.$hibachi=i,this.utilityService=a,this.observerService=c,this.baseEntityName=l,this.baseEntityAlias=u,this.columns=d,this.keywordColumns=f,this.filterGroups=p,this.keywordFilterGroups=h,this.joins=g,this.orderBy=y,this.groupBys=v,this.id=m,this.currentPage=b,this.pageShow=w,this.keywords=S,this.allRecords=C,this.dirtyRead=P,this.isDistinct=O,this.clearFilterGroups=function(){return D.filterGroups=[{filterGroup:[]}],D.keywordFilterGroups=[{filterGroup:[]}],D},this.newCollectionConfig=function(t,i){return new e(D.rbkeyService,D.$hibachi,D.utilityService,D.observerService,t,i)},this.loadJson=function(e){for(;angular.isString(e);)e=angular.fromJson(e);return D.baseEntityAlias=e.baseEntityAlias,D.baseEntityName=e.baseEntityName,angular.isDefined(e.filterGroups)&&(D.validateFilter(e.filterGroups),D.filterGroups=e.filterGroups),D.columns=e.columns,D.joins=e.joins,D.keywords=e.keywords,D.orderBy=e.orderBy,D.groupBys=e.groupBys,D.pageShow=e.pageShow,D.allRecords=e.allRecords,e.dirtyRead&&(D.dirtyRead=e.dirtyRead),D.isDistinct=e.isDistinct,D.currentPage=e.currentPage||1,D.pageShow=e.pageShow||10,D.keywords=e.keywords,D},this.clone=function(){return D.newCollectionConfig(D.baseEntityName,D.baseEntityAlias).loadJson(JSON.parse(JSON.stringify(D.getCollectionConfig())))},this.loadFilterGroups=function(e){return void 0===e&&(e=[{filterGroup:[]}]),D.filterGroups=e,D},this.loadColumns=function(e){return D.columns=e,D},this.getCollectionConfig=function(e){return void 0===e&&(e=!0),e&&D.validateFilter(D.filterGroups),{baseEntityAlias:D.baseEntityAlias,baseEntityName:D.baseEntityName,columns:D.columns,keywordColumns:D.keywordColumns,filterGroups:D.filterGroups,joins:D.joins,groupBys:D.groupBys,currentPage:D.currentPage,pageShow:D.pageShow,keywords:D.keywords,defaultColumns:!D.columns||!D.columns.length,allRecords:D.allRecords,dirtyRead:D.dirtyRead,isDistinct:D.isDistinct,orderBy:D.orderBy}},this.getEntityName=function(){return D.baseEntityName.charAt(0).toUpperCase()+D.baseEntityName.slice(1)},this.getOptions=function(){D.validateFilter(D.filterGroups);var e=D.columns;if(D.keywords&&D.keywords.length&&D.keywordFilterGroups[0].filterGroup.length>0)var t=D.keywordFilterGroups;else var t=D.filterGroups;var i={columnsConfig:angular.toJson(e),filterGroupsConfig:angular.toJson(t),joinsConfig:angular.toJson(D.joins),orderByConfig:angular.toJson(D.orderBy),groupBysConfig:angular.toJson(D.groupBys),currentPage:D.currentPage,pageShow:D.pageShow,keywords:D.keywords,defaultColumns:!D.columns||!D.columns.length,allRecords:D.allRecords,dirtyRead:D.dirtyRead,isDistinct:D.isDistinct};return angular.isDefined(D.id)&&(i.id=D.id),i},this.debug=function(){return D},this.formatPropertyIdentifier=function(e,t){void 0===t&&(t=!1),0===e.lastIndexOf(D.baseEntityAlias,0)&&(e=e.slice(D.baseEntityAlias.length+1));var i=D.baseEntityAlias;return i+=!0===t?D.processJoin(e):"."+e},this.processJoin=function(e){for(var t="",i=e.split("."),r=D.collection,n=0;n<i.length;n++)angular.isDefined(r.metaData[i[n]])&&"cfc"in r.metaData[i[n]]?(r=D.$hibachi.getEntityExample(r.metaData[i[n]].cfc),t+="_"+i[n],D.addJoin(new s(t.replace(/_([^_]+)$/,".$1").substring(1),D.baseEntityAlias+t))):t+="."+i[n];return t},this.addJoin=function(e){D.joins||(D.joins=[]);var t=!1;return angular.forEach(D.joins,function(i){i.alias===e.alias&&(t=!0)}),t||D.joins.push(e),D},this.addAlias=function(e){var t=e.split(".");return t.length>1&&t[0]!==D.baseEntityAlias?D.baseEntityAlias+"."+e:e},this.addColumn=function(e,t,i){if(void 0===t&&(t=""),void 0===i&&(i={}),!D.columns||null!=i.aggregate||-1===D.utilityService.ArrayFindByPropertyValue(D.columns,"propertyIdentifier",e)){var n,o=!0,s=!0,a=!0,c=!0,l="none",u="string",d=e.split(".").pop(),f=!0,p=!1,h=D.$hibachi.getEntityExample(D.$hibachi.getLastEntityNameInPropertyIdentifier(D.baseEntityName,e));if(angular.isUndefined(h))throw"You have passed an incorrect entity name to a collection config";angular.isUndefined(D.columns)&&(D.columns=[]),angular.isDefined(i.isVisible)&&(o=i.isVisible),angular.isUndefined(i.isVisible)&&"ID"===e.substring(e.length-2)&&(o=!1),angular.isDefined(i.isDeletable)&&(s=i.isDeletable),angular.isDefined(i.isSearchable)&&(a=i.isSearchable),angular.isDefined(i.isExportable)&&(c=i.isExportable),angular.isUndefined(i.isExportable)&&!o&&(c=!1),angular.isDefined(i.ormtype)?u=i.ormtype:h.metaData[d]&&h.metaData[d].ormtype&&(u=h.metaData[d].ormtype),angular.isDefined(i.type)&&"none"!=i.type?l=i.type:h.metaData[d]&&h.metaData[d].hb_formattype&&(l=h.metaData[d].hb_formattype),angular.isDefined(i.isKeywordColumn)&&(f=i.isKeywordColumn),angular.isDefined(i.isOnlyKeywordColumn)&&(p=i.isOnlyKeywordColumn),angular.isDefined(h.metaData[d])&&(n=h.metaData[d].persistent);var g=new r(e,t,o,s,a,c,n,u,i.attributeID,i.attributeSetObject,l);i.aggregate&&(g.aggregate=i.aggregate,g.aggregateAlias=t);for(var y in i)g[y]||(g[y]=i[y]);p||D.columns.push(g),f&&D.keywordColumns.push(g)}return D},this.setDisplayProperties=function(e,t,i){return void 0===t&&(t=""),void 0===i&&(i={}),D.addDisplayProperty(e,t,i),D},this.addDisplayAggregate=function(e,t,i,r){angular.isUndefined(i)&&(i=e.replace(/\./g,"_")+t);var n={propertyIdentifier:D.formatPropertyIdentifier(e,!0),title:D.rbkeyService.getRBKey("entity."+D.$hibachi.getLastEntityNameInPropertyIdentifier(D.baseEntityName,e)+"."+D.utilityService.listLast(e)),aggregate:{aggregateFunction:t,aggregateAlias:i}};return angular.extend(n,r),D.addColumn(n.propertyIdentifier,void 0,n),D},this.addGroupBy=function(e){return D.groupBys||(D.groupBys=""),D.groupBys=D.utilityService.listAppendUnique(D.groupBys,e),D},this.addDisplayProperty=function(e,t,i){void 0===t&&(t=""),void 0===i&&(i={});var r=e.trim().split(","),n=t.trim().split(","),o=e.split(".").length>1;return r.forEach(function(e,r){e=e.trim(),t=angular.isDefined(n[r])&&""!=n[r].trim()?n[r].trim():D.rbkeyService.getRBKey("entity."+D.$hibachi.getLastEntityNameInPropertyIdentifier(D.baseEntityName,e)+"."+D.utilityService.listLast(e,".")),D.addColumn(D.formatPropertyIdentifier(e,o),t,i)}),D},this.addFilter=function(e,t,i,r,n,o,s){void 0===i&&(i="="),void 0===n&&(n=!1),void 0===o&&(o=!0),void 0===s&&(s=!1),D.filterGroups[0].filterGroup.length||(r=void 0),e.split(".").length>1&&D.processJoin(e);var a=D.createFilter(e,t,i,r,n);return s||D.filterGroups[0].filterGroup.push(a),o&&D.keywordFilterGroups[0].filterGroup.push(a),D.notify("collectionConfigUpdated",{collectionConfig:D}),D},this.addLikeFilter=function(e,t,i,r,o,s){void 0===i&&(i="%w%"),void 0===s&&(s=!1),D.filterGroups||(D.filterGroups=[{filterGroup:[]}]),D.filterGroups[0].filterGroup.length&&!r&&(r="AND");var a=e.split(".").length>1;angular.isUndefined(o)&&(o=D.rbkeyService.getRBKey("entity."+D.$hibachi.getLastEntityNameInPropertyIdentifier(D.baseEntityName,e)+"."+D.utilityService.listLast(e)));var c=new n(D.formatPropertyIdentifier(e,a),t,"like",r,o,t,s,i);return D.filterGroups[0].filterGroup.push(c),D.notify("collectionConfigUpdated",{collectionConfig:D}),D},this.createFilter=function(e,t,i,r,o){void 0===i&&(i="="),void 0===o&&(o=!1),D.filterGroups||(D.filterGroups=[{filterGroup:[]}]),D.filterGroups[0].filterGroup.length&&!r&&(r="AND");var s=e.split(".").length>1;return new n(D.formatPropertyIdentifier(e,s),t,i,r,e.split(".").pop(),t,o)},this.addFilterGroup=function(e){for(var t={filterGroup:[],logicalOperator:"AND"},i=0;i<e.length;i++){var r=D.createFilter(e[i].propertyIdentifier,e[i].comparisonValue,e[i].comparisonOperator,e[i].logicalOperator,e[i].hidden);t.filterGroup.push(r)}return D.filterGroups[0].filterGroup.push(t),D.notify("collectionConfigUpdated",{collectionConfig:D}),D},this.removeFilter=function(e,t,i){return void 0===i&&(i="="),D.removeFilterHelper(D.filterGroups,e,t,i),D.notify("collectionConfigUpdated",{collectionConfig:D}),D},this.removeFilterByDisplayPropertyIdentifier=function(e){D.removeFromFilterGroupsByPropertyIdentifier(D.filterGroups,e),D.removeFromFilterGroupsByPropertyIdentifier(D.keywordFilterGroups,e)},this.removeFromFilterGroupsByPropertyIdentifier=function(e,t){for(var i=0;i<e.length;i++)for(var r=e[i].filterGroup,n=0;n<r.length;n++){var o=r[n];o.displayPropertyIdentifier==t&&(r.splice(n,1),n--)}},this.removeFilterHelper=function(e,t,i,r,n){angular.isUndefined(n)&&(n=e),angular.isArray(e)?angular.forEach(e,function(n){D.removeFilterHelper(n,t,i,r,e)}):angular.isArray(e.filterGroup)?D.removeFilterHelper(e.filterGroup,t,i,r,e.filterGroup):e.propertyIdentifier==t&&e.value==i&&e.comparisonOperator==r&&n.splice(n.indexOf(e),1)},this.addCollectionFilter=function(e,t,i,r,n,s,a){return void 0===n&&(n="One"),void 0===a&&(a=!1),D.filterGroups[0].filterGroup.push(new o(D.formatPropertyIdentifier(e),t,i,r,n,s,a)),D.notify("collectionConfigUpdated",{collectionConfig:D}),D},this.setOrderBy=function(e){var t=e.split(",");return angular.forEach(t,function(e){D.addOrderBy(e)}),D},this.clearOrderBy=function(){D.orderBy=[]},this.addOrderBy=function(e,t){void 0===t&&(t=!0),D.orderBy||(D.orderBy=[]);var i=D.utilityService.listFirst(e,"|");t&&(i=D.formatPropertyIdentifier(i));var r=D.utilityService.listLast(e,"|"),n={propertyIdentifier:i,direction:r};D.orderBy.push(n)},this.toggleOrderBy=function(e,t){void 0===t&&(t=!1),D.orderBy||(D.orderBy=[]);for(var i=D.orderBy.length-1;i>=0;i--)if(D.orderBy[i].propertyIdentifier==e){"DESC"==D.orderBy[i].direction.toUpperCase()?D.orderBy[i].direction="ASC":"ASC"==D.orderBy[i].direction.toUpperCase()&&D.orderBy.splice(i,1);break}var r="desc";if(t){D.orderBy=[];for(var i=0;i<D.columns.length;i++)D.columns[i].sorting||(D.columns[i].sorting={}),angular.isUndefined(D.columns[i].sorting.active)&&(D.columns[i].sorting.active=!1),D.columns[i].propertyIdentifier==e?(D.columns[i].sorting.active=!0,D.columns[i].sorting.priority=1,D.columns[i].sorting.sortOrder&&"desc"!==D.columns[i].sorting.sortOrder?(D.columns[i].sorting.sortOrder="desc",r="desc"):(D.columns[i].sorting.sortOrder="asc",r="asc")):D.columns[i].sorting&&D.columns[i].sorting.active&&(D.columns[i].sorting.active=!1,D.columns[i].sorting.sortOrder="asc")}D.addOrderBy(e+"|"+r,!1),D.notify("swPaginationAction",{type:"setCurrentPage",payload:1})},this.removeOrderBy=function(e){return angular.forEach(D.orderBy,function(t,i){if(t.propertyIdentifier==e)return D.orderBy.splice(i,1),!0}),!1},this.setCurrentPage=function(e){return D.currentPage=e,D},this.getCurrentPage=function(){return D.currentPage},this.setPageShow=function(e){return D.pageShow=e,D},this.getPageShow=function(){return D.pageShow},this.setAllRecords=function(e){return void 0===e&&(e=!1),D.allRecords=e,D},this.setDistinct=function(e){return void 0===e&&(e=!0),D.isDistinct=e,D},this.setDirtyRead=function(e){return void 0===e&&(e=!1),D.dirtyRead=e,D},this.setKeywords=function(e){return D.keywords=e,D},this.setId=function(e){return D.id=e,D},this.setEventID=function(e){return D.eventID=e,D},this.hasFilters=function(){return D.filterGroups.length&&D.filterGroups[0].filterGroup.length},this.hasColumns=function(){return null!=D.columns&&D.columns.length>0},this.clearFilters=function(){return D.filterGroups=[{filterGroup:[]}],D},this.getEntity=function(e){return angular.isDefined(e)&&D.setId(e),D.$hibachi.getEntity(D.baseEntityName,D.getOptions())},this.validateFilter=function(e,t){if(angular.isUndefined(t)&&(t=e),angular.isArray(e))angular.forEach(e,function(t){D.validateFilter(t,e)});else if(angular.isArray(e.filterGroup))D.validateFilter(e.filterGroup,e.filterGroup);else if(!(e.comparisonOperator&&e.comparisonOperator.length||e.propertyIdentifier&&e.propertyIdentifier.length)){var i=t.indexOf(e);i>-1&&(D.notify("filterItemAction",{action:"remove",filterItemIndex:i}),t.splice(i,1))}},this.getColumns=function(){return D.columns||(D.columns=[]),D.columns},this.setColumns=function(e){return D.columns=e,D},this.$hibachi=i,this.rbkeyService=t,angular.isDefined(this.baseEntityName)&&(this.collection=this.$hibachi.getEntityExample(this.baseEntityName),angular.isUndefined(this.baseEntityAlias)&&(this.baseEntityAlias="_"+this.baseEntityName.toLowerCase()))}return Object.defineProperty(e.prototype,"collectionConfigString",{get:function(){return angular.toJson(this.getCollectionConfig(!1))},enumerable:!0,configurable:!0}),e.prototype.notify=function(e,t){angular.isDefined(this.eventID)?this.observerService.notifyById(e,this.eventID,t):this.observerService.notify(e,t)},e}();t.CollectionConfig=c},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r,n,o){var s=e.call(this,t,i,r,"Collection")||this;return s.$injector=t,s.$hibachi=i,s.utilityService=r,s.$filter=n,s.$log=o,s.get=function(){return s._pageDialogs||[]},s.setFilterCount=function(e){s.$log.debug("incrementFilterCount"),s._filterCount=e},s.getFilterCount=function(){return s._filterCount},s.getColumns=function(){return s._collection.collectionConfig.columns},s.getFilterPropertiesList=function(){return s._filterPropertiesList},s.getFilterPropertiesListByBaseEntityAlias=function(e){return s._filterPropertiesList[e]},s.setFilterPropertiesList=function(e,t){angular.isUndefined(s._filterPropertiesList[t])&&(s._filterPropertiesList[t]=e)},s.stringifyJSON=function(e){return angular.toJson(e)},s.removeFilterItem=function(e,t){t.pop(t.indexOf(e))},s.selectFilterItem=function(e){if(e.$$isClosed){for(var t in e.$$siblingItems)e.$$siblingItems[t].$$isClosed=!0,e.$$siblingItems[t].$$disabled=!0;e.$$isClosed=!1,e.$$disabled=!1,e.setItemInUse(!0)}else{for(var t in e.$$siblingItems)e.$$siblingItems[t].$$disabled=!1;e.$$isClosed=!0,e.setItemInUse(!1)}},s.selectFilterGroupItem=function(e){if(e.$$isClosed){for(var t in e.$$siblingItems)e.$$siblingItems[t].$$disabled=!0;e.$$isClosed=!1,e.$$disabled=!1}else{for(var t in e.$$siblingItems)e.$$siblingItems[t].$$disabled=!1;e.$$isClosed=!0}e.setItemInUse(!e.$$isClosed)},s.newFilterItem=function(e,t,i){angular.isUndefined(i)&&(i=!1);var r={displayPropertyIdentifier:"",propertyIdentifier:"",comparisonOperator:"",value:"",$$disabled:!1,$$isClosed:!0,$$isNew:!0,$$siblingItems:e,setItemInUse:t};return 0!==e.length&&(r.logicalOperator="AND"),!0===i&&(r.$$prepareForFilterGroup=!0),e.push(r),s.selectFilterItem(r),e.length-1},s.newFilterGroupItem=function(e,t){var i={filterGroup:[],$$disabled:"false",$$isClosed:"true",$$siblingItems:e,$$isNew:"true",setItemInUse:t};0!==e.length&&(i.logicalOperator="AND"),e.push(i),s.selectFilterGroupItem(i),s.newFilterItem(i.filterGroup,t,void 0)},s.transplantFilterItemIntoFilterGroup=function(e,t){var i={filterGroup:[],$$disabled:"false",$$isClosed:"true",$$isNew:"true"};angular.isDefined(t.logicalOperator)&&(i.logicalOperator=t.logicalOperator,delete t.logicalOperator),i.setItemInUse=t.setItemInUse,i.$$siblingItems=t.$$siblingItems,t.$$siblingItems=[],e.pop(e.indexOf(t)),t.$$prepareForFilterGroup=!1,i.filterGroup.push(t),e.push(i)},s.formatFilterPropertiesList=function(e,t){s.$log.debug("format Filter Properties List arguments 2"),s.$log.debug(e),s.$log.debug(t);var i={$$group:"simple",displayPropertyIdentifier:"-----------------"};e.data.push(i);var r={$$group:"drilldown",displayPropertyIdentifier:"-----------------"};e.data.push(r);var n={$$group:"compareCollections",displayPropertyIdentifier:"-----------------"};e.data.push(n);var o={$$group:"attribute",displayPropertyIdentifier:"-----------------"};e.data.push(o);for(var a in e.data)angular.isDefined(e.data[a].ormtype)&&(angular.isDefined(e.data[a].attributeID)?e.data[a].$$group="attribute":e.data[a].$$group="simple"),angular.isDefined(e.data[a].fieldtype)&&("id"===e.data[a].fieldtype&&(e.data[a].$$group="simple"),"many-to-one"===e.data[a].fieldtype&&(e.data[a].$$group="drilldown"),"many-to-many"!==e.data[a].fieldtype&&"one-to-many"!==e.data[a].fieldtype||(e.data[a].$$group="compareCollections")),e.data[a].propertyIdentifier=t+"."+e.data[a].name;e.data=s._orderBy(e.data,["-$$group","propertyIdentifier"],!1)},s.orderBy=function(e,t,i){return s._orderBy(e,t,i)},s.$filter=n,s.$log=o,s._collection=null,s._collectionConfig=null,s._filterPropertiesList={},s._filterCount=0,s._orderBy=n("orderBy"),s}return r(t,e),t}(n.BaseEntityService);t.CollectionService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u){var d=this;this.$scope=e,this.$element=t,this.$templateRequest=i,this.$compile=r,this.$timeout=n,this.corePartialsPath=o,this.utilityService=s,this.observerService=a,this.$hibachi=c,this.rbkeyService=l,this.$onInit=function(){if(angular.isUndefined(d.isAngularRoute)&&(d.isAngularRoute=d.utilityService.isAngularRoute()),d.isAngularRoute?d.actionUrl="#!/entity/"+d.action+"/"+d.queryString.split("=")[1]:d.actionUrl=d.$hibachi.buildUrl(d.action,d.queryString),d.type=d.type||"link",angular.isDefined(d.titleRbKey)&&(d.title=d.rbkeyService.getRBKey(d.titleRbKey)),angular.isUndefined(d.text)&&(d.text=d.title),"button"==d.type)var e=d.$scope.$watch(function(){return d.formController},function(t,i){void 0!==t&&(d.formController=t),e()});if(d.eventListeners)for(var t in d.eventListeners)d.observerService.attach(d.eventListeners[t],t)},this.submit=function(){d.$timeout(function(){d.form?d.form.$valid&&d.formController.submit(d.action):d.$scope.$root.slatwall.doAction(d.action)})},this.getAction=function(){return d.action||""},this.getActionItem=function(){return d.utilityService.listLast(d.getAction(),".")},this.getActionItemEntityName=function(){var e=d.utilityService.left(d.actionItem,4),t=d.utilityService.left(d.actionItem,6),i=d.utilityService.right(d.actionItem,4),r=d.utilityService.right(d.actionItem,6),n="";return"list"===e&&d.actionItem.length>4?n=i:"edit"===e&&d.actionItem.length>4?n=i:"save"===e&&d.actionItem.length>4?n=i:"create"===t&&d.actionItem.length>6?n=r:"detail"===t&&d.actionItem.length>6?n=r:"delete"===t&&d.actionItem.length>6&&(n=r),n},this.getTitle=function(){return!angular.isUndefined(d.title)&&d.title.length||(d.title=d.getText()),d.title},this.getTextByRBKeyByAction=function(e,t){void 0===t&&(t=!1);var i=d.rbkeyService.getRBKey("admin.define."+e+"_nav"),r="",n="";return t?(r=d.rbkeyService.getRBKey("entity."+d.actionItemEntityName+"_plural"),n="${itemEntityNamePlural}"):(r=d.rbkeyService.getRBKey("entity."+d.actionItemEntityName),n="${itemEntityName}"),d.utilityService.replaceAll(i,n,r)},this.getText=function(){if(angular.isUndefined(d.text)||angular.isDefined(d.text)&&!d.text.length){if(d.text=d.rbkeyService.getRBKey(d.utilityService.replaceAll(d.getAction(),":",".")+"_nav"),"_missing"===d.utilityService.right(d.text,8)){var e=d.utilityService.left(d.actionItem,4),t=d.utilityService.left(d.actionItem,6);d.utilityService.right(d.actionItem,4),d.utilityService.right(d.actionItem,6),"list"===e&&d.actionItem.length>4?d.text=d.getTextByRBKeyByAction("list",!0):"edit"===e&&d.actionItem.length>4?d.text=d.getTextByRBKeyByAction("edit",!1):"save"===e&&d.actionItem.length>4?d.text=d.getTextByRBKeyByAction("save",!1):"create"===t&&d.actionItem.length>6?d.text=d.getTextByRBKeyByAction("create",!1):"detail"===t&&d.actionItem.length>6?d.text=d.getTextByRBKeyByAction("detail",!1):"delete"===t&&d.actionItem.length>6&&(d.text=d.getTextByRBKeyByAction("delete",!1))}d.utilityService.right(d.text,8)&&(d.text=d.rbkeyService.getRBKey(d.utilityService.replaceAll(d.getAction(),":",".")))}return(!d.title||d.title&&!d.title.length)&&(d.title=d.text),d.text},this.getDisabled=function(){return!(!angular.isDefined(d.disabled)||!d.disabled)},this.getDisabledText=function(){if(d.getDisabled()){if(angular.isUndefined(d.disabledtext)||!d.disabledtext.length){var e=d.utilityService.replaceAll(d.action,":",".")+"_disabled";d.disabledtext=d.rbkeyService.getRBKey(e)}return d.class+=" btn-disabled",d.confirm=!1,d.disabledtext}return""},this.getConfirm=function(){return!(!angular.isDefined(d.confirm)||!d.confirm)},this.getConfirmText=function(){if(d.getConfirm()){if(angular.isUndefined(d.confirmtext)&&d.confirmtext.length){var e=d.utilityService.replaceAll(d.action,":",".")+"_confirm";d.confirmtext=d.rbkeyService.getRBKey(e)}return d.class+=" alert-confirm",d.confirm}return""},this.$scope=e,this.$element=t,this.$timeout=n,this.$templateRequest=i,this.$compile=r,this.rbkeyService=l,this.$hibachi=c,this.utilityService=s,this.hibachiPathBuilder=u,this.$templateRequest(this.hibachiPathBuilder.buildPartialsPath(o)+"actioncaller.html").then(function(t){var i=angular.element(t);d.$element.parent().append(i),r(i)(e)})}return e}();t.SWActionCallerController=r;var n=function(){function e(e,t,i){this.partialsPath=e,this.utiltiyService=t,this.$hibachi=i,this.restrict="EA",this.scope={},this.bindToController={action:"@",text:"@",type:"@",queryString:"@",title:"@?",titleRbKey:"@?",class:"@",icon:"@",iconOnly:"=",name:"@",confirm:"=",confirmtext:"@",disabled:"=",disabledtext:"@",modal:"=",modalFullWidth:"=",id:"@",isAngularRoute:"=?",eventListeners:"=?"},this.require={formController:"^?swForm",form:"^?form"},this.controller=r,this.controllerAs="swActionCaller",this.link=function(e,t,i){angular.isDefined(e.swActionCaller.formController)&&(e.formController=e.swActionCaller.formController)}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["partialsPath","utilityService","$hibachi"],t},e}();t.SWActionCaller=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.title=this.title||"",this.icon=this.icon||"plus",this.type=this.type||"button",this.dropdownClass=this.dropdownClass||"",this.dropdownId=this.dropdownId||"",this.buttonClass=this.buttonClass||"btn-primary"}return e}();t.SWActionCallerDropdownController=r;var n=function(){function e(e,t){this.corePartialsPath=e,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={title:"@",icon:"@",type:"=",dropdownClass:"@",dropdownId:"@",buttonClass:"@"},this.controller=r,this.controllerAs="swActionCallerDropdown",this.link=function(e,t,i){},this.templateUrl=t.buildPartialsPath(e)+"actioncallerdropdown.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e}();t.SWActionCallerDropdown=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){var r=this;this.$document=e,this.$timeout=t,this.utilityService=i,this.restrict="A",this.scope={swClickOutside:"&"},this.link=function(e,t,i){r.$document.on("click",function(i){i&&i.target&&(angular.element(t).hasClass("ng-hide")||i.target!==t&&t&&t[0]&&!r.utilityService.isDescendantElement(t[0],i.target)&&r.$timeout(function(){e.swClickOutside()}))})},this.$document=e,this.$timeout=t,this.utilityService=i}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$document","$timeout","utilityService"],t},e}();t.SWClickOutside=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.SWCollectionColumnController=r;var n=function(){function e(t,i){var r=this;this.scopeService=t,this.utilityService=i,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",fallbackPropertyIdentifiers:"@?",isVisible:"=?",isSearchable:"=?",isDeletable:"=?",isExportable:"=?",isKeywordColumn:"=?",isOnlyKeywordColumn:"=?",tdclass:"@?",hidden:"=?"},this.controller=e,this.controllerAs="swCollectionColumn",this.template="",this.link=function(e,t,i){angular.isUndefined(e.swCollectionColumn.isKeywordColumn)&&(e.swCollectionColumn.isKeywordColumn=!1),angular.isUndefined(e.swCollectionColumn.isOnlyKeywordColumn)&&(e.swCollectionColumn.isOnlyKeywordColumn=e.swCollectionColumn.isKeywordColumn),angular.isUndefined(e.swCollectionColumn.isVisible)&&(e.swCollectionColumn.isVisible=!0),angular.isUndefined(e.swCollectionColumn.isSearchable)&&(e.swCollectionColumn.isSearchable=!1),angular.isUndefined(e.swCollectionColumn.isDeletable)&&(e.swCollectionColumn.isDeletable=!1),angular.isUndefined(e.swCollectionColumn.isExportable)&&(e.swCollectionColumn.isExportable=!0);var n={propertyIdentifier:e.swCollectionColumn.propertyIdentifier,fallbackPropertyIdentifiers:e.swCollectionColumn.fallbackPropertyIdentifiers,isVisible:e.swCollectionColumn.isVisible,isSearchable:e.swCollectionColumn.isSearchable,isDeletable:e.swCollectionColumn.isDeletable,isExportable:e.swCollectionColumn.isExportable,hidden:e.swCollectionColumn.hidden,tdclass:e.swCollectionColumn.tdclass,isKeywordColumn:e.swCollectionColumn.isKeywordColumn,isOnlyKeywordColumn:e.swCollectionColumn.isOnlyKeywordColumn},o=r.scopeService.getRootParentScope(e,"swCollectionConfig");if(!angular.isDefined(o.swCollectionConfig))throw"Could not find swCollectionConfig in the parent scope from swcollectioncolumn";o.swCollectionConfig.columns.push(n),o.swCollectionConfig.columnsDeferred.resolve()}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["scopeService","utilityService"],t},e}();t.SWCollectionColumn=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){this.$transclude=e,this.$q=t,this.collectionConfigService=i,this.filters=[],this.columns=[],this.orderBys=[],this.keywordColumns=[],this.columnsDeferred=this.$q.defer(),this.columnsPromise=this.columnsDeferred.promise,this.filtersDeferred=this.$q.defer(),this.filtersPromise=this.filtersDeferred.promise,this.orderBysDeferred=this.$q.defer(),this.orderBysPromise=this.columnsDeferred.promise}return e}();t.SWCollectionConfigController=r;var n=function(){function e(e,t,i,n){var o=this;this.collectionConfigService=e,this.listingService=t,this.scopeService=i,this.$q=n,this.restrict="EA",this.scope=!0,this.transclude={columns:"?swCollectionColumns",filters:"?swCollectionFilters",orderBys:"?swCollectionOrderBys"},this.bindToController={allRecords:"=?",collectionConfigProperty:"@?",distinct:"=?",entityName:"@",filterFlag:"=?",inListingDisplay:"=?",multiCollectionConfigProperty:"@?",pageShow:"@?",parentDirectiveControllerAsName:"@?",parentDeferredProperty:"@?"},this.controller=r,this.controllerAs="swCollectionConfig",this.template=' \n        <div ng-transclude="columns"></div>\n        <div ng-transclude="filters"></div>\n        <div ng-transclude="orderBys"></div>\n    ',this.link=function(e,t,i){if(angular.isUndefined(e.swCollectionConfig.inListingDisplay)&&(e.swCollectionConfig.inListingDisplay=!1),e.swCollectionConfig.inListingDisplay&&(e.swCollectionConfig.parentDirectiveControllerAsName="swListingDisplay",e.swCollectionConfig.parentDeferredProperty="singleCollectionDeferred"),angular.isUndefined(e.swCollectionConfig.entityName))throw"You must provide an entityname to swCollectionConfig";if(angular.isUndefined(e.swCollectionConfig.parentDirectiveControllerAsName)&&!e.swCollectionConfig.inListingDisplay)throw"You must provide the parent directives Controller-As Name to swCollectionConfig";angular.isUndefined(e.swCollectionConfig.collectionConfigProperty)&&(e.swCollectionConfig.collectionConfigProperty="collectionConfig"),angular.isUndefined(e.swCollectionConfig.allRecords)&&(e.swCollectionConfig.allRecords=!1),angular.isUndefined(e.swCollectionConfig.pageShow)&&(e.swCollectionConfig.pageShow=10),angular.isUndefined(e.swCollectionConfig.distinct)&&(e.swCollectionConfig.distinct=!1),angular.isUndefined(e.swCollectionConfig.filterFlag)&&(e.swCollectionConfig.filterFlag=!0);for(var r=[],n=e;angular.isDefined(n)&&(angular.isDefined(n.swCollectionConfig)&&(r.push(n.swCollectionConfig.columnsPromise),e.swCollectionConfig.filterFlag&&r.push(n.swCollectionConfig.filtersPromise)),null!=(n=n.$$nextSibling)););var s=o.collectionConfigService.newCollectionConfig(e.swCollectionConfig.entityName);s.setAllRecords(e.swCollectionConfig.allRecords),s.setDistinct(e.swCollectionConfig.distinct),s.setPageShow(e.swCollectionConfig.pageShow);var n=o.scopeService.getRootParentScope(e,e.swCollectionConfig.parentDirectiveControllerAsName);if(!n[e.swCollectionConfig.parentDirectiveControllerAsName])throw"swCollectionConfig was unable to find a parent scope";var a=n[e.swCollectionConfig.parentDirectiveControllerAsName];e.swCollectionConfig.columnsPromise.then(function(){angular.forEach(e.swCollectionConfig.columns,function(e){s.addDisplayProperty(e.propertyIdentifier,"",e)})}),e.swCollectionConfig.filtersPromise.then(function(){angular.forEach(e.swCollectionConfig.filters,function(e){s.addFilter(e.propertyIdentifier,e.comparisonValue,e.comparisonOperator,e.logicalOperator,e.hidden)})}),e.swCollectionConfig.orderBysPromise.then(function(){angular.forEach(e.swCollectionConfig.orderBys,function(e){s.addOrderBy(e)})}),o.$q.all(r).then(function(){if(angular.isDefined(a)){if(angular.isDefined(e.swCollectionConfig.multiCollectionConfigProperty)&&angular.isDefined(a[e.swCollectionConfig.multiCollectionConfigProperty]))a[e.swCollectionConfig.multiCollectionConfigProperty].push(s);else{if(!angular.isDefined(a[e.swCollectionConfig.collectionConfigProperty]))throw"swCollectionConfig could not locate a collection config property to bind it's collection to";a[e.swCollectionConfig.collectionConfigProperty]=s}angular.isDefined(a[e.swCollectionConfig.parentDeferredProperty])&&a[e.swCollectionConfig.parentDeferredProperty].resolve()}},function(e){throw"SWCollectionConfig is having some issues."})}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["collectionConfigService","listingService","scopeService","$q"],t},e}();t.SWCollectionConfig=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.SWCollectionFilterController=r;var n=function(){function e(e,t){var i=this;this.scopeService=e,this.utilityService=t,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",comparisonOperator:"@?",comparisonValue:"@?",logicalOperator:"@?",hidden:"@?"},this.controller=r,this.controllerAs="SWCollectionFilter",this.template="",this.link=function(e,t,r){var n={propertyIdentifier:e.SWCollectionFilter.propertyIdentifier,comparisonOperator:e.SWCollectionFilter.comparisonOperator,comparisonValue:e.SWCollectionFilter.comparisonValue,logicalOperator:e.SWCollectionFilter.logicalOperator,hidden:e.SWCollectionFilter.hidden},o=i.scopeService.getRootParentScope(e,"swCollectionConfig");if(!angular.isDefined(o.swCollectionConfig))throw"could not find swCollectionConfig in the parent scope from swcollectionfilter";o.swCollectionConfig.filters.push(n),o.swCollectionConfig.filtersDeferred.resolve()}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["scopeService","utilityService"],t},e}();t.SWCollectionFilter=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.SWCollectionOrderByController=r;var n=function(){function e(e){var t=this;this.scopeService=e,this.restrict="EA",this.scope=!0,this.bindToController={orderBy:"@"},this.controller=r,this.controllerAs="SWCollectionOrderBy",this.template="",this.link=function(e,i,r){var n=e.SWCollectionOrderBy.orderBy,o=t.scopeService.getRootParentScope(e,"swCollectionConfig");if(!angular.isDefined(o.swCollectionConfig))throw"could not find swCollectionConfig in the parent scope from swcollectionorderby";o.swCollectionConfig.orderBys.push(n),o.swCollectionConfig.orderBysDeferred.resolve()}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["scopeService"],t},e}();t.SWCollectionOrderBy=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"AE",scope:{column:"="},templateUrl:i.buildPartialsPath(t)+"columnsorter.html",link:function(t,i,r){var n={propertyIdentifier:t.column.propertyIdentifier};t.sortAsc=function(){n.direction="Asc",this.observerService.notify("sortByColumn",n)},t.sortDesc=function(){n.direction="Desc",e.notify("sortByColumn",n)}}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["observerService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWColumnSorter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=function(t,i,r,n,o,s){var a="",c="",l="<div><div class='modal-header'><a class='close' data-dismiss='modal' ng-click='cancel()'>×</a><h3 [confirm]><confirm></h3></div><div class='modal-body' [message]><message></div><div class='modal-footer'><button class='btn btn-sm btn-default btn-inverse' ng-click='cancel()' [no]><no></button><button class='btn btn-sm btn-default btn-primary' ng-click='fireCallback(callback)' [yes]><yes></button></div></div></div>";return"true"===i?(e.debug("Using RbKey? "+i),r="sw-rbkey=\"'"+r+"'\"",n="sw-rbkey=\"'"+n+"'\"",s="sw-rbkey=\"'"+s+"'\"",o="sw-rbkey=\"'"+o+"'\"",a=l.replace("[confirm]",r).replace(n,n).replace("[no]",o).replace("[yes]",s),e.debug(c),c=a.replace("[confirm]","").replace("<message>","").replace("<no>","").replace("<yes>",""),e.debug(c),c):(e.debug("Using RbKey? "+i),a=l.replace("<confirm>",r).replace("<message>",n).replace("<no>",o).replace("<yes>",s),c=a.replace("[confirm]","").replace("[message]","").replace("[no]","").replace("[yes]",""),e.debug(c),c)};return{restrict:"EA",scope:{callback:"&",entity:"="},link:function(r,n,o){e.debug("Modal is: "),e.debug(t),n.bind("click",function(){var n=o.useRbKey||"false",s=(o.simple,o.yesText||"define.yes"),a=o.noText||"define.no",c=o.confirmText||"define.delete",l=o.messageText||"define.delete_message",u=i(0,n,c,l,a,s);t.open({template:u,controller:"confirmationController",scope:r}).result.then(function(t){return e.debug("Result:"+t),!0},function(){})})}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$log","$modal"],t},e}();t.SWConfirm=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"AE",scope:{variables:"=",directiveTemplate:"="},controllerAs:"swDirective",link:function(i,r,n){var o={};angular.forEach(i.variables,function(e,i){"$"!=i.toString().charAt(0)&&" "!==e&&(o[t.keyToAttributeString(i)]=e)}),i.variables=o;var s="<"+i.directiveTemplate+" ";angular.isDefined(i.variables)&&angular.forEach(i.variables,function(e,t){angular.isString(e)||angular.isNumber(e)?s+=" "+t+'="'+e+'" ':s+=" "+t+'="swDirective.variables.'+t+'" '}),s+=">",s+="</"+i.directiveTemplate+">",r.html(e(s)(i))}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$compile","utilityService"],t},e}();t.SWDirective=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){angular.isUndefined(this.draggable)&&(this.draggable=!1)}return e}(),n=function(){function e(e,t,i,n){var o=this;this.corePartialsPath=e,this.utilityService=t,this.draggableService=i,this.hibachiPathBuilder=n,this.restrict="EA",this.scope={},this.bindToController={draggable:"=",draggableRecord:"=",draggableKey:"="},this.controller=r,this.controllerAs="swDraggable",this.link=function(e,t,i){e.$watch("swDraggable.draggable",function(i,r){angular.element(t).attr("draggable",i);var n=angular.element(t).attr("id");n||(n=o.utilityService.createID(32)),i?(t.bind("dragstart",function(i){if(i=i.originalEvent||i,i.stopPropagation(),!e.swDraggable.draggable)return!1;t.addClass("s-dragging"),e.swDraggable.draggableRecord.draggableStartKey=e.swDraggable.draggableKey,i.dataTransfer.setData("application/json",angular.toJson(e.swDraggable.draggableRecord)),i.dataTransfer.effectAllowed="move",i.dataTransfer.setDragImage(t[0],0,0)}),t.bind("dragend",function(e){e=e.originalEvent||e,e.stopPropagation(),t.removeClass("s-dragging")})):(t.unbind("dragstart"),t.unbind("dragged"))})}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["corePartialsPath","utilityService","draggableService","hibachiPathBuilder"],t},e}();t.SWDraggable=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.draggableService=e,angular.isUndefined(this.draggable)&&(this.draggable=!1)}return e}(),n=function(){function e(e,t,i,n,o,s,a){var c=this;this.$timeout=e,this.corePartialsPath=t,this.utilityService=i,this.listingService=n,this.observerService=o,this.draggableService=s,this.hibachiPathBuilder=a,this.restrict="EA",this.scope={},this.bindToController={draggable:"=?",draggableRecords:"=?",dropEventName:"@?",listingId:"@?"},this.controller=r,this.controllerAs="swDraggableContainer",this.link=function(e,t,i){e.$watch("swDraggableContainer.draggable",function(i,r){angular.element(t).attr("draggable",i);var n=angular.element("<tr class='s-placeholder'><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td></td></tr>"),o=angular.element(t).attr("id");o||(o=c.utilityService.createID(32));var s=t[0],a=n[0];n.remove(),i&&(t.on("drop",function(t){if(t=t.originalEvent||t,t.preventDefault(),!c.draggableService.isDropAllowed(t))return!0;var i=t.dataTransfer.getData("application/json")||t.dataTransfer.getData("text/plain"),r=JSON.parse(i),o=Array.prototype.indexOf.call(s.children,a);return o<r.draggableStartKey&&r.draggableStartKey++,c.$timeout(function(){e.swDraggableContainer.draggableRecords.splice(o,0,r),e.swDraggableContainer.draggableRecords.splice(r.draggableStartKey,1)},0),angular.isDefined(e.swDraggableContainer.listingId)?c.listingService.notifyListingPageRecordsUpdate(e.swDraggableContainer.listingId):angular.isDefined(e.swDraggableContainer.dropEventName)&&c.observerService.notify(e.swDraggableContainer.dropEventName),n.remove(),t.stopPropagation(),!1}),t.on("dragenter",function(e){if(e=e.originalEvent||e,!c.draggableService.isDropAllowed(e))return!0;e.preventDefault()}),t.on("dragleave",function(e){return e=e.originalEvent||e,0!=e.pageX||e.pageY,!1}),t.on("dragover",function(e){if(e=e.originalEvent||e,e.stopPropagation(),a.parentNode!=s&&t.append(n),e.target!==s){for(var i=e.target;i.parentNode!==s&&i.parentNode;)i=i.parentNode;i.parentNode===s&&i!==a&&(c.draggableService.isMouseInFirstHalf(e,i)?s.insertBefore(a,i):s.insertBefore(a,i.nextSibling))}return t.addClass("s-dragged-over"),!1}))})}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$timeout","corePartialsPath","utilityService","listingService","observerService","draggableService","hibachiPathBuilder"],t},e}();t.SWDraggableContainer=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.rbkeyService=e,this.init=function(){angular.isDefined(t.pageTitleRbKey)&&(t.pageTitle=t.rbkeyService.getRBKey(t.pageTitleRbKey))},this.init()}return e}(),n=function(){function e(e,t){this.corePartialsPath=e,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={type:"@",object:"=",pageTitle:"@?",pageTitleRbKey:"@?",edit:"=",showcancel:"=",showcreate:"=",showedit:"=",showdelete:"=",createModal:"=",createAction:"=",createQueryString:"=",backAction:"=",backQueryString:"=",cancelAction:"=",cancelQueryString:"=",deleteAction:"=",deleteQueryString:"=",processAction:"=",processContext:"="},this.controller=r,this.controllerAs="swEntityActionBar",this.link=function(e,t,i){},this.templateUrl=t.buildPartialsPath(e)+"entityactionbar.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e}();t.SWEntityActionBar=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}(),n=function(){function e(e,t){this.corePartialsPath=e,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={},this.controller=r,this.controllerAs="swEntityActionBarButtonGroup",this.link=function(e,t,i){},this.templateUrl=t.buildPartialsPath(e)+"entityactionbarbuttongroup.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e}();t.SWEntityActionBarButtonGroup=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$timeout=e,this.$hibachi=t,this.utilityService=i,this.collectionConfigService=r,this.expandableService=n,this.listingService=o,this.observerService=s,this.childrenLoaded=!1,this.childrenOpen=!1,this.children=[],this.refreshChildren=function(){a.getEntity()},this.setupChildCollectionConfig=function(){a.childCollectionConfig=a.collectionConfigService.newCollectionConfig(a.entity.metaData.className);var e=a.entity.metaData.hb_parentPropertyName,t=a.entity.metaData[e].cfc;a.parentIDName=a.$hibachi.getEntityExample(t).$$getIDName();var i=a.entity.metaData.hb_childPropertyName,r=a.entity.metaData[i].cfc;a.$hibachi.getEntityExample(r).$$getIDName(),a.childCollectionConfig.clearFilterGroups(),a.childCollectionConfig.collection=a.entity,a.childCollectionConfig.addFilter(e+"."+a.parentIDName,a.parentId),a.childCollectionConfig.setAllRecords(!0),angular.forEach(a.collectionConfig.columns,function(e){a.childCollectionConfig.addColumn(e.propertyIdentifier,e.title,e)}),angular.forEach(a.collectionConfig.joins,function(e){a.childCollectionConfig.addJoin(e)}),a.childCollectionConfig.groupBys=a.collectionConfig.groupBys},this.getEntity=function(){a.collectionPromise.then(function(e){a.collectionData=e,a.collectionData.pageRecords=a.collectionData.pageRecords||a.collectionData.records,a.collectionData.pageRecords.length&&angular.forEach(a.collectionData.pageRecords,function(e){a.expandableService.addRecord(e[a.parentIDName],!0),e.dataparentID=a.recordID,e.depth=a.recordDepth||0,e.depth++,a.children.push(e),a.records.splice(a.recordIndex+1,0,e)}),a.childrenLoaded=!0})},this.toggleChild=function(){a.$timeout(function(){a.childrenOpen=!a.childrenOpen,a.expandableService.updateState(a.recordID,{isOpen:a.childrenOpen}),a.childrenLoaded||(null==a.childCollectionConfig&&a.setupChildCollectionConfig(),angular.isFunction(a.childCollectionConfig.getEntity)&&(a.collectionPromise=a.childCollectionConfig.getEntity()),a.getEntity()),angular.forEach(a.children,function(e){e.dataIsVisible=a.childrenOpen;var t=a.entity.$$getIDName(),i=[];i.push(e[t]),a.expandableService.updateState(e[t],{isOpen:a.childrenOpen});for(var r=!1,n=a.records.length;!r&&i.length>0;){for(var o=!1,s=i.pop(),c=0;c<n;c++){var l=a.records[c];l.dataparentID==s&&(i.push(l[t]),a.expandableService.updateState(l[t],{isOpen:a.childrenOpen}),l.dataIsVisible=a.childrenOpen,o=!0)}o||(r=!0)}})})},this.recordID=this.parentId,n.addRecord(this.recordID),angular.isDefined(this.refreshChildrenEvent)&&this.refreshChildrenEvent.length&&this.observerService.attach(this.refreshChildren,this.refreshChildrenEvent)}return e}(),n=function(){function e(e,t,i,n,o,s,a){var c=this;this.$compile=e,this.$templateRequest=t,this.$timeout=i,this.corePartialsPath=n,this.utilityService=o,this.expandableService=s,this.hibachiPathBuilder=a,this.restrict="EA",this.scope={},this.bindToController={recordValue:"=",link:"@",expandable:"=?",parentId:"=",entity:"=",collectionConfig:"=?",childCollectionConfig:"=?",refreshChildrenEvent:"=?",listingId:"@?",records:"=",pageRecord:"=",recordIndex:"=",recordDepth:"=",childCount:"=",autoOpen:"=",multiselectIdPaths:"=",expandableRules:"="},this.controller=r,this.controllerAs="swExpandableRecord",this.link=function(e,t,i){if(e.swExpandableRecord.expandable&&e.swExpandableRecord.childCount){if(e.swExpandableRecord.recordValue){var r=e.swExpandableRecord.records[e.swExpandableRecord.recordIndex][e.swExpandableRecord.entity.$$getIDName()];if(e.swExpandableRecord.multiselectIdPaths&&e.swExpandableRecord.multiselectIdPaths.length){var n=e.swExpandableRecord.multiselectIdPaths.split(",");e.swExpandableRecord.childrenLoaded||angular.forEach(n,function(t){var i=c.utilityService.listFind(t,r,"/"),n=t.split("/"),o=n.length;-1!==i&&i<o-1&&!c.expandableService.getState(r,"isOpen")&&(c.expandableService.updateState(r,{isOpen:!0}),e.swExpandableRecord.toggleChild())})}}c.$templateRequest(c.hibachiPathBuilder.buildPartialsPath(c.corePartialsPath)+"expandablerecord.html").then(function(i){var r=angular.element(i),n=angular.copy(e.swExpandableRecord.autoOpen);e.swExpandableRecord.autoOpen=!1,r=c.$compile(r)(e),t.html(r),t.on("click",e.swExpandableRecord.toggleChild),n&&e.swExpandableRecord.toggleChild()})}},this.$compile=e,this.$templateRequest=t,this.corePartialsPath=n,this.$timeout=i,this.utilityService=o,this.expandableService=s,this.hibachiPathBuilder=a}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$compile","$templateRequest","$timeout","corePartialsPath","utilityService","expandableService","hibachiPathBuilder"],t},e}();t.SWExpandableRecord=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){var n=this;this.$timeout=e,this.$http=t,this.$hibachi=i,this.localStorageService=r,this.startTimeout=function(){n.$timeout(function(){confirm(n.confirmText),n.$http.get(n.$hibachi.buildUrl("api:main.login")).then(function(e){200===e.status?(n.localStorageService.setItem("token",e.data.token),n.startTimeout()):(alert("Unable To Login"),location.reload())},function(e){throw"Login Failed"})},72e4)},angular.isUndefined(this.confirmText)&&(this.confirmText="Are you still there? You are about to be logged out."),this.startTimeout()}return e}(),n=function(){function e(e,t){this.corePartialsPath=e,this.restrict="E",this.scope={},this.transclude=!1,this.bindToController={confirmText:"@?"},this.controller=r,this.controllerAs="swExpiringSessionNotifier",this.link=function(e,t,i){},this.template=""}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e}();t.SWExpiringSessionNotifier=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"A",templateUrl:i.buildPartialsPath(t)+"exportaction.html",scope:{},link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$log","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWExportAction=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(64),n=function(){function e(){this.gravatarURL="http://www.gravatar.com/avatar/"+r(this.emailAddress.toLowerCase().trim())}return e}();t.SWGravatarController=n;var o=function(){function e(){this.template="<img src='{{swGravatar.gravatarURL}}' />",this.transclude=!1,this.restrict="E",this.scope={},this.bindToController={emailAddress:"@"},this.controller=n,this.controllerAs="swGravatar",this.link=function(e,t,i,r,n){}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e.$inject=["$hibachi","$timeout","collectionConfigService","corePartialsPath","hibachiPathBuilder"],e}();t.SWGravatar=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){return{restrict:"A",scope:{swHref:"@"},link:function(e,t,i){var r=i.swHref;r="?ng#!"+r,t.attr("href",r)}}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWHref=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"A",transclude:!0,templateUrl:i.buildPartialsPath(t)+"loading.html",scope:{swLoading:"="},link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$log","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWLoading=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$route=e,this.$log=t,this.$window=i,this.corePartialsPath=r,this.$hibachi=n,this.dialogService=o,this.hibachiScope=s,this.login=function(){a.$hibachi.login(a.account_login.data.emailAddress,a.account_login.data.password).then(function(e){e&&e.data&&e.data.token&&(a.$window.localStorage.setItem("token",e.data.token),a.hibachiScope.loginDisplayed=!1,a.$route.reload(),a.dialogService.removeCurrentDialog())},function(e){})},this.$hibachi=n,this.$window=i,this.$route=e,this.hibachiScope=s,this.account_login=n.newEntity("Account_Login")}return e}(),n=function(){function e(e,t,i,n,o,s,a){this.$route=e,this.$log=t,this.$window=i,this.corePartialsPath=n,this.$hibachi=o,this.dialogService=s,this.restrict="E",this.scope={},this.bindToController={},this.controller=r,this.controllerAs="SwLogin",this.link=function(e,t,i){},this.templateUrl=a.buildPartialsPath(this.corePartialsPath+"/login.html")}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$route","$log","$window","corePartialsPath","$hibachi","dialogService","hibachiPathBuilder"],t},e}();t.SWLogin=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.hasSaveAction=!1,this.hasCancelAction=!1,this.hasDeleteAction=!1,this.launchModal=function(){e.showModal=!0},this.saveCallback=function(){if(e.hasSaveAction)var t=e.saveAction()();t.then(function(t){$("#"+e.modalName).modal("hide")},function(e){})},this.deleteCallback=function(){if(e.hasDeleteAction)var t=e.saveAction()();t.then(function(t){$("#"+e.modalName).modal("hide")},function(e){})},this.cancelCallback=function(){e.hasCancelAction&&e.cancelAction()()},angular.isUndefined(this.showModal)&&(this.showModal=!1),angular.isUndefined(this.saveActionText)&&(this.saveActionText="Save"),angular.isUndefined(this.cancelActionText)&&(this.cancelActionText="Cancel")}return e}();t.SWModalLauncherController=r;var n=function(){function e(e,t,i){this.$compile=e,this.corePartialsPath=t,this.transclude={button:"?swModalButton",staticButton:"?swModalStaticButton",content:"?swModalContent"},this.restrict="EA",this.scope={},this.bindToController={showModal:"=?",modalName:"@",title:"@",saveAction:"&?",deleteAction:"&?",cancelAction:"&?",saveActionText:"@?",cancelActionText:"@?"},this.controller=r,this.controllerAs="swModalLauncher",this.compile=function(e,t,i){return{pre:function(e,t,i){angular.isDefined(i.saveAction)&&(e.swModalLauncher.hasSaveAction=!0),angular.isDefined(i.deleteAction)&&(e.swModalLauncher.hasDeleteAction=!0),angular.isDefined(i.cancelAction)&&(e.swModalLauncher.hasCancelAction=!0)},post:function(e,t,i){}}},this.templateUrl=i.buildPartialsPath(t)+"modallauncher.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWModalLauncher=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){angular.isUndefined(this.modalName)&&(this.modalName="")}return e}();t.SWModalWindowController=r;var n=function(){function e(e,t,i){this.$compile=e,this.corePartialsPath=t,this.transclude={modalBody:"?swModalBody"},this.restrict="EA",this.scope={},this.bindToController={modalName:"@",title:"@",hasSaveAction:"=?",saveAction:"&?",hasDeleteAction:"=?",deleteAction:"&?",hasCancelAction:"=?",cancelAction:"&?",saveActionText:"@",cancelActionText:"@"},this.controller=r,this.controllerAs="swModalWindow",this.compile=function(e,t,i){return{pre:function(e,t,i){},post:function(e,t,i){}}},this.templateUrl=i.buildPartialsPath(t)+"modalwindow.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWModalWindow=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.restrict="A",this.require="ngModel",this.scope={ngModel:"=",minNumber:"=?",maxNumber:"=?"},this.link=function(e,t,i,r){r.$parsers.unshift(function(t){var i=r.$modelValue;return""==t||isNaN(Number(t))||(angular.isDefined(e.minNumber)&&(Number(t)>=e.minNumber||!angular.isDefined(e.minNumber)?r.$setValidity("minNumber",!0):angular.isDefined(e.minNumber)&&r.$setValidity("minNumber",!1)),angular.isDefined(e.maxNumber)&&(Number(t)<=e.maxNumber||!angular.isDefined(e.maxNumber)?r.$setValidity("maxNumber",!0):angular.isDefined(e.maxNumber)&&r.$setValidity("maxNumber",!1)),i=r.$valid?Number(t):e.minNumber),i})}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWNumbersOnly=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"AE",scope:{objectName:"@"},templateUrl:n.buildPartialsPath(r)+"options.html",link:function(e,r,n){e.swOptions={},e.swOptions.objectName=e.objectName,e.getOptions=function(){e.swOptions.object=t["new"+e.swOptions.objectName]();var r=[{propertyIdentifier:e.swOptions.objectName.charAt(0).toLowerCase()+e.swOptions.objectName.slice(1)+"Name"},{propertyIdentifier:e.swOptions.object.$$getIDName()}];t.getEntity(e.swOptions.objectName,{allRecords:!0,columnsConfig:angular.toJson(r)}).then(function(t){e.swOptions.options=t.records,i.notify("optionsLoaded")})},e.getOptions();var o=function(t){t?e.swOptions.selectOption(t):e.swOptions.selectOption(e.swOptions.options[0])};i.attach(o,"selectOption","selectOption"),e.swOptions.selectOption=function(t){e.swOptions.selectedOption=t,i.notify("optionsChanged",t)}}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$log","$hibachi","observerService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWOptions=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){var r=this;this.listingService=e,this.observerService=t,this.utilityService=i,this.sortCode="ASC",this.updateSortOrderProperty=function(){angular.isDefined(r.selectedPropertyIdentifier)?r.propertyNotChosen=!1:r.propertyNotChosen=!0,r.updateOrderBy()},this.updateOrderBy=function(){if(angular.isDefined(r.selectedPropertyIdentifier)&&r.selectedPropertyIdentifier.length>0)var e=r.selectedPropertyIdentifier;switch(r.sortCode){case"ASC":r.disabled=!1,null!=e&&(angular.isDefined(r.collectionConfig)&&r.collectionConfig.toggleOrderBy(e,!0),r.inListingDisplay&&r.listingService.setSingleColumnOrderBy(r.listingId,e,"ASC")),r.inListingDisplay&&r.listingService.setManualSort(r.listingId,!1);break;case"DESC":r.disabled=!1,null!=e&&(angular.isDefined(r.collectionConfig)&&r.collectionConfig.toggleOrderBy(e,!0),r.inListingDisplay&&r.listingService.setSingleColumnOrderBy(r.listingId,e,"DESC"),r.inListingDisplay&&r.listingService.setManualSort(r.listingId,!1));break;case"MANUAL":r.disabled=!0,r.inListingDisplay&&r.listingService.setManualSort(r.listingId,!0)}},this.sortAscending=function(){r.sortCode="ASC",r.updateOrderBy()},this.sortDescending=function(){r.sortCode="DESC",r.updateOrderBy()},this.manualSort=function(){r.sortCode="MANUAL",r.updateOrderBy()},angular.isUndefined(this.edit)&&(this.edit=!0),angular.isDefined(this.collectionConfig)&&(this.columns=this.collectionConfig.columns),angular.isDefined(this.initialSortDefaultDirection)&&this.initialSortDefaultDirection.length>0&&(this.sortCode=this.initialSortDefaultDirection),angular.isDefined(this.initialSortProperty)&&this.initialSortProperty.length>0&&(this.selectedPropertyIdentifier=this.initialSortProperty),this.id=this.utilityService.createID(32)}return e}();t.SWOrderByControlsController=r;var n=function(){function e(e,t,i,n,o){var s=this;this.$compile=e,this.scopeService=t,this.listingService=i,this.corePartialsPath=n,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={collectionConfig:"=?",selectedOrderByColumn:"=?",inListingDisplay:"=?",toggleCollectionConfig:"=?",initialSortProperty:"@?",initialSortDefaultDirection:"@?",sortPropertyFieldName:"@?",sortDefaultDirectionFieldName:"@?",edit:"=?"},this.require={swListingDisplay:"?^swListingDisplay"},this.controller=r,this.controllerAs="swOrderByControls",this.compile=function(e,t,i){return{pre:function(e,t,i){if(e.swOrderByControls.inListingDisplay&&s.scopeService.hasParentScope(e,"swListingDisplay")){var r=s.scopeService.getRootParentScope(e,"swListingDisplay").swListingDisplay;e.swOrderByControls.listingId=r.tableID,s.listingService.attachToListingInitiated(e.swOrderByControls.listingId,e.swOrderByControls.updateOrderBy),null==e.swOrderByControls.collectionConfig&&null!=r.collectionConfig&&(e.swOrderByControls.collectionConfig=r.collectionConfig)}},post:function(e,t,i){}}},this.templateUrl=o.buildPartialsPath(n)+"orderbycontrols.html"}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$compile","scopeService","listingService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWOrderByControls=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c){var l=this;this.rbkeyService=e,this.$templateRequest=t,this.$compile=i,this.corePartialsPath=r,this.$scope=n,this.$element=o,this.$transclude=s,this.$templateRequest=t,this.$compile=i,this.corePartialsPath=r,this.utilityService=a,this.type=this.type||"link",this.queryString=this.queryString||"",this.$scope=n,this.$element=o,this.$transclude=this.$transclude,this.$templateRequest(c.buildPartialsPath(this.corePartialsPath)+"processcaller.html").then(function(e){var t=angular.element(e);l.$element.parent().append(t),i(t)(l.$scope)}),angular.isDefined(this.titleRbKey)&&(this.title=this.rbkeyService.getRBKey(this.titleRbKey)),angular.isUndefined(this.text)&&(this.text=this.title)}return e}(),n=function(){function e(e,t){this.corePartialsPath=e,this.utilityService=t,this.restrict="E",this.scope={},this.bindToController={action:"@",entity:"@",processContext:"@",hideDisabled:"=",type:"@",queryString:"@",text:"@",title:"@?",titleRbKey:"@?",class:"@",icon:"=",iconOnly:"=",submit:"=",confirm:"=",disabled:"=",disabledText:"@",modal:"="},this.controller=r,this.controllerAs="swProcessCaller",this.link=function(e,t,i){},this.corePartialsPath=e,this.utilityService=t}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","utilityService"],t},e.$inject=["corePartialsPath","utilityService"],e}();t.SWProcessCaller=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){return{restrict:"A",scope:{swRbkey:"="},link:function(e,t,i){var r=e.swRbkey;!function(){angular.isDefined(r)&&angular.isString(r)&&t.text(o.getRBKey(r))}()}}}return e.Factory=function(){var t=function(t,i,r,n,o,s){return new e(t,i,r,n,o,s)};return t.$inject=["$hibachi","observerService","utilityService","$rootScope","$log","rbkeyService"],t},e}();t.SWRbKey=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{link:function(r,n,o){var s,a,c,l;return t=angular.element(t),c=0,null!=o.infiniteScrollDistance&&r.$watch(o.infiniteScrollDistance,function(e){return c=parseInt(e,10)}),l=!0,s=!1,null!=o.infiniteScrollDisabled&&r.$watch(o.infiniteScrollDisabled,function(e){if((l=!e)&&s)return s=!1,a()}),a=function(){var i,a,u,d;return d=t.height()+t.scrollTop(),i=n.offset().top+n.height(),a=i-d,u=a<=t.height()*c,u&&l?e.$$phase?r.$eval(o.infiniteScroll):r.$apply(o.infiniteScroll):u?s=!0:void 0},t.on("scroll",a),r.$on("$destroy",function(){return t.off("scroll",a)}),i(function(){return o.infiniteScrollImmediateCheck?r.$eval(o.infiniteScrollImmediateCheck)?a():void 0:a()},0)}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$rootScope","$window","$timeout"],t},e}();t.SWScrollTrigger=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.selectionService=e,this.observerService=t,this.updateSelectValue=function(e){i.isRadio&&"check"==e.action?(i.toggleValue,i.selection):"clear"==e.action?i.toggleValue=!1:"selectAll"==e.action?i.toggleValue=!0:e.selection==i.selection&&(i.toggleValue="check"==e.action)},this.toggleSelection=function(e,t,r){i.isRadio?(i.selectionService.radioSelection(t,r),i.toggleValue=r):e?i.selectionService.addSelection(t,r):i.selectionService.removeSelection(t,r)},angular.isUndefined(this.name)&&(this.name="selection"),e.isAllSelected(this.selectionid)?this.toggleValue=!e.hasSelection(this.selectionid,this.selection):this.toggleValue=e.hasSelection(this.selectionid,this.selection),this.isRadio&&this.toggleValue&&(this.toggleValue=this.selection),this.isRadio&&this.toggleValue&&(this.toggleValue=this.selection),t.attach(this.updateSelectValue,"swSelectionToggleSelection"+this.selectionid),angular.isDefined(this.initSelected)&&this.initSelected&&(this.toggleValue=this.selection,this.toggleSelection(this.toggleValue,this.selectionid,this.selection))}return e}(),n=function(){function e(e,t){this.collectionPartialsPath=e,this.hibachiPathBuilder=t,this.restrict="E",this.scope={},this.bindToController={selection:"=",selectionid:"@",id:"=",isRadio:"=",name:"@",disabled:"=",initSelected:"="},this.controller=r,this.controllerAs="swSelection",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"selection.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e.$inject=["corePartialsPath","hibachiPathBuilder"],e}();t.SWSelection=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return function(t){var i=this;t.sortable({placeholder:"placeholder",opacity:.8,axis:"y",update:function(r,n){var o=i.$apply(e),s=o.length,a=[];t.children().each(function(e){var t=$(this),i=parseInt(t.attr("sw:sortable-index"),10);o.push(o[i]),t.attr("sw:sortable-index")&&(a[i]=t,t.detach())}),o.splice(0,s),t.append.apply(t,a),i.$digest()}})}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["expression","compiledElement"],t},e}();t.SWSortable=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a){this.$scope=e,this.$q=t,this.$transclude=i,this.$hibachi=r,this.$timeout=n,this.utilityService=o,this.rbkeyService=s,this.collectionConfigService=a,angular.isUndefined(this.active)&&(this.active=!1),angular.isUndefined(this.loaded)&&(this.loaded=!1),angular.isUndefined(this.hide)&&(this.hide=!1),angular.isUndefined(this.id)&&(this.id=o.createID(16)),angular.isUndefined(this.name)&&(this.name=this.id)}return e}();t.SWTabContentController=r;var n=function(){function e(e,t,i,n,o){var s=this;this.$compile=e,this.scopeService=t,this.observerService=i,this.corePartialsPath=n,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={active:"=?",loaded:"=?",hide:"=?",name:"@?"},this.controller=r,this.controllerAs="swTabContent",this.compile=function(e,t,i){return{pre:function(e,t,i){},post:function(e,t,i){var r=s.scopeService.getRootParentScope(e,"swTabGroup").swTabGroup;angular.isDefined(r)&&angular.isDefined(r.tabs)&&(r.tabs.push(e.swTabContent),s.observerService.notify(r.initTabEventName))}}},this.templateUrl=o.buildPartialsPath(n)+"tabcontent.html"}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$compile","scopeService","observerService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTabContent=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){var r=this;this.utilityService=e,this.rbkeyService=t,this.observerService=i,this.hasActiveTab=!1,this.initTab=function(){for(var e=0;e<r.tabs.length;e++)if(!r.tabs[e].hide){r.tabs[e].active=!0,r.tabs[e].loaded=!0;break}},this.switchTab=function(e){r.observerService.notify(r.switchTabGroupEventName);for(var t=0;t<r.tabs.length;t++)r.tabs[t].active=!1;e.active=!0,e.loaded=!0},this.getTabByName=function(e){for(var t=0;t<r.tabs.length;t++)if(r.tabs[t].name==e)return r.tabs[t]},angular.isUndefined(this.tabs)&&(this.tabs=[]),this.tabGroupID="TG"+this.utilityService.createID(30),this.switchTabGroupEventName="SwitchTabGroup"+this.tabGroupID,this.initTabEventName="InitTabForTabGroup"+this.tabGroupID,this.observerService.attach(this.initTab,this.initTabEventName),angular.isUndefined(this.switchTabEventName)&&(this.switchTabEventName=this.tabGroupID+"SwitchTabTo"),this.observerService.attach(this.switchTab,this.switchTabEventName)}return e}();t.SWTabGroupController=r;var n=function(){function e(e,t,i){this.$compile=e,this.corePartialsPath=t,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={switchTabEventName:"@?"},this.controller=r,this.controllerAs="swTabGroup",this.compile=function(e,t,i){return{pre:function(e,t,i){},post:function(e,t,i){}}},this.templateUrl=i.buildPartialsPath(t)+"tabgroup.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTabGroup=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.rbkeyService=e,this.showTooltip=!1,this.show=function(){t.showTooltip=!0},this.hide=function(){t.showTooltip=!1},angular.isDefined(this.rbKey)&&(this.text=e.getRBKey(this.rbKey)),angular.isUndefined(this.position)&&(this.position="top")}return e}();t.SWTooltipController=r;var n=function(){function e(e,t,i){this.$document=e,this.corePartialsPath=t,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={rbKey:"@?",text:"@?",position:"@?",showTooltip:"=?"},this.controller=r,this.controllerAs="swTooltip",this.link=function(e,t,i,r,n){var o=t.find(".tooltip"),s=t.position(),a=o[0].style;if(i&&i.position)switch(i.position.toLowerCase()){case"top":a.top="0px",a.left="0px";break;case"bottom":break;case"left":a.top=s.top+t[0].offsetHeight-5+"px",a.left=-1*(s.left+t[0].offsetLeft-5)+"px",t.find(".tooltip-inner")[0].style.maxWidth="none";break;default:a.top=s.top+t[0].offsetHeight-5+"px",a.left=s.left+t[0].offsetWidth-5+"px"}},this.templateUrl=i.buildPartialsPath(t)+"tooltip.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$document","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTooltip=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){var s=this;if(this.$scope=e,this.$transclude=t,this.collectionConfigService=i,this.typeaheadService=r,this.$rootScope=n,this.observerService=o,this.columns=[],this.filters=[],this.addFunction=function(e){if(s.typeaheadService.typeaheadStore.dispatch({type:"TYPEAHEAD_USER_SELECTION",payload:{name:s.fieldName||"",data:e[s.propertyToSave]||""}}),s.modelValue=e[s.propertyToSave],s.action){var t={};s.variables&&(t=s.variables()),t.value=s.modelValue,s.$root.slatwall.doAction(s.action,t)}},this.$root=n,angular.isUndefined(this.typeaheadCollectionConfig)){if(!angular.isDefined(this.entityName))throw"You did not pass the correct collection config data to swTypeaheadInputField";this.typeaheadCollectionConfig=i.newCollectionConfig(this.entityName)}if(angular.isUndefined(this.validateRequired)&&(this.validateRequired=!1),this.$transclude(e,function(){}),angular.isUndefined(this.propertyToSave))throw"You must select a property to save for the input field directive";if(angular.isDefined(this.propertiesToLoad)&&this.typeaheadCollectionConfig.addDisplayProperty(this.propertiesToLoad),angular.forEach(this.columns,function(e){s.typeaheadCollectionConfig.addDisplayProperty(e.propertyIdentifier,"",e)}),angular.forEach(this.filters,function(e){s.typeaheadCollectionConfig.addFilter(e.propertyIdentifier,e.comparisonValue,e.comparisonOperator,e.logicalOperator,e.hidden)}),angular.isDefined(this.initialEntityId)&&this.initialEntityId.length&&(this.modelValue=this.initialEntityId),this.eventListeners)for(var a in this.eventListeners)o.attach(this.eventListeners[a],a)}return e}();t.SWTypeaheadInputFieldController=r;var n=function(){function e(e,t){this.corePartialsPath=e,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={fieldName:"@",entityName:"@",typeaheadCollectionConfig:"=?",propertiesToLoad:"@?",placeholderRbKey:"@?",propertyToShow:"@",propertyToSave:"@",initialEntityId:"@",allRecords:"=?",validateRequired:"=?",maxRecords:"@",action:"@",variables:"&?",eventListeners:"=?",placeholderText:"@?",searchEndpoint:"@?",titleText:"@?"},this.controller=r,this.controllerAs="swTypeaheadInputField",this.templateUrl=t.buildPartialsPath(e)+"typeaheadinputfield.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTypeaheadInputField=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$scope=e,this.$transclude=t,this.$hibachi=i,this.listingService=r,this.typeaheadService=n,this.utilityService=o,this.collectionConfigService=s,this.addSelection=function(e){a.typeaheadService.addSelection(a.typeaheadDataKey,e),a.inListingDisplay&&a.listingService.insertListingPageRecord(a.listingId,e)},this.removeSelection=function(e){var t=a.typeaheadService.removeSelection(a.typeaheadDataKey,e);a.inListingDisplay&&a.listingService.removeListingPageRecord(a.listingId,t)},this.getSelections=function(){return a.typeaheadService.getData(a.typeaheadDataKey)},this.updateSelectionList=function(){a.selectionList=a.typeaheadService.updateSelectionList(a.typeaheadDataKey)},angular.isUndefined(this.typeaheadDataKey)&&(this.typeaheadDataKey=this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1),angular.isUndefined(this.showSelections)&&(this.showSelections=!1),angular.isUndefined(this.multiselectMode)&&(this.multiselectMode=!0),angular.isUndefined(this.hasAddButtonFunction)&&(this.hasAddButtonFunction=!1),angular.isUndefined(this.hasViewFunction)&&(this.hasViewFunction=!1),angular.isDefined(this.selectedCollectionConfig)&&this.typeaheadService.initializeSelections(this.typeaheadDataKey,this.selectedCollectionConfig),this.typeaheadService.attachTypeaheadSelectionUpdateEvent(this.typeaheadDataKey,this.updateSelectionList)}return e}();t.SWTypeaheadMultiselectController=r;var n=function(){function e(e,t,i,n,o){var s=this;this.$compile=e,this.scopeService=t,this.typeaheadService=i,this.corePartialsPath=n,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={placeholderRbKey:"@",collectionConfig:"=?",selectedCollectionConfig:"=?",typeaheadDataKey:"@?",multiselectModeOn:"=?multiselectMode",showSelections:"=?",dataTarget:"=?",dataTargetIndex:"=?",addButtonFunction:"&?",viewFunction:"&?",inListingDisplay:"=?",listingId:"@?",propertyToCompare:"@?",fallbackPropertiesToCompare:"@?",rightContentPropertyIdentifier:"@?",selectionFieldName:"@?",disabled:"=?"},this.controller=r,this.controllerAs="swTypeaheadMultiselect",this.compile=function(e,t,i){return{pre:function(e,t,i){if(angular.isDefined(i.addButtonFunction)?e.swTypeaheadMultiselect.hasAddButtonFunction=!0:e.swTypeaheadMultiselect.hasAddButtonFunction=!1,angular.isDefined(i.viewFunction)?e.swTypeaheadMultiselect.viewFunction=!0:e.swTypeaheadMultiselect.viewFunction=!1,angular.isUndefined(e.swTypeaheadMultiselect.inListingDisplay)&&(e.swTypeaheadMultiselect.inListingDisplay=!1),e.swTypeaheadMultiselect.inListingDisplay&&s.scopeService.hasParentScope(e,"swListingDisplay")){var r=s.scopeService.getRootParentScope(e,"swListingDisplay").swListingDisplay;e.swTypeaheadMultiselect.listingId=r.tableID,r.typeaheadDataKey=e.swTypeaheadMultiselect.typeaheadDataKey}},post:function(e,t,r){var n=t.find(".s-selected-list"),o=angular.element('<div class="alert s-selected-item" ng-repeat="item in swTypeaheadMultiselect.getSelections() track by $index">'),a=angular.element('<button ng-click="swTypeaheadMultiselect.removeSelection($index)" type="button" class="close"><span>×</span><span class="sr-only" sw-rbkey="&apos;define.close&apos;"></span></button>');o.append(a),o.append(s.typeaheadService.stripTranscludedContent(i(e,function(){}))),n.append(s.$compile(o)(e))}}},this.templateUrl=o.buildPartialsPath(n)+"typeaheadmultiselect.html"}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$compile","scopeService","typeaheadService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTypeaheadMultiselect=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){var o=this;this.$scope=e,this.listingService=t,this.scopeService=i,this.typeaheadService=r,this.utilityService=n,this.updatePageRecord=function(){if(o.scopeService.hasParentScope(o.$scope,"pageRecord")){var e=o.scopeService.getRootParentScope(o.$scope,"pageRecord").pageRecord;o.pageRecord=e}},this.removeSelection=function(){o.disabled||(o.typeaheadService.removeSelection(o.typeaheadDataKey,void 0,o.pageRecord),o.listingService.removeListingPageRecord(o.listingId,o.pageRecord))},this.listingService.attachToListingPageRecordsUpdate(this.listingId,this.updatePageRecord,this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1)}return e}();t.SWTypeaheadRemoveSelectionController=r;var n=function(){function e(e,t,i){var n=this;this.scopeService=e,this.corePartialsPath=t,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={typeaheadDataKey:"@?",index:"@?",disabled:"=?"},this.controller=r,this.controllerAs="swTypeaheadRemoveSelection",this.link=function(e,t,i){if(n.scopeService.hasParentScope(e,"swListingDisplay")){var r=n.scopeService.getRootParentScope(e,"swListingDisplay").swListingDisplay;e.swTypeaheadRemoveSelection.typeaheadDataKey=r.typeaheadDataKey,e.swTypeaheadRemoveSelection.listingId=r.tableID}if(n.scopeService.hasParentScope(e,"pageRecord")){var o=n.scopeService.getRootParentScope(e,"pageRecord").pageRecord;e.swTypeaheadRemoveSelection.pageRecord=o}},this.templateUrl=i.buildPartialsPath(t)+"typeaheadremoveselection.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["scopeService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTypeaheadRemoveSelection=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d){var f=this;if(this.$scope=e,this.$q=t,this.$transclude=i,this.$hibachi=r,this.$timeout=n,this.utilityService=o,this.observerService=s,this.rbkeyService=a,this.collectionConfigService=c,this.typeaheadService=l,this.$http=u,this.requestService=d,this.results=[],this.columns=[],this.filters=[],this.searchableColumns=[],this.initialSearchableColumnsState=[],this.searchableColumnSelection="All",this.fallbackPropertyArray=[],this.clearSearch=function(){f.searchText="",f.hideSearch=!0,angular.isDefined(f.addFunction)&&f.addFunction()(void 0)},this.toggleDropdown=function(){f.dropdownOpen=!f.dropdownOpen},this.toggleOptions=function(){!f.hideSearch||f.searchText&&f.searchText.length||f.search(f.searchText),f.hideSearch=!f.hideSearch},this.rSearch=function(e){f.typeaheadService.typeaheadStore.dispatch({type:"TYPEAHEAD_QUERY",payload:{searchText:e}})},this.search=function(e){if(!e.length)return void f.closeThis();if(f.rSearch(e),f._timeoutPromise&&f.$timeout.cancel(f._timeoutPromise),f.collectionConfig.setKeywords(e),angular.isDefined(f.filterGroupsConfig)){var t=f.filterGroupsConfig.replace("replaceWithSearchString",e);t=t.trim(),f.collectionConfig.loadFilterGroups(JSON.parse(t))}f._timeoutPromise=f.$timeout(function(){var t;t=f.searchEndpoint?f.requestService.newPublicRequest("/"+f.searchEndpoint,{search:e,options:f.collectionConfig.getOptions(),entityName:f.collectionConfig.baseEntityName},"post",{"Content-Type":"application/json"}).promise:f.collectionConfig.getEntity(),t.then(function(e){f.results=e.pageRecords||e.records,f.updateSelections()}).finally(function(){f.resultsDeferred.resolve(),f.hideSearch=0==f.results.length})},500)},this.updateSelections=function(){f.typeaheadService.updateSelections(f.typeaheadDataKey)},this.updateSearchableProperties=function(e){angular.isString(e)&&"all"==e?(angular.copy(f.initialSearchableColumnsState,f.searchableColumns),f.searchableColumnSelection="All"):(angular.forEach(f.searchableColumns,function(e,t){e.isSearchable=!1}),e.isSearchable=!0,f.searchableColumnSelection=e.title)},this.addOrRemoveItem=function(e){var t=e.selected||!1;f.hideSearch||f.multiselectMode||(f.hideSearch=!0),f.multiselectMode||(angular.isDefined(f.propertyToShow)?f.searchText=e[f.propertyToShow]:angular.isDefined(f.columns)&&f.columns.length&&angular.isDefined(f.columns[0].propertyIdentifier)&&(f.searchText=e[f.columns[0].propertyIdentifier])),!t&&angular.isDefined(f.addFunction)&&f.addFunction()(e),t&&angular.isDefined(f.removeFunction)&&(f.removeFunction()(e.selectedIndex),e.selected=!1,e.selectedIndex=void 0),f.updateSelections()},this.addButtonItem=function(){f.hideSearch||(f.hideSearch=!0),angular.isDefined(f.addButtonFunction)&&f.addButtonFunction()(f.searchText)},this.viewButtonClick=function(){f.viewFunction()()},this.closeThis=function(e){if(f.hideSearch=!0,angular.isDefined(e))for(var t in e.callBackActions)e.callBackActions[t]()},this.getSelections=function(){return f.typeaheadService.getData(f.typeaheadDataKey)},this.dropdownOpen=!1,this.requestService=d,this.$transclude(e,function(){}),this.resultsDeferred=t.defer(),this.resultsPromise=this.resultsDeferred.promise,angular.isUndefined(this.typeaheadDataKey)&&(this.typeaheadDataKey=this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1),angular.isUndefined(this.multiselectMode)&&(this.multiselectMode=!1),angular.isUndefined(this.searchText)||null==this.searchText?this.searchText="":this.search(this.searchText),angular.isUndefined(this.validateRequired)&&(this.validateRequired=!1),angular.isUndefined(this.hideSearch)&&(this.hideSearch=!0),angular.isUndefined(this.collectionConfig)){if(!angular.isDefined(this.entity))throw"You did not pass the correct collection config data to swTypeaheadSearch";this.collectionConfig=c.newCollectionConfig(this.entity)}if(angular.isDefined(this.collectionConfig)&&(this.primaryIDPropertyName=r.getPrimaryIDPropertyNameByEntityName(this.collectionConfig.baseEntityName)),angular.isDefined(this.fallbackPropertiesToCompare)&&this.fallbackPropertiesToCompare.length&&(this.fallbackPropertyArray=this.fallbackPropertiesToCompare.split(",")),angular.isDefined(this.placeholderRbKey)?this.placeholderText=this.rbkeyService.getRBKey(this.placeholderRbKey):angular.isUndefined(this.placeholderText)&&(this.placeholderText=this.rbkeyService.getRBKey("define.search")),this._timeoutPromise=this.$timeout(function(){},500),angular.isDefined(this.propertiesToDisplay)&&this.collectionConfig.addDisplayProperty(this.propertiesToDisplay.split(",")),angular.forEach(this.columns,function(e){f.collectionConfig.addDisplayProperty(e.propertyIdentifier,"",e)}),angular.forEach(this.filters,function(e){f.collectionConfig.addFilter(e.propertyIdentifier,e.comparisonValue,e.comparisonOperator,e.logicalOperator,e.hidden)}),angular.isUndefined(this.allRecords)&&(this.allRecords=this.collectionConfig.allRecords),this.collectionConfig.setAllRecords(this.allRecords),angular.isUndefined(this.maxRecords)&&(this.maxRecords=10),this.collectionConfig.setPageShow(this.maxRecords),angular.isDefined(this.initialEntityId)&&this.initialEntityId.length){this.initialEntityCollectionConfig=c.newCollectionConfig(this.collectionConfig.baseEntityName),this.initialEntityCollectionConfig.loadColumns(this.collectionConfig.columns);var p=r.getPrimaryIDPropertyNameByEntityName(this.initialEntityCollectionConfig.baseEntityName);this.initialEntityCollectionConfig.addFilter(p,this.initialEntityId,"="),this.initialEntityCollectionConfig.getEntity().then(function(e){f.results=e.pageRecords,f.results.length&&f.addOrRemoveItem(f.results[0])})}angular.forEach(this.collectionConfig.columns,function(e,t){e.isSearchable&&f.searchableColumns.push(e)}),angular.copy(this.searchableColumns,this.initialSearchableColumnsState),this.typeaheadService.setTypeaheadState(this.typeaheadDataKey,this),this.observerService.attach(this.clearSearch,this.typeaheadDataKey+"clearSearch"),this.$http=u}return e}();t.SWTypeaheadSearchController=r;var n=function(){function e(e,t,i,n){var o=this;this.$compile=e,this.typeaheadService=t,this.corePartialsPath=i,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={collectionConfig:"=?",entity:"@?",properties:"@?",propertiesToDisplay:"@?",filterGroupsConfig:"@?",placeholderText:"@?",placeholderRbKey:"@?",propertyToCompare:"@?",fallbackPropertiesToCompare:"@?",searchText:"=?",results:"=?",addFunction:"&?",removeFunction:"&?",addButtonFunction:"&?",viewFunction:"&?",showAddButton:"=?",showViewButton:"=?",validateRequired:"=?",uniqueResults:"<?",clickOutsideArguments:"=?",propertyToShow:"=?",hideSearch:"=?",allRecords:"=?",maxRecords:"=?",disabled:"=?",initialEntityId:"@",multiselectMode:"=?",typeaheadDataKey:"@?",rightContentPropertyIdentifier:"@?",searchEndpoint:"@?",allResultsEndpoint:"@?",titleText:"@?",urlBase:"@?",urlProperty:"@?"},this.controller=r,this.controllerAs="swTypeaheadSearch",this.compile=function(e,t,i){return{pre:function(e,t,i){angular.isDefined(i.addButtonFunction)&&angular.isUndefined(i.showAddButton)?e.swTypeaheadSearch.showAddButton=!0:angular.isUndefined(i.showAddButton)&&(e.swTypeaheadSearch.showAddButton=!1),angular.isDefined(i.viewFunction)&&angular.isUndefined(i.showViewButton)?e.swTypeaheadSearch.showViewButton=!0:angular.isUndefined(i.showViewButton)&&(e.swTypeaheadSearch.showViewButton=!1)},post:function(e,t,r){var n=t.find(".dropdown-menu"),s="";e.swTypeaheadSearch.uniqueResults&&(s=" | unique:'"+o.typeaheadService.getTypeaheadPrimaryIDPropertyName(e.swTypeaheadSearch.typeaheadDataKey)+"'");var a='\n                    <li ng-repeat="item in swTypeaheadSearch.results'+s+'" class="dropdown-item" ng-class="{\'s-selected\':item.selected}"></li>\n                ',c="\n                    <a \n                ";if(angular.isDefined(e.swTypeaheadSearch.urlBase)&&angular.isDefined(e.swTypeaheadSearch.urlProperty)?c+='href="'+e.swTypeaheadSearch.urlBase+"{{item."+e.swTypeaheadSearch.urlProperty+'}}">':c+='ng-click="swTypeaheadSearch.addOrRemoveItem(item)">',angular.isDefined(e.swTypeaheadSearch.rightContentPropertyIdentifier))var l='\n                        <span class="s-right-content" ng-bind="item[swTypeaheadSearch.rightContentPropertyIdentifier]"></span></a>\n                    ';else var l="</a>";if(angular.isDefined(e.swTypeaheadSearch.allResultsEndpoint))var u='\n                        <li class="dropdown-item see-all-results" ng-if="swTypeaheadSearch.results.length == swTypeaheadSearch.maxRecords"><a href="{{swTypeaheadSearch.allResultsEndpoint}}?keywords={{swTypeaheadSearch.searchText}}">See All Results</a></li>\n                    ';c+=l;var d=angular.element(a),f=angular.element(c);f.append(o.typeaheadService.stripTranscludedContent(i(e,function(){}))),d.append(f),e.swTypeaheadSearch.resultsPromise.then(function(){n.append(o.$compile(d)(e)),null!=u&&n.append(o.$compile(u)(e))})}}},this.templateUrl=n.buildPartialsPath(i)+"typeaheadsearch.html"}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$compile","typeaheadService","corePartialsPath","hibachiPathBuilder"],t},e}();t.SWTypeaheadSearch=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.SWTypeaheadSearchLineItemController=r;var n=function(){function e(e){this.$compile=e,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",isSearchable:"@?"},this.controller=r,this.controllerAs="swTypeaheadSearchLineItem",this.compile=function(e,t,i){return{pre:function(e,t,i){var r=t[0].innerHTML;t[0].innerHTML="";var n='<span ng-if="item.'+e.swTypeaheadSearchLineItem.propertyIdentifier+'.toString().trim().length"> '+r+'</span> <span ng-bind="item.'+e.swTypeaheadSearchLineItem.propertyIdentifier+'"></span>';t.append(n)},post:function(e,t,i){}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["$compile"],t},e}();t.SWTypeaheadSearchLineItem=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){e.keywords="",e.searchResultsOpen=!1,e.sidebarClass="sidebar",e.loading=!1,e.resultsFound=!0,e.searchResults={product:{title:"Products",resultNameFilter:function(e){return e.productName},results:[],id:function(e){return e.productID}},order:{title:o.getRBKey("entity.order_plural"),resultNameFilter:function(e){return e.orderNumber},results:[],id:function(e){return e.orderID}},brand:{title:o.getRBKey("entity.brand_plural"),resultNameFilter:function(e){return e.brandName},results:[],id:function(e){return e.brandID}},account:{title:"Accounts",resultNameFilter:function(e){return e.firstName+" "+e.lastName},results:[],id:function(e){return e.accountID}},vendor:{title:"Vendors",resultNameFilter:function(e){return e.vendorName},results:[],id:function(e){return e.vendorID}}};var s,a=0;e.updateSearchResults=function(){e.loading=!0,e.showResults(),s&&r.cancel(s),s=r(function(){if(""===e.keywords)e.hideResults();else{e.showResults(),a=Object.keys(e.searchResults).length;for(var t in e.searchResults)!function(t){n.getEntity(t,{keywords:e.keywords,pageShow:4,deferkey:"global-search-"+t}).then(function(i){e.searchResults[t].results=[],e.searchResults[t].title=o.getRBKey("entity."+t.toLowerCase()+"_plural");for(var r in i.pageRecords)e.searchResults[t].results.push({name:e.searchResults[t].resultNameFilter(i.pageRecords[r]),link:n.buildUrl("entity.detail"+t)+"&"+t+"ID="+e.searchResults[t].id(i.pageRecords[r])});if(0==--a){e.loading=!1;var s=!1;for(var c in e.searchResults)if(e.searchResults[c].results.length){s=!0;break}e.resultsFound=s}})}(t)}},500)},e.showResults=function(){e.searchResultsOpen=!0,e.sidebarClass="sidebar s-search-width",i.onclick=function(t){t.target.parentElement.offsetParent.classList.contains("sidebar")||(e.hideResults(),e.$apply())}},e.hideResults=function(){e.searchResultsOpen=!1,e.sidebarClass="sidebar",e.search.$setPristine(),e.keywords="",i.onclick=null,e.loading=!1,e.resultsFound=!0;for(var t in e.searchResults)e.searchResults[t].results=[]}}return e}();t.GlobalSearchController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(e){return function(t,i){return 0===t.trim().length?"":e("date")(new Date(t),i)}},e}();t.DateFilter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(e){return function(t){return angular.isDefined(t)&&angular.isString(t)&&(t=t.replace("_","").toLowerCase(),t=e.getRBKey("entity."+t)),t}},e}();t.EntityRBKey=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(){return function(e,t,i){return t=angular.isNumber(t)?t:3,i=i||"%",isNaN(e)?"":Math.round(e*Math.pow(10,t+2))/Math.pow(10,t)+i}},e}();t.PercentageFilter=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(e){return function(e,t,i,r){if(void 0===i&&(i=!0),void 0===r&&(r="..."),angular.isDefined(e)&&angular.isString(e)){if(!e)return"";if(!(t=parseInt(t,10)))return e;if(e.length<=t)return e;if(e=e.substr(0,t),i){var n=e.lastIndexOf(" ");-1!=n&&(e=e.substr(0,n))}return e+r}return e}},e}();t.SWTrim=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e.Factory=function(){return function(e,t){if(!1===t)return e;if((t||angular.isUndefined(t))&&angular.isArray(e)){var i=[],r=function(e){return angular.isDefined(e)&&null!=e[t]?e[t]:e};angular.forEach(e,function(e){for(var t=!1,n=0;n<i.length;n++)if(r(i[n])==r(e)){t=!0;break}t||i.push(e)})}return i}},e}();t.SWUnique=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(27),o=function(e){function t(t){var i=e.call(this,t)||this;return i.giftCards=[],i.userIsLoggedIn=function(){return""!==i.accountID},i}return r(t,e),t}(n.BaseEntity);t.Account=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(27),o=function(e){function t(t){return e.call(this,t)||this}return r(t,e),t}(n.BaseEntity);t.Address=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(27),o=function(e){function t(t){var i=e.call(this,t)||this;return i.orderRequirementsList="",i.orderPayments=[],i.orderItems=[],i.orderFulfillments=[],i.hasShippingAddressAndMethod=function(){return-1==i.orderRequirementsList.indexOf("fulfillment")},i.orderRequiresAccount=function(){return-1!=i.orderRequirementsList.indexOf("account")||!i.account.accountID},i.getOrderItemQuantitySum=function(){var e=0;if(angular.isDefined(i.orderItems)){for(var t in i.orderItems)e+=i.orderItems[t].quantity;return e}return e},i}return r(t,e),t}(n.BaseEntity);t.Cart=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(570);t.Account=r.Account;var n=i(571);t.Address=n.Address;var o=i(572);t.Cart=o.Cart;var s=i(574);t.OrderItem=s.OrderItem;var a=i(575);t.OrderPayment=a.OrderPayment;var c=i(576);t.Sku=c.Sku},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(27),o=function(e){function t(t){return e.call(this,t)||this}return r(t,e),t}(n.BaseEntity);t.OrderItem=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}();t.OrderPayment=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(27),o=function(e){function t(t){var i=e.call(this,t)||this;return i.setNewQOH=function(e){i.newQOH=e},i.getNewQOH=function(){return i.newQOH},i}return r(t,e),t}(n.BaseEntity);t.Sku=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(60),o=function(e){function t(t){return e.call(this,t)||this}return r(t,e),t}(n.BaseTransient);t.BaseProcess=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(577),o=function(e){function t(t){var i=e.call(this,t)||this;return i.$injector=t,i}return r(t,e),t}(n.BaseProcess);t.Order_AddOrderPayment=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(578);t.Order_AddOrderPayment=r.Order_AddOrderPayment},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(169),o=function(e){function t(t,i,r,n,o,s){void 0===r&&(r="post"),void 0===n&&(n={"Content-Type":"application/json"});var a=e.call(this,t,i,r,n,o)||this;return a.observerService=s,a.observerService=s,a.promise.then(function(e){if(-1!=t.indexOf("api:main.post")&&i.entityName){var r=i.entityName+i.context.charAt(0).toUpperCase()+i.context.slice(0);e.errors?a.observerService.notify(r+"Failure",e.data):a.observerService.notify(r+"Success",e.data)}a.messages=e.messages}).catch(function(e){}),a}return r(t,e),t}(n.Request);t.AdminRequest=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(169),o=function(e){function t(t,i,r,n,o,s){void 0===n&&(n={"Content-Type":"application/x-www-form-urlencoded"});var a=e.call(this,t,i,r,n,o)||this;return a.observerService=s,a.failureActions=[],a.successfulActions=[],a.messages=[],a.hasSuccessfulAction=function(){return a.successfulActions.length>0},a.hasFailureAction=function(){return a.failureActions.length>0},a.observerService=s,a.promise.then(function(e){a.successfulActions=e.successfulActions;for(var t in a.successfulActions){var i=a.successfulActions[t];a.observerService.notify(i.split(".")[1]+"Success",e.data)}a.failureActions=e.failureActions;for(var t in a.failureActions){var r=a.failureActions[t];a.observerService.notify(r.split(".")[1]+"Failure",e.data)}a.messages=e.messages}).catch(function(e){}),a}return r(t,e),t}(n.Request);t.PublicRequest=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"Account")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n}return r(t,e),t}(n.BaseEntityService);t.AccountService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.localStorageService=e,this.cacheData={},this.saveCacheData=function(){t.localStorageService.setItem("cacheData",t.cacheData)},this.hasKey=function(e){return!!angular.isDefined(t.cacheData[e])},this.dateExpired=function(e){return"forever"!=t.cacheData[e].expiresTime&&t.cacheData[e].expiresTime<Date.now()},this.put=function(e,i,r,n){return void 0===n&&(n="forever"),t.cacheData[e]={},t.cacheData[e].expiresTime=n,t.cacheData[e].dataPromise=i,t.cacheData[e].dataTarget=r,i.then(function(i){t.localStorageService.setItem(e,i[r])},function(i){delete t.cacheData[e]}),t.saveCacheData(),i},this.reload=function(e,i){return void 0===i&&(i="forever"),t.cacheData[e].expiresTime=i,t.cacheData[e].dataPromise.then(function(i){t.localStorageService.setItem(e,i[t.cacheData[e].dataTarget])},function(i){delete t.cacheData[e]}),t.saveCacheData(),t.cacheData[e].dataPromise},this.fetch=function(e){if(t.hasKey(e)&&!t.dateExpired(e)){if(t.localStorageService.hasItem(e))return t.localStorageService.getItem(e);t.put(e,t.cacheData[e].dataPromise,t.cacheData[e].dataTarget,t.cacheData[e].expiresTime).finally(function(){return t.localStorageService.getItem(e)})}},this.fetchOrReload=function(e,i){if(angular.isDefined(t.fetch(e)))return t.fetch(e);t.reload(e,i).then(function(i){return t.fetch(e)},function(e){})},e.hasItem("cacheData")&&(this.cacheData=e.getItem("cacheData"))}return e}();t.CacheService=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"Order","Cart")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n}return r(t,e),t}(n.BaseEntityService);t.CartService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.isDropAllowed=function(e){return!0},this.isMouseInFirstHalf=function(e,t,i,r){var n=r?e.offsetX||e.layerX:e.offsetY||e.layerY,o=r?t.offsetWidth:t.offsetHeight,s=r?t.offsetLeft:t.offsetTop;return s=i?s:0,n<s+o/2}}return e}();t.DraggableService=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r)||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n}return r(t,e),t}(n.BaseEntityService);t.EntityService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.recordStates={},this.addRecord=function(t,i){angular.isUndefined(i)&&(i={isLoaded:!0}),e.recordStates[t]=i},this.updateState=function(t,i){angular.isUndefined(e.recordStates[t])&&(e.recordStates[t]={});for(var r in i)e.recordStates[t][r]=i[r]},this.getState=function(t,i){if(angular.isDefined(e.recordStates[t])&&angular.isDefined(i))var r=e.recordStates[t][i];else var r=e.recordStates[t];return!!angular.isDefined(r)&&r}}return e}();t.ExpandableService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.filterMatch=function(e,t,i){switch(t){case"!=":if(e!=i)return!0;break;case">":if(e>i)return!0;break;case">=":if(e>=i)return!0;break;case"<":if(e<i)return!0;break;case"<=":if(e<=i)return!0;break;case"is":if(e==i)return!0;break;case"is not":if(e!=i)return!0;break;default:if(e==i)return!0}return!1}}return e}();t.FilterService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){this.$addControl=function(e){},this.$removeControl=function(e){},this.$setValidity=function(e,t,i){},this.$setDirty=function(){},this.$setPristine=function(){},this.$commitViewValue=function(){},this.$rollbackViewValue=function(){},this.$setSubmitted=function(){},this.$setUntouched=function(){},this.name=e,this.object=t,this.editing=i}return e}(),n=function(){function e(e){var t=this;this.$log=e,this.setPristinePropertyValue=function(e,i){t._pristinePropertyValue[e]=i},this.getPristinePropertyValue=function(e){return t._pristinePropertyValue[e]},this.setForm=function(e){t._forms[e.name]=e},this.getForm=function(e){return t._forms[e]},this.getForms=function(){return t._forms},this.getFormsByObjectName=function(e){var i=[];for(var r in t._forms)angular.isDefined(t._forms[r].$$swFormInfo.object)&&t._forms[r].$$swFormInfo.object.metaData.className===e&&i.push(t._forms[r]);return i},this.createForm=function(e,i,n){var o=new r(e,i,n);return t.setForm(o),o},this.resetForm=function(e){t.$log.debug("resetting form"),t.$log.debug(e);for(var i in e)angular.isDefined(e[i])&&"function"==typeof e[i].$setViewValue&&angular.isDefined(e[i].$viewValue)&&(t.$log.debug(e[i]),angular.isDefined(t.getPristinePropertyValue(i))?e[i].$setViewValue(t.getPristinePropertyValue(i)):e[i].$setViewValue(""),e[i].$setUntouched(!0),e[i].$render(),t.$log.debug(e[i]));e.$submitted=!1,e.$setPristine(),e.$setUntouched()},this.$log=e,this._forms={},this._pristinePropertyValue={}}return e.$inject=["$log"],e}();t.FormService=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f){var p=this;this.$location=e,this.$q=t,this.$log=i,this.$rootScope=r,this.$window=n,this.$injector=o,this.localStorageService=s,this.alertService=a,this.appConfig=c,this.dialogService=l,this.utilityService=u,this.hibachiPathBuilder=d,this.observerService=f,this.urlParam=null,this.authHeader="Authorization",this.authPrefix="Bearer ",this.getJWTDataFromToken=function(e){e=e.split(".")[1];var t=decodeURIComponent(p.$window.atob(e).split("").map(function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)}).join("")),i=angular.fromJson(t),r=+new Date;r=+r.toString().substr(0,i.exp.toString().length),i.issuer&&i.issuer==p.$window.location.hostname&&i.exp>r&&(p.$rootScope.slatwall.account||(p.$rootScope.slatwall.account={}),p.$rootScope.slatwall.account.accountID=i.accountid)},this.request=function(e){if(p.$log.debug("request"),"/"!==e.url.charAt(0))return e;if("GET"==e.method&&e.url.indexOf(".html")>=0&&e.url.indexOf("/")>=0)return e.url=e.url+"?instantiationKey="+p.appConfig.instantiationKey,e;e.cache=!0,e.headers=e.headers||{},p.localStorageService.hasItem("token")&&(e.headers["Auth-Token"]="Bearer "+p.localStorageService.getItem("token"),p.getJWTDataFromToken(p.localStorageService.getItem("token")));var t=p.utilityService.getQueryParamsFromUrl(e.url);if("GET"==e.method&&t[p.appConfig.action]&&"api:main.get"===t[p.appConfig.action]){p.$log.debug(e),e.method="POST",e.data={};var i={};angular.isDefined(e.params)&&(i=e.params);var r={};r.serializedJsonData=angular.toJson(i),r.context="GET",e.data=$.param(r),delete e.params,e.headers["Content-Type"]="application/x-www-form-urlencoded"}return e},this.requestError=function(e){return p.$q.reject(e)},this.response=function(e){if(e.data.messages){var t=p.alertService.formatMessagesToAlerts(e.data.messages);p.alertService.addAlerts(t)}return e.data.hasOwnProperty("token")&&p.localStorageService.setItem("token",e.data.token),e},this.responseError=function(e){if(angular.isDefined(e.status)&&404!==e.status&&403!==e.status&&499!==e.status)if(e.data&&e.data.messages){var t=p.alertService.formatMessagesToAlerts(e.data.messages);p.alertService.addAlerts(t)}else{var i={msg:"there was error retrieving data",type:"error"};p.alertService.addAlert(i)}if(403!==e.status&&401!=e.status||p.observerService.notify("Unauthorized"),499===e.status&&e.data&&e.data.messages){var r=p.$injector.get("$http");if("timeout"===e.data.messages[0].message)p.dialogService.addPageDialog(p.hibachiPathBuilder.buildPartialsPath("preprocesslogin"),{});else if("invalid_token"===e.data.messages[0].message)return r.get(p.baseUrl+"?"+p.appConfig.action+"=api:main.login").then(function(t){if(200===t.status)return p.localStorageService.setItem("token",t.data.token),e.config.headers=e.config.headers||{},e.config.headers["Auth-Token"]="Bearer "+t.data.token,p.getJWTDataFromToken(t.data.token),r(e.config).then(function(e){return e})},function(e){return e})}return e},this.$location=e,this.$q=t,this.$log=i,this.$rootScope=r,this.$window=n,this.$injector=o,this.localStorageService=s,this.alertService=a,this.appConfig=c,this.dialogService=l,this.utilityService=u,this.hibachiPathBuilder=d,this.baseUrl=c.baseURL}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c,l,u,d,f,p){return new e(t,i,r,n,o,s,a,c,l,u,d,f,p)};return t.$inject=["$location","$q","$log","$rootScope","$window","$injector","localStorageService","alertService","appConfig","dialogService","utilityService","hibachiPathBuilder","observerService"],t},e}();t.HibachiInterceptor=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.setBaseURL=function(t){e.baseURL=t},this.setBasePartialsPath=function(t){e.basePartialsPath=t},this.setApiSubsystemName=function(t){e.apiSubsystemName=t},this.buildPartialsPath=function(t){if(angular.isDefined(e.baseURL)&&angular.isDefined(e.basePartialsPath))return(e.baseURL+e.basePartialsPath+t).replace("//","/");throw"need to define baseURL and basePartialsPath in hibachiPathBuilder. Inject hibachiPathBuilder into module and configure it there"}}return e}();t.HibachiPathBuilder=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.loginDisplayed=!1,this.isValidToken=!0,this.setToken=function(e){t.token=e;var i=e.split(".");try{t.jwtInfo=angular.fromJson(window.atob(i[0]).trim()),t.session=angular.fromJson(window.atob(i[1]).trim())}catch(e){t.isValidToken=!1}},this.config=e}return e}();t.HibachiScope=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f,p,h,g){var y=this;this.$window=e,this.$q=t,this.$http=i,this.$timeout=r,this.$log=n,this.$rootScope=o,this.$location=s,this.$anchorScroll=a,this.requestService=c,this.utilityService=l,this.formService=u,this.rbkeyService=d,this.appConfig=f,this._config=p,this._jsEntities=h,this._jsEntityInstances=g,this._deferred={},this._resourceBundle={},this.usePublicRoutes=!1,this.buildUrl=function(e,t){var i=y.appConfig.action,r=y.appConfig.baseURL;return t=t||"",angular.isDefined(t)&&t.length&&0!==t.indexOf("&")&&(t="&"+t),r+"?"+i+"="+e+t},this.getUrlWithActionPrefix=function(){return y.appConfig.baseURL+"/index.cfm/?"+y.appConfig.action+"="},this.getJsEntities=function(){return y._jsEntities},this.setJsEntities=function(e){y._jsEntities=e},this.getJsEntityInstances=function(){return y._jsEntityInstances},this.setJsEntityInstances=function(e){y._jsEntityInstances=e},this.getEntityExample=function(e){return y._jsEntityInstances[e]},this.getEntityMetaData=function(e){return y._jsEntityInstances[e].metaData},this.getPropertyByEntityNameAndPropertyName=function(e,t){return y.getEntityMetaData(e)[t]},this.getPrimaryIDPropertyNameByEntityName=function(e){return y.getEntityExample(e).$$getIDName()},this.getEntityHasPropertyByEntityName=function(e,t){return angular.isDefined(y.getEntityMetaData(e)[t])},this.getBaseEntityAliasFromName=function(e){return"_"+e},this.getPropertyIsObjectByEntityNameAndPropertyIdentifier=function(e,t){var i=y.getLastEntityNameInPropertyIdentifier(e,t),r=y.getEntityMetaData(i);return angular.isDefined(r[y.utilityService.listLast(t,".")].cfc)},this.getLastEntityNameInPropertyIdentifier=function(e,t){if(!e)throw"No entity name was supplied to getLastEntityNameInPropertyIdentifier in hibachi service.";"_"===t.charAt(0)&&(t=y.utilityService.listRest(t.replace(/_/g,"."),"."));var i=t.split(".");if(i[0]===e.toLowerCase()&&i.shift(),i.length>1){var r=y.getEntityMetaData(e),n=i.shift();if(!r[n]||!r[n].cfc)throw"The Property Identifier "+t+" is invalid for the entity "+e;var o=r[n].cfc,s=i.join(".");return y.getLastEntityNameInPropertyIdentifier(o,s)}return e},this.populateEntity=function(e,t){var i=y.newEntity(e);return angular.extend(i.data,t),i},this.populateCollection=function(e,t){var i=[],r=y;return angular.forEach(e,function(e,n){var o=r["new"+t.baseEntityName.replace(y.appConfig.applicationKey,"")]();angular.forEach(t.columns,function(i,n){var s=i.propertyIdentifier.replace(t.baseEntityAlias.toLowerCase(),"");s=y.utilityService.replaceAll(s,"_","."),"."===s.charAt(0)&&(s=s.slice(1));var a=s.split("."),c=s.replace(/\./g,"_"),l=o;angular.forEach(a,function(t,i){if(i===a.length-1)if(angular.isObject(e[c])&&"many-to-one"===l.metaData[t].fieldtype){var n=r["new"+l.metaData[t].cfc]();n.$$init(e[c][0]),l["$$set"+l.metaData[t].name.charAt(0).toUpperCase()+l.metaData[t].name.slice(1)](n)}else angular.isArray(e[c])&&"one-to-many"===l.metaData[t].fieldtype?angular.forEach(e[c],function(e,i){var n=r["new"+l.metaData[t].cfc]();n.$$init(e),l["$$add"+l.metaData[t].singularname.charAt(0).toUpperCase()+l.metaData[t].singularname.slice(1)](n)}):l.data[t]=e[c];else{var o=l.metaData[t];n=angular.isUndefined(l.data[t])?"one-to-many"===o.fieldtype?[]:r["new"+o.cfc]():l.data[t],l["$$set"+o.name.charAt(0).toUpperCase()+o.name.slice(1)](n),l=n}})}),i.push(o)}),i},this.getDefer=function(e){return y._deferred[e]},this.cancelPromise=function(e){var t=y.getDefer(e);angular.isDefined(t)&&t.resolve({messages:[{messageType:"error",message:"User Cancelled"}]})},this.newEntity=function(e){if(void 0!=e){var t=e.charAt(0).toLowerCase()+e.slice(1)+"Service";if(angular.element(document.body).injector().has(t)){var i=angular.element(document.body).injector().get(t),r=i["new"+e];if(void 0!=i["new"+e]&&r&&r.constructor&&r.call&&r.apply)return i["new"+e]()}return new y._jsEntities[e]}},this.getEntityDefinition=function(e){return y._jsEntities[e]},this.getEntity=function(e,t){var i=y.appConfig.apiSubsystemName||"api";angular.isUndefined(t)&&(t={}),angular.isDefined(t.deferKey)&&y.cancelPromise(t.deferKey);var r={};if("string"==typeof t)var n=y.getUrlWithActionPrefix()+i+":main.get&entityName="+e+"&entityID="+t;else{r["P:Current"]=t.currentPage||1,r["P:Show"]=t.pageShow||10,r.keywords=t.keywords||"",r.columnsConfig=t.columnsConfig||"",r.filterGroupsConfig=t.filterGroupsConfig||"",r.joinsConfig=t.joinsConfig||"",r.orderByConfig=t.orderByConfig||"",r.groupBysConfig=t.groupBysConfig||"",r.isDistinct=t.isDistinct||!1,r.propertyIdentifiersList=t.propertyIdentifiersList||"",r.allRecords=t.allRecords||!1,r.defaultColumns=t.defaultColumns||!0,r.processContext=t.processContext||"";var n=y.getUrlWithActionPrefix()+i+":main.get&entityName="+e}angular.isDefined(t.id)&&(n+="&entityId="+t.id),angular.isDefined(t.transformResponse);var o=y.requestService.newAdminRequest(n,r);return t.deferKey&&(y._deferred[t.deferKey]=o),o.promise},this.getResizedImageByProfileName=function(e,t){var i=y.getUrlWithActionPrefix()+"api:main.getResizedImageByProfileName&context=getResizedImageByProfileName&profileName="+e+"&skuIDs="+t;return y.requestService.newPublicRequest(i).promise},this.getEventOptions=function(e){var t=y.getUrlWithActionPrefix()+"api:main.getEventOptionsByEntityName&entityName="+e;return y.requestService.newAdminRequest(t).promise},this.getProcessOptions=function(e){var t=y.getUrlWithActionPrefix()+"api:main.getProcessMethodOptionsByEntityName&entityName="+e;return y.requestService.newAdminRequest(t).promise},this.checkUniqueOrNullValue=function(e,t,i){var r=e.metaData.className,n=e.$$getID();return y.$http.get(y.getUrlWithActionPrefix()+"api:main.getValidationPropertyStatus&object="+r+"&objectID="+n+"&propertyidentifier="+t+"&value="+escape(i)).then(function(e){return e.data.uniqueStatus})},this.checkUniqueValue=function(e,t,i){var r=e.metaData.className,n=e.$$getID();return y.$http.get(y.getUrlWithActionPrefix()+"api:main.getValidationPropertyStatus&object="+r+"&objectID="+n+"&propertyidentifier="+t+"&value="+escape(i)).then(function(e){return e.data.uniqueStatus})},this.getPropertyDisplayData=function(e,t){var i=y.getUrlWithActionPrefix()+"api:main.getPropertyDisplayData&entityName="+e,r={};return r.propertyIdentifiersList=t.propertyIdentifiersList||"",y.requestService.newAdminRequest(i,r).promise},this.getPropertyDisplayOptions=function(e,t){var i=y.getUrlWithActionPrefix()+"api:main.getPropertyDisplayOptions&entityName="+e,r={};return r.property=t.property||t.propertyIdentifier||"",angular.isDefined(t.argument1)&&(r.argument1=t.argument1),y.requestService.newAdminRequest(i,r).promise},this.getPropertyTitle=function(e,t){var i=t[e];return angular.isDefined(i.hb_rbkey)?t.$$getRBKey(i.hb_rbkey):angular.isUndefined(i.persistent)?angular.isDefined(i.fieldtype)&&angular.isDefined(i.cfc)&&["one-to-many","many-to-many"].indexOf(i.fieldtype)>-1?t.$$getRBKey("entity."+t.className.toLowerCase()+"."+e+",entity."+i.cfc+"_plural"):angular.isDefined(i.fieldtype)&&angular.isDefined(i.cfc)&&["many-to-one"].indexOf(i.fieldtype)>-1?t.$$getRBKey("entity."+t.className.toLowerCase()+"."+e.toLowerCase()+",entity."+i.cfc):t.$$getRBKey("entity."+t.className.toLowerCase()+"."+e.toLowerCase()):t.isProcessObject?angular.isDefined(i.fieldtype)&&angular.isDefined(i.cfc)&&["one-to-many","many-to-many"].indexOf(i.fieldtype)>-1?t.$$getRBKey("processObject."+t.className.toLowerCase()+"."+e.toLowerCase()+",entity."+i.cfc.toLowerCase()+"_plural"):angular.isDefined(i.fieldtype)&&angular.isDefined(i.cfc)?t.$$getRBKey("processObject."+t.className.toLowerCase()+"."+e.toLowerCase()+",entity."+i.cfc.toLowerCase()):t.$$getRBKey("processObject."+t.className.toLowerCase()+"."+e.toLowerCase()):t.$$getRBKey("object."+t.className.toLowerCase()+"."+e.toLowerCase())},this.saveEntity=function(e,t,i,r){var n=y.getUrlWithActionPrefix()+"api:main.post";return angular.isDefined(e)&&(i.entityName=e),angular.isDefined(t)&&(i.entityID=t),angular.isDefined(r)&&(i.context=r),y.requestService.newAdminRequest(n,i).promise},this.getExistingCollectionsByBaseEntity=function(e){var t=y.getUrlWithActionPrefix()+"api:main.getExistingCollectionsByBaseEntity&entityName="+e;return y.requestService.newAdminRequest(t).promise},this.getFilterPropertiesByBaseEntityName=function(e,t){void 0===t&&(t=!1);var i=y.getUrlWithActionPrefix()+"api:main.getFilterPropertiesByBaseEntityName&EntityName="+e+"&includeNonPersistent="+t;return y.requestService.newAdminRequest(i).promise},this.login=function(e,t){var i=y.appConfig.baseURL+"/index.cfm/api/auth/login",r={emailAddress:e,password:t};return y.requestService.newAdminRequest(i,r).promise},this.getResourceBundle=function(e){var e=e||y.appConfig.rbLocale;if(y._resourceBundle[e])return y._resourceBundle[e];var t=y.getUrlWithActionPrefix()+"api:main.getResourceBundle&instantiationKey="+y.appConfig.instantiationKey+"&locale="+e;return y.requestService.newAdminRequest(t).promise},this.getCurrencies=function(){var e=y.getUrlWithActionPrefix()+"api:main.getCurrencies&instantiationKey="+y.appConfig.instantiationKey;return y.requestService.newAdminRequest(e).promise},this.getConfig=function(){return y._config},this.getConfigValue=function(e){return y._config[e]},this.setConfigValue=function(e,t){y._config[e]=t},this.setConfig=function(e){y._config=e},this.$window=e,this.$q=t,this.$http=i,this.$timeout=r,this.$log=n,this.$rootScope=o,this.$location=s,this.$anchorScroll=a,this.requestService=c,this.utilityService=l,this.formService=u,this.rbkeyService=d,this.appConfig=f,this._config=p,this._jsEntities=h,this._jsEntityInstances=g}return e}();t.HibachiService=r;var n=function(){function e(e){var t=this;this._config={},this.angular=angular,this.setJsEntities=function(e){t._jsEntities=e},this.getConfig=function(){return t._config},this.getConfigValue=function(e){return t._config[e]},this.setConfigValue=function(e,i){t._config[e]=i},this.setConfig=function(e){t._config=e},this._config=e,this.$get.$inject=["$window","$q","$http","$timeout","$log","$rootScope","$location","$anchorScroll","requestService","utilityService","formService","rbkeyService","appConfig"]}return e.prototype.$get=function(e,t,i,n,o,s,a,c,l,u,d,f,p){return new r(e,t,i,n,o,s,a,c,l,u,d,f,p,this._config,this._jsEntities,this._jsEntityInstances)},e}();t.$Hibachi=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f,p,h){var g=d,y={},v={},m=d.modelConfig.entities,b=d.modelConfig.validations,w=d.modelConfig.defaultValues;angular.forEach(m,function(i){if(h&&h[i.className]){var r=h[i.className];for(var n in r){var o=r[n];for(var s in o.attributes){var l=o.attributes[s];l.attributeSet=o,l.isAttribute=!0,$.extend(i[s],l)}}}e["get"+i.className]=function(t){var r=e.newEntity(i.className),n=e.getEntity(i.className,t);return n.then(function(n){if(angular.isDefined(n.processData)){r.$$init(n.data);var o=e["new"+i.className+"_"+t.processContext.charAt(0).toUpperCase()+t.processContext.slice(1)]();o.$$init(n.processData),o.data[i.className.charAt(0).toLowerCase()+i.className.slice(1)]=r,r.processObject=o}else r.populate?r.populate(n):r.$$init(n)}),{promise:n,value:r}},e["new"+i.className]=function(){var t=i.className,r=t.charAt(0).toLowerCase()+t.slice(1)+"Service";if(angular.element(document.body).injector().has(r)){var n=angular.element(document.body).injector().get(r);if(n["new"+i.className])return n["new"+i.className]()}return e.newEntity(i.className)},i.isProcessObject=i.className.indexOf("_")>=0,y[i.className]=function(){this.validations=b[i.className],this.metaData=i,this.metaData.className=i.className,r&&(this.attributeMetaData=r),i.hb_parentPropertyName&&(this.metaData.hb_parentPropertyName=i.hb_parentPropertyName),i.hb_childPropertyName&&(this.metaData.hb_childPropertyName=i.hb_childPropertyName),this.metaData.$$getRBKey=function(e,t){return u.rbKey(e,t)},this.metaData.$$getPropertyTitle=function(e){return C(e,this)},this.metaData.$$getPropertyHint=function(e){return P(e,this)},this.metaData.$$getManyToManyName=function(e){var t=this;for(var i in t)if(t[i].singularname===e)return t[i].name},this.metaData.$$getPropertyFieldType=function(e){return O(e,this)},this.metaData.$$getPropertyFormatType=function(e){if(this[e])return D(e,this)},this.metaData.$$getDetailTabs=function(){var e=a.defer(),i=g.baseURL+"/index.cfm/?"+d.action+"=api:main.getDetailTabs&entityName="+this.className;return t.get(i).success(function(t){e.resolve(t)}).error(function(t){e.reject(t)}),e.promise},this.$$getFormattedValue=function(e,t){return _(e,t,this)},this.data={},this.modifiedData={};var e=this;i.isProcessObject&&function(e){y[e.className].prototype={$$getID:function(){return""},$$getIDName:function(){return""}}}(i),angular.forEach(i,function(t){angular.isObject(t)&&angular.isDefined(t.name)&&(w&&w[i.className]&&null!=w[i.className][t.name]?e.data[t.name]=angular.copy(w[i.className][t.name]):e.data[t.name]=void 0)})},y[i.className].prototype={$$getPropertyByName:function(e){return this["$$get"+e.charAt(0).toUpperCase()+e.slice(1)]()},$$isPersisted:function(){return""!==this.$$getID()},$$init:function(e){S(this,e)},$$save:function(){return x(this)},$$delete:function(){return T(this)},$$getValidationsByProperty:function(e){return j(this,e)},$$getValidationByPropertyAndContext:function(e,t){return F(this,e,t)},$$getTitleByPropertyIdentifier:function(t){if(t.split(".").length>1){var i=c.listFirst(t,"."),r=this.metaData[i].cfc;return e.newEntity(r).$$getTitleByPropertyIdentifier(t.replace(i,""))}return this.metaData.$$getPropertyTitle(t)},$$getMetaData:function(e){return void 0===e?this.metaData:(angular.isDefined(this.metaData[e].name)&&angular.isUndefined(this.metaData[e].nameCapitalCase)&&(this.metaData[e].nameCapitalCase=this.metaData[e].name.charAt(0).toUpperCase()+this.metaData[e].name.slice(1)),angular.isDefined(this.metaData[e].cfc)&&angular.isUndefined(this.metaData[e].cfcProperCase)&&(this.metaData[e].cfcProperCase=this.metaData[e].cfc.charAt(0).toLowerCase()+this.metaData[e].cfc.slice(1)),this.metaData[e])}},angular.forEach(r,function(e){angular.forEach(e.attributes,function(e){e&&e.attributeCode&&Object.defineProperty(y[i.className].prototype,e.attributeCode,{configurable:!0,enumerable:!1,get:function(){if(null==e||null!=this.data[e.attributeCode])return this.data[e.attributeCode]},set:function(t){this.data[e.attributeCode]=t}})})}),angular.forEach(i,function(t){if(angular.isObject(t)&&angular.isDefined(t.name))if(angular.isDefined(t.fieldtype))if(["many-to-one"].indexOf(t.fieldtype)>=0)y[i.className].prototype["$$get"+t.name.charAt(0).toUpperCase()+t.name.slice(1)]=function(){var r=this;if(angular.isDefined(this["$$get"+this.$$getIDName().charAt(0).toUpperCase()+this.$$getIDName().slice(1)]())){var n={columnsConfig:angular.toJson([{propertyIdentifier:"_"+this.metaData.className.toLowerCase()+"_"+t.name}]),joinsConfig:angular.toJson([{associationName:t.name,alias:"_"+this.metaData.className.toLowerCase()+"_"+t.name}]),filterGroupsConfig:angular.toJson([{filterGroup:[{propertyIdentifier:"_"+this.metaData.className.toLowerCase()+"."+this.$$getIDName(),comparisonOperator:"=",value:this.$$getID()}]}]),allRecords:!0},o=e.getEntity(i.className,n);return o.then(function(i){for(var n in i.records){var o=e.newEntity(r.metaData[t.name].cfc);angular.isArray(i.records[n][t.name])?o.$$init(i.records[n][t.name][0]):o.$$init(i.records[n][t.name]),r["$$set"+t.name.charAt(0).toUpperCase()+t.name.slice(1)](o)}}),o}return null},y[i.className].prototype["$$set"+t.name.charAt(0).toUpperCase()+t.name.slice(1)]=function(e){var i=this,r=this.metaData,n="";if(angular.isUndefined(e)){if(angular.isDefined(i.data[t.name])&&delete i.data[t.name],!i.parents)return;for(var o=0;o<=i.parents.length;o++)angular.isDefined(i.parents[o])&&i.parents[o].name==t.name.charAt(0).toLowerCase()+t.name.slice(1)&&i.parents.splice(o,1)}else{if(t.name==="parent"+this.metaData.className){var s="child"+this.metaData.className;n=e.metaData.$$getManyToManyName(s)}else e.metaData&&(n=e.metaData.$$getManyToManyName(r.className.charAt(0).toLowerCase()+r.className.slice(1)));if(angular.isUndefined(i.parents)&&(i.parents=[]),i.parents.push(i.metaData[t.name]),angular.isDefined(n)&&n.length){angular.isUndefined(e.children)&&(e.children=[]);var a=e.metaData[n];-1===e.children.indexOf(a)&&e.children.push(a),angular.isUndefined(e.data[n])&&(e.data[n]=[]),e.data[n].push(i)}i.data[t.name]=e}},"data"!==t.name&&"validations"!==t.name&&Object.defineProperty(y[i.className].prototype,t.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[t.name])return this.data[t.name]},set:function(e){this["$$set"+t.name.charAt(0).toUpperCase()+t.name.slice(1)](e)}});else if(["one-to-many","many-to-many"].indexOf(t.fieldtype)>=0){if(!t.singularname)throw"need to define a singularname for "+t.fieldtype;y[i.className].prototype["$$add"+t.singularname.charAt(0).toUpperCase()+t.singularname.slice(1)]=function(i){if(angular.isUndefined(i))var i=e.newEntity(this.metaData[t.name].cfc);var r=this.metaData;if("one-to-many"===r[t.name].fieldtype)i.data[r[t.name].fkcolumn.slice(0,-2)]=this;else if("many-to-many"===r[t.name].fieldtype){var n=i.metaData.$$getManyToManyName(r.className.charAt(0).toLowerCase()+this.metaData.className.slice(1));angular.isUndefined(i.data[n])&&(i.data[n]=[]),i.data[n].push(this)}if(angular.isDefined(r[t.name])){angular.isDefined(i.metaData[r[t.name].fkcolumn.slice(0,-2)])&&(angular.isUndefined(i.parents)&&(i.parents=[]),i.parents.push(i.metaData[r[t.name].fkcolumn.slice(0,-2)])),angular.isUndefined(this.children)&&(this.children=[]);var o=r[t.name];-1===this.children.indexOf(o)&&this.children.push(o)}return angular.isUndefined(this.data[t.name])&&(this.data[t.name]=[]),this.data[t.name].push(i),i},y[i.className].prototype["$$get"+t.name.charAt(0).toUpperCase()+t.name.slice(1)]=function(){var i=this;if(angular.isDefined(this["$$get"+this.$$getIDName().charAt(0).toUpperCase()+this.$$getIDName().slice(1)])){var r={filterGroupsConfig:angular.toJson([{filterGroup:[{propertyIdentifier:"_"+t.cfc.toLowerCase()+"."+t.fkcolumn.replace("ID","")+"."+this.$$getIDName(),comparisonOperator:"=",value:this.$$getID()}]}]),allRecords:!0},n=e.getEntity(t.cfc,r);return n.then(function(e){var r=[];for(var n in e.records){var o=i["$$add"+t.singularname.charAt(0).toUpperCase()+t.singularname.slice(1)]();o.$$init(e.records[n]),angular.isUndefined(i[t.name])&&(i[t.name]=[]),r.push(o)}i.data[t.name]=r}),n}},Object.defineProperty(y[i.className].prototype,t.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[t.name])return this.data[t.name]},set:function(i){if(this.data[t.name]=[],angular.isArray(i))for(var r=0;r<i.length;r++){var n=i[r],o=e.newEntity(this.metaData[t.name].cfc);o.$$init(n),this["$$add"+t.singularname.charAt(0).toUpperCase()+t.singularname.slice(1)](o)}else{var o=e.newEntity(this.metaData[t.name].cfc);o.$$init(i),this["$$add"+t.singularname.charAt(0).toUpperCase()+t.singularname.slice(1)](o)}}})}else["id"].indexOf(t.fieldtype)>=0&&(y[i.className].prototype.$$getID=function(){return this.data[this.$$getIDName()]},y[i.className].prototype.$$getIDName=function(){return t.name}),"data"!==t.name&&"validations"!==t.name&&Object.defineProperty(y[i.className].prototype,t.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[t.name])return this.data[t.name]},set:function(e){this.data[t.name]=e}}),y[i.className].prototype["$$get"+t.name.charAt(0).toUpperCase()+t.name.slice(1)]=function(){return this.data[t.name]};else"data"!==t.name&&"validations"!==t.name&&Object.defineProperty(y[i.className].prototype,t.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[t.name])return this.data[t.name]},set:function(e){this.data[t.name]=e}}),y[i.className].prototype["$$get"+t.name.charAt(0).toUpperCase()+t.name.slice(1)]=function(){return this.data[t.name]}})}),e.setJsEntities(y),angular.forEach(y,function(e){var t=new e;v[t.metaData.className]=t}),e.setJsEntityInstances(v);var S=function(e,t){p.init(e,t)},C=function(t,i){return e.getPropertyTitle(t,i)},P=function(e,t){var i=t[e],r="";return r=angular.isDefined(i.hb_rbkey)?t.$$getRBKey(i.hb_rbkey+"_hint"):angular.isUndefined(i.persistent)||angular.isDefined(i.persistent)&&!0===i.persistent?t.$$getRBKey("entity."+t.className.toLowerCase()+"."+e.toLowerCase()+"_hint"):t.$$getRBKey("object."+t.className.toLowerCase()+"."+e.toLowerCase()),"_missing"!==r.slice(-8)?r:""},O=function(e,t){var i=t[e];if(angular.isDefined(i.hb_formfieldtype))return i.hb_formfieldtype;if(angular.isUndefined(i.fieldtype)||"column"===i.fieldtype){var r="";if(angular.isDefined(i.ormtype)?r=i.ormtype:angular.isDefined(i.type)&&(r=i.type),["boolean","yes_no","true_false"].indexOf(r)>-1)return"yesno";if(["date","timestamp"].indexOf(r)>-1)return"dateTime";if("array"===r)return"select";if("struct"===r)return"checkboxgroup";if(e.indexOf("password")>-1)return"password"}else{if(angular.isDefined(i.fieldtype)&&"many-to-one"===i.fieldtype)return"select";if(angular.isDefined(i.fieldtype)&&"one-to-many"===i.fieldtype)return"There is no property field type for one-to-many relationship properties, which means that you cannot get a fieldtype for "+e;if(angular.isDefined(i.fieldtype)&&"many-to-many"===i.fieldtype)return"listingMultiselect"}return"text"},D=function(e,t){if(!e||!t)return"none";var i=t[e];if(i.hb_formattype)return i.hb_formattype;if(angular.isUndefined(i.fieldtype)||"column"===i.fieldtype){var r="";if(angular.isDefined(i.ormtype)?r=i.ormtype:angular.isDefined(i.type)&&(r=i.type),["boolean","yes_no","true_false"].indexOf(r)>-1)return"yesno";if(["date","timestamp"].indexOf(r)>-1)return"dateTime";if(["big_decimal"].indexOf(r)>-1&&"weight"===e.slice(-6))return"weight";if(["big_decimal"].indexOf(r)>-1)return"currency"}return"none"},I=function(e){return!!(angular.isString(e)||angular.isNumber(e)||angular.isDate(e)||!1===e||!0===e)},_=function(e,t,i){var r=i.$$getPropertyByName(e);if(angular.isUndefined(t)&&(t=i.metaData.$$getPropertyFormatType(e)),"custom"===t);else if("rbkey"===t)return angular.isDefined(r)?i.$$getRBKey("entity."+i.metaData.className.toLowerCase()+"."+e.toLowerCase()+"."+r):"";if(angular.isUndefined(r)){var n=i.metaData[e];return angular.isDefined(n.hb_nullRBKey)?i.$$getRbKey(n.hb_nullRBKey):""}if(I(r)){var o={};return angular.isDefined(i.data.currencyCode)&&(o.currencyCode=i.$$getCurrencyCode()),c.formatValue(r,t,o,i)}},T=function(t){var i=t.metaData.className,r=t.$$getID();return e.saveEntity(i,r,{},"delete")},A=function(e,t){for(var i in e)if(angular.isArray(e[i])){var r=e[i];t.data[i];for(var n in r){var o=r[n],s=t.data[i][n];A(o,s)}}else if(angular.isObject(e[i]))for(var a in e[i])A(e[i][a],t.data[i][a]);else t.data[i]=e[i]},x=function(t){var r=a.defer();return i(function(){var i=t.$$getID(),n=E(t);if(n.valid){var a={};a.serializedJsonData=c.toJson(n.value);var l="",u="save";if(1===t.metaData.isProcessObject){var d=n.objectLevel.metaData.className.split("_");l=d[0],u=d[1]}else l=n.objectLevel.metaData.className;e.saveEntity(l,i,a,u).then(function(e){var t=e.data;angular.isDefined(e.SUCCESS)&&!0===e.SUCCESS||angular.isDefined(e.success)&&!0===e.success?(o.url()=="/entity/"+l+"/create"&&e.data[n.objectLevel.$$getIDName()]&&o.path("/entity/"+l+"/"+e.data[n.objectLevel.$$getIDName()],!1),A(t,n.objectLevel),r.resolve(t),f.notify("saveSuccess",t),f.notify("saveSuccess"+l,t)):(r.reject(angular.isDefined(e.messages)?e.messages:e),f.notify("saveFailed",e),f.notify("saveFailed"+l,e))},function(e){r.reject(e),f.notify("saveFailed",e),f.notify("saveFailed"+l,e)})}else{var p=$("input.ng-invalid:first:visible:enabled");angular.isDefined(p)&&(p.focus(),p.attr("id"),s()),r.reject("Input is invalid."),f.notify("validationFailed"),f.notify("validationFailed"+l)}}),r.promise},E=function(e){return k(e)},k=function(e){return p.getModifiedDataByInstance(e)},j=function(e,t){return p.getValidationsByProperty(e,t)},F=function(e,t,i){return p.getValidationByPropertyAndContext(e,t,i)};return e}return e}();t.HibachiServiceDecorator=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.$log=e,this.getObjectSaveLevel=function(e){var i=e,r=e.$$getID();return angular.forEach(e.parents,function(n){if(angular.isDefined(e.data[n.name])&&""===e.data[n.name].$$getID()&&(angular.isUndefined(r)||!r.trim().length)){var o=e.data[n.name];""===o.$$getID()&&o.forms&&(i=t.getObjectSaveLevel(o))}}),i},this.getModifiedDataByInstance=function(e){var i=t.getObjectSaveLevel(e);t.$log.debug("objectSaveLevel : "+i);var r=t.validateObject(i);return t.$log.debug("validateObject data"),t.$log.debug(r.value),{objectLevel:i,value:r.value,valid:r.valid}},this.getValidationByPropertyAndContext=function(e,i,r){var n=t.getValidationsByProperty(e,i);for(var o in n){var s=n[o].contexts.split(",");for(var a in s)if(s[a]===r)return n[o]}},this.getValidationsByProperty=function(e,t){return e.validations.properties[t]},this.validateObject=function(e){var i={},r=!0,n=e.forms;t.$log.debug("process base level data");for(var o in n){var s=n[o];if(s.$setSubmitted(),s.$dirty&&s.$valid){for(var a in s)if(t.$log.debug("key:"+a),"$"!==a.charAt(0)&&angular.isObject(s[a])){var c=s[a];void 0!==c.$modelValue&&""!==c.$modelValue&&(c.$dirty=!0),angular.isDefined(c.$valid)&&!0===c.$valid&&(!0===c.$dirty||s.autoDirty&&1==s.autoDirty)&&(angular.isDefined(e.metaData[a])&&angular.isDefined(e.metaData[a].hb_formfieldtype)&&"json"===e.metaData[a].hb_formfieldtype?i[a]=angular.toJson(c.$modelValue):i[a]=c.$modelValue)}}else s.$valid||(r=!1)}if(i[e.$$getIDName()]=e.$$getID(),t.$log.debug(i),t.$log.debug("process parent data"),angular.isDefined(e.parents))for(var l in e.parents){var u=e.parents[l],d=e.data[u.name];angular.isUndefined(i[u.name])&&(i[u.name]={});var n=d.forms;for(var o in n){var s=n[o];if(s.$setSubmitted(),s.$dirty&&s.$valid){for(var a in s)if("$"!==a.charAt(0)&&angular.isObject(s[a])){var c=s[a];void 0!==c.$modelValue&&""!==c.$modelValue&&(c.$dirty=!0),angular.isDefined(c)&&angular.isDefined(c.$valid)&&!0===c.$valid&&(!0===c.$dirty||s.autoDirty&&1==s.autoDirty)&&(angular.isDefined(d.metaData[a])&&angular.isDefined(d.metaData[a].hb_formfieldtype)&&"json"===d.metaData[a].hb_formfieldtype?i[u.name][a]=angular.toJson(c.$modelValue):i[u.name][a]=c.$modelValue)}}else s.$valid||(r=!1)}i[u.name][d.$$getIDName()]=d.$$getID()}t.$log.debug(i),t.$log.debug("begin child data");var f=t.validateChildren(e);return t.$log.debug("child Data"),t.$log.debug(f),angular.extend(i,f),{valid:r,value:i}},this.validateChildren=function(e){var i={};return angular.isDefined(e.children)&&e.children.length&&(i=t.getDataFromChildren(e)),i},this.init=function(e,t){for(var i in t)if("$"!==i.charAt(0)&&angular.isDefined(e.metaData[i])){var r=e.metaData[i];angular.isDefined(r)&&angular.isDefined(r.hb_formfieldtype)&&"json"===r.hb_formfieldtype?""!==t[i].trim()&&(e.data[i]=angular.fromJson(t[i])):e.data[i]=t[i]}},this.processForm=function(e,i){t.$log.debug("begin process form");var r={};e.$setSubmitted();for(var n in e)if("$"!==n.charAt(0)&&angular.isObject(e[n])){var o=e[n];o.$modelValue&&(o.$dirty=!0),angular.isDefined(o)&&angular.isDefined(o)&&!0===o.$valid&&(!0===o.$dirty||e.autoDirty&&1==e.autoDirty)&&(angular.isDefined(i.metaData[n])&&angular.isDefined(i.metaData[n].hb_formfieldtype)&&"json"===i.metaData[n].hb_formfieldtype?r[n]=angular.toJson(o.$modelValue):r[n]=o.$modelValue)}return r[i.$$getIDName()]=i.$$getID(),t.$log.debug("process form data"),t.$log.debug(r),r},this.processParent=function(e){var i={};""!==e.$$getID()&&(i[e.$$getIDName()]=e.$$getID()),t.$log.debug("processParent"),t.$log.debug(e);var r=e.forms;for(var n in r){var o=r[n];i=angular.extend(i,t.processForm(o,e))}return i},this.processChild=function(e,i){var r={},n=e.forms;for(var o in n){var s=n[o];angular.extend(r,t.processForm(s,e))}if(angular.isDefined(e.children)&&e.children.length){var a=t.getDataFromChildren(e);angular.extend(r,a)}if(angular.isDefined(e.parents)&&e.parents.length){var c=t.getDataFromParents(e,i);angular.extend(r,c)}return r},this.getDataFromParents=function(e,i){var r={};for(var n in e.parents){var o=e.parents[n];if(angular.isDefined(o)){var s=e.data[o.name];if(angular.isObject(s)&&i!==s&&""!==s.$$getID()){angular.isUndefined(r[o.name])&&(r[o.name]={});var a=t.processParent(s);t.$log.debug("parentData:"+o.name),t.$log.debug(a),angular.extend(r[o.name],a)}}}return r},this.getDataFromChildren=function(e){var i={};t.$log.debug("childrenFound"),t.$log.debug(e.children);for(var r in e.children){var n=e.children[r],o=e.data[n.name];if(t.$log.debug(n),t.$log.debug(o),angular.isArray(e.data[n.name]))angular.isUndefined(i[n.name])&&(i[n.name]=[]),angular.forEach(e.data[n.name],function(r,o){t.$log.debug("process child array item");var s=t.processChild(r,e);t.$log.debug("process child return"),t.$log.debug(s),i[n.name].push(s)});else{angular.isUndefined(i[n.name])&&(i[n.name]={});var s=e.data[n.name];t.$log.debug("begin process child");var a=t.processChild(s,e);t.$log.debug("process child return"),t.$log.debug(a),angular.extend(i,a)}}return t.$log.debug("returning child data"),t.$log.debug(i),i},this.$log=e}return e}();t.HibachiValidationService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.histories={},this.recordHistory=function(t,i,r){void 0===r&&(r=!1),(angular.isUndefined(e.histories[t])||r)&&(e.histories[t]=[]),e.histories[t].push(i)},this.hasHistory=function(t){return angular.isDefined(e.histories[t])},this.getHistory=function(t){if(angular.isDefined(e.histories[t]))return e.histories[t]},this.deleteHistory=function(t){e.histories[t]=[]}}return e}();t.HistoryService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.$window=e,this.hasItem=function(e){try{return t.$window.localStorage.getItem(e)&&null!==t.$window.localStorage.getItem(e)&&"undefined"!==t.$window.localStorage.getItem(e)}catch(e){return!1}},this.getItem=function(e){var i=t.$window.localStorage.getItem(e);return"{"!==i.charAt(0)&&"["!==i.charAt(0)||(i=angular.fromJson(i)),i},this.setItem=function(e,i){try{(angular.isObject(i)||angular.isArray(i))&&(i=angular.toJson(i)),t.$window.localStorage.setItem(e,i)}catch(e){}},this.$window=e}return e}();t.LocalStorageService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.$filter=e,this.$log=t,this.getPropertyHintByObjectAndPropertyIdentifier=function(e,t){var r="";return i.hasPropertyByEntityNameAndPropertyIdentifier(e,t)&&(r=i.isAttributePropertyByEntityAndPropertyIdentifier(e,t)?e.metaData&&e.metaData[t].attributeHint:e.metaData.$$getPropertyHint(t)),r},this.getPropertyTitle=function(e,t){var r="";return i.hasPropertyByEntityNameAndPropertyIdentifier(e,t)&&(r=i.isAttributePropertyByEntityAndPropertyIdentifier(e,t)?e.metaData&&e.metaData[t].attributeName:e.metaData.$$getPropertyTitle(t)),r},this.getPropertyFieldType=function(e,t){var r="";return i.hasPropertyByEntityNameAndPropertyIdentifier(e,t)&&(r=i.isAttributePropertyByEntityAndPropertyIdentifier(e,t)?e.metaData&&e.metaData[t].attributeInputType:e.metaData.$$getPropertyFieldType(t)),r},this.isAttributePropertyByEntityAndPropertyIdentifier=function(e,t){return e.metaData&&e.metaData[t]&&e.metaData[t].attributeCode==t},this.hasPropertyByEntityNameAndPropertyIdentifier=function(e,t){return e.metaData&&e.metaData[t]},this.getPropertiesList=function(){return i._propertiesList},this.getPropertiesListByBaseEntityAlias=function(e){return i._propertiesList[e]},this.setPropertiesList=function(e,t){i._propertiesList[t]=e},this.formatPropertiesList=function(e,t){e||(e={}),e.data||(e.data=[]);var r={$$group:"simple"};e.data.push(r);var n={$$group:"drilldown"};e.data.push(n);var o={$$group:"compareCollections"};e.data.push(o);var s={$$group:"attribute"};e.data.push(s);for(var a in e.data){angular.isDefined(e.data[a].ormtype)&&(angular.isDefined(e.data[a].attributeID)?e.data[a].$$group="attribute":e.data[a].$$group="simple"),angular.isDefined(e.data[a].fieldtype)&&("id"===e.data[a].fieldtype&&(e.data[a].$$group="simple"),"many-to-one"===e.data[a].fieldtype&&(e.data[a].$$group="drilldown"),"many-to-many"!==e.data[a].fieldtype&&"one-to-many"!==e.data[a].fieldtype||(e.data[a].$$group="compareCollections"));var c="_";"simple"!=e.data[a].$$group&&"attribute"!=e.data[a].$$group||(c="."),e.data[a].propertyIdentifier=t+c+e.data[a].name}for(var l=[],u=0;u<=e.data.length-1;u++)-1!=e.data[u].propertyIdentifier.indexOf(".undefined")||-1!=e.data[u].propertyIdentifier.indexOf("_undefined")?(i.$log.debug("removing: "+e.data[u].displayPropertyIdentifier),e.data[u].displayPropertyIdentifier="hide"):(l.push(e.data[u]),i.$log.debug(e.data[u]));l.sort,e.data=l,i.$log.debug("----------------------PropertyList\n\n\n\n\n"),e.data=i._orderBy(e.data,["propertyIdentifier"],!1)},this.orderBy=function(e,t,r){return i._orderBy(e,t,r)},this.$filter=e,this.$log=t,this._propertiesList={},this._orderBy=e("orderBy")}return e.$inject=["$filter","$log"],e}();t.MetaDataService=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(61),o=function(e){function t(t,i,r){var n=e.call(this)||this;return n.$timeout=t,n.historyService=i,n.utilityService=r,n.attach=function(e,t,i){i||(i=n.utilityService.createID()),t=t.toLowerCase(),i=i.toLowerCase(),n.observers[t]||(n.observers[t]={}),n.observers[t][i]||(n.observers[t][i]=[]),n.observers[t][i].push(e)},n.detachById=function(e){e=e.toLowerCase();for(var t in n.observers)n.detachByEventAndId(t,e)},n.detachByEvent=function(e){(e=e.toLowerCase())in n.observers&&delete n.observers[e]},n.detachByEventAndId=function(e,t){e=e.toLowerCase(),t=t.toLowerCase(),e in n.observers&&t in n.observers[e]&&delete n.observers[e][t]},n.notify=function(e,t){return e=e.toLowerCase(),n.$timeout(function(){for(var i in n.observers[e])for(var r=0,o=n.observers[e][i];r<o.length;r++){var s=o[r];s(t)}})},n.notifyById=function(e,t,i){return e=e.toLowerCase(),t=t.toLowerCase(),n.$timeout(function(){for(var r in n.observers[e])r==t&&angular.forEach(n.observers[e][r],function(e){e(i)})})},n.notifyAndRecord=function(e,t){return n.notify(e,t).then(function(){n.historyService.recordHistory(e,t,!0)})},n.observers={},n}return r(t,e),t}(n.BaseService);t.ObserverService=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"OrderPayment")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n}return r(t,e),t}(n.BaseEntityService);t.OrderPaymentService=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"Order")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n.newOrder_AddOrderPayment=function(){return n.newProcessObject("Order_AddOrderPayment")},n}return r(t,e),t}(n.BaseEntityService);t.OrderService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f){var p=this;this.$http=e,this.$q=t,this.$window=i,this.$location=r,this.$hibachi=n,this.$injector=o,this.requestService=s,this.accountService=a,this.cartService=c,this.orderService=l,this.observerService=u,this.appConfig=d,this.$timeout=f,this.requests={},this.errors={},this.baseActionPath="",this.months=[{name:"01 - JAN",value:1},{name:"02 - FEB",value:2},{name:"03 - MAR",value:3},{name:"04 - APR",value:4},{name:"05 - MAY",value:5},{name:"06 - JUN",value:6},{name:"07 - JUL",value:7},{name:"08 - AUG",value:8},{name:"09 - SEP",value:9},{name:"10 - OCT",value:10},{name:"11 - NOV",value:11},{name:"12 - DEC",value:12}],this.years=[],this.shippingAddress="",this.accountAddressEditFormIndex=[],this.showStoreSelector=[],this.showEmailSelector=[],this.imagePath={},this.successfulActions=[],this.failureActions=[],this.getErrors=function(){p.errors={};for(var e in p.requests){var t=p.requests[e];Object.keys(t.errors).length&&(p.errors[e]=t.errors)}return p.errors},this.getExpirationYears=function(){for(var e=new Date,t=e.getFullYear(),i=t,r=0;r<=15;r++)p.years.push({name:i+r,value:i+r})},this.getAccount=function(e){void 0===e&&(e=!1);var t=p.baseActionPath+"getAccount/";return p.accountDataPromise&&!e||(p.accountDataPromise=p.getData(t,"account","")),p.accountDataPromise},this.getCart=function(e){void 0===e&&(e=!1);var t=p.baseActionPath+"getCart/";return p.cartDataPromise&&!e||(p.cartDataPromise=p.getData(t,"cart","")),p.cartDataPromise},this.getCountries=function(e){void 0===e&&(e=!1);var t=p.baseActionPath+"getCountries/";return p.countryDataPromise&&!e||(p.countryDataPromise=p.getData(t,"countries","")),p.countryDataPromise},this.getStates=function(e,t,i){void 0===i&&(i=!1),t&&t.data&&(e=t.data.countrycode||t.countrycode),"boolean"!=typeof t||angular.isDefined(i)||(i=t),angular.isDefined(e)||(e="US");var r=p.baseActionPath+"getStateCodeOptionsByCountryCode/";return p.getRequestByAction("getStateCodeOptionsByCountryCode")&&p.getRequestByAction("getStateCodeOptionsByCountryCode").loading&&!i?p.stateDataPromise:(p.stateDataPromise=p.getData(r,"states","?countryCode="+e),p.stateDataPromise)},this.refreshAddressOptions=function(e){p.getStates(null,e),p.getAddressOptions(null,e)},this.getStateByStateCode=function(e){if(angular.isDefined(p.states)&&angular.isDefined(p.states.stateCodeOptions)&&angular.isDefined(e))for(var t in p.states.stateCodeOptions)if(p.states.stateCodeOptions[t].value==e)return p.states.stateCodeOptions[t]},this.getCountryByCountryCode=function(e){if(angular.isDefined(p.countries)&&angular.isDefined(p.countries.countryCodeOptions)){e||(e="US");for(var t in p.countries.countryCodeOptions)if(p.countries.countryCodeOptions[t].value==e)return p.countries.countryCodeOptions[t]}},this.getAddressOptions=function(e,t,i){void 0===i&&(i=!1),t&&t.data&&(e=t.data.countrycode||t.countrycode),angular.isDefined(e)||(e="US"),"boolean"!=typeof t||angular.isDefined(i)||(i=t);var r=p.baseActionPath+"getAddressOptionsByCountryCode/";return p.getRequestByAction("getAddressOptionsByCountryCode")&&p.getRequestByAction("getAddressOptionsByCountryCode").loading&&!i?p.addressOptionData:(p.addressOptionData=p.getData(r,"addressOptions","?countryCode="+e),p.addressOptionData)},this.getData=function(e,t,i){var r=e+i,n=p.requestService.newPublicRequest(r);return n.promise.then(function(e){-1!=t.indexOf("account")&&-1!=t.indexOf("cart")||(e.account&&delete e.account,e.cart&&delete e.cart),"cart"==t||"account"==t&&p[t]&&p[t].populate?p[t].populate(e):"states"==t?(p[t]={},p.$timeout(function(){p[t]=e})):p[t]=e}).catch(function(e){}),p.requests[n.getAction()]=n,n.promise},this.setShippingAddress=function(e){p.shippingAddress=e},this.setBillingAddress=function(e){p.billingAddress=e},this.selectBillingAddress=function(e){if(p.orderPaymentObject&&p.orderPaymentObject.forms){var t=p.account.accountAddresses[e].address;t.accountAddressID=p.account.accountAddresses[e].accountAddressID;for(var i in t)for(var r in p.orderPaymentObject.forms)r=p.orderPaymentObject.forms[r],void 0!=r["newOrderPayment.billingAddress."+i]&&r["newOrderPayment.billingAddress."+i].$setViewValue(t[i]);p.orderPaymentObject.newOrderPayment.billingAddress=t}},this.doAction=function(e,t,i){if(p.getRequestByAction(e)&&p.loadingThisRequest(e,t,!1))return p.$q.when();if(!e)throw"Action is required exception";var r=p.appConfig.baseURL;if(-1!==e.indexOf(":")?r+=e:r=p.baseActionPath+e,t?(i="post",t.returnJsonObjects="cart,account"):(r+=-1==r.indexOf("?")?"?":"&",r+="returnJsonObject=cart,account"),"post"==i){t.returnJsonObjects="cart,account";var n=p.requestService.newPublicRequest(r,t,i);return n.promise.then(function(e){p.processAction(e,n)}).catch(function(e){}),p.requests[n.getAction()]=n,n.promise}var o=r,s=p.requestService.newPublicRequest(o,t,i);return s.promise.then(function(e){p.processAction(e,s)}).catch(function(e){}),p.requests[s.getAction()]=s,s.promise},this.uploadFile=function(e,t){p.$timeout(function(){p.uploadingFile=!0});var i=p.appConfig.baseURL+e,r=new FormData;r.append("fileName",t.fileName),r.append("uploadFile",t.uploadFile);var n=new XMLHttpRequest;n.open("POST",i,!0),n.onload=function(e){var t=JSON.parse(n.response);200===n.status&&(p.processAction(t,null),p.successfulActions=t.successfulActions,p.failureActions=t.failureActions),p.$timeout(function(){p.uploadingFile=!1})},n.send(r)},this.processAction=function(e,t){if(p.runCheckoutAdjustments(e),t&&t.hasSuccessfulAction()){p.successfulActions=[];for(var i in t.successfulActions){if(-1!==t.successfulActions[i].indexOf("public:cart.placeOrder"))return void(p.$window.location.href=p.confirmationUrl);if(-1!==t.successfulActions[i].indexOf("public:cart.finalizeCart"))return void(p.$window.location.href=p.checkoutUrl);-1!==t.successfulActions[i].indexOf("public:account.logout")&&(p.account=p.$hibachi.newAccount()),p.successfulActions.push(t.successfulActions[i].split(".")[1])}}if(t&&t.hasFailureAction()){p.failureActions=[];for(var i in t.failureActions)p.failureActions.push(t.failureActions[i].split(".")[1])}e.account&&(p.account.populate(e.account),p.account.request=t),e.cart&&(p.cart.populate(e.cart),p.cart.request=t),p.errors=e.errors},this.runCheckoutAdjustments=function(e){p.filterErrors(e),e.cart&&p.removeInvalidOrderPayments(e.cart)},this.getRequestByAction=function(e){return p.requests[e]},this.userIsLoggedIn=function(){return p.account.userIsLoggedIn()},this.getActivePaymentMethods=function(){var e="/?"+p.appConfig.action+"=admin:ajax.getActivePaymentMethods",t=p.requestService.newPublicRequest(e).then(function(e){angular.isDefined(e.data.paymentMethods)&&(p.paymentMethods=e.data.paymentMethods)});p.requests[t.getAction()]=t},this.filterErrors=function(e){if(e&&e.cart&&e.cart.errors){var t=e.cart.errors;t.addOrderPayment&&(t.addOrderPayment=t.addOrderPayment.filter(function(e){return"billingAddress"!=e}))}},this.loadingThisRequest=function(e,t,i){var r=p.getRequestByAction(e);if(!r||!r.loading)return!1;for(var n in t)if((!0!==t[n]||i)&&r.data[n]!=t[n])return!1;return!0},this.removeInvalidOrderPayments=function(e){e.orderPayments=e.orderPayments.filter(function(e){return!e.hasErrors})},this.getPaymentMethodID=function(e){for(var t in p.paymentMethods)if(p.paymentMethods[t].paymentMethodName==e&&"Yes "==p.paymentMethods[t].activeFlag)return p.paymentMethods[t].paymentMethodID},this.hasPaymentMethod=function(e){for(var t=0,i=p.cart.orderPayments;t<i.length;t++)if(i[t].paymentMethod.paymentMethodName===e)return!0;return!1},this.hasCreditCardPaymentMethod=function(){return p.hasPaymentMethod("Credit Card")},this.hasPaypalPaymentMethod=function(){return p.hasPaymentMethod("PayPal Express")},this.hasGiftCardPaymentMethod=function(){return p.hasPaymentMethod("Gift Card")},this.hasMoneyOrderPaymentMethod=function(){return p.hasPaymentMethod("Money Order")},this.hasCashPaymentMethod=function(){return p.hasPaymentMethod("Cash")},this.hasFulfillmentMethod=function(e){for(var t=0,i=p.cart.orderFulfillments;t<i.length;t++)if(i[t].fulfillmentMethod.fulfillmentMethodName===e)return!0;return!1},this.hasShippingFulfillmentMethod=function(){return p.hasFulfillmentMethod("Shipping")},this.hasEmailFulfillmentMethod=function(){return p.hasFulfillmentMethod("Email")},this.hasPickupFulfillmentMethod=function(){return p.hasFulfillmentMethod("Pickup")},this.getFulfillmentType=function(e){return e.fulfillmentMethod.fulfillmentMethodType},this.isShippingFulfillment=function(e){return"shipping"===p.getFulfillmentType(e)},this.isEmailFulfillment=function(e){return"email"===p.getFulfillmentType(e)},this.isPickupFulfillment=function(e){return"pickup"===p.getFulfillmentType(e)},this.hasShippingAddress=function(e){return p.cart.orderFulfillments[e]&&p.isShippingFulfillment(p.cart.orderFulfillments[e])&&p.cart.orderFulfillments[e].data.shippingAddress&&p.cart.orderFulfillments[e].data.shippingAddress.addressID},this.hasShippingMethodOptions=function(e){var t=p.cart.orderFulfillments[e].shippingMethodOptions;return t&&t.length&&(t.length>1||t[0].value&&t[0].value.length)},this.hasPickupLocation=function(e){return p.cart.orderFulfillments[e]&&p.isPickupFulfillment(p.cart.orderFulfillments[e])&&p.cart.orderFulfillments[e].pickupLocation},this.orderRequiresFulfillment=function(){return p.cart.orderRequiresFulfillment()},this.orderRequiresAccount=function(){return p.cart.orderRequiresAccount()},this.hasShippingAddressAndMethod=function(){return p.cart.hasShippingAddressAndMethod()},this.hasAccount=function(){return!!p.account.accountID},this.redirectExact=function(e){p.$window.location.href=e},this.isUndefinedOrEmpty=function(e,t){return!angular.isDefined(e[t])||""==e[t]},this.getOrderItemQuantitySum=function(){return angular.isDefined(p.cart)?p.cart.getOrderItemQuantitySum():0},this.getSelectedStateIndexFromStateCode=function(e,t){for(var i in t)if(t[i].value==e)return i},this.isMobile=function(){return p.$window.innerWidth<=800&&p.$window.innerHeight<=600},this.isSelectedShippingMethod=function(e,t){if("number"==typeof e||"string"==typeof e){for(var i=t,r=void 0,n=0,o=p.cart.orderFulfillments;n<o.length;n++){var s=o[n];p.isShippingFulfillment(s)&&(r=s)}return!!(p.cart.fulfillmentTotal&&i==r.shippingMethod.shippingMethodID||1==r.shippingMethodOptions.length)}return p.cart.orderFulfillments[t].data.shippingMethod&&p.cart.orderFulfillments[t].data.shippingMethod.shippingMethodID==e.value||1==p.cart.orderFulfillments[t].data.shippingMethodOptions.length},this.selectShippingMethod=function(e,t){var i={shippingMethodID:e.value,fulfillmentID:p.cart.orderFulfillments[t].orderFulfillmentID};p.doAction("addShippingMethodUsingShippingMethodID",i),p.cart.orderFulfillments[t].data.shippingMethod||(p.cart.orderFulfillments[t].data.shippingMethod={}),p.cart.orderFulfillments[t].data.shippingMethod.shippingMethodID=e.value},this.removePromoCode=function(e){p.doAction("removePromotionCode",{promotionCode:e})},this.getTotalMinusGiftCards=function(){var e=p.getAppliedGiftCardTotals();return p.cart.calculatedTotal-e},this.formatPaymentMethod=function(e){return(e.accountPaymentMethodName||e.nameOnCreditCard)+" - "+e.creditCardType+" *"+e.creditCardLastFour+" exp. "+("0"+e.expirationMonth).slice(-2)+"/"+e.expirationYear.toString().slice(-2)},this.getOrderItemSkuIDs=function(e){return e.orderItems.map(function(e){return e.sku.skuID}).join(",")},this.getResizedImageByProfileName=function(e,t){p.loading=!0,void 0==e&&(e="medium"),p.doAction("getResizedImageByProfileName",{profileName:e,skuIds:t}).then(function(e){if(angular.isDefined(p.imagePath)||(p.imagePath={}),e.resizedImagePaths)for(var t in e.resizedImagePaths)p.imagePath[t]=e.resizedImagePaths[t]})},this.getPaymentTotals=function(){var e=0;for(var t in p.cart.orderPayments)e+=Number(p.cart.orderPayments[t].amount.toFixed(2));return e},this.getTotalMinusPayments=function(){var e=p.getPaymentTotals();return p.cart.calculatedTotal-e},this.paymentsEqualTotalBalance=function(){return 0==p.getTotalMinusPayments()},this.checkIfFinalPayment=function(){(p.getRequestByAction("addOrderPayment")&&p.getRequestByAction("addOrderPayment").hasSuccessfulAction()||p.getRequestByAction("addGiftCardOrderPayment")&&p.getRequestByAction("addGiftCardOrderPayment").hasSuccessfulAction())&&p.paymentsEqualTotalBalance()&&(p.edit="review")},this.getAddressEntity=function(e){var t=p.$hibachi.newAddress();if(e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t},this.resetRequests=function(e){delete p.requests[e]},this.addressesMatch=function(e,t){return!(!angular.isDefined(e)||!angular.isDefined(t)||e.streetAddress!=t.streetAddress||e.street2Address!=t.street2Address||e.city!=t.city||e.postalCode!=t.postalCode||e.stateCode!=t.stateCode||e.countrycode!=t.countrycode)},this.showFulfillmentTabBody=function(){return!!p.hasAccount()&&(-1==p.cart.orderRequirementsList.indexOf("account")&&-1!=p.cart.orderRequirementsList.indexOf("fulfillment")&&!p.edit||"fulfillment"==p.edit)},this.showPaymentTabBody=function(){return!!p.hasAccount()&&(-1==p.cart.orderRequirementsList.indexOf("account")&&-1==p.cart.orderRequirementsList.indexOf("fulfillment")&&-1!=p.cart.orderRequirementsList.indexOf("payment")&&!p.edit||-1==p.cart.orderRequirementsList.indexOf("account")&&-1==p.cart.orderRequirementsList.indexOf("fulfillment")&&"payment"==p.edit)},this.showReviewTabBody=function(){return!!p.hasAccount()&&!(-1!=p.cart.orderRequirementsList.indexOf("account")||-1!=p.cart.orderRequirementsList.indexOf("fulfillment")||-1!=p.cart.orderRequirementsList.indexOf("payment")||p.edit&&"review"!=p.edit)},this.fulfillmentTabIsActive=function(){return!(!p.hasAccount()||"fulfillment"!=p.edit&&(p.edit||-1!=p.cart.orderRequirementsList.indexOf("account")||!p.account.accountID||-1==p.cart.orderRequirementsList.indexOf("fulfillment")))},this.paymentTabIsActive=function(){return!(!p.hasAccount()||"payment"!=p.edit&&(p.edit||-1!=p.cart.orderRequirementsList.indexOf("account")||!p.account.accountID||-1!=p.cart.orderRequirementsList.indexOf("fulfillment")||-1==p.cart.orderRequirementsList.indexOf("payment")))},this.isCreatingAccount=function(){return!p.hasAccount()&&p.showCreateAccount},this.isSigningIn=function(){return!p.hasAccount()&&!p.showCreateAccount},this.loginError=function(){if(p.account.processObjects&&p.account.processObjects.login&&p.account.processObjects.login.hasErrors)return p.account.processObjects.login.errors.emailAddress[0]},this.createAccountError=function(){if(p.account.processObjects&&p.account.processObjects.create&&p.account.processObjects.create.hasErrors)return p.account.processObjects.create.errors},this.forgotPasswordNotSubmitted=function(){return!p.account.processObjects||!p.account.hasErrors&&!p.account.processObjects.forgotPassword},this.forgotPasswordSubmitted=function(){return p.account.processObjects&&p.account.processObjects.forgotPassword},this.forgotPasswordHasNoErrors=function(){return p.account.processObjects&&p.account.processObjects.forgotPassword&&!p.account.processObjects.forgotPassword.hasErrors},this.forgotPasswordError=function(){if(p.forgotPasswordSubmitted()&&!p.forgotPasswordHasNoErrors())return p.account.processObjects.forgotPassword.errors.emailAddress[0]},this.placeOrderFailure=function(){var e=[];for(var t in p.cart.errors){var i=p.cart.errors[t];e=e.concat(i)}p.cart.errors.runPlaceOrderTransaction=e,p.edit=""},this.placeOrderError=function(){if(p.cart.hasErrors&&p.cart.errors.runPlaceOrderTransaction)return p.cart.errors.runPlaceOrderTransaction},this.addOrderPaymentError=function(){return p.cart.errors.addOrderPayment?p.cart.errors.addOrderPayment:p.cart.errors.runPlaceOrderTransaction?p.cart.errors.runPlaceOrderTransaction:!!angular.isDefined(p.errors)&&p.errors.ADDORDERPAYMENT},this.addBillingAddressError=function(){if(p.loadingThisRequest("addOrderPayment",{},!1))return!1;if(p.errors&&p.errors.copied)return p.addBillingAddressErrors;if(p.addBillingAddressErrors=p.cart.errors.addBillingAddress||!!angular.isDefined(p.errors)&&p.errors.addBillingAddress,!p.billingAddressEditFormIndex&&p.errors&&p.hasFailureAction("addBillingAddress")){var e=p.$hibachi.newAddress().data;for(var t in p.errors)e.hasOwnProperty(t)&&(p.addBillingAddressErrors=p.addBillingAddressErrors||[],p.errors[t].forEach(function(e){p.addBillingAddressErrors.push(e)}));p.errors.copied=1}return p.addBillingAddressErrors},this.giftCardError=function(){if(p.cart.processObjects&&p.cart.processObjects.addOrderPayment&&p.cart.processObjects.addOrderPayment.errors&&p.cart.processObjects.addOrderPayment.errors.giftCardID)return p.cart.processObjects.addOrderPayment.errors.giftCardID[0]},this.editAccountAddress=function(e,t){p.clearShippingAddressErrors(),p.accountAddressEditFormIndex[t]=e,p.editingAccountAddress=p.getAddressEntity(p.account.accountAddresses[e].address),p.editingAccountAddress.accountAddressName=p.account.accountAddresses[e].accountAddressName,p.editingAccountAddress.accountAddressID=p.account.accountAddresses[e].accountAddressID},this.editBillingAddress=function(e,t){p.clearMessages(),p.billingAddressEditFormIndex=e,p.selectedBillingAddress=null,t?(p[t+"BillingAddress"]=p.getAddressEntity(p.account.accountAddresses[e].address),p[t+"BillingAddress"].accountAddressName=p.account.accountAddresses[e].accountAddressName,p[t+"BillingAddress"].accountAddressID=p.account.accountAddresses[e].accountAddressID):(p.billingAddress=p.getAddressEntity(p.account.accountAddresses[e].address),p.billingAddress.accountAddressName=p.account.accountAddresses[e].accountAddressName,p.billingAddress.accountAddressID=p.account.accountAddresses[e].accountAddressID)},this.clearShippingAddressErrors=function(){p.clearMessages(),p.shippingAddressErrors=void 0},this.clearMessages=function(){p.successfulActions=[],p.failureActions=[]},this.hideAccountAddressForm=function(e){p.accountAddressEditFormIndex[e]=void 0},this.hideBillingAddressForm=function(){if(void 0!=p.billingAddressEditFormIndex){var e=p.billingAddressEditFormIndex;"new"==p.billingAddressEditFormIndex&&(e=p.account.accountAddresses.length-1),p.selectBillingAddress(e)}p.billingAddressEditFormIndex=void 0,p.billingAddress={}},this.editingDifferentAccountAddress=function(e){for(var t=0;t<p.cart.orderFulfillments.length;t++)if(t!==e&&void 0!=p.accountAddressEditFormIndex[t])return!0},this.showEditAccountAddressForm=function(e){return void 0!=p.accountAddressEditFormIndex[e]&&"new"!=p.accountAddressEditFormIndex[e]},this.showNewAccountAddressForm=function(e){return"new"==p.accountAddressEditFormIndex[e]},this.showNewBillingAddressForm=function(){return!p.useShippingAsBilling&&"new"==p.billingAddressEditFormIndex},this.showEditBillingAddressForm=function(){return!p.useShippingAsBilling&&void 0!=p.billingAddressEditFormIndex&&"new"!=p.billingAddressEditFormIndex},this.addBillingErrorsToCartErrors=function(){var e=p.cart.errors;if(e.addOrderPayment){var t=e.addOrderPayment.indexOf("billingAddress");t>-1&&e.addOrderPayment.splice(t,1),0==e.addOrderPayment.length&&(e.addOrderPayment=null)}e.addBillingAddress=[];for(var i in p.errors)p.cart.errors.addBillingAddress=p.cart.errors.addBillingAddress.concat(p.errors[i])},this.accountAddressIsSelectedShippingAddress=function(e,t){return!(!(p.account&&p.account.accountAddresses&&p.cart.orderFulfillments[t].shippingAddress)||p.cart.orderFulfillments[t].shippingAddress.hasErrors)&&p.addressesMatch(p.account.accountAddresses[e].address,p.cart.orderFulfillments[t].shippingAddress)},this.accountAddressIsSelectedBillingAddress=function(e){return!!(p.account&&p.account.accountAddresses&&p.orderPaymentObject&&p.orderPaymentObject.newOrderPayment&&p.orderPaymentObject.newOrderPayment.billingAddress)&&p.account.accountAddresses[e].accountAddressID==p.orderPaymentObject.newOrderPayment.billingAddress.accountAddressID},this.hasEmailFulfillmentAddress=function(e){return Boolean(p.cart.orderFulfillments[e].emailAddress)},this.getEligiblePaymentMethodsForPaymentMethodType=function(e){return p.cart.eligiblePaymentMethodDetails.filter(function(t){return t.paymentMethod.paymentMethodType==e})},this.getEligibleCreditCardPaymentMethods=function(){return p.getEligiblePaymentMethodsForPaymentMethodType("creditCard")},this.getPickupLocation=function(e){if(p.cart.data.orderFulfillments[e])return p.cart.data.orderFulfillments[e].pickupLocation},this.getShippingAddress=function(e){if(p.cart.data.orderFulfillments[e])return p.cart.data.orderFulfillments[e].data.shippingAddress},this.getEmailFulfillmentAddress=function(e){if(p.cart.data.orderFulfillments[e])return p.cart.data.orderFulfillments[e].emailAddress},this.getPickupLocations=function(){var e=[];return p.cart.orderFulfillments.forEach(function(t,i){"pickup"==p.getFulfillmentType(t)&&t.pickupLocation&&t.pickupLocation.locationID&&(t.pickupLocation.fulfillmentIndex=i,e.push(t.pickupLocation))}),e},this.getShippingAddresses=function(){var e=[];return p.cart.orderFulfillments.forEach(function(t,i){"shipping"==p.getFulfillmentType(t)&&t.data.shippingAddress&&t.data.shippingAddress.addressID&&(t.data.shippingAddress.fulfillmentIndex=i,e.push(t.data.shippingAddress))}),e},this.getEmailFulfillmentAddresses=function(){var e=[];return p.cart.orderFulfillments.forEach(function(t,i){"email"==p.getFulfillmentType(t)&&t.emailAddress&&(t.fulfillmentIndex=i,e.push(t))}),e},this.hasSuccessfulAction=function(e){for(var t=0,i=e.split(",");t<i.length;t++){var r=i[t];if(p.successfulActions.indexOf(r)>-1)return!0}return!1},this.hasFailureAction=function(e){for(var t=0,i=e.split(",");t<i.length;t++){var r=i[t];if(p.failureActions.indexOf(r)>-1)return!0}return!1},this.shippingUpdateSuccess=function(){return p.hasSuccessfulAction("addShippingAddressUsingAccountAddress,addShippingAddress")},this.shippingMethodUpdateSuccess=function(){return p.hasSuccessfulAction("addShippingMethodUsingShippingMethodID")},this.updatedBillingAddress=function(){return p.hasSuccessfulAction("updateAddress")&&!p.hasSuccessfulAction("addShippingAddress")},this.addedBillingAddress=function(){return p.hasSuccessfulAction("addNewAccountAddress")&&!p.hasSuccessfulAction("addShippingAddressUsingAccountAddress")},this.addedShippingAddress=function(){return p.hasSuccessfulAction("addNewAccountAddress")&&p.hasSuccessfulAction("addShippingAddressUsingAccountAddress")},this.emailFulfillmentUpdateSuccess=function(){return p.hasSuccessfulAction("addEmailFulfillmentAddress")},this.pickupLocationUpdateSuccess=function(){return p.hasSuccessfulAction("addEmailFulfillmentAddress")},this.namelessPickupLocation=function(e){return!!p.getPickupLocation(e)&&void 0!=p.getPickupLocation(e).primaryAddress&&void 0==p.getPickupLocation(e).locationName},this.noPickupLocation=function(e){return!p.getPickupLocation(e)||void 0==p.getPickupLocation(e).primaryAddress&&void 0==p.getPickupLocation(e).locationName},this.disableContinueToPayment=function(){return-1!=p.cart.orderRequirementsList.indexOf("fulfillment")},this.hasAccountPaymentMethods=function(){return p.account&&p.account.accountPaymentMethods&&p.account.accountPaymentMethods.length},this.showBillingAccountAddresses=function(){return!p.useShippingAsBilling&&void 0==p.billingAddressEditFormIndex},this.hasNoCardInfo=function(){return!(p.newCardInfo&&p.newCardInfo.nameOnCreditCard&&p.newCardInfo.cardNumber&&p.newCardInfo.cvv)},this.isGiftCardPayment=function(e){return e.giftCard&&e.giftCard.giftCardCode},this.isPurchaseOrderPayment=function(e){return e.purchaseOrderNumber},this.isCheckOrMoneyOrderPayment=function(e){return"Check or Money Order"==e.paymentMethod.paymentMethodName},this.orderHasNoPayments=function(){return!p.cart.orderPayments.filter(function(e){return 0!=e.amount}).length},this.hasProductNameAndNoSkuName=function(e){return!e.sku.skuName&&e.sku.product&&e.sku.product.productName},this.cartHasNoItems=function(){return!p.getRequestByAction("getCart").loading&&p.hasAccount()&&p.cart&&p.cart.orderItems&&!p.cart.orderItems.length&&!p.loading&&!p.orderPlaced},this.hasAccountAndCartItems=function(){return p.hasAccount()&&!p.cartHasNoItems()},this.hideStoreSelector=function(e){p.showStoreSelector[e]=!1},this.hideEmailSelector=function(e){p.showEmailSelector[e]=!1},this.incrementItemQuantity=function(e,t){void 0===t&&(t=1),e.quantity+=t,e.quantity<0&&(e.quantity=0),p.updateOrderItemQuantity(e)},this.updateOrderItemQuantity=function(e){e.swForm.submit()},this.getOrderAttributeValues=function(e){var t={},i=JSON.parse(localStorage.attributeMetaData).Order;for(var r in i){var n=i[r];if(-1!==e.indexOf(r))for(var o in n.attributes){var s=n.attributes[o];t[s.attributeCode]={attributeCode:s.attributeCode,attributeName:s.attributeName,attributeValue:p.cart[s.attributeCode],inputType:s.attributeInputType,requiredFlag:s.requiredFlag}}}return t},this.binder=function(e,t){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];return t.bind.apply(t,[e].concat(i))},this.getSelectedShippingIndex=function(e,t){for(var i=0;i<=this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions.length;i++)if(this.cart.fulfillmentTotal==this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions[i].totalCharge)return i},this.validateNewOrderPayment=function(e){var t={};p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.streetAddress")&&(t.streetAddress="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.countrycode")&&(t.countrycode="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.statecode")&&p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.locality")&&(t.statecode="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.city")&&p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.city")&&(t.city="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.locality")&&p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.statecode")&&(t.locality="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.billingAddress.postalcode")&&(t.postalCode="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.nameOnCreditCard")&&(t.nameOnCreditCard="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.expirationMonth")&&(t.streetAddress="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.expirationYear")&&(t.expirationYear="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.creditCardNumber")&&(t.creditCardNumber="Required *"),p.isUndefinedOrEmpty(e,"newOrderPayment.securityCode")&&(t.securityCode="Required *"),Object.keys(t).length},this.addOrderPayment=function(e){var t=p.newBillingAddress,i=e.month,r=e.year,n=e.country,o=e.state,s=(p.account.firstName,p.account.lastName,{});if(p.orderService.newOrder_AddOrderPayment(),s={"newOrderPayment.billingAddress.addressID":"","newOrderPayment.billingAddress.streetAddress":t.streetAddress,"newOrderPayment.billingAddress.street2Address":t.street2Address,"newOrderPayment.nameOnCreditCard":t.nameOnCreditCard,"newOrderPayment.billingAddress.name":t.nameOnCreditCard,"newOrderPayment.expirationMonth":i,"newOrderPayment.expirationYear":r,"newOrderPayment.billingAddress.countrycode":n||t.countrycode,"newOrderPayment.billingAddress.city":""+t.city,"newOrderPayment.billingAddress.statecode":o||t.statecode,"newOrderPayment.billingAddress.locality":t.locality||"","newOrderPayment.billingAddress.postalcode":t.postalcode,"newOrderPayment.securityCode":t.cvv,"newOrderPayment.creditCardNumber":t.cardNumber,"newOrderPayment.saveShippingAsBilling":1==p.saveShippingAsBilling},p.validateNewOrderPayment(s),p.cart.orderPayments.hasErrors&&Object.keys(p.cart.orderPayments.errors).length)return-1;p.doAction("addOrderPayment",s,"post").then(function(e){e.cart.hasErrors||angular.isDefined(p.cart.orderPayments[p.cart.orderPayments.length-1].errors)&&!p.cart.orderPayments[p.cart.orderPayments.length-1].errors.hasErrors?(p.cart.hasErrors=!0,p.readyToPlaceOrder=!0,p.edit=""):(p.editPayment=!1,p.readyToPlaceOrder=!0,p.edit="")})},this.addGiftCardOrderPayments=function(e){p.cart.hasErrors=!1,p.cart.orderPayments.errors={},p.cart.orderPayments.hasErrors=!1;var t=p.account.giftCards,i={};i={"newOrderPayment.paymentMethod.paymentMethodID":"50d8cd61009931554764385482347f3a","newOrderPayment.redeemGiftCardToAccount":e};for(var r in t)1==t[r].applied&&(i["newOrderPayment.giftCardNumber"]=t[r].giftCardCode,t[r].calculatedTotal<p.cart.calculatedTotal?i["newOrderPayment.amount"]=t[r].calculatedBalanceAmount:i["newOrderPayment.amount"]=p.cart.calculatedTotal,i.copyFromType="",p.$q.all([p.doAction("addOrderPayment",i,"post")]).then(function(e){var t;angular.isDefined(e[0])&&(t=e[0].data),(t.cart.hasErrors||angular.isDefined(this.cart.orderPayments[this.cart.orderPayments.length-1].errors)&&!this.cart.orderPayments[""+(this.cart.orderPayments.length-1)].errors.hasErrors)&&(this.cart.hasErrors=!0,this.readyToPlaceOrder=!0,this.edit="")}))},this.addOrderPaymentAndPlaceOrder=function(e){p.orderPlaced=!1;var t=p.newBillingAddress,i=e.month,r=e.year,n=e.country,o=e.state,s=p.account.firstName,a=p.account.lastName,c={};if(c={orderid:p.cart.orderID,"newOrderPayment.billingAddress.streetAddress":t.streetAddress,"newOrderPayment.billingAddress.street2Address":t.street2Address,"newOrderPayment.nameOnCreditCard":t.nameOnCard||s+" "+a,"newOrderPayment.expirationMonth":i,"newOrderPayment.expirationYear":r,"newOrderPayment.billingAddress.countrycode":n||t.countrycode,"newOrderPayment.billingAddress.city":""+t.city,"newOrderPayment.billingAddress.statecode":o||t.statecode,"newOrderPayment.billingAddress.locality":t.locality||"","newOrderPayment.billingAddress.postalcode":t.postalcode,"newOrderPayment.securityCode":t.cvv,"newOrderPayment.creditCardNumber":t.cardNumber,"newOrderPayment.saveShippingAsBilling":1==p.saveShippingAsBilling},p.cart.orderPayments.hasErrors&&Object.keys(p.cart.orderPayments.errors).length)return-1;p.$q.all([p.doAction("addOrderPayment,placeOrder",c,"post")]).then(function(e){var t;if(angular.isDefined(e[0])&&(t=e[0].data),t.cart.hasErrors||angular.isDefined(t.failureActions)&&t.failureActions.length&&"public:cart.addOrderPayment"==t.failureActions[0]){if(t.failureActions.length)for(var i in t.failureActions);return this.edit="",!0}if(t.successfulActions.length){this.cart.hasErrors=!1,this.editPayment=!1,this.edit="";for(var i in t.successfulActions)-1!=t.successfulActions[i].indexOf("placeOrder")&&(this.orderPlaced=!0,this.redirectExact("/order-confirmation/"))}else this.edit=""})},this.applyGiftCard=function(e){p.finding=!0;var t=!1;for(var i in p.account.giftCards)0==p.account.giftCards[i].balanceAmount&&(p.account.giftCards[i].error="The balance is $0.00 for this card.",t=!1),p.account.giftCards[i].giftCardCode==e&&(p.account.giftCards[i].applied=!0,t=!0);t?(p.finding=!1,p.addGiftCardOrderPayments(!1)):(p.finding=!1,p.addGiftCardOrderPayments(!0))},this.getAppliedGiftCardTotals=function(){var e=0;for(var t in p.cart.orderPayments)""!=p.cart.orderPayments[t].giftCardNumber&&(e+=parseInt(p.cart.orderPayments[t].amount));return e},this.orderService=l,this.cartService=c,this.accountService=a,this.requestService=s,this.appConfig=d,this.baseActionPath=this.appConfig.baseURL+"/index.cfm/api/scope/",this.confirmationUrl="/order-confirmation",this.checkoutUrl="/checkout",this.$http=e,this.$location=r,this.$q=t,this.$injector=o,this.getExpirationYears(),this.$window=i,this.$hibachi=n,this.cart=this.cartService.newCart(),this.account=this.accountService.newAccount(),this.observerService=u,this.$timeout=f}return e.prototype.getOrderFulfillmentItemList=function(e){return this.cart.orderFulfillments[e].orderFulfillmentItems.map(function(e){return e.sku.skuName?e.sku.skuName:e.sku.product.productName}).join(", ")},e.prototype.copyOrderItem=function(e){return this.orderItem={orderItemID:e.orderItemID,quantity:e.quantity},this},e}();t.PublicService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){var n=this;this.$http=e,this.$q=t,this.appConfig=i,this.resourceBundles=r,this._resourceBundle={},this._resourceBundleLastModified="",this._loadingResourceBundle=!1,this._loadedResourceBundle=!1,this.getRBLoaded=function(){return n._loadedResourceBundle},this.rbKey=function(e,t){return n.getRBKey(e,n.appConfig.rbLocale)},this.getRBKey=function(e,t,i,r){if(n.resourceBundles){e=e.toLowerCase(),i=i||"",t=t||"en_us";var o=e.split(",");if(o.length>1){for(var s="",a=0;a<o.length&&(s=n.getRBKey(o[a],t,s),"_missing"==s.slice(-8));a++);return s}var c=n.resourceBundles[t];if(angular.isDefined(c[e]))return c[e];var l=i.split(",");l.push(e+"_"+t+"_missing"),i=l.join(","),angular.isUndefined(r)&&(r=e);var u=t.split("_");if(2===u.length){if(c=n.resourceBundles[u[0]],angular.isDefined(c[e]))return c[e];l.push(e+"_"+u[0]+"_missing"),i=l.join(",")}var d=e.split(".");if(d.length>=3&&"define"===d[d.length-2]){var f=e.replace(d[d.length-3]+".define","define");return n.getRBKey(f,t,i,r)}if(d.length>=2&&"define"!==d[d.length-2]){var f=e.replace(d[d.length-2]+".","define.");return n.getRBKey(f,t,i,r)}return"en"!==u[0]?n.getRBKey(r,"en",i):i}return""},this.$q=t,this.$http=e,this.appConfig=i,this.resourceBundles=r}return e}();t.RbKeyService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(580),n=i(581),o=function(){function e(e,t){var i=this;this.$injector=e,this.observerService=t,this.newAdminRequest=function(e,t,n,o,s,a){return void 0===n&&(n="post"),void 0===o&&(o={"Content-Type":"application/json"}),void 0===s&&(s=i.$injector),void 0===a&&(a=i.observerService),new r.AdminRequest(e,t,n,o,s,a)},this.newPublicRequest=function(e,t,r,o,s,a){return void 0===r&&(r="post"),void 0===o&&(o={"Content-Type":"application/x-www-form-urlencoded"}),void 0===s&&(s=i.$injector),void 0===a&&(a=i.observerService),new n.PublicRequest(e,t,r,o,s,a)},this.$injector=e,this.observerService=t}return e}();t.RequestService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.getRootParentScope=function(e,t){for(var i=e;null!=i&&angular.isUndefined(i[t])&&angular.isDefined(i.$parent);)i=i.$parent;if(null!=i&&angular.isDefined(i[t]))return i},this.hasParentScope=function(t,i){return null!=e.getRootParentScope(t,i)}}return e}();t.ScopeService=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(61),o=function(e){function t(t){var i=e.call(this)||this;return i.observerService=t,i._selection={},i.createSelections=function(e){i._selection[e]={allSelected:!1,ids:[]}},i.radioSelection=function(e,t){i.createSelections(e),i._selection[e].ids.push(t),i.observerService.notify("swSelectionToggleSelection"+e,{action:"check",selectionid:e,selection:t})},i.addSelection=function(e,t){if(i.isAllSelected(e)){var r=i._selection[e].ids.indexOf(t);r>-1&&(i._selection[e].ids.splice(r,1),i.observerService.notify("swSelectionToggleSelection"+e,{action:"check",selectionid:e,selection:t}))}else i.hasSelection(e,t)||(i._selection[e].ids.push(t),i.observerService.notify("swSelectionToggleSelection"+e,{action:"check",selectionid:e,selection:t}))},i.setSelection=function(e,t){angular.isUndefined(i._selection[e])&&i.createSelections(e),i._selection[e].ids=t},i.removeSelection=function(e,t){if(!angular.isUndefined(i._selection[e]))if(i.isAllSelected(e))i.hasSelection(e,t)||(i._selection[e].ids.push(t),i.observerService.notify("swSelectionToggleSelection"+e,{action:"uncheck",selectionid:e,selection:t}));else{var r=i._selection[e].ids.indexOf(t);r>-1&&(i._selection[e].ids.splice(r,1),i.observerService.notify("swSelectionToggleSelection"+e,{action:"uncheck",selectionid:e,selection:t}))}},i.hasSelection=function(e,t){return!angular.isUndefined(i._selection[e])&&i._selection[e].ids.indexOf(t)>-1},i.getSelections=function(e){return angular.isUndefined(i._selection[e])&&i.createSelections(e),i._selection[e].ids},i.getSelectionCount=function(e){return angular.isUndefined(i._selection[e])&&i.createSelections(e),i._selection[e].ids.length},i.clearSelection=function(e){i.createSelections(e),i.observerService.notify("swSelectionToggleSelection"+e,{action:"clear"})},i.selectAll=function(e){i._selection[e]={allSelected:!0,ids:[]},i.observerService.notify("swSelectionToggleSelection"+e,{action:"selectAll"})},i.isAllSelected=function(e){return angular.isUndefined(i._selection[e])&&i.createSelections(e),i._selection[e].allSelected},i}return r(t,e),t}(n.BaseService);t.SelectionService=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"Sku")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n}return r(t,e),t}(n.BaseEntityService);t.SkuService=o},function(e,t,i){"use strict";var r=this&&this.__assign||Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++){t=arguments[i];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};Object.defineProperty(t,"__esModule",{value:!0});var n=i(170),o=function(){function e(e,t){var i=this;this.$timeout=e,this.observerService=t,this.typeaheadData={},this.typeaheadPromises={},this.typeaheadStates={},this.state={typeaheadInstances:this.typeaheadStates},this.typeaheadStateReducer=function(e,t){switch(t.type){case"TYPEAHEAD_QUERY":case"TYPEAHEAD_USER_SELECTION":return r({},e,{action:t});default:return e}},this.getTypeaheadSelectionUpdateEvent=function(e){return"typeaheadSelectionUpdated"+e},this.attachTypeaheadSelectionUpdateEvent=function(e,t){i.observerService.attach(t,i.getTypeaheadSelectionUpdateEvent(e))},this.notifyTypeaheadSelectionUpdateEvent=function(e,t){i.observerService.notify(i.getTypeaheadSelectionUpdateEvent(e),t)},this.setTypeaheadState=function(e,t){i.typeaheadStates[e]=t},this.getTypeaheadState=function(e){return i.typeaheadStates[e]},this.getTypeaheadPrimaryIDPropertyName=function(e){return i.getTypeaheadState(e).primaryIDPropertyName},this.getIndexOfSelection=function(e,t){for(var r=0;r<i.getData(e).length;r++){if(angular.isDefined(t[i.getTypeaheadPrimaryIDPropertyName(e)])&&t[i.getTypeaheadPrimaryIDPropertyName(e)]==i.getData(e)[r][i.getTypeaheadPrimaryIDPropertyName(e)])return r;if(i.checkAgainstFallbackProperties(e,i.getData(e)[r],t))return r}return-1},this.addSelection=function(e,t){angular.isUndefined(i.typeaheadData[e])&&(i.typeaheadData[e]=[]),i.typeaheadData[e].push(t),i.notifyTypeaheadSelectionUpdateEvent(e,t)},this.removeSelection=function(e,t,r){if(angular.isUndefined(t)&&angular.isDefined(r)&&(t=i.getIndexOfSelection(e,r)),angular.isDefined(t)&&angular.isDefined(i.typeaheadData[e])&&-1!=t){i.updateSelections(e);var n=i.typeaheadData[e].splice(t,1)[0];return i.notifyTypeaheadSelectionUpdateEvent(e,n),n}},this.initializeSelections=function(e,t){t.setAllRecords(!0),i.typeaheadPromises[e]=t.getEntity(),i.typeaheadPromises[e].then(function(t){for(var r=0;r<t.records.length;r++)i.addSelection(e,t.records[r])},function(t){throw"typeaheadservice had trouble intializing selections for "+e+" because "+t})},this.updateSelections=function(e){if(angular.isDefined(i.getData(e))&&i.getData(e).length)for(var t=0;t<i.getTypeaheadState(e).results.length;t++)for(var r=0;r<i.getData(e).length;r++){if(i.getData(e)[r][i.getTypeaheadPrimaryIDPropertyName(e)]==i.getTypeaheadState(e).results[t][i.getTypeaheadPrimaryIDPropertyName(e)]){i.markResultSelected(i.getTypeaheadState(e).results[t],r);break}var n=i.checkAgainstFallbackProperties(e,i.getData(e)[r],i.getTypeaheadState(e).results[t],r);if(n)break}},this.markResultSelected=function(e,t){e.selected=!0,e.selectedIndex=t},this.checkAgainstFallbackProperties=function(e,t,r,n){var o=r[i.getTypeaheadPrimaryIDPropertyName(e)];if(angular.isDefined(i.getTypeaheadState(e).propertyToCompare)&&i.getTypeaheadState(e).propertyToCompare.length){if(angular.isDefined(t[i.getTypeaheadState(e).propertyToCompare])&&t[i.getTypeaheadState(e).propertyToCompare]==o)return angular.isDefined(n)&&i.markResultSelected(r,n),!0;if(angular.isDefined(t[i.getTypeaheadState(e).propertyToCompare])&&angular.isDefined(r[i.getTypeaheadState(e).propertyToCompare])&&t[i.getTypeaheadState(e).propertyToCompare]==r[i.getTypeaheadState(e).propertyToCompare])return angular.isDefined(n)&&i.markResultSelected(r,n),!0}if(i.getTypeaheadState(e).fallbackPropertyArray.length>0)for(var s=0;s<i.getTypeaheadState(e).fallbackPropertyArray.length;s++){var a=i.getTypeaheadState(e).fallbackPropertyArray[s];if(angular.isDefined(t[a])){if(t[a]==o)return angular.isDefined(n)&&i.markResultSelected(r,n),!0;if(angular.isDefined(r[a])&&t[a]==r[a])return angular.isDefined(n)&&i.markResultSelected(r,n),!0}}return!1},this.updateSelectionList=function(e){var t=[];if(angular.isDefined(i.getData(e)))for(var r=0;r<i.getData(e).length;r++){var n=i.getData(e)[r],o=n[i.getTypeaheadPrimaryIDPropertyName(e)];if(angular.isDefined(o))t.push(o);else if(angular.isDefined(i.getTypeaheadState(e).propertyToCompare)&&angular.isDefined(n[i.getTypeaheadState(e).propertyToCompare]))t.push(n[i.getTypeaheadState(e).propertyToCompare]);else if(angular.isDefined(i.getTypeaheadState(e).fallbackPropertyArray))for(var s=i.getTypeaheadState(e).fallbackPropertyArray,a=0;a<s.length;a++){var c=s[a];if(angular.isDefined(n[c])){t.push(n[c]);break}}}return t.join(",")},this.getData=function(e){if(!(e in i.typeaheadPromises))return i.typeaheadData[e]||[];i.typeaheadPromises[e].then().finally(function(){return i.typeaheadData[e]||[]}),delete i.typeaheadPromises[e]},this.stripTranscludedContent=function(e){for(var t=0;t<e.length;t++)angular.isDefined(e[t].localName)&&"ng-transclude"==e[t].localName&&(e=e.children());for(var t=0;t<e.length;t++)angular.isDefined(e[t].localName)&&"sw-collection-config"==e[t].localName&&e.splice(t,1);return e},this.typeaheadStore=new n.IStore(this.state,this.typeaheadStateReducer)}return e}();t.TypeaheadService=o},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(61),o=function(e){function t(t){var i=e.call(this)||this;return i.$parse=t,i.structKeyExists=function(e,t){return t in e},i.keyToAttributeString=function(e){for(var t="data-",r=0;r<e.length;r++)if("_"==e.charAt(r))t+="-";else if(i.isUpperCase(e.charAt(r)))if(r+1<=e.length&&i.isUpperCase(e.charAt(r+1))){if(e.charAt(r)+e.charAt(r+1)=="ID")t+="-id",r++;else if(i.isUpperCase(e.charAt(r+1)))for(t+="-";r+1<=e.length&&i.isUpperCase(e.charAt(r+1));)t+=e.charAt(r).toLowerCase(),r++}else t+="-"+e.charAt(r).toLowerCase();else t+=e.charAt(r);return t},i.isUpperCase=function(e){return e==e.toUpperCase()},i.isLowerCase=function(e){return e==e.toLowerCase()},i.snakeToCapitalCase=function(e){return e.charAt(0).toUpperCase()+e.replace(/(\-\w)/g,function(e){return e[1].toUpperCase()}).slice(1)},i.camelCaseToSnakeCase=function(e){return e.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})},i.replaceStringWithProperties=function(e,t){var r=i.getPropertiesFromString(e);if(r){var n=[];return angular.forEach(r,function(e){-1!=e.indexOf(".")&&(e=e.replace(".","_"));var r=i.$parse(e);n.push(r(t))}),i.replacePropertiesWithData(e,n)}},i.extend=function(e,t){e.prototype=new t,e.prototype.constructor=e},i.getQueryParamsFromUrl=function(e){var t={};if(e&&e.split){var i=e.split("?");if(i.length&&(e=i[1])&&e.split){var r=e.split("&");if(r&&r.length)for(var n=0;n<r.length;n++){var o=r[n].split("=");if(void 0===t[o[0]])t[o[0]]=o[1];else if("string"==typeof t[o[0]]){var s=[t[o[0]],o[1]];t[o[0]]=s}else t[o[0]].push(o[1])}}}return t},i.isAngularRoute=function(){return/[\?&]ng#!/.test(window.location.href)},i.ArrayFindByPropertyValue=function(e,t,i){var r=-1;return e.forEach(function(e,n){e[t]&&e[t]===i&&(r=n)}),r},i.listLast=function(e,t){void 0===e&&(e=""),void 0===t&&(t=",");var i=e.split(t);return i[i.length-1]},i.listRest=function(e,t){void 0===e&&(e=""),void 0===t&&(t=",");var i=e.split(t);return i.length&&i.splice(0,1),i.join(t)},i.listFirst=function(e,t){return void 0===e&&(e=""),void 0===t&&(t=","),e.split(t)[0]},i.listPrepend=function(e,t,i){return void 0===e&&(e=""),void 0===t&&(t=""),void 0===i&&(i=","),e.split(i).length?t+i+e:t},i.listAppend=function(e,t,i){void 0===e&&(e=""),void 0===t&&(t=""),void 0===i&&(i=",");var r=e.split(i);return""!=e.trim()&&r.length?e+i+t:t},i.listAppendUnique=function(e,t,i){void 0===e&&(e=""),void 0===t&&(t=""),void 0===i&&(i=",");var r=e.split(i);return""!=e.trim()&&r.length&&-1==r.indexOf(t)?e+i+t:t},i.listRemove=function(e,t){return-1!=e.indexOf(t)&&(e=e.replace(t,""),e=e.replace(",,",""),","==e&&(e=""),","==e.substring(0,1)&&(e=e.substring(1)),e=e.substring(0,e.length-1)),e},i.formatValue=function(e,t,r,n){return angular.isUndefined(r)&&(r={}),["currency","date","datetime","pixels","percentage","second","time","truefalse","url","weight","yesno"].indexOf(t)&&i["format_"+t](e,r,n),e},i.format_currency=function(e,t,i){angular.isUndefined},i.format_date=function(e,t,i){angular.isUndefined},i.format_datetime=function(e,t,i){angular.isUndefined},i.format_pixels=function(e,t,i){angular.isUndefined},i.format_yesno=function(e,t,i){return angular.isUndefined,!0===Boolean(e)?i.metaData.$$getRBKey("define.yes"):!1===e||"No"===e.trim()||"NO"===e.trim||"0"===e.trim()?i.metaData.$$getRBKey("define.no"):void 0},i.left=function(e,t){return e.substring(0,t)},i.right=function(e,t){return e.substring(e.length-t,e.length)},i.mid=function(e,t,i){var r=t+i;return e.substring(t,r)},i.getPropertiesFromString=function(e){if(e){for(var t=!1,i="",r=[],n=0;n<e.length;n++)t||"${"!=e.substr(n,2)?t&&"}"!=e[n]?i=i.concat(e[n]):t&&(r.push(i),t=!1):(i="",t=!0,n+=1);return r}},i.replacePropertiesWithData=function(e,t){for(var r=i.getPropertiesFromString(e),n=0;n<r.length;n++)e=e.replace("${"+r[n]+"}",t[n]);return e},i.replaceAll=function(e,t,r){return e.replace(new RegExp(i.escapeRegExp(t),"g"),r)},i.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")},i.createID=function(e){for(var e=e||26,t="",i="",r=0;r<e;r++)i=0===r?"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",t+=i.charAt(Math.floor(Math.random()*i.length));return t},i.arrayToList=function(e,t){return null!=t?e.join(t):e.join()},i.getPropertyValue=function(e,t){for(var i,r=t.split("."),n=e;(i=r.shift())&&r.length;)n=n[i];return n[i]},i.setPropertyValue=function(e,t,i){for(var r,n=t.split("."),o=e;(r=n.shift())&&n.length;)o[r]||(o[r]={}),o=o[r];o[r]=i},i.nvpToObject=function(e){var t={};for(var r in e){var n=e[r],o=r.replace(/\_/g,".");i.setPropertyValue(t,o,n)}return t},i.isDescendantElement=function(e,t){for(var i=t.parentNode;null!=i;){if(i==e)return!0;i=i.parentNode}return!1},i.toJson=function(e){var t=[];return JSON.stringify(e,function(e,i){if(null!=i&&"object"==typeof i){if(t.indexOf(i)>=0)return;t.push(i)}return i})},i.listFind=function(e,t,i){void 0===e&&(e=""),void 0===t&&(t=""),void 0===i&&(i=",");for(var r=e.split(i),n=-1,o=0;o<r.length;o++)r[o]===t&&(n=o);return n},i.listLen=function(e,t){return void 0===e&&(e=""),void 0===t&&(t=","),e.split(t).length},i.arraySorter=function(e,t){var i=[],r=[],n=t[0];if(angular.isDefined(t[1]))var o=t[1];for(var s in e)i.indexOf(e[s][n])>-1||i.push(e[s][n]);i.sort(function(e,t){return e<t?-1:e>t?1:0});for(var a in i){var c=[];for(var s in e)e[s][n]==i[a]&&c.push(e[s]);null!=t[1]&&c.sort(function(e,t){return e[o]<t[o]?-1:e[o]>t[o]?1:0});for(var l in c)r.push(c[l])}return r},i.minutesOfDay=function(e){return e.getMinutes()+60*e.getHours()},i.removeTimeOffset=function(e){var t=new Date(e),i=new Date;return i.setUTCFullYear(t.getFullYear(),t.getMonth(),t.getDate()),i.setUTCHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())},i}return r(t,e),t}(n.BaseService);t.UtilityService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){e.$id="pageDialogController",e.pageDialogs=r.getPageDialogs(),e.scrollToTopOfDialog=function(){t.hash("/#topOfPageDialog"),i()},e.pageDialogStyle={"z-index":3e3}}return e}();t.PageDialogController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.hibachiPathBuilder=e,this.get=function(){return t._pageDialogs||[]},this.addPageDialog=function(e,i){var r={path:e+".html",params:i};t._pageDialogs.push(r)},this.removePageDialog=function(e){t._pageDialogs.splice(e,1)},this.getPageDialogs=function(){return t._pageDialogs},this.removeCurrentDialog=function(){t._pageDialogs.splice(t._pageDialogs.length-1,1)},this.getCurrentDialog=function(){return t._pageDialogs[t._pageDialogs.length-1]},this._pageDialogs=[],this.hibachiPathBuilder=e}return e.$inject=["hibachiPathBuilder"],e}();t.DialogService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"E",templateUrl:n.buildPartialsPath(r)+"/detail.html",link:function(o,s,a){o.$id="slatwallDetailController",t.debug("slatwallDetailController"),o.setDirty=function(e){angular.forEach(e.forms,function(e){e.$setSubmitted()})};var c=function(){o[o.entityName.toLowerCase()]=o.entity,o.entity.metaData.$$getDetailTabs().then(function(e){o.detailTabs=e.data,t.debug("detailtabs"),t.debug(o.detailTabs)})},l=o.entityName.charAt(0).toUpperCase()+o.entityName.slice(1);o.tabPartialPath=n.buildPartialsPath(r),o.getEntity=function(){if("create"===o.entityID)o.createMode=!0,o.entity=i["new"+l](),c();else{o.createMode=!1;var e=i["get"+l]({id:o.entityID});e.promise.then(function(){o.entity=e.value,c()})}},o.getEntity(),o.deleteEntity=function(){o.entity.$$delete().then(function(){e.path("/entity/"+l+"/")})},o.allTabsOpen=!1}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$location","$log","$hibachi","coreEntityPartialsPath","hibachiPathBuilder"],t},e}();t.SWDetail=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",templateUrl:t.buildPartialsPath(e)+"detailtabs.html",link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreEntityPartialsPath","hibachiPathBuilder"],t},e}();t.SWDetailTabs=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"E",templateUrl:i.buildPartialsPath(t)+"/list.html",link:function(t,i,r){e.debug("slatwallList init")}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$log","coreEntityPartialsPath","hibachiPathBuilder"],t},e}();t.SWList=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){e.$id="otherwiseController"}return e}();t.OtherWiseController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){e.$id="routerController",e.partialRoute="",r.debug(t),r.debug(i);var o=i.path();e.controllerType=o.split("/")[1],"entity"===e.controllerType&&(e.entityName=n.snakeToCapitalCase(t.entityName),angular.isDefined(t.entityID)&&(e.entityID=t.entityID||""))}return e}();t.RouterController=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(615),n=i(616),o=i(613),s=i(612),a=i(614),c=i(16),l=angular.module("hibachi.entity",["ngRoute",c.coremodule.name]).config(["$routeProvider","$injector","$locationProvider","appConfig",function(e,t,i,r){var n={};window.location.href.replace(/[?&]+([^=&]+)#([^\/]*)/gi,function(e,t,i){n[t]=i}),n.ng&&i.html5Mode(!1).hashPrefix("!");var o=function(e){return e.charAt(0).toUpperCase()+e.replace(/(\-\w)/g,function(e){return e[1].toUpperCase()}).slice(1)};e.when("/entity/:entityName/",{template:function(e){return t.has("sw"+o(e.entityName)+"ListDirective")?"<sw-"+e.entityName.toLowerCase()+"-list></sw-"+e.entityName.toLowerCase()+"-list>":"<sw-list></sw-list>"},controller:"routerController"}).when("/entity/:entityName/:entityID",{template:function(e){return t.has("sw"+o(e.entityName)+"DetailDirective")?"<sw-"+e.entityName.toLowerCase()+"-detail></sw-"+e.entityName.toLowerCase()+"-detail>":"<sw-detail></sw-detail>"},controller:"routerController"})}]).constant("coreEntityPartialsPath","entity/components/").controller("otherwiseController",r.OtherWiseController).controller("routerController",n.RouterController).directive("swDetail",s.SWDetail.Factory()).directive("swDetailTabs",o.SWDetailTabs.Factory()).directive("swList",a.SWList.Factory());t.entitymodule=l},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){var n=this;this.$scope=e,this.$log=t,this.observerService=i,this.$rootScope=r,this.showAddressBookSelect=!1,this.showCountrySelect=!0,this.showSubmitButton=!0,this.showCloseButton=!0,this.param="?slataction=",this.showAlerts="true",this.getAction=function(){return angular.isDefined(n.action)||(n.action="addAddress"),-1!=n.action.indexOf(":")&&-1==n.action.indexOf(n.param)&&(n.action=n.param+n.action),n.action},this.hasField=function(e){return-1!=n.fieldList.indexOf(e)},this.submitKeyCheck=function(e){e.form.$name==n.addressName&&13==e.event.keyCode&&e.swForm.submit(e.swForm.action)},angular.isDefined(this.slatwallScope)&&(this.slatwall=this.slatwallScope),void 0==this.fieldList&&(this.fieldList="countryCode,name,company,streetAddress,street2Address,locality,city,stateCode,postalCode"),void 0==this.showAddressBookSelect&&(this.showAddressBookSelect=!1),void 0==this.showCountrySelect&&(this.showCountrySelect=!0),void 0==this.action&&(this.showSubmitButton=!1),r.slatwall&&!e.slatwall&&(e.slatwall=r.slatwall);var o=this.addressName;if(this.address&&(this.address.getData=function(){var e=n.address||{},t=n.address.forms[o];for(var i in t){var r=t[i];"object"==typeof r&&r.hasOwnProperty("$modelValue")&&(r=r.$modelValue?r.$modelValue:r.$viewValue?r.$viewValue:"",angular.isString(r)&&(e[i]=r),r.$modelValue?e[i]=r.$modelValue:r.$viewValue&&(e[i]=r.$viewValue))}return e||""}),this.eventListeners||(this.eventListeners={}),this.submitOnEnter&&(this.eventListeners.keyup=this.submitKeyCheck),this.eventListeners)for(var s in this.eventListeners)i.attach(this.eventListeners[s],s)}return e}();t.SWAddressFormController=r;var n=function(){function e(e,t){var i=this;this.coreFormPartialsPath=e,this.hibachiPathBuilder=t,this.transclude=!0,this.controller=r,this.controllerAs="SwAddressForm",this.bindToController={action:"@",actionText:"@",context:"@",customPartial:"@",slatwallScope:"=",address:"=",id:"@?",fieldNamePrefix:"@",fieldList:"@",fieldClass:"@",fulfillmentIndex:"@",tabIndex:"@",addressName:"@",showAddressBookSelect:"@",showCountrySelect:"@",showSubmitButton:"@",showCloseButton:"@",showAlerts:"@",eventListeners:"=?",submitOnEnter:"@",stateOptions:"=?"},this.scope={},this.templateUrl=function(e,t){return t.customPartial?"true"===t.customPartial?hibachiConfig.customPartialsPath+"addressform.html":hibachiConfig.customPartialsPath+t.customPartial:i.hibachiPathBuilder.buildPartialsPath(i.coreFormPartialsPath)+"addressform.html"}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWAddressForm=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$injector=e,this.$injector=e}return e.prototype.$onInit=function(){this.swfPropertyDisplay&&this.swfPropertyDisplay.errorClass&&(this.swForm.errorClass=this.swfPropertyDisplay.errorClass);var e=this.$injector.get("swErrorDisplayDirective")[0].bindToController;for(var t in e)this[t]||"name"===t||(!this[t]&&this.swPropertyDisplay&&this.swPropertyDisplay[t]?this[t]=this.swPropertyDisplay[t]:!this[t]&&this.swfPropertyDisplay&&this.swfPropertyDisplay[t]?this[t]=this.swfPropertyDisplay[t]:!this[t]&&this.swForm&&this.swForm[t]&&(this[t]=this.swForm[t]));this.property=this.property||this.propertyIdentifier,this.propertyIdentifier=this.propertyIdentifier||this.property,!this.name&&this.property&&(this.name=this.property)},e}();t.SWErrorDisplayController=r;var n=function(){function e(e,t){this.coreFormPartialsPath=e,this.hibachiPathBuilder=t,this.require={swForm:"^?swForm",form:"^?form",swPropertyDisplay:"^?swPropertyDisplay",swfPropertyDisplay:"^?swfPropertyDisplay"},this.restrict="E",this.controller=r,this.controllerAs="swErrorDisplay",this.scope={},this.bindToController={form:"=?",name:"@?",property:"@?",propertyIdentifier:"@?",errorClass:"@?"},this.templateUrl=t.buildPartialsPath(this.coreFormPartialsPath)+"errordisplay.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWErrorDisplay=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){this.$scope=e,this.$element=t,this.$compile=i,this.utilityService=r,this.utilityService=r,this.$scope=e,this.$element=t,this.$compile=i}return e.$inject=["$scope","$element","$compile","utilityService"],e}(),n=function(){function e(e,t){this.restrict="E",this.require={swfPropertyDisplayCtrl:"^?swfPropertyDisplay",form:"^?form"},this.controller=r,this.controllerAs="swfFormField",this.scope={},this.bindToController={propertyDisplay:"=?",propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",type:"@?"},this.link=function(e,t,i,r,n){},this.templateUrl=t.buildPartialsPath(e)+"swfformfield.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWFFormField=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c){var l=this;if(this.$scope=e,this.$element=t,this.$hibachi=i,this.$http=r,this.$timeout=n,this.observerService=o,this.$rootScope=s,this.entityService=a,this.utilityService=c,this.eventsObj=[],this.formData={},this.parseObjectErrors=!0,this.$onInit=function(){l.object&&l.parseObjectErrors&&l.$timeout(function(){l.parseErrors(l.object.errors)})},this.isObject=function(){return angular.isObject(l.object)},this.submitKeyCheck=function(e){e.form.$name==l.name&&13==e.event.keyCode&&l.submit(e.swForm.action)},this.submit=function(e){e=e||l.action,l.clearErrors(),l.formData=l.getFormData()||"",l.doActions(e)},this.doActions=function(e){if(angular.isArray(e))for(var t=0,i=e;t<i.length;t++){var r=i[t];l.doAction(r)}else{if(!angular.isString(e))throw"Unknown type of action exception";l.doAction(e)}},this.doAction=function(e){if(!e)throw"Action not defined on form";l.formData=l.formData||{},l.$rootScope.hibachiScope.doAction(e,l.formData).then(function(e){e&&(l.object.forms[l.name].$setSubmitted(!0),e.errors&&l.parseErrors(e.errors))})},this.parseErrors=function(e){angular.isDefined(e)&&e&&angular.forEach(e,function(t,i){var r=l.$element.find("[error-for='"+i+"']");l.$timeout(function(){var t=l.errorClass?l.errorClass:"error";e[i].forEach(function(e){r.append("<div class='"+t+"' name='"+i+"Error'>"+e+"</div>")})},0)},l)},this.clearErrors=function(){l.$timeout(function(){l.$element.find("[error-for]").empty()},0)},this.eventsHandler=function(e){for(var t in e.events)angular.isDefined(e.events[t].value)&&e.events[t].value==l.name.toLowerCase()&&e.events[t].name&&l[e.events[t].name]&&l[e.events[t].name](e.events[t].value)},this.hide=function(e){l.name.toLowerCase()==e&&l.$element.hide()},this.show=function(e){l.name.toLowerCase()==e&&l.$element.show()},this.refresh=function(e){},this.update=function(e){},this.clear=function(e){var t=l.formCtrl;angular.forEach(t,function(e,t){"object"==typeof e&&e.hasOwnProperty("$modelValue")?l.object.forms[l.name][t].$viewValue&&(l.object.forms[l.name][t].$setViewValue(""),l.object.forms[l.name][t].$render()):e=""})},this.getFormData=function(){var e=l.formCtrl;return angular.forEach(e,function(e,t){"object"==typeof e&&e.hasOwnProperty("$modelValue")&&(void 0!=l.object.forms[l.name][t].$modelValue?e=l.object.forms[l.name][t].$modelValue:void 0!=l.object.forms[l.name][t].$viewValue?e=l.object.forms[l.name][t].$viewValue:l.object.forms[l.name][t].$dirty&&(e=""),(angular.isString(e)||angular.isNumber(e)||"boolean"==typeof e)&&(l.formData[t]=e),void 0!=e.$modelValue?l.formData[t]=e.$modelValue:void 0!=e.$viewValue&&(l.formData[t]=e.$viewValue))}),l.formData||""},this.$hibachi=i,this.utilityService=c,angular.isUndefined(this.isDirty)&&(this.isDirty=!1),angular.isString(this.object)){var u=this.object.split("_");this.entityName=u[0],u.length>1?(this.context=this.context||u[1],this.isProcessForm=!0):(this.context=this.context||"save",this.isProcessForm=!1),this.$timeout(function(){l.object=l.$hibachi["new"+l.object]()})}else this.object&&this.object.metaData&&(this.isProcessForm=this.object.metaData.isProcessObject,this.entityName=this.object.metaData.className.split("_")[0],this.isProcessForm?this.context=this.context||this.object.metaData.className.split("_")[1]:this.context=this.context||"save");if(this.context=this.context||this.name,this.isProcessForm&&"Order"==this.entityName&&(this.entityName="Cart"),this.submitOnEnter&&(this.eventListeners=this.eventListeners||{},this.eventListeners.keyup=this.submitKeyCheck),this.eventListeners)for(var d in this.eventListeners)this.observerService.attach(this.eventListeners[d],d)}return e}();t.SWFormController=r;var n=function(){function e(e,t){this.coreFormPartialsPath=e,this.hibachiPathBuilder=t,this.templateUrl="",this.transclude=!0,this.restrict="E",this.controller=r,this.controllerAs="swForm",this.scope={},this.bindToController={name:"@?",context:"@?",entityName:"@?",hiddenFields:"=?",action:"@?",actions:"@?",formClass:"@?",formData:"=?",errorClass:"@?",object:"=?",onSuccess:"@?",onError:"@?",hideUntil:"@?",isDirty:"=?",inputAttributes:"@?",eventListeners:"=?",eventAnnouncers:"@",submitOnEnter:"@",parseObjectErrors:"@?"},this.link=function(e,t,i,r){},this.templateUrl=t.buildPartialsPath(this.coreFormPartialsPath)+"form.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWForm=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$injector=e,this.$scope=t,this.$timeout=i,this.$log=r,this.$hibachi=n,this.observerService=o,this.utilityService=s,this.formFieldChanged=function(e){"yesno"===a.fieldType?(a.object.data[a.propertyIdentifier]=e.value,a.form[a.propertyIdentifier].$dirty=!0,a.form["selected"+a.object.metaData.className+a.propertyIdentifier+a.selectedRadioFormName].$dirty=!1):"checkbox"==a.fieldType?(a.object.data[a.propertyIdentifier]=e.value,a.form[a.propertyIdentifier].$dirty=!0):"select"===a.fieldType?(a.$log.debug("formfieldchanged"),a.$log.debug(e),"object"===a.selectType&&"function"==typeof a.object.data[a.propertyIdentifier].$$getIDName?(a.object.data[a.propertyIdentifier].data[a.object.data[a.propertyIdentifier].$$getIDName()]=e.value,angular.isDefined(a.form[a.object.data[a.propertyIdentifier].$$getIDName()])&&(a.form[a.object.data[a.propertyIdentifier].$$getIDName()].$dirty=!0)):"string"===a.selectType&&e&&null!=e.value&&(a.object.data[a.propertyIdentifier]=e.value,a.form[a.propertyIdentifier].$dirty=!0),a.observerService.notify(a.object.metaData.className+a.propertyIdentifier.charAt(0).toUpperCase()+a.propertyIdentifier.slice(1)+"OnChange",e)):(a.object.data[a.propertyIdentifier]=e.value,a.form[a.propertyIdentifier].$dirty=!0,a.form["selected"+a.object.metaData.className+a.propertyIdentifier+a.selectedRadioFormName].$dirty=!1)},this.$onInit=function(){var e=a.$injector.get("swFormFieldDirective")[0].bindToController;for(var t in e)a[t]||(!a[t]&&a.swPropertyDisplay&&a.swPropertyDisplay[t]?a[t]=a.swPropertyDisplay[t]:!a[t]&&a.swfPropertyDisplay&&a.swfPropertyDisplay[t]?a[t]=a.swfPropertyDisplay[t]:!a[t]&&a.swForm&&a.swForm[t]&&(a[t]=a.swForm[t]));var i=[];if("string"==typeof a.optionValues){for(var r=a.optionValues.split(","),n=0,o=r;n<o.length;n++){var s=o[n];i.push({name:s,value:s})}a.optionValues=i}if(a.edit=a.edit||!0,a.fieldType=a.fieldType||"text","yesno"===a.fieldType&&a.yesnoStrategy(),"select"===a.fieldType&&a.selectStrategy(),a.eventListeners)for(var c in a.eventListeners)a.observerService.attach(a.eventListeners[c],c)},this.selectStrategy=function(){angular.isDefined(a.object.metaData)&&angular.isDefined(a.object.metaData[a.propertyIdentifier])&&angular.isDefined(a.object.metaData[a.propertyIdentifier].fieldtype)?(a.selectType="object",a.$log.debug("selectType:object")):(a.selectType="string",a.$log.debug("selectType:string")),a.getOptions()},this.getOptions=function(){angular.isUndefined(a.options)&&(a.optionsArguments&&a.optionsArguments.hasOwnProperty("propertyIdentifier")||(a.optionsArguments={propertyIdentifier:a.propertyIdentifier}),a.$hibachi.getPropertyDisplayOptions(a.object.metaData.className,a.optionsArguments).then(function(e){if(a.options=e.data,"object"===a.selectType)if(angular.isUndefined(a.object.data[a.propertyIdentifier])&&(a.object.data[a.propertyIdentifier]=a.$hibachi["new"+a.object.metaData[a.propertyIdentifier].cfc]()),""===a.object.data[a.propertyIdentifier].$$getID())a.$log.debug("no ID"),a.$log.debug(a.object.data[a.propertyIdentifier].$$getIDName()),a.object.data["selected"+a.propertyIdentifier]=a.options[0],a.object.data[a.propertyIdentifier]=a.$hibachi["new"+a.object.metaData[a.propertyIdentifier].cfc](),a.object.data[a.propertyIdentifier].data[a.object.data[a.propertyIdentifier].$$getIDName()]=a.options[0].value;else{var t=!1;for(var i in a.options){if(angular.isObject(a.options[i].value)){if(a.$log.debug("isObject"),a.$log.debug(a.object.data[a.propertyIdentifier].$$getIDName()),a.options[i].value===a.object.data[a.propertyIdentifier]){a.object.data["selected"+a.propertyIdentifier]=a.options[i],a.object.data[a.propertyIdentifier]=a.options[i].value,t=!0;break}}else if(a.$log.debug("notisObject"),a.$log.debug(a.object.data[a.propertyIdentifier].$$getIDName()),a.options[i].value===a.object.data[a.propertyIdentifier].$$getID()){a.object.data["selected"+a.propertyIdentifier]=a.options[i],a.object.data[a.propertyIdentifier].data[a.object.data[a.propertyIdentifier].$$getIDName()]=a.options[i].value,t=!0;break}t||(a.object.data["selected"+a.propertyIdentifier]=a.options[0])}}else if("string"===a.selectType)if(null!==a.object.data[a.propertyIdentifier])for(var i in a.options)a.options[i].value===a.object.data[a.propertyIdentifier]&&(a.object.data["selected"+a.propertyIdentifier]=a.options[i],a.object.data[a.propertyIdentifier]=a.options[i].value);else a.object.data["selected"+a.propertyIdentifier]=a.options[0],a.object.data[a.propertyIdentifier]=a.options[0].value}))},this.yesnoStrategy=function(){if(a.selectedRadioFormName=a.utilityService.createID(26),a.object.data[a.propertyIdentifier]=a.object.data[a.propertyIdentifier]&&a.object.data[a.propertyIdentifier].length&&"yes"===a.object.data[a.propertyIdentifier].toLowerCase().trim()||1==a.object.data[a.propertyIdentifier]?1:0,a.options=[{name:"Yes",value:1},{name:"No",value:0}],angular.isDefined(a.object.data[a.propertyIdentifier]))for(var e in a.options)a.options[e].value===a.object.data[a.propertyIdentifier]&&(a.selected=a.options[e],a.object.data[a.propertyIdentifier]=a.options[e].value);else a.selected=a.options[0],a.object.data[a.propertyIdentifier]=a.options[0].value;a.$timeout(function(){a.form[a.propertyIdentifier].$dirty=a.isDirty})},this.$injector=e,this.$scope=t,this.$timeout=i,this.$log=r,this.$hibachi=n,this.observerService=o,this.utilityService=s}return e}();t.SWFormFieldController=r;var n=function(){function e(e,t,i,n,o,s,a){this.restrict="EA",this.require={swfPropertyDisplay:"^?swfPropertyDisplay",swPropertyDisplay:"^?swPropertyDisplay",form:"^?form",swForm:"^?swForm"},this.controller=r,this.controllerAs="swFormField",this.scope={},this.bindToController={propertyIdentifier:"@?",property:"@?",name:"@?",class:"@?",errorClass:"@?",fieldType:"@?",type:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",inListingDisplay:"=?",inputAttributes:"@?",options:"=?",optionsArguments:"=?",eagerLoadOptions:"=?",rawFileTarget:"@?",binaryFileTarget:"@?",isDirty:"=?",onChange:"=?",editable:"=?",eventListeners:"=?",context:"@?",eventAnnouncers:"@"},this.link=function(e,t,i){},this.templateUrl=a.buildPartialsPath(s)+"formfield.html"}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$log","$templateCache","$window","$hibachi","formService","coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWFormField=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.formService=e,void 0==this.propertyDisplay.isDirty&&(this.propertyDisplay.isDirty=!1),this.propertyDisplay.form.$dirty=this.propertyDisplay.isDirty}return e}(),n=function(){function e(e,t){this.restrict="E",this.require="^form",this.controller=r,this.controllerAs="swFormFieldFile",this.scope=!0,this.bindToController={propertyDisplay:"="},this.link=function(e,t,i,r){},this.templateUrl=t.buildPartialsPath(e)+"file.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWFormFieldFile=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.propertyDisplay.form.$dirty=this.propertyDisplay.isDirty}return e}(),n=function(){function e(e,t){this.restrict="E",this.require="^form",this.scope=!0,this.controller=r,this.bindToController={propertyDisplay:"=?"},this.controllerAs="ctrl",this.templateUrl="",this.link=function(e,t,i,r){},this.templateUrl=t.buildPartialsPath(e)+"json.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWFormFieldJson=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{templateUrl:r.buildPartialsPath(i)+"search-select.html",require:"^form",restrict:"E",scope:{propertyDisplay:"="},link:function(i,r,n,o){i.selectionOptions={value:[],$$adding:!1},i.setAdding=function(e){i.isAdding=e,i.showAddBtn=!1},i.selectedOption={},i.showAddBtn=!1;var s=i.propertyDisplay.object.$$getMetaData(i.propertyDisplay.property),a=t.newEntity(s.cfc);i.cfcProperCase=s.cfcProperCase,i.selectionOptions.getOptionsByKeyword=function(r){var n='[ {  "filterGroup":[  { "propertyIdentifier":"_'+i.cfcProperCase.toLowerCase()+"."+i.cfcProperCase+'Name", "comparisonOperator":"like", "ormtype":"string", "value":"%'+r+'%"  } ] }]';return t.getEntity(s.cfc,{filterGroupsConfig:n.trim()}).then(function(t){e.debug("typesByKeyword"),e.debug(t),i.selectionOptions.value=t.pageRecords;var n=r.length;return i.showAddBtn=n>0,i.selectionOptions.value})},i.propertyDisplay.object["$$get"+s.nameCapitalCase]().then(function(e){}),i.selectItem=function(t,r,n){i.$item=t,i.$model=r,i.$label=n,i.showAddBtn=!1,a.$$init(t),e.debug("select item"),e.debug(a),i.propertyDisplay.object["$$set"+s.nameCapitalCase](a)}}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$log","$hibachi","coreFormPartialsPath","hibachiPathBuilder"],t},e}();t.SWFormFieldSearchSelect=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"E",require:["^form","^swForm"],scope:{object:"=?",context:"@?",name:"@?",isDirty:"=?"},link:function(t,i,r,n,o){t.$watch(function(){return n[0]},function(){n[1].formCtrl=n[0]}),n[0].$$swFormInfo={object:t.object,context:t.context||"save",name:t.name},t.isDirty&&(n[0].autoDirty=!0),t.form=n[0],n[0].name=t.name,n[0].$setDirty(),e.setForm(n[0]),angular.isDefined(t.object.forms)||(t.object.forms={}),t.object.forms[t.name]=n[0]}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["formService"],t},e}();t.SWFormRegistrar=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o){var s=this;this.$log=e,this.$compile=t,this.$hibachi=i,this.utilityService=r,this.rbkeyService=n,this.$injector=o,this.$onInit=function(){var e=s.$injector.get("swFormSubscriberDirective")[0].bindToController;for(var t in e)s[t]||!s[t]&&s.swForm&&s.swForm[t]&&(s[t]=s.swForm[t]);s.property=s.property||s.propertyIdentifier,s.propertyIdentifier=s.propertyIdentifier||s.property,s.type=s.type||s.fieldType,s.fieldType=s.fieldType||s.type,s.edit=s.edit||s.editing,s.editing=s.editing||s.edit,s.editing=s.editing||!0,s.fieldType=s.fieldType||"text",s.inputAttributes=s.inputAttributes||""},this.utilityService=r,this.$hibachi=i,this.rbkeyService=n,this.$log=e,this.$injector=o}return e}(),n=function(){function e(){this.restrict="A",this.require={swForm:"?^swForm",form:"?^form"},this.scope={},this.bindToController={propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",fieldType:"@?",property:"@?",inputAttributes:"@?",type:"@?",editing:"=?"},this.controller=r,this.controllerAs="SWFormSubscriber",this.link=function(e,t,i){}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWFormSubscriber=n},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(172),o=function(e){function t(t,i,r,n,o){var s=e.call(this,t,i,r,n,o)||this;return s.$filter=t,s.utilityService=i,s.$injector=r,s.metadataService=n,s.observerService=o,s.edit=!0,s}return r(t,e),t}(n.SWPropertyDisplayController);t.SWFPropertyDisplayController=o;var s=function(e){function t(t,i,r,n,s){var a=e.call(this,t,i,r,n,s)||this;return a.$compile=t,a.scopeService=i,a.coreFormPartialsPath=r,a.hibachiPathBuilder=n,a.swpropertyPartialPath=s,a.controller=o,a.controllerAs="swfPropertyDisplay",a.scope={},a.link=function(e,t,i){},a}return r(t,e),t}(n.SWPropertyDisplay);t.SWFPropertyDisplay=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c){var l=this;this.$scope=e,this.$log=t,this.$hibachi=i,this.$injector=r,this.listingService=n,this.utilityService=o,this.rbkeyService=s,this.observerService=a,this.metadataService=c,this.eventAnnouncers="",this.onSuccess=function(){l.utilityService.setPropertyValue(l.swForm.object,l.propertyIdentifier,l.value),l.swPropertyDisplay&&l.utilityService.setPropertyValue(l.swPropertyDisplay.object,l.propertyIdentifier,l.value),l.swfPropertyDisplay&&(l.utilityService.setPropertyValue(l.swfPropertyDisplay.object,l.propertyIdentifier,l.value),l.swfPropertyDisplay.edit=!1),l.utilityService.setPropertyValue(l.swFormField.object,l.propertyIdentifier,l.value)},this.getValidationDirectives=function(){var e="",t=l.propertyIdentifier,i=l.form;if(l.$log.debug("Name is:"+t+" and form is: "+i),l.metadataService.isAttributePropertyByEntityAndPropertyIdentifier(l.object,l.propertyIdentifier)&&(l.object.validations.properties[t]=[],(l.object.metaData[l.propertyIdentifier].requiredFlag&&1==l.object.metaData[l.propertyIdentifier].requiredFlag||"string"==typeof l.object.metaData[l.propertyIdentifier].requiredFlag&&"yes"==l.object.metaData[l.propertyIdentifier].requiredFlag.trim().toLowerCase())&&l.object.validations.properties[t].push({contexts:"save",required:!0}),l.object.metaData[l.propertyIdentifier].validationRegex&&l.object.validations.properties[t].push({contexts:"save",regex:l.object.metaData[l.propertyIdentifier].validationRegex})),angular.isUndefined(l.object.validations)||angular.isUndefined(l.object.validations.properties)||angular.isUndefined(l.object.validations.properties[l.propertyIdentifier]))return"";var r=l.object.validations.properties[l.propertyIdentifier];l.$log.debug("Validations: ",r),l.$log.debug(l.form);var n=[],o=l.swForm.context,s=l.swForm.name;l.$log.debug("Form context is: "),l.$log.debug(o),l.$log.debug("Form Name: "),l.$log.debug(s);var a=l.object.validations.properties[t];if(angular.isObject(a)){if(angular.isUndefined(a[0].contexts)&&l.object.metaData.isProcessObject&&(a[0].contexts=l.object.metaData.className.split("_")[1]),a[0].contexts.indexOf(o)>-1){l.$log.debug("Matched");for(var c in a[0])"contexts"!=c&&"conditions"!==c&&(e+=" swvalidation"+c.toLowerCase()+"='"+a[0][c]+"'")}l.$log.debug(e)}return l.$log.debug(r),l.$log.debug(i),angular.forEach(r,function(e,t){e.contexts&&-1!==l.utilityService.listFind(e.contexts.toLowerCase(),l.swForm.context.toLowerCase())&&(l.$log.debug("Validations for context"),l.$log.debug(e),n.push(e))}),e},this.clear=function(){l.reverted&&(l.reverted=!1,l.showRevert=!0),l.edited=!1,l.value=l.initialValue,l.inListingDisplay&&l.rowSaveEnabled&&l.listingService.markUnedited(l.listingID,l.pageRecordIndex,l.propertyDisplayID)},this.revert=function(){l.showRevert=!1,l.reverted=!0,l.value=l.revertToValue,l.onEvent({},"change")},this.onEvent=function(e,t){var i=l.swForm.name+l.name+t,r=l.swForm.name+t,n={event:e,eventName:t,form:l.form,swForm:l.swForm,swInput:l,inputElement:$("input").first()[0]};l.observerService.notify(i,n),l.observerService.notify(r,n),l.observerService.notify(t,n)},this.getTemplate=function(){var e="",t="",i="",r="",n="";l.class||(l.class="form-control"),l.noValidate||(t=l.getValidationDirectives()),l.object&&l.object.metaData&&void 0!=l.object.metaData.$$getPropertyFormatType(l.propertyIdentifier)&&"currency"==l.object.metaData.$$getPropertyFormatType(l.propertyIdentifier)&&(r="sw-currency-formatter ",angular.isDefined(l.object.data.currencyCode)&&(r=r+'data-currency-code="'+l.object.data.currencyCode+'" ',i='<span class="s-title">'+l.object.data.currencyCode+"</span>"));var o=l.$hibachi.getConfig(),s="";if(l.object.metaData&&l.object.metaData[l.propertyIdentifier]&&l.object.metaData[l.propertyIdentifier].hb_nullrbkey&&(s=l.rbkeyService.getRBKey(l.object.metaData[l.propertyIdentifier].hb_nullrbkey)),"json"===l.fieldType.toLowerCase()&&(n=n+="display:none"),["email","text","password","number","time","date","datetime","json","file"].indexOf(l.fieldType.toLowerCase())>=0){var a=l.fieldType.toLowerCase();"time"!==l.fieldType&&"number"!==l.fieldType||(a="text"),e=i+'<input type="'+a+'" class="'+l.class+'" ng-model="swInput.value" ng-disabled="swInput.editable === false" ng-show="swInput.edit" ng-class="{\'form-control\':swInput.inListingDisplay, \'input-xs\':swInput.inListingDisplay}"name="'+l.propertyIdentifier+'" placeholder="'+s+'" '+t+r+'id="swinput'+l.swForm.name+l.name+'" style="'+n+'"'+l.inputAttributes+l.eventAnnouncerTemplate}return["date","datetime","time"].indexOf(l.fieldType.toLowerCase())>=0&&(e+="datetime-picker "),"time"===l.fieldType&&(e=e+'data-time-only="true" date-format="'+o.timeFormat.replace("tt","a")+'" ng-blur="swInput.pushBindings()"'),"date"===l.fieldType&&(e=e+'data-date-only="true" future-only date-format="'+o.dateFormat+'" '),e.length&&(e+=" />"),e+'\n\t\t\t<a class="s-remove-change"\n\t\t\t\tdata-ng-click="swPropertyDisplay.clear()"\n\t\t\t\tdata-ng-if="swInput.edited && swInput.edit">\n\t\t\t\t\t<i class="fa fa-remove"></i>\n\t\t\t</a>\n\n\t\t\t\x3c!-- Revert Button --\x3e\n\t\t\t<button class="btn btn-xs btn-default s-revert-btn"\n\t\t\t\t\tdata-ng-show="swInput.showRevert"\n\t\t\t\t\tdata-ng-click="swInput.revert()"\n\t\t\t\t\tdata-toggle="popover"\n\t\t\t\t\tdata-trigger="hover"\n\t\t\t\t\tdata-content="{{swInput.revertText}}"\n\t\t\t\t\tdata-original-title=""\n\t\t\t\t\ttitle="">\n\t\t\t\t<i class="fa fa-refresh"></i>\n\t\t\t</button>\n\t\t'},this.pullBindings=function(){var e=l.$injector.get("swInputDirective")[0].bindToController;for(var t in e)l[t]||(!l[t]&&l.swFormField&&l.swFormField[t]?l[t]=l.swFormField[t]:!l[t]&&l.swPropertyDisplay&&l.swPropertyDisplay[t]?l[t]=l.swPropertyDisplay[t]:!l[t]&&l.swfPropertyDisplay&&l.swfPropertyDisplay[t]?l[t]=l.swfPropertyDisplay[t]:!l[t]&&l.swForm&&l.swForm[t]&&(l[t]=l.swForm[t]));l.edit=l.edit||!0,l.fieldType=l.fieldType||"text",l.inputAttributes=l.inputAttributes||"",l.inputAttributes=l.utilityService.replaceAll(l.inputAttributes,"'",'"'),l.value=l.utilityService.getPropertyValue(l.object,l.propertyIdentifier)},this.pushBindings=function(){l.observerService.notify("updateBindings").then(function(){})},this.$onInit=function(){l.pullBindings(),l.eventAnnouncersArray=l.eventAnnouncers.split(","),l.eventAnnouncerTemplate="";for(var e in l.eventAnnouncersArray){var t=l.eventAnnouncersArray[e];t.length&&(l.eventAnnouncerTemplate+=" ng-"+t+"=\"swInput.onEvent($event,'"+t+"')\"")}l.object&&l.object.metaData&&void 0!=l.object.metaData.className?l.eventNameForObjectSuccess=l.object.metaData.className.split("_")[0]+l.context.charAt(0).toUpperCase()+l.context.slice(1)+"Success":l.eventNameForObjectSuccess=l.context.charAt(0).toUpperCase()+l.context.slice(1)+"Success";var i=l.eventNameForObjectSuccess+l.propertyIdentifier;if(l.object&&l.object.metaData&&void 0!=l.object.metaData.className)var r=l.object.metaData.className.split("_")[0]+l.propertyIdentifier+"updateBindings";else var r=l.propertyIdentifier+"updateBindings";if(l.object&&l.object.metaData&&void 0!=l.object.metaData.className)var n=l.object.metaData.className.split("_")[0]+l.propertyIdentifier+"pullBindings";else var n=l.propertyIdentifier+"pullBindings";l.object&&(l.observerService.attach(l.onSuccess,l.eventNameForObjectSuccess,i),l.observerService.attach(l.onSuccess,"updateBindings",r),l.observerService.attach(l.pullBindings,"pullBindings",n)),l.$scope.$on("$destroy",function(){l.observerService.detachById("updateBindings"),l.observerService.detachById(r)})}}return e}(),n=function(){function e(e,t,i,n){var o=this;this.$compile=e,this.$timeout=t,this.$parse=i,this.fileService=n,this.restrict="E",this.require={swForm:"?^swForm",form:"?^form",swFormField:"?^swFormField",swPropertyDisplay:"?^swPropertyDisplay",swfPropertyDisplay:"?^swfPropertyDisplay"},this.scope={},this.bindToController={propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",inListingDisplay:"=?",listingID:"=?",pageRecordIndex:"=?",propertyDisplayID:"=?",initialValue:"=?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",fieldType:"@?",property:"@?",binaryFileTarget:"@?",rawFileTarget:"@?",reverted:"=?",revertToValue:"=?",showRevert:"=?",inputAttributes:"@?",type:"@?",eventAnnouncers:"@?",context:"@?"},this.controller=r,this.controllerAs="swInput",this.link=function(e,t,i){if("file"===e.swInput.type){angular.isUndefined(e.swInput.object.data[e.swInput.rawFileTarget])&&(e.swInput.object[e.swInput.rawFileTarget]="",e.swInput.object.data[e.swInput.rawFileTarget]="");var r=o.$parse("swInput.object.data[swInput.rawFileTarget]"),n=r.assign;t.bind("change",function(t){var i=(t.srcElement||t.target).files[0];e.$apply(function(){n(e,i)},function(){throw"swinput couldn't apply the file to scope"}),o.$timeout(function(){o.fileService.uploadFile(i,e.swInput.object,e.swInput.binaryFileTarget).then(function(r){e.swInput.object[e.swInput.property]=i,e.swInput.onEvent(t,"change")},function(){})})})}t.html(e.swInput.getTemplate()),o.$compile(t.contents())(e)}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$compile","$timeout","$parse","fileService"],t},e}();t.SWInput=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(16),n=i(631),o=i(629),s=i(620),a=i(621),c=i(622),l=i(623),u=i(624),d=i(625),f=i(626),p=i(619),h=i(618),g=i(172),y=i(628),v=i(627),m=angular.module("hibachi.form",["angularjs-datetime-picker",r.coremodule.name]).config(function(){}).constant("coreFormPartialsPath","form/components/").service("fileService",n.FileService).directive("swInput",o.SWInput.Factory()).directive("swfFormField",s.SWFFormField.Factory()).directive("swForm",a.SWForm.Factory()).directive("swFormField",c.SWFormField.Factory()).directive("swFormFieldFile",l.SWFormFieldFile.Factory()).directive("swFormFieldJson",u.SWFormFieldJson.Factory()).directive("swFormFieldSearchSelect",d.SWFormFieldSearchSelect.Factory()).directive("swFormRegistrar",f.SWFormRegistrar.Factory()).directive("swfPropertyDisplay",y.SWFPropertyDisplay.Factory(y.SWFPropertyDisplay,"swfpropertydisplay.html")).directive("swPropertyDisplay",g.SWPropertyDisplay.Factory(g.SWPropertyDisplay,"propertydisplay.html")).directive("swErrorDisplay",p.SWErrorDisplay.Factory()).directive("swAddressForm",h.SWAddressForm.Factory()).directive("swFormSubscriber",v.SWFormSubscriber.Factory());t.formmodule=m},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.$q=e,this.observerService=t,this.fileStates={},this.imageExists=function(e){var t=i.$q.defer(),r=new Image;return r.onerror=function(){t.reject()},r.onload=function(){t.resolve()},r.src=e,t.promise},this.uploadFile=function(e,t,r){var n=i.$q.defer(),o=n.promise,s=new FileReader;return s.readAsDataURL(e),s.onload=function(e){t.data[r]=s.result,n.resolve(s.result)},s.onerror=function(e){throw n.reject(),"fileservice couldn't read the file"},o}}return e}();t.FileService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){var o=this;if(this.$hibachi=e,this.dialogService=t,this.alertService=i,this.rbkeyService=r,this.$log=n,this.saving=!1,this.initialSetup=function(){angular.isDefined(o.finish)?o.openNewDialog="true"!=o.finish.toLowerCase():o.openNewDialog=!1,o.openNewDialog?o.rbKey="admin.define.saveandnew":o.rbKey="admin.define.saveandfinish"},this.save=function(){o.saving=!0,o.entity.$$save().then(function(e){o.dialogService.removeCurrentDialog(),o.openNewDialog&&angular.isDefined(o.partial)?o.dialogService.addPageDialog(o.partial):angular.isDefined(o.redirectUrl)?window.location.href=o.redirectUrl:angular.isDefined(o.redirectAction)?(angular.isUndefined(o.redirectQueryString)&&(o.redirectQueryString=""),window.location.href=o.$hibachi.buildUrl(o.redirectAction,o.redirectQueryString)):o.$log.debug("You did not specify a redirect for swSaveAndFinish")}).catch(function(e){if(angular.isDefined(o.customErrorRbkey)&&(e=o.rbkeyService.getRBKey(o.customErrorRbkey)),angular.isString(e)){var t=o.alertService.newAlert();t.msg=e,t.type="error",t.fade=!0,o.alertService.addAlert(t)}else o.alertService.addAlerts(e)}).finally(function(){o.saving=!1})},!angular.isFunction(this.entity.$$save))throw"Your entity does not have the $$save function.";this.initialSetup()}return e}();t.SWSaveAndFinishController=r;var n=function(){function e(e,t){this.hibachiPartialsPath=e,this.restrict="EA",this.scope={},this.controller=r,this.controllerAs="swSaveAndFinish",this.bindToController={entity:"=",redirectUrl:"@?",redirectAction:"@?",redirectQueryString:"@?",finish:"@?",partial:"@?",customErrorRbkey:"@?"},this.templateUrl=t.buildPartialsPath(e)+"saveandfinish.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["hibachiPartialsPath","hibachiPathBuilder"],t},e}();t.SWSaveAndFinish=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(59),n=i(488),o=i(167),s=i(648),a=i(171),c=i(617),l=i(652),u=i(630),d=i(670),f=i(685),p=i(632),h=angular.module("hibachi",[r.alertmodule.name,n.cardmodule.name,o.collectionmodule.name,c.entitymodule.name,a.dialogmodule.name,s.listingmodule.name,l.paginationmodule.name,u.formmodule.name,d.validationmodule.name,f.workflowmodule.name]).config([function(){}]).run(["$rootScope","publicService","$hibachi","localStorageService",function(e,t,i,r){e.hibachiScope=t,e.hasAccount=t.hasAccount,i.newAccount&&e.hibachiScope.getAccount(),i.newOrder&&e.hibachiScope.getCart(),i.newCountry&&e.hibachiScope.getCountries(),i.newState&&e.hibachiScope.getStates(),i.newState&&e.hibachiScope.getAddressOptions(),r.hasItem("selectedPersonalCollection")&&(e.hibachiScope.selectedPersonalCollection=angular.fromJson(r.getItem("selectedPersonalCollection")))}]).constant("hibachiPartialsPath","hibachi/components/").directive("swSaveAndFinish",p.SWSaveAndFinish.Factory());t.hibachimodule=h},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){var e=this;this.init=function(){e.editable=e.editable||!1},this.init()}return e}(),n=function(){function e(){this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",aggregateFunction:"@",aggregateAlias:"@?"},this.controller=r,this.controllerAs="swListingAggregate",this.link=function(e,t,i){var r={propertyIdentifier:e.swListingAggregate.propertyIdentifier,aggregateFunction:e.swListingAggregate.aggregateFunction,aggregateAlias:e.swListingAggregate.aggregateAlias};e.$parent.swListingDisplay.aggregates.push(r)}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWListingAggregate=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.init=function(){},this.init()}return e}(),n=function(){function e(e){var t=this;this.utilityService=e,this.restrict="EA",this.scope=!0,this.bindToController={propertyToCompare:"@",comparisonOperator:"@",comparisonValue:"@",comparisonProperty:"@",colorClass:"@",color:"@"},this.controller=r,this.controllerAs="swListingColorFilter",this.link=function(e,i,r){var n={propertyToCompare:e.swListingColorFilter.propertyToCompare,comparisonOperator:e.swListingColorFilter.comparisonOperator,comparisonValue:e.swListingColorFilter.comparisonValue,comparisonProperty:e.swListingColorFilter.comparisonProperty,colorClass:e.swListingColorFilter.colorClass,color:e.swListingColorFilter.color};-1===t.utilityService.ArrayFindByPropertyValue(e.$parent.swListingDisplay.colorFilters,"propertyToCompare",n.propertyToCompare)&&e.$parent.swListingDisplay.colorFilters.push(n)}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["utilityService"],t},e}();t.SWListingColorFilter=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){var n=this;this.$injector=e,this.utilityService=t,this.listingService=i,this.rbkeyService=r,this.hasCellView=!1,this.hasHeaderView=!1,this.$onInit=function(){if(angular.isUndefined(n.isVisible)&&(n.isVisible=!0),angular.isUndefined(n.isExportable)&&(n.isExportable=!0),angular.isUndefined(n.isDeletable)&&(n.isDeletable=!0),angular.isUndefined(n.search)&&(n.search=!0),n.editable=n.editable||!1,n.cellView){if(!n.$injector.has(n.cellView+"Directive"))throw n.cellView+" is not an existing directive";n.hasCellView=!0}if(n.headerView){if(!n.$injector.has(n.headerView+"Directive"))throw n.headerView+" is not an existing directive";n.hasHeaderView=!0}n.column={columnID:"C"+n.utilityService.createID(31),propertyIdentifier:n.propertyIdentifier,fallbackPropertyIdentifiers:n.fallbackPropertyIdentifiers,processObjectProperty:n.processObjectProperty,title:n.title,tdclass:n.tdclass,search:n.search,sort:n.sort,filter:n.filter,range:n.range,editable:n.editable,buttonGroup:n.buttonGroup,hasCellView:n.hasCellView,hasHeaderView:n.hasHeaderView,isVisible:n.isVisible,isDeletable:n.isDeletable,isSearchable:n.search,isExportable:n.isExportable,action:n.action,queryString:n.queryString,persistent:n.persistent},n.hasCellView&&(n.column.cellView=n.cellView),n.hasHeaderView&&(n.column.headerView=n.utilityService.camelCaseToSnakeCase(n.headerView)),n.aggregate&&(n.column.aggregate=n.aggregate,n.column.aggregate.propertyIdentifier=n.propertyIdentifier)},this.$injector=e,this.utilityService=t,this.listingService=i,this.rbkeyService=r}return e}(),n=function(){function e(e){var t=this;this.listingService=e,this.restrict="EA",this.scope=!0,this.require={swListingDisplay:"?^swListingDisplay"},this.bindToController={propertyIdentifier:"@",processObjectProperty:"@?",aggregate:"=?",title:"@?",tdclass:"@?",search:"=?",sort:"=?",filter:"=?",isVisible:"=?",isDeletable:"=?",isExportable:"=?",range:"=?",editable:"=?",buttonGroup:"=?",cellView:"@?",headerView:"@?",fallbackPropertyIdentifiers:"@?",action:"@?",queryString:"@?"},this.controller=r,this.controllerAs="swListingColumn",this.link=function(e,i,r,n){if(angular.isDefined(e.swListingDisplay)&&e.swListingDisplay.tableID&&e.swListingDisplay.tableID.length){var o=e.swListingDisplay.tableID;1!=e.swListingDisplay.usePersonalCollection&&e.swListingDisplay.columns&&(t.listingService.addColumn(o,e.swListingColumn.column),t.listingService.setupColumn(o,e.swListingColumn.column))}else{if(!(angular.isDefined(e.swListingColumn.swListingDisplay)&&e.swListingColumn.swListingDisplay.tableID&&e.swListingColumn.swListingDisplay.tableID.length&&1!=e.swListingColumn.swListingDisplay.usePersonalCollection&&e.swListingColumn.swListingDisplay.columns))throw"listing display scope not available to sw-listing-column or there is no table id";var o=e.swListingColumn.swListingDisplay.tableID;t.listingService.addColumn(o,e.swListingColumn.column)}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["listingService"],t},e}();t.SWListingColumn=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){var o=this;this.$hibachi=e,this.metadataService=t,this.collectionService=i,this.listingService=r,this.observerService=n,this.displayOptionsClosed=!0,this.filtersClosed=!0,this.personalCollectionsClosed=!0,this.columnIsControllableMap={},this.filterActions=function(e){"add"!=e.action&&"remove"!=e.action||o.observerService.notifyById("swPaginationAction",o.tableId,{type:"setCurrentPage",payload:1}),o.filtersClosed=!0},this.getSelectedSearchColumnName=function(){return angular.isUndefined(o.selectedSearchColumn)?"All":o.selectedSearchColumn.title},this.canDisplayColumn=function(e){if(!o.listingColumns||!o.listingColumns.length)return!0;if(angular.isDefined(o.columnIsControllableMap[e.propertyIdentifier]))return o.columnIsControllableMap[e.propertyIdentifier];for(var t=0;t<o.listingColumns.length;t++)e.propertyIdentifier==o.listingColumns[t].propertyIdentifier&&(o.columnIsControllableMap[e.propertyIdentifier]=!0);return o.columnIsControllableMap[e.propertyIdentifier]||(o.columnIsControllableMap[e.propertyIdentifier]=!1),o.columnIsControllableMap[e.propertyIdentifier]},this.addSearchFilter=function(){if(!angular.isUndefined(o.selectedSearchColumn)&&o.searchText){for(var e=o.searchText.split(" "),t=0;t<e.length;t++)o.collectionConfig.addLikeFilter(o.selectedSearchColumn.propertyIdentifier,e[t],"%w%",void 0,o.selectedSearchColumn.title);o.searchText="",o.collectionConfig.setKeywords(o.searchText),o.observerService.notifyById("swPaginationAction",o.tableId,{type:"setCurrentPage",payload:1})}},this.toggleDisplayOptions=function(e){void 0===e&&(e=!1),o.displayOptionsClosed=!!e||!o.displayOptionsClosed},this.setItemInUse=function(e){o.itemInUse=e},this.removeFilter=function(e,t,i){void 0===i&&(i=!0),e.splice(t,1),i&&o.observerService.notifyById("swPaginationAction",o.tableId,{type:"setCurrentPage",payload:1})},this.toggleFilters=function(){o.filtersClosed&&o.simple&&(o.newFilterPosition=o.collectionService.newFilterItem(o.collectionConfig.filterGroups[0].filterGroup,o.setItemInUse)),o.filtersClosed=!o.filtersClosed},this.togglePersonalCollections=function(){o.personalCollectionsClosed=!o.personalCollectionsClosed},this.selectFilterItem=function(e){o.filtersClosed=!1,o.collectionService.selectFilterItem(e)},this.saveCollection=function(e){e&&(o.collectionConfig=e),o.swListingDisplay.collectionConfig=o.collectionConfig,o.observerService.notifyById("swPaginationAction",o.tableId,{type:"setCurrentPage",payload:1})},this.exportCollection=function(){o.swListingDisplay.exportCurrentList()},this.printCollection=function(e){o.swListingDisplay.printCurrentList(e)},angular.isUndefined(this.showPrintOptions)&&(this.showPrintOptions=!1),angular.isUndefined(this.showExport)&&(this.showExport=!0),angular.isUndefined(this.showToggleSearch)&&(this.showToggleSearch=!0),angular.isUndefined(this.showToggleFilters)&&(this.showToggleFilters=!0),angular.isUndefined(this.showToggleDisplayOptions)&&(this.showToggleDisplayOptions=!0),angular.isUndefined(this.showFilters)&&(this.showFilters=!1),this.backupColumnsConfig=this.collectionConfig.getColumns(),angular.isDefined(this.tableId)&&(this.listingColumns=this.listingService.getListingColumns(this.tableId)),angular.isUndefined(this.simple)&&(this.simple=!0),this.filterPropertiesList={},e.getFilterPropertiesByBaseEntityName(this.collectionConfig.baseEntityAlias).then(function(e){t.setPropertiesList(e,o.collectionConfig.baseEntityAlias),o.filterPropertiesList[o.collectionConfig.baseEntityAlias]=t.getPropertiesListByBaseEntityAlias(o.collectionConfig.baseEntityAlias),t.formatPropertiesList(o.filterPropertiesList[o.collectionConfig.baseEntityAlias],o.collectionConfig.baseEntityAlias)}),this.observerService.attach(this.filterActions,"filterItemAction")}return e}(),n=function(){function e(e,t){this.collectionPartialsPath=e,this.hibachiPathBuilder=t,this.restrict="E",this.scope={},this.require={swListingDisplay:"?^swListingDisplay"},this.bindToController={collectionConfig:"=",tableId:"=?",getCollection:"&",showExport:"=?",showFilters:"=?",showPrintOptions:"=?",showToggleSearch:"=?",showToggleFilters:"=?",showToggleDisplayOptions:"=?",displayOptionsClosed:"=?",simple:"=?"},this.controller=r,this.controllerAs="swListingControls",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"listingcontrols.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["listingPartialPath","hibachiPathBuilder"],t},e.$inject=["listingPartialPath","hibachiPathBuilder"],e}();t.SWListingControls=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$q=e}return e}(),n=function(){function e(e,t){var i=this;this.scopeService=e,this.$q=t,this.restrict="EA",this.scope=!0,this.template="\n        \n    ",this.bindToController={filterPropertyIdentifier:"@",filterComparisonOperator:"@",filterComparisonValue:"@"},this.controller=r,this.controllerAs="swListingDisableRule",this.link=function(e,t,r){var n={filterPropertyIdentifier:e.swListingDisableRule.filterPropertyIdentifier,filterComparisonOperator:e.swListingDisableRule.filterComparisonOperator,filterComparisonValue:e.swListingDisableRule.filterComparisonValue},o=i.scopeService.getRootParentScope(e,"swListingDisplay");if(!angular.isDefined(o.swListingDisplay))throw"listing display scope not available to sw-listing-disable-rule";o=o.swListingDisplay,o.disableRules.push(n)}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["scopeService","$q"],t},e}();t.SWListingDisableRule=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a,c,l,u,d,f,p){var h=this;if(this.$scope=e,this.$rootScope=t,this.$transclude=i,this.$timeout=r,this.$q=n,this.$hibachi=o,this.utilityService=s,this.collectionConfigService=a,this.listingService=c,this.paginationService=l,this.selectionService=u,this.observerService=d,this.rbkeyService=f,this.localStorageService=p,this.actions=[],this.allpropertyidentifiers="",this.allprocessobjectproperties="false",this.aggregates=[],this.buttonGroup=[],this.childCollectionConfigs={},this.collectionConfigs=[],this.collectionObjects=[],this.colorFilters=[],this.columns=[],this.disableRules=[],this.expandableRules=[],this.exampleEntity="",this.filters=[],this.filterGroups=[],this.hideRules=[],this.multiselectable=!1,this.orderBys=[],this.orderByStates={},this.orderByIndices={},this.pageRecordsWithManualSortOrder={},this.searching=!1,this.selectable=!1,this.showSearchFilters=!1,this.sortable=!1,this.processCollection=function(){h.initializeState(),angular.isDefined(h.collectionPromise)&&(h.hasCollectionPromise=!0,h.multipleCollectionDeffered.reject()),null!=h.collectionConfig&&h.multipleCollectionDeffered.reject(),h.listingService.setListingState(h.tableID,h),h.$transclude(h.$scope,function(){}),h.hasCollectionPromise=angular.isDefined(h.collectionPromise),h.multiSlot?(h.singleCollectionPromise.then(function(){h.multipleCollectionDeffered.reject()}),h.multipleCollectionPromise.then(function(){h.listingService.setupInMultiCollectionConfigMode(h.tableID)}).catch(function(){h.listingService.setupInSingleCollectionConfigMode(h.tableID,h.$scope)}).finally(function(){angular.isUndefined(h.getCollection)&&(h.getCollection=h.listingService.setupDefaultGetCollection(h.tableID)),h.paginator.getCollection=h.getCollection,h.observerService.attach(h.getCollectionObserver,"getCollection",h.tableID)})):0==h.multiSlot&&(h.columns&&h.columns.length&&(h.collectionConfig.columns=h.columns),h.setupCollectionPromise()),!h.collectionObject&&h.collectionConfig&&h.collectionConfig.baseEntityName&&(h.collectionObject=h.collectionConfig.baseEntityName),h.collectionObject&&(h.exampleEntity=h.$hibachi.getEntityExample(h.collectionObject)),h.observerService.attach(h.getCollectionByPagination,"swPaginationAction",h.tableID)},this.getCollectionByPagination=function(e){if(e.type){switch(e.type){case"setCurrentPage":case"nextPage":case"prevPage":h.collectionConfig.currentPage=e.payload;break;case"setPageShow":h.collectionConfig.currentPage=1,h.collectionConfig.setPageShow(e.payload)}h.getCollection=h.collectionConfig.getEntity().then(function(e){h.collectionData=e,h.observerService.notifyById("swPaginationUpdate",h.tableID,h.collectionData)})}},this.setupCollectionPromise=function(){angular.isUndefined(h.getCollection)&&(h.getCollection=h.listingService.setupDefaultGetCollection(h.tableID)),h.paginator.getCollection=h.getCollection,h.tableID,h.listingService.getCollection(h.tableID)},this.getCollectionObserver=function(e){h.collectionConfig.loadJson(e.collectionConfig),h.collectionData=void 0,h.$timeout(function(){h.getCollection()})},this.initializeState=function(){null!=h.name?h.tableID=h.name:h.tableID="LD"+h.utilityService.createID(),angular.isUndefined(h.collectionConfig)&&(h.collectionConfig=null),angular.isUndefined(h.multiSlot)&&(h.multiSlot=!1),angular.isDefined(h.administrativeCount)?h.administrativeCount=parseInt(h.administrativeCount):h.administrativeCount=0,h.recordDetailAction&&h.recordDetailAction.length&&(h.administrativeCount++,h.adminattributes=h.getAdminAttributesByType("detail")),h.recordEditAction&&h.recordEditAction.length&&(h.administrativeCount++,h.adminattributes=h.getAdminAttributesByType("edit")),h.recordDeleteAction&&h.recordDeleteAction.length&&(h.administrativeCount++,h.adminattributes=h.getAdminAttributesByType("delete")),h.recordAddAction&&h.recordAddAction.length&&(h.administrativeCount++,h.adminattributes=h.getAdminAttributesByType("add")),null!=h.collectionConfig&&angular.isDefined(h.collection)&&angular.isDefined(h.collection.collectionConfig)&&(h.collectionConfig=h.collection.collectionConfig),angular.isUndefined(h.collectionObject)&&angular.isDefined(h.collection)&&angular.isDefined(h.collection.collectionObject)&&(h.collectionObject=h.collection.collectionObject),h.processObjectProperties=h.processObjectProperties||"",h.recordProcessButtonDisplayFlag=h.recordProcessButtonDisplayFlag||!0,h.norecordstext=h.rbkeyService.getRBKey("entity."+h.collectionObject+".norecords"),angular.isUndefined(h.defaultSelectEvent)&&(h.defaultSelectEvent="swSelectionToggleSelection"+h.tableID),angular.isUndefined(h.isAngularRoute)&&(h.isAngularRoute=!0),angular.isUndefined(h.customListingControls)&&(h.customListingControls=!1),angular.isUndefined(h.hasSearch)&&(h.hasSearch=!0,h.showSearch=!0),angular.isUndefined(h.showOrderBy)&&(h.showOrderBy=!0),angular.isUndefined(h.showPrintOptions)&&(h.showPrintOptions=!1),angular.isUndefined(h.showToggleDisplayOptions)&&(h.showToggleDisplayOptions=!0),angular.isUndefined(h.expandable)&&(h.expandable=!1),angular.isUndefined(h.exportAction)&&(h.exportAction=h.$hibachi.buildUrl("main.collectionExport")+"&collectionExportID="),angular.isDefined(h.printAction)&&(h.printAction=h.$hibachi.buildUrl("main.collectionPrint")+"&collectionExportID="),angular.isDefined(h.emailAction)&&(h.emailAction=h.$hibachi.buildUrl("main.collectionEmail")+"&collectionExportID="),h.paginator=h.paginationService.createPagination(h.tableID),h.hasCollectionPromise=!1,angular.isUndefined(h.getChildCount)&&(h.getChildCount=!1),h.tableclass=h.tableclass||"",h.tableclass=h.utilityService.listPrepend(h.tableclass,"table table-bordered table-hover"," "),h.collectionConfig&&h.collectionConfig.setEventID(h.tableID),angular.isDefined(h.sortableFieldName)&&(h.sortableFieldName="sorting"+h.tableID)},this.getListingPageRecordsUpdateEventString=function(){return h.listingService.getListingPageRecordsUpdateEventString(h.tableID)},this.getKeyOfMatchedHideRule=function(e){return h.listingService.getKeyOfMatchedHideRule(h.tableID,e)},this.getPageRecordMatchesHideRule=function(e){return h.listingService.getPageRecordMatchesHideRule(h.tableID,e)},this.getPageRecordValueByColumn=function(e,t){return h.listingService.getPageRecordValueByColumn(e,t)},this.getKeyOfMatchedDisableRule=function(e){return h.listingService.getKeyOfMatchedExpandableRule(h.tableID,e)},this.getPageRecordMatchesDisableRule=function(e){return h.listingService.getPageRecordMatchesDisableRule(h.tableID,e)},this.getKeyOfMatchedExpandableRule=function(e){return h.listingService.getKeyOfMatchedExpandableRule(h.tableID,e)},this.getPageRecordMatchesExpandableRule=function(e){return h.listingService.getPageRecordMatchesExpandableRule(h.tableID,e)},this.getPageRecordChildCollectionConfigForExpandableRule=function(e){return h.listingService.getPageRecordChildCollectionConfigForExpandableRule(h.tableID,e)},this.getPageRecordRefreshChildrenEvent=function(e){return h.listingService.hasPageRecordRefreshChildrenEvent(h.tableID,e)?h.listingService.getPageRecordRefreshChildrenEvent(h.tableID,e):""},this.getExampleEntityForExpandableRecord=function(e){return h.listingService.getExampleEntityForExpandableRecord(h.tableID,e)},this.getNGClassObjectForPageRecordRow=function(e){return h.listingService.getNGClassObjectForPageRecordRow(h.tableID,e)},this.getNGClassObjectForPageRecordCell=function(e,t){return"{}"},this.getColorFilterConditionString=function(e,t){return h.listingService.getColorFilterConditionString(e,t)},this.hasSingleCollectionConfig=function(){return h.collectionConfig&&0==h.collectionConfigs.length},this.toggleOrderBy=function(e){h.listingService.toggleOrderBy(h.tableID,e)},this.showCalculation=function(e){void 0===e&&(e="total"),$(".sw-"+("total"==e?"average":"total")).hide(),$(".sw-"+e).show()},this.hasNumerical=function(){return!!h.columns.length&&h.columns.reduce(function(e,t){return e+(t.ormtype&&"big_decimal,integer,float,double".indexOf(t.ormtype)>=0)?1:0})},this.columnOrderByIndex=function(e){return h.listingService.columnOrderByIndex(h.tableID,e)},this.updateMultiselectValues=function(e){switch(h.multiselectValues=h.selectionService.getSelections(h.tableID),h.selectionService.isAllSelected(h.tableID)?h.multiselectCount=h.collectionData.recordsCount-h.selectionService.getSelectionCount(h.tableID):h.multiselectCount=h.selectionService.getSelectionCount(h.tableID),e.action){case"uncheck":h.isCurrentPageRecordsSelected=!1;break;case"selectAll":h.allSelected=!0,h.isCurrentPageRecordsSelected=!1;break;case"clear":h.allSelected=!1,h.isCurrentPageRecordsSelected=!1}h.listingService.listingDisplayStore.dispatch({type:"CURRENT_PAGE_RECORDS_SELECTED",payload:{listingID:h.tableID,selectionCount:h.multiselectCount,values:h.multiselectValues}})},this.getPageRecordKey=function(e){return h.listingService.getPageRecordKey(e)},this.getAdminAttributesByType=function(e){var t="record"+e.toUpperCase()+"Action",i=t+"Property",r=t+"QueryString",n=t+"Modal";h.adminattributes=h.utilityService.listAppend(h.adminattributes,"data-"+e+'action="'+h[t]+'"'," "),h[i]&&h[i].length&&(h.adminattributes=h.utilityService.listAppend(h.adminattributes,"data-"+e+'actionproperty="'+h[i]+'"'," ")),h.adminattributes=h.utilityService.listAppend(h.adminattributes,"data-"+e+'querystring="'+h[r]+'"'," "),h.adminattributes=h.utilityService.listAppend(h.adminattributes,"data-"+e+'modal="'+h[n]+'"'," ")},this.getExportAction=function(){return h.exportAction+h.collectionID},this.getPrintAction=function(){return h.printAction+h.collectionID},this.getEmailAction=function(){return h.emailAction+h.collectionID},this.exportCurrentList=function(e){if(void 0===e&&(e=!1),0==h.collectionConfigs.length){var t=angular.copy(h.collectionConfig.getCollectionConfig());e&&!angular.isUndefined(h.selectionService.getSelections(h.tableID))&&h.selectionService.getSelections(h.tableID).length>0&&(t.filterGroups[0].filterGroup=[{displayPropertyIdentifier:h.rbkeyService.getRBKey("entity."+t.baseEntityName.toLowerCase()+"."+h.exampleEntity.$$getIDName().toLowerCase()),propertyIdentifier:t.baseEntityAlias+"."+h.exampleEntity.$$getIDName(),comparisonOperator:h.allSelected?"not in":"in",value:h.selectionService.getSelections(h.tableID).join(),displayValue:h.selectionService.getSelections(h.tableID).join(),ormtype:"string",fieldtype:"id",conditionDisplay:"In List"}])}$("body").append('<form action="/?'+h.$hibachi.getConfigValue("action")+'=main.collectionConfigExport" method="post" id="formExport"></form>'),$("#formExport").append("<input type='hidden' name='collectionConfig' value='"+angular.toJson(t)+"' />").submit().remove()},this.printCurrentList=function(e){var t=angular.copy(h.collectionConfig.getCollectionConfig());$("body").append('<form action="?s=1" method="post" id="formPrint"></form>'),$("#formPrint").append("<input type='hidden' name='"+h.$hibachi.getConfigValue("action")+"' value='entity.processPrint' />").append("<input type='hidden' name='redirectAction' value='admin:entity.list"+h.baseEntityName.toLowerCase()+"' />").append("<input type='hidden' name='processContext' value='addToQueue' />").append("<input type='hidden' name='printID' value='' />").append("<input type='hidden' name='printTemplateID' value='"+e+"' />").append("<input type='hidden' name='collectionConfig' value='"+angular.toJson(t)+"' />"),$("#formPrint").submit().remove()},this.paginationPageChange=function(e){h.isCurrentPageRecordsSelected=!1},this.selectCurrentPageRecords=function(){h.listingService.selectCurrentPageRecords(h.tableID)},this.clearSelection=function(){h.selectionService.clearSelection(h.tableID)},this.selectAll=function(){h.selectionService.selectAll(h.tableID)},angular.isUndefined(this.usingPersonalCollection)&&(this.usingPersonalCollection=!1),angular.isUndefined(this.showExport)&&(this.showExport=!0),this.multipleCollectionDeffered=n.defer(),this.multipleCollectionPromise=this.multipleCollectionDeffered.promise,this.singleCollectionDeferred=n.defer(),this.singleCollectionPromise=this.singleCollectionDeferred.promise,angular.isDefined(this.collection)&&angular.isString(this.collection)&&(this.baseEntityName=this.collection,this.collectionObject=this.collection,this.collectionConfig=this.collectionConfigService.newCollectionConfig(this.collectionObject),this.$timeout(function(){h.collection=h.collectionConfig,h.columns=h.collectionConfig.columns}),this.multipleCollectionDeffered.reject()),this.usingPersonalCollection&&this.localStorageService.hasItem("selectedPersonalCollection")&&this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()]&&(angular.isUndefined(this.personalCollectionIdentifier)||angular.isDefined(this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionDescription)&&this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionDescription==this.personalCollectionIdentifier)){var g=this.collectionConfigService.newCollectionConfig("Collection");g.setDisplayProperties("collectionConfig"),g.addFilter("collectionID",this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionID);var y=angular.copy(this.multiSlot);this.multiSlot=!1,g.getEntity().then(function(e){e.pageRecords.length?(h.collectionConfig=h.collectionConfigService.newCollectionConfig().loadJson(e.pageRecords[0].collectionConfig),h.collectionObject=h.baseEntityName,h.$timeout(function(){h.collection=h.collectionConfig,h.columns=h.collectionConfig.columns})):h.multiSlot=y,h.processCollection()})}else t.hibachiScope.selectedPersonalCollection=void 0,this.processCollection()}return e}(),n=function(){function e(e,t){this.listingPartialPath=e,this.hibachiPathBuilder=t,this.restrict="E",this.scope={},this.transclude={addAction:"?swListingAddAction",detailAction:"?swListingDetailAction",deleteAction:"?swListingDeleteAction",editAction:"?swListingEditAction",saveAction:"?swListingSaveAction",columns:"?swListingColumns",collectionConfigs:"?swCollectionConfigs",disableRules:"?swDisabledRowRules",expandableRules:"?swExpandableRowRules",customListingControls:"?swCustomListingControls"},this.bindToController={usingPersonalCollection:"<?",personalCollectionIdentifier:"@?",isRadio:"<?",angularLinks:"<?",isAngularRoute:"<?",name:"@?",collection:"<?",collectionConfig:"<?",getCollection:"&?",collectionPromise:"<?",edit:"<?",title:"<?",childPropertyName:"@?",baseEntity:"<?",baseEntityName:"@?",baseEntityId:"@?",actions:"<?",administrativeCount:"@?",recordEditAction:"@?",recordEditActionProperty:"@?",recordEditQueryString:"@?",recordEditModal:"<?",recordEditDisabled:"<?",recordDetailAction:"@?",recordDetailActionProperty:"@?",recordDetailActionIdProperty:"@?",recordDetailActionIdKey:"@?",recordDetailQueryString:"@?",recordDetailModal:"<?",recordDeleteAction:"@?",recordDeleteActionProperty:"@?",recordDeleteQueryString:"@?",recordAddAction:"@?",recordAddActionProperty:"@?",recordAddQueryString:"@?",recordAddModal:"<?",recordAddDisabled:"<?",recordProcessesConfig:"<?",parentPropertyName:"@?",expandable:"<?",expandableOpenRoot:"<?",searchText:"<?",sortable:"<?",sortableFieldName:"@?",sortProperty:"@?",sortContextIDColumn:"@?",sortContextIDValue:"@?",selectFiledName:"@?",selectValue:"@?",selectTitle:"@?",multiselectFieldName:"@?",multiselectPropertyIdentifier:"@?",multiselectIdPaths:"@?",multiselectValues:"@?",tableattributes:"@?",tableclass:"@?",typeaheadDataKey:"@?",adminattributes:"@?",showheader:"<?",showExport:"<?",showOrderBy:"<?",showTopPagination:"<?",showToggleDisplayOptions:"<?",showSearch:"<?",showSearchFilters:"<?",showSimpleListingControls:"<?",showPrintOptions:"<?",createModal:"<?",createAction:"@?",createQueryString:"@?",exportAction:"@?",getChildCount:"<?",hasSearch:"<?",hasActionBar:"<?",multiSlot:"=?",customListingControls:"<?"},this.controller=r,this.controllerAs="swListingDisplay",this.compile=function(e,t){return{pre:function(e,t,i,r){},post:function(e,t,i){}}},this.listingPartialPath=e,this.templateUrl=t.buildPartialsPath(this.listingPartialPath)+"listingdisplay.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["listingPartialPath","hibachiPathBuilder"],t},e}();t.SWListingDisplay=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){var o=this;if(this.listingPartialPath=e,this.hibachiPathBuilder=t,this.listingService=i,this.utilityService=r,this.$scope=n,this.expandable=!1,this.getDirectiveTemplate=function(){var e=o.hibachiPathBuilder.buildPartialsPath(o.listingPartialPath)+"listingdisplaycell.html";return(o.expandable||o.swListingDisplay.expandable&&o.column.tdclass&&"primary"===o.column.tdclass)&&(e=o.hibachiPathBuilder.buildPartialsPath(o.listingPartialPath)+"listingdisplayselectablecellexpandable.html"),o.swListingDisplay.expandable&&o.column.tdclass&&"primary"===o.column.tdclass||("timestamp"===o.column.ormtype?e=o.hibachiPathBuilder.buildPartialsPath(o.listingPartialPath)+"listingdisplaycelldate.html":"currency"===o.column.type?e=o.hibachiPathBuilder.buildPartialsPath(o.listingPartialPath)+"listingdisplaycellcurrency.html":o.column.aggregate&&(o.value=o.pageRecord[o.swListingDisplay.getPageRecordKey(o.column.aggregate.aggregateAlias)],e=o.hibachiPathBuilder.buildPartialsPath(o.listingPartialPath)+"listingdisplaycellaggregate.html")),e},this.hibachiPathBuilder=t,this.listingPartialPath=e,this.$scope=n,!this.value&&this.pageRecord&&this.column&&(this.value=this.listingService.getPageRecordValueByColumn(this.pageRecord,this.column)),this.popover=this.utilityService.replaceStringWithProperties(this.column.tooltip,this.pageRecord),this.hasActionCaller=!1,this.column.action&&this.column.queryString&&(this.hasActionCaller=!0,this.actionCaller={action:this.column.action},this.column.queryString&&(this.actionCaller.queryString=this.utilityService.replaceStringWithProperties(this.column.queryString,this.pageRecord))),this.cellView){var s=this.utilityService.camelCaseToSnakeCase(this.cellView);this.template=s,this.templateVariables=this.pageRecord,angular.isDefined(this.column.columnID)&&(this.templateVariables.column=this.column.columnID),angular.isDefined(this.swListingDisplay.baseEntityName)&&angular.isDefined(this.swListingDisplay.baseEntityId)&&(this.templateVariables.baseEntityId=this.swListingDisplay.baseEntityId,this.templateVariables.baseEntityName=this.swListingDisplay.baseEntityName),angular.isDefined(this.column.propertyIdentifier)&&(this.templateVariables.columnPropertyIdentifier=this.column.propertyIdentifier),this.templateVariables.listingDisplayID=this.swListingDisplay.tableID}else this.hasActionCaller||(this.templateUrl=this.getDirectiveTemplate())}return e}(),n=function(){function e(){this.restrict="E",this.scope={},this.bindToController={swListingDisplay:"=?",column:"=?",pageRecord:"=?",value:"=?",cellView:"@?",expandableRules:"=?"},this.controller=r,this.controllerAs="swListingDisplayCell",this.template='\n        <div ng-if="swListingDisplayCell.template" sw-directive data-variables="swListingDisplayCell.templateVariables" data-directive-template="swListingDisplayCell.template"></div>\n        <div ng-if="swListingDisplayCell.templateUrl" ng-include src="swListingDisplayCell.templateUrl"></div>\n        <sw-action-caller ng-if="swListingDisplayCell.hasActionCaller"\n                    data-action="{{swListingDisplayCell.actionCaller.action}}"\n                    data-query-string="{{swListingDisplayCell.actionCaller.queryString}}"\n                    data-text="{{swListingDisplayCell.value}}"\n                    data-tooltip-text="{{swListingDisplayCell.popover}}"\n                    data-is-angular-route="false"\n\n        >\n        </sw-action-caller>\n    '}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWListingDisplayCell=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.$q=e,this.hasChildrenCollectionConfigDeferred=e.defer(),this.hasChildrenCollectionConfigPromise=this.hasChildrenCollectionConfigDeferred.promise,this.childrenCollectionConfig=null}return e}(),n=function(){function e(e,t){var i=this;this.scopeService=e,this.$q=t,this.restrict="EA",this.scope=!0,this.transclude={collectionConfig:"?swConfig"},this.template='\n        <div ng-transclude="collectionConfig"></div> \n    ',this.bindToController={childrenCollectionConfig:"=?",filterPropertyIdentifier:"@",filterComparisonOperator:"@",filterComparisonValue:"@",refreshChildrenEvent:"@?"},this.controller=r,this.controllerAs="swListingExpandableRule",this.link=function(e,t,r){e.swListingExpandableRule.hasChildrenCollectionConfigPromise.then(function(){var t={filterPropertyIdentifier:e.swListingExpandableRule.filterPropertyIdentifier,filterComparisonOperator:e.swListingExpandableRule.filterComparisonOperator,filterComparisonValue:e.swListingExpandableRule.filterComparisonValue,childrenCollectionConfig:e.swListingExpandableRule.childrenCollectionConfig,refreshChildrenEvent:e.swListingExpandableRule.refreshChildrenEvent},r=i.scopeService.getRootParentScope(e,"swListingDisplay");if(!angular.isDefined(r.swListingDisplay))throw"listing display scope not available to sw-listing-expandable-rule";r=r.swListingDisplay,r.expandableRules.push(t)})}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["scopeService","$q"],t},e}();t.SWListingExpandableRule=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.init=function(){},this.init()}return e}(),n=function(){function e(){this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",comparisonOperator:"@",comparisonValue:"@",logicalOperator:"@",hidden:"@?"},this.controller=r,this.controllerAs="swListingFilter",this.link=function(e,t,i){var r={propertyIdentifier:e.swListingFilter.propertyIdentifier,comparisonOperator:e.swListingFilter.comparisonOperator,comparisonValue:e.swListingFilter.comparisonValue,logicalOperator:e.swListingFilter.logicalOperator,hidden:!1};angular.isDefined(e.swListingFilter.hidden)&&(r.hidden=e.swListingFilter.hidden),angular.isDefined(e.$parent.swListingFilterGroup)?e.$parent.swListingFilterGroup.filters.push(r):e.$parent.swListingDisplay.filters.push(r)}}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e}();t.SWListingFilter=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this.$scope=e,this.$transclude=t,this.filters=[],t(e,function(){}),e.$parent.swListingDisplay.filterGroups.push(this.filters)}return e}(),n=function(){function e(){this.restrict="EA",this.transclude=!0,this.scope=!0,this.bindToController={},this.controller=r,this.controllerAs="swListingFilterGroup"}return e.Factory=function(){var t=function(){return new e};return t.$inject=[],t},e.$inject=[],e}();t.SWListingFilterGroup=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.$timeout=e,this.init=function(){t.searching=!1},this.search=function(){t.searching=!0,t._timeoutPromise&&t.$timeout.cancel(t._timeoutPromise),t._timeoutPromise=t.$timeout(function(){t.getCollection()},500)},this.init()}return e}(),n=function(){function e(e,t,i){this.utilityService=e,this.restrict="EA",this.scope={},this.bindToController={searching:"=",searchText:"=",getCollection:"="},this.controller=r,this.controllerAs="swListingGlobalSearch",this.link=function(e,t,i){},this.templateUrl=i.buildPartialsPath(t)+"listingglobalsearch.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["utilityService","listingPartialPath","hibachiPathBuilder"],t},e}();t.SWListingGlobalSearch=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.init=function(){},this.init()}return e}(),n=function(){function e(e){this.utilityService=e,this.restrict="EA",this.scope=!0,this.bindToController={orderBy:"@"},this.controller=r,this.controllerAs="swListingOrderBy",this.link=function(e,t,i){var r={orderBy:e.swListingOrderBy.orderBy};e.$parent.swListingDisplay.orderBys.push(r)}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["utilityService"],t},e}();t.SWListingOrderBy=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){var t=this;this.listingService=e,this.save=function(){t.listingService.markSaved(t.listingID,t.pageRecordIndex)}}return e}(),n=function(){function e(e,t,i,n){var o=this;this.hibachiPathBuilder=e,this.listingPartialPath=t,this.utilityService=i,this.scopeService=n,this.restrict="EA",this.scope=!0,this.bindToController={},this.controller=r,this.controllerAs="swListingRowSave",this.link=function(e,t,i){var r=o.scopeService.getRootParentScope(e,"pageRecord");angular.isDefined(r.pageRecord)&&(e.swListingRowSave.pageRecord=r.pageRecord);var r=o.scopeService.getRootParentScope(e,"pageRecordKey");angular.isDefined(r.pageRecordKey)&&(e.swListingRowSave.pageRecordIndex=r.pageRecordKey);var r=o.scopeService.getRootParentScope(e,"swListingDisplay");angular.isDefined(r.swListingDisplay)&&(e.swListingRowSave.listingID=r.swListingDisplay.tableID)},this.templateUrl=e.buildPartialsPath(this.listingPartialPath)+"listingrowsave.html"}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["hibachiPathBuilder","listingPartialPath","utilityService","scopeService"],t},e.$inject=["utilityService"],e}();t.SWListingRowSave=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$rootScope=e,this.$hibachi=t,this.metadataService=i,this.listingService=r,this.collectionService=n,this.observerService=o,this.localStorageService=s,this.displayOptionsClosed=!0,this.filtersClosed=!0,this.hasPersonalCollections=!1,this.collectionNameSaveIsOpen=!1,this.$onInit=function(){if(angular.isDefined(a.swListingDisplay.personalCollectionIdentifier)&&(a.personalCollectionIdentifier=a.swListingDisplay.personalCollectionIdentifier),a.searchableOptions=angular.copy(a.swListingDisplay.collectionConfig.columns),a.selectedSearchColumn={title:"All"},a.configureSearchableColumns(a.selectedSearchColumn),a.swListingControls.showPrintOptions){var e=a.collectionConfig.newCollectionConfig("PrintTemplate");e.addFilter("printTemplateObject",a.swListingDisplay.collectionConfig.baseEntityName),e.setAllRecords(!0),e.getEntity().then(function(e){a.printTemplateOptions=e.records},function(e){throw"swListingSearch couldn't load printTemplateOptions because: "+e})}},this.selectSearchColumn=function(e){a.selectedSearchColumn=e,a.configureSearchableColumns(e),a.searchText&&a.search()},this.selectPersonalCollection=function(e){a.localStorageService.hasItem("selectedPersonalCollection")||a.localStorageService.setItem("selectedPersonalCollection","{}");var t=angular.fromJson(a.localStorageService.getItem("selectedPersonalCollection"));e?(t[e.collectionObject.toLowerCase()]=e,a.localStorageService.setItem("selectedPersonalCollection",angular.toJson(t))):(delete t[a.swListingDisplay.baseEntityName.toLowerCase()],a.localStorageService.setItem("selectedPersonalCollection",angular.toJson(t))),window.location.reload()},this.savePersonalCollection=function(e){if(a.localStorageService.hasItem("selectedPersonalCollection")&&a.localStorageService.getItem("selectedPersonalCollection")[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]&&(angular.isUndefined(a.personalCollectionIdentifier)||angular.isDefined(a.localStorageService.getItem("selectedPersonalCollection")[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionDescription)&&a.localStorageService.getItem("selectedPersonalCollection")[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionDescription==a.personalCollectionIdentifier)){var t=angular.fromJson(a.localStorageService.getItem("selectedPersonalCollection"));if(t[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()])return void a.$hibachi.saveEntity("Collection",t[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionID,{"accountOwner.accountID":a.$rootScope.slatwall.account.accountID,collectionConfig:a.swListingDisplay.collectionConfig.collectionConfigString},"save").then(function(e){})}else if(e){var i={collectionConfig:a.swListingDisplay.collectionConfig.collectionConfigString,collectionName:e,collectionDescription:a.personalCollectionIdentifier,collectionObject:a.swListingDisplay.collectionConfig.baseEntityName,accountOwner:{accountID:a.$rootScope.slatwall.account.accountID}};return void a.$hibachi.saveEntity("Collection","",{serializedJSONData:angular.toJson(i),propertyIdentifiersList:"collectionID,collectionName,collectionObject,collectionDescription"},"save").then(function(e){a.localStorageService.hasItem("selectedPersonalCollection")||a.localStorageService.setItem("selectedPersonalCollection","{}");var t=angular.fromJson(a.localStorageService.getItem("selectedPersonalCollection"));t[a.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]={collectionID:e.data.collectionID,collectionObject:e.data.collectionObject,collectionName:e.data.collectionName,collectionDescription:e.data.collectionDescription},a.localStorageService.setItem("selectedPersonalCollection",angular.toJson(t)),a.$rootScope.slatwall.selectedPersonalCollection=t,a.collectionNameSaveIsOpen=!1,a.hasPersonalCollections=!1})}a.collectionNameSaveIsOpen=!0},this.getPersonalCollections=function(){if(!a.hasPersonalCollections){var e=a.collectionConfig.newCollectionConfig("Collection");e.setDisplayProperties("collectionID,collectionName,collectionObject,collectionDescription"),e.addFilter("accountOwner.accountID",a.$rootScope.slatwall.account.accountID),e.addFilter("collectionObject",a.swListingDisplay.baseEntityName),angular.isDefined(a.personalCollectionIdentifier)&&e.addFilter("collectionDescription",a.personalCollectionIdentifier),e.setAllRecords(!0),e.getEntity().then(function(e){a.personalCollections=e.records})}a.hasPersonalCollections=!0},this.clearPersonalCollection=function(){a.selectPersonalCollection()},this.search=function(){a.searchText.length>0?a.listingService.setExpandable(a.listingId,!1):a.listingService.setExpandable(a.listingId,!0),a.collectionConfig.setKeywords(a.searchText),a.swListingDisplay.collectionConfig=a.collectionConfig,a.observerService.notifyById("swPaginationAction",a.listingId,{type:"setCurrentPage",payload:1})},this.configureSearchableColumns=function(e){var t="";e.propertyIdentifier&&(t=e.propertyIdentifier);for(var i=0;i<a.swListingDisplay.collectionConfig.columns.length;i++)t.length?t===a.swListingDisplay.collectionConfig.columns[i].propertyIdentifier?a.swListingDisplay.collectionConfig.columns[i].isSearchable=!0:a.swListingDisplay.collectionConfig.columns[i].isSearchable=!1:a.swListingDisplay.collectionConfig.columns[i].isSearchable=!0}}return e}(),n=function(){function e(e,t,i){this.scopeService=e,this.collectionPartialsPath=t,this.hibachiPathBuilder=i,this.restrict="EA",this.scope={},this.require={swListingDisplay:"?^swListingDisplay",swListingControls:"?^swListingControls"},this.bindToController={collectionConfig:"<?",paginator:"=?",listingId:"@?",showToggleSearch:"=?"},this.controller=r,this.controllerAs="swListingSearch",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"listingsearch.html"}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["scopeService","listingPartialPath","hibachiPathBuilder"],t},e}();t.SWListingSearch=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(167),n=i(649),o=i(639),s=i(640),a=i(637),c=i(634),l=i(635),u=i(636),d=i(638),f=i(641),p=i(642),h=i(643),g=i(645),y=i(646),v=i(647),m=i(644),b=angular.module("hibachi.listing",[r.collectionmodule.name]).run([function(){}]).service("listingService",n.ListingService).directive("swListingDisplay",o.SWListingDisplay.Factory()).directive("swListingControls",a.SWListingControls.Factory()).directive("swListingAggregate",c.SWListingAggregate.Factory()).directive("swListingColorFilter",l.SWListingColorFilter.Factory()).directive("swListingColumn",u.SWListingColumn.Factory()).directive("swListingDisableRule",d.SWListingDisableRule.Factory()).directive("swListingExpandableRule",f.SWListingExpandableRule.Factory()).directive("swListingDisplayCell",s.SWListingDisplayCell.Factory()).directive("swListingFilter",p.SWListingFilter.Factory()).directive("swListingFilterGroup",h.SWListingFilterGroup.Factory()).directive("swListingOrderBy",g.SWListingOrderBy.Factory()).directive("swListingRowSave",y.SWListingRowSave.Factory()).directive("swListingSearch",v.SWListingSearch.Factory()).directive("swListingGlobalSearch",m.SWListingGlobalSearch.Factory()).constant("listingPartialPath","listing/components/");t.listingmodule=b},function(e,t,i){"use strict";var r=this&&this.__assign||Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++){t=arguments[i];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};Object.defineProperty(t,"__esModule",{value:!0});var n=i(170),o=function(){function e(e,t,i,o,s,a,c,l,u,d){var f=this;this.$timeout=e,this.$q=t,this.collectionConfigService=i,this.filterService=o,this.historyService=s,this.observerService=a,this.rbkeyService=c,this.selectionService=l,this.utilityService=u,this.$hibachi=d,this.listingDisplays={},this.state={},this.listingDisplayStateReducer=function(e,t){switch(t.type){case"LISTING_PAGE_RECORDS_UPDATE":case"CURRENT_PAGE_RECORDS_SELECTED":case"ADD_SELECTION":return r({},e,{action:t});default:return e}},this.getListingPageRecordsUpdateEventString=function(e){return e+"pageRecordsUpdated"},this.getListingOrderByChangedEventString=function(e){return e+"orderByChanged"},this.getListingInitiatedEventString=function(e){return e+"initiated"},this.notifyListingPageRecordsUpdate=function(e){f.listingDisplayStore.dispatch({type:"LISTING_PAGE_RECORDS_UPDATE",payload:{listingID:e,listingPageRecordsUpdateEventString:f.getListingPageRecordsUpdateEventString(e)}}),f.observerService.notify(f.getListingPageRecordsUpdateEventString(e),e)},this.attachToListingPageRecordsUpdate=function(e,t,i){f.observerService.attach(t,f.getListingPageRecordsUpdateEventString(e),i)},this.attachToOrderByChangedUpdate=function(e,t,i){f.observerService.attach(t,f.getListingOrderByChangedEventString(e),i)},this.attachToListingInitiated=function(e,t){f.observerService.attach(t,f.getListingInitiatedEventString(e)),f.historyService.hasHistory(f.getListingInitiatedEventString(e))&&t()},this.setListingState=function(e,t){f.listingDisplays[e]=t,f.observerService.notifyAndRecord(f.getListingInitiatedEventString(e))},this.getListing=function(e){return f.listingDisplays[e]},this.getListingColumns=function(e){return f.getListing(e).columns||f.getListingCollectionConfigColumns(e)},this.getListingCollectionConfigColumns=function(e){if(null!=f.getListing(e).collectionConfig)return f.getListing(e).collectionConfig.columns},this.getListingExampleEntity=function(e){if(null!=f.getListing(e).exampleEntity)return f.getListing(e).exampleEntity;f.setupExampleEntity(e)},this.getListingCollectionConfigColumnIndexByPropertyIdentifier=function(e,t){var i=f.getListingCollectionConfigColumns(e);return f.utilityService.ArrayFindByPropertyValue(i,"propertyIdentifier",t)},this.getListingColumnIndexByPropertyIdentifier=function(e,t){var i=f.getListingColumns(e);return f.utilityService.ArrayFindByPropertyValue(i,"propertyIdentifier",t)},this.getListingBaseEntityName=function(e){var t=f.getListing(e).baseEntityName||f.getListing(e).collectionObject;return null==t&&null!=f.getListing(e).collectionConfig&&(t=f.getListing(e).collectionConfig.baseEntityName),null==t&&null!=f.getListing(e).collectionData&&(t=f.getListing(e).collectionData.collectionObject),t},this.getListingBaseEntityPrimaryIDPropertyName=function(e){if(null!=f.getListingExampleEntity(e))return f.getListingExampleEntity(e).$$getIDName()},this.getListingPrimaryEntityName=function(e){return f.getListing(e).baseEntityName||f.getListing(e).collectionObject||f.getListing(e).collectionConfig.baseEntityName},this.getListingEntityPrimaryIDPropertyName=function(e){return f.$hibachi.getPrimaryIDPropertyNameByEntityName(f.getListingPrimaryEntityName(e))},this.getListingPageRecords=function(e){if(angular.isDefined(f.getListing(e))&&angular.isDefined(f.getListing(e).collectionData)&&angular.isDefined(f.getListing(e).collectionData.pageRecords))return f.getListing(e).collectionData.pageRecords},this.getCollection=function(e){return f.getListing(e).getCollection()},this.getPageRecordsWithManualSortOrder=function(e){if(!angular.isDefined(f.getListing(e))||null==f.getListingPageRecords(e))return angular.toJson({});var t=f.getListingPageRecords(e),i=f.getListingEntityPrimaryIDPropertyName(e),r=f.getListing(e).collectionConfig.baseEntityAlias+"."+i,n={};f.$timeout(function(){for(var o=0;o<t.length;o++){var s=t[o],a=t[o][i],c=o+1,l=f.getListingCollectionConfigColumnIndexByPropertyIdentifier(e,r);if(angular.isDefined(a))n[a]=c;else if(-1!==l){var u=f.getListingCollectionConfigColumns(e)[l];if(angular.isDefined(u.fallbackPropertyIdentifiers))for(var d=u.fallbackPropertyIdentifiers.split(","),p=0;p<d.length;p++)angular.isDefined(s[d[p]])&&(n[s[d[p]]]=c)}}return f.getListing(e).pageRecordsWithManualSortOrder=angular.toJson(n),f.getListing(e).pageRecordsWithManualSortOrders},0)},this.getListingPageRecordIndexByPageRecord=function(e,t){for(var i=f.getListingPageRecords(e),r=f.getListingEntityPrimaryIDPropertyName(e),n=0;n<i.length;n++)if(i[n][r]==t[r])return n;return-1},this.insertListingPageRecord=function(e,t){t.newFlag=!0,angular.isDefined(f.getListingPageRecords(e))&&(f.notifyListingPageRecordsUpdate(e),f.getListingPageRecords(e).unshift(t))},this.removeListingPageRecord=function(e,t){var i=f.getListingPageRecords(e);if(-1!=f.getListingPageRecordIndexByPageRecord(e,t))return f.notifyListingPageRecordsUpdate(e),i.splice(f.getListingPageRecordIndexByPageRecord(e,t),1)[0]},this.getPageRecordKey=function(e){if(e){var t="";if(0===e.indexOf("_"))if(e.match(new RegExp("_","g")||[]).length>1){var i=e.substring(1);t=i.substring(i.indexOf("_")+1,i.length)}else t=e.substring(e.indexOf(".")+1);else t=e;return f.utilityService.replaceAll(t,".","_")}return""},this.getPageRecordValueByColumn=function(e,t){var i=e[f.getPageRecordKey(t.propertyIdentifier)]||"";if(""==i)for(var r in e)-1!=r.indexOf(f.getPageRecordKey(t.propertyIdentifier).trim())&&(i=e[r]);if((angular.isUndefined(i)||angular.isString(i)&&0==i.trim().length)&&angular.isDefined(t.fallbackPropertyIdentifiers))for(var n=t.fallbackPropertyIdentifiers.replace(".","_").split(","),o=0;o<n.length;o++)if(angular.isDefined(e[f.getPageRecordKey(n[o])])){i=e[f.getPageRecordKey(n[o])];break}return i},this.selectCurrentPageRecords=function(e){if(f.getListing(e).collectionData.pageRecords)for(var t=0;t<f.getListing(e).collectionData.pageRecords.length;t++)1==f.getListing(e).isCurrentPageRecordsSelected?f.getListing(e).selectionService.addSelection(f.getListing(e).tableID,f.getListingPageRecords(e)[t][f.getListingBaseEntityPrimaryIDPropertyName(e)]):f.selectionService.removeSelection(f.getListing(e).tableID,f.getListingPageRecords(e)[t][f.getListingBaseEntityPrimaryIDPropertyName(e)])},this.getSelectedBy=function(e,t,i){return e&&t&&i?f.getListing(e).collectionData.pageRecords.findIndex(function(e){return e[t]==i}):-1},this.getAllSelected=function(e){if(!e)return-1;for(var t=0;t<f.getListing(e).collectionData.pageRecords.length;t++)f.selectionService.getSelections(f.getListing(e).tableID,f.getListingPageRecords(e)[t][f.getListingBaseEntityPrimaryIDPropertyName(e)])},this.clearAllSelections=function(e){if(!e)return-1;for(var t=0;t<f.getListing(e).collectionData.pageRecords.length;t++)f.selectionService.removeSelection(f.getListing(e).tableID,f.getListingPageRecords(e)[t][f.getListingBaseEntityPrimaryIDPropertyName(e)])},this.getNGClassObjectForPageRecordRow=function(e,t){var i="{";angular.forEach(f.getListing(e).colorFilters,function(e,r){i=i.concat("'"+e.colorClass+"':"+f.getColorFilterConditionString(e,t)),i=i.concat(",")}),i=i.concat(" 's-child':"+f.getPageRecordIsChild(e,t));var r=!1;return t&&null!=t.newFlag&&"string"==typeof t.newFlag&&""!==t.newFlag.trim()&&(r=t.newFlag),i=i.concat(",'s-selected-row':"+r),i=i.concat(",'s-disabled':"+f.getPageRecordMatchesDisableRule(e,t)),(i=i.concat(",'s-edited':pageRecord.edited"))+"}"},this.getPageRecordIsChild=function(e,t){return!1},this.determineRowEdited=function(e,t){var i=0;for(var r in e[t].editedFields)if(++i>1)return e[t].edited=!0,!0;return e[t].edited=!1,!1},this.markUnedited=function(e,t,i){var r=f.getListingPageRecords(e);return angular.isDefined(r[t].editedFields[i])&&delete r[t].editedFields[i],f.determineRowEdited(r,t)},this.markEdited=function(e,t,i,r){var n=f.getListingPageRecords(e);return angular.isUndefined(n[t].editedFields)&&!angular.isObject(n[t].editedFields)&&(n[t].editedFields={}),n[t].editedFields[i]=r,f.determineRowEdited(n,t)},this.markSaved=function(e,t){var i=f.getListingPageRecords(e),r=[];for(var n in i[t].editedFields)angular.isFunction(i[t].editedFields[n])&&r.push(i[t].editedFields[n]());f.$q.all(r).then(function(){delete i[t].editedFields,i[t].edited=!1})},this.setupInSingleCollectionConfigMode=function(e,t){null!=f.getListing(e).collectionObject&&null!=f.getListing(e).collectionConfig&&(f.getListing(e).collectionObject=f.getListing(e).collectionConfig.baseEntityName),f.initCollectionConfigData(e,f.getListing(e).collectionConfig),f.setupColumns(e,f.getListing(e).collectionConfig,f.getListing(e).collectionObject),t.$watch("swListingDisplay.collectionPromise",function(t,i){t&&f.$q.when(f.getListing(e).collectionPromise).then(function(t){f.getListing(e).collectionData=t,f.setupDefaultCollectionInfo(e),null!=f.getListing(e).collectionConfig&&f.getListing(e).collectionConfig.hasColumns()?f.setupColumns(e,f.getListing(e).collectionConfig,f.getListing(e).collectionObject):f.getListing(e).collectionConfig.loadJson(t.collectionConfig),f.notifyListingPageRecordsUpdate(e),f.getListing(e).collectionData.pageRecords=f.getListing(e).collectionData.pageRecords||f.getListing(e).collectionData.records,f.getListing(e).paginator.setPageRecordsInfo(f.getListing(e).collectionData),f.getListing(e).searching=!1,f.getListing(e).columnCount=f.getListing(e).columns.length+1,(f.getListing(e).selectable||f.getListing(e).multiselectable||f.getListing(e).sortable)&&f.getListing(e).columnCount++})})},this.setupInMultiCollectionConfigMode=function(e){angular.forEach(f.getListing(e).collectionConfigs,function(t,i){f.getListing(e).collectionObjects[i]=t.baseEntityName})},this.setupDefaultCollectionInfo=function(e){f.getListing(e).hasCollectionPromise&&angular.isDefined(f.getListing(e).collection)&&null==f.getListing(e).collectionConfig&&(f.getListing(e).collectionObject=f.getListing(e).collection.collectionObject,f.getListing(e).collectionConfig=f.collectionConfigService.newCollectionConfig(f.getListing(e).collectionObject),f.getListing(e).collectionConfig.loadJson(f.getListing(e).collection.collectionConfig)),0==f.getListing(e).multiSlot&&f.$timeout(function(){f.getListing(e).collectionConfig.loadJson(f.getListing(e).collectionData.collectionConfig),f.getListing(e).columns=f.getListing(e).collectionConfig.columns}),null!=f.getListing(e).paginator&&null!=f.getListing(e).collectionConfig&&(f.getListing(e).collectionConfig.setPageShow(f.getListing(e).paginator.getPageShow()),f.getListing(e).collectionConfig.setCurrentPage(f.getListing(e).paginator.getCurrentPage()))},this.addColumn=function(e,t){null!=f.getListing(e).collectionConfig&&null!=f.getListing(e).collectionConfig.baseEntityAlias?t.propertyIdentifier=f.getListing(e).collectionConfig.baseEntityAlias+"."+t.propertyIdentifier:null!=f.getListingBaseEntityName(e)&&(t.propertyIdentifier="_"+f.getListingBaseEntityName(e).toLowerCase()+"."+t.propertyIdentifier),-1===f.getListingColumnIndexByPropertyIdentifier(e,t.propertyIdentifier)&&(t.aggregate?f.getListing(e).aggregates.push(t.aggregate):f.getListing(e).columns.push(t))},this.setupColumns=function(e,t,i){if(0==f.getListing(e).columns.length&&null!=t)if(null==t.columns)t.getEntity().then(function(){for(var i=0;i<t.columns.length;i++){var r=t.columns[i];r.isVisible&&f.getListing(e).columns.push(r)}},function(){throw"listing display couldn't initiate no columns"});else for(var r=0;r<t.columns.length;r++){var n=t.columns[r];n.isVisible&&f.getListing(e).columns.push(n)}for(var o=0;o<f.getListing(e).columns.length;o++){var n=f.getListing(e).columns[o];f.setupColumn(e,n,t,i)}},this.setupColumn=function(e,t,i,r){null==f.getListing(e).collectionConfig||t.hasCellView||f.getListing(e).collectionConfig.addColumn(t.propertyIdentifier,void 0,t),i||null==f.getListing(e).collectionConfig||(i=null!=f.getListing(e).collectionConfig);var n=f.getListingBaseEntityName(e);if(r||(r=n),null!=n){var o=f.$hibachi.getLastEntityNameInPropertyIdentifier(n,t.propertyIdentifier);angular.isUndefined(t.title)&&(t.title=f.rbkeyService.getRBKey("entity."+o.toLowerCase()+"."+f.utilityService.listLast(t.propertyIdentifier,"."))),angular.isUndefined(t.isVisible)&&(t.isVisible=!0);var s=f.$hibachi.getPropertyByEntityNameAndPropertyName(o,f.utilityService.listLast(t.propertyIdentifier,"."));s&&angular.isDefined(s.persistent)&&(t.persistent=s.persistent),s&&angular.isDefined(s.ormtype)&&(t.ormtype=s.ormtype),(angular.isUndefined(t.type)||"none"==t.type)&&(angular.isDefined(s)&&angular.isDefined(s.hb_formattype)?t.type=s.hb_formattype:t.type="none"),t.propertyIdentifier?f.getListing(e).allpropertyidentifiers=f.utilityService.listAppend(f.getListing(e).allpropertyidentifiers,t.propertyIdentifier):t.processObjectProperty&&(t.searchable=!1,t.sort=!1,f.getListing(e).allprocessobjectproperties=f.utilityService.listAppend(f.getListing(e).allprocessobjectproperties,t.processObjectProperty)),t.tdclass&&t.tdclass.split(" ").indexOf("primary")>=0&&f.getListing(e).expandable&&(f.getListing(e).tableattributes=f.utilityService.listAppend(f.getListing(e).tableattributes,"data-expandsortproperty="+t.propertyIdentifier," "),t.sort=!1)}if(angular.isDefined(t.tooltip)){var a=f.utilityService.getPropertiesFromString(t.tooltip);a&&a.length&&i.addDisplayProperty(f.utilityService.arrayToList(a),"",{isVisible:!1})}else t.tooltip="";if(angular.isDefined(t.queryString)){var a=f.utilityService.getPropertiesFromString(t.queryString);a&&a.length&&i.addDisplayProperty(f.utilityService.arrayToList(a),"",{isVisible:!1})}if(f.getListing(e).hasCollectionPromise){var o=f.$hibachi.getLastEntityNameInPropertyIdentifier(r,f.utilityService.listRest(t.propertyIdentifier,"."));t.title=t.title||f.rbkeyService.getRBKey("entity."+o.toLowerCase()+"."+f.utilityService.listLast(t.propertyIdentifier,".")),angular.isUndefined(t.isVisible)&&(t.isVisible=!0)}f.columnOrderBy(e,t)},this.initCollectionConfigData=function(e,t){f.setupSelect(e),f.setupMultiselect(e),f.setupExampleEntity(e),null!=t&&(angular.forEach(f.getListing(e).filterGroups,function(e){t.addFilterGroup(e)}),angular.forEach(f.getListing(e).filters,function(e){t.addFilter(e.propertyIdentifier,e.comparisonValue,e.comparisonOperator,e.logicalOperator,e.hidden)}),angular.forEach(f.getListing(e).orderBys,function(e){t.addOrderBy(e.orderBy)}),angular.forEach(f.getListing(e).aggregates,function(e){t.addDisplayAggregate(e.propertyIdentifier,e.aggregateFunction,e.aggregateAlias)}),angular.forEach(f.getListing(e).actions,function(e){if(angular.isDefined(e.queryString)){var i=f.utilityService.getPropertiesFromString(e.queryString);i&&i.length&&t.addDisplayProperty(f.utilityService.arrayToList(i),"",{isVisible:!1})}}),angular.forEach(f.getListing(e).colorFilters,function(e){angular.isDefined(e.propertyToCompare)&&t.addDisplayProperty(e.propertyToCompare,"",{isVisible:!1})}),null!=f.getListing(e).collectionConfig&&f.getListing(e).collectionConfig.hasColumns()&&t.addDisplayProperty(f.getListingExampleEntity(e).$$getIDName(),void 0,{isVisible:!1}),t.setPageShow(f.getListing(e).paginator.pageShow),t.setCurrentPage(f.getListing(e).paginator.currentPage),!f.getListing(e).multiselectable||f.getListing(e).columns&&f.getListing(e).columns.length||f.getListing(e).exampleEntity.metaData.activeProperty&&!f.getListing(e).hasCollectionPromise&&t.addFilter("activeFlag",1,"=",void 0,!0),f.setupHierarchicalExpandable(e,t)),f.setupSortable(e),f.updateColumnAndAdministrativeCount(e)},this.setupSortable=function(e){f.attachToListingPageRecordsUpdate(e,f.getPageRecordsWithManualSortOrder,f.utilityService.createID(32))},this.setupSelect=function(e){f.getListing(e).selectFieldName&&f.getListing(e).selectFieldName.length&&(f.getListing(e).selectable=!0,f.getListing(e).tableclass=f.utilityService.listAppend(f.getListing(e).tableclass,"table-select"," "),f.getListing(e).tableattributes=f.utilityService.listAppend(f.getListing(e).tableattributes,'data-selectfield="'+f.getListing(e).selectFieldName+'"'," "))},this.setupMultiselect=function(e){if(f.getListing(e).multiselectFieldName&&f.getListing(e).multiselectFieldName.length&&(f.getListing(e).multiselectable=!0,f.getListing(e).tableclass=f.utilityService.listAppend(f.getListing(e).tableclass,"table-multiselect"," "),f.getListing(e).tableattributes=f.utilityService.listAppend(f.getListing(e).tableattributes,'data-multiselectpropertyidentifier="'+f.getListing(e).multiselectPropertyIdentifier+'"'," "),f.getListing(e).observerService.attach(f.getListing(e).updateMultiselectValues,f.getListing(e).defaultSelectEvent,f.getListing(e).collectionObject),f.getListing(e).observerService.attach(f.getListing(e).paginationPageChange,"swPaginationAction")),f.getListing(e).multiselectValues&&f.getListing(e).multiselectValues.length){var t=f.getListing(e).multiselectValues.split(",");angular.forEach(t,function(t){f.getListing(e).selectionService.addSelection(f.getListing(e).tableID,t)})}f.getListing(e).multiselectIdPaths&&f.getListing(e).multiselectIdPaths.length&&angular.forEach(f.getListing(e).multiselectIdPaths.split(","),function(t){var i=f.getListing(e).utilityService.listLast(t,"/");f.getListing(e).selectionService.addSelection(f.getListing(e).tableID,i)})},this.setupExampleEntity=function(e){f.getListing(e).exampleEntity=f.$hibachi.getEntityExample(f.getListingBaseEntityName(e)),null!=f.getListing(e).exampleEntity&&((!f.getListing(e).parentPropertyName||f.getListing(e).parentPropertyName&&!f.getListing(e).parentPropertyName.length)&&f.getListing(e).exampleEntity.metaData.hb_parentPropertyName&&(f.getListing(e).parentPropertyName=f.getListing(e).exampleEntity.metaData.hb_parentPropertyName),(!f.getListing(e).childPropertyName||f.getListing(e).childPropertyName&&!f.getListing(e).childPropertyName.length)&&f.getListing(e).exampleEntity.metaData.hb_childPropertyName&&(f.getListing(e).childPropertyName=f.getListing(e).exampleEntity.metaData.hb_childPropertyName))},this.setupHierarchicalExpandable=function(e,t){f.getListing(e).parentPropertyName&&f.getListing(e).parentPropertyName.length&&0!=f.getListing(e).expandable&&(angular.isUndefined(f.getListing(e).expandable)&&(f.getListing(e).expandable=!0),f.getListing(e).tableclass=f.utilityService.listAppend(f.getListing(e).tableclass,"table-expandable"," "),f.getListing(e).hasCollectionPromise||t.addFilter(f.getListing(e).parentPropertyName+"."+f.getListing(e).exampleEntity.$$getIDName(),"NULL","IS",void 0,!0,!1,!1),f.getListing(e).childPropertyName&&f.getListing(e).childPropertyName.length&&(!f.getListing(e).getChildCount&&f.getListing(e).hasCollectionPromise||t.addDisplayAggregate(f.getListing(e).childPropertyName,"COUNT",f.getListing(e).childPropertyName+"Count",{isVisible:!1,isSearchable:!1})),f.getListing(e).allpropertyidentifiers=f.utilityService.listAppend(f.getListing(e).allpropertyidentifiers,f.getListing(e).exampleEntity.$$getIDName()+"Path"),f.getListing(e).tableattributes=f.utilityService.listAppend(f.getListing(e).tableattributes,"data-parentidproperty="+f.getListing(e).parentPropertyName+"."+f.getListing(e).exampleEntity.$$getIDName()," "))},this.updateColumnAndAdministrativeCount=function(e){f.getListing(e).columnCount=f.getListing(e).columns?f.getListing(e).columns.length:0,f.getListing(e).selectable&&f.getListing(e).columnCount++,f.getListing(e).multiselectable&&f.getListing(e).columnCount++,f.getListing(e).sortable&&f.getListing(e).columnCount++,f.getListing(e).administrativeCount&&f.getListing(e).administrativeCount++},this.setupDefaultGetCollection=function(e){return 0==f.getListing(e).collectionConfigs.length?(f.getListing(e).collectionPromise=f.getListing(e).collectionConfig.getEntity(),function(){f.getListing(e).collectionConfig.setCurrentPage(f.getListing(e).paginator.getCurrentPage()),f.getListing(e).collectionConfig.setPageShow(f.getListing(e).paginator.getPageShow()),f.getListing(e).multiSlot?f.getListing(e).collectionConfig.getEntity().then(function(t){f.getListing(e).collectionData=t,f.setupDefaultCollectionInfo(e),f.getListing(e).collectionData.pageRecords=t.pageRecords||t.records,f.getListing(e).paginator.setPageRecordsInfo(f.getListing(e).collectionData)},function(e){throw"Listing Service encounter a problem when trying to get collection. Reason: "+e}):f.getListing(e).collectionPromise.then(function(t){f.getListing(e).collectionData=t,f.setupDefaultCollectionInfo(e),f.getListing(e).collectionData.pageRecords=t.pageRecords||t.records,f.getListing(e).paginator.setPageRecordsInfo(f.getListing(e).collectionData)},function(e){throw"Listing Service encounter a problem when trying to get collection. Reason: "+e})}):function(){f.getListing(e).collectionData={},f.getListing(e).collectionData.pageRecords=[];var t=[];angular.forEach(f.getListing(e).collectionConfigs,function(e,i){t.push(e.getEntity())}),t.length&&f.$q.all(t).then(function(t){angular.forEach(t,function(t,i){f.getListing(e).listingService.setupColumns(e,f.getListing(e).collectionConfigs[i],f.getListing(e).collectionObjects[i]),f.getListing(e).collectionData.pageRecords=f.getListing(e).collectionData.pageRecords.concat(t.records)})},function(e){throw"listing service had trouble getting collection data because: "+e})}},this.columnOrderBy=function(e,t){var i=!1;return null!=f.getListing(e).collectionConfigs&&angular.forEach(f.getListing(e).collectionConfig.orderBy,function(r,n){t.propertyIdentifier==r.propertyIdentifier&&(i=!0,f.getListing(e).orderByStates[t.propertyIdentifier]=r.direction)}),i||(f.getListing(e).orderByStates[t.propertyIdentifier]=""),f.getListing(e).orderByStates[t.propertyIdentifier]},this.columnOrderByIndex=function(e,t){var i=!1;return t.sorting&&t.sorting.active&&t.sorting.sortOrder?t.sorting.sortOrder.toUpperCase():(null!=f.getListing(e).collectionConfig&&angular.forEach(f.getListing(e).collectionConfig.orderBy,function(r,n){t.propertyIdentifier==r.propertyIdentifier&&(i=!0,f.getListing(e).orderByIndices[t.propertyIdentifier]=n+1)}),i||(f.getListing(e).orderByIndices[t.propertyIdentifier]=""),f.getListing(e).orderByIndices[t.propertyIdentifier])},this.setSingleColumnOrderBy=function(e,t,i,r){if(void 0===r&&(r=!0),"ASC"===i.toUpperCase())var n="DESC";else var n="ASC";if(null!=f.getListing(e).collectionConfig){var o=!1;angular.forEach(f.getListing(e).collectionConfig.orderBy,function(e,r){t==e.propertyIdentifier?(e.direction=i,o=!0):e.direction=n}),o||f.getListing(e).collectionConfig.addOrderBy(t+"|"+i),r&&f.observerService.notify(f.getListingOrderByChangedEventString(e)),f.getCollection(e)}},this.setManualSort=function(e,t){f.getListing(e).sortable=t,t&&f.setSingleColumnOrderBy(e,"sortOrder","ASC")},this.toggleOrderBy=function(e,t){f.getListing(e).hasSingleCollectionConfig()&&f.getListing(e).collectionConfig.toggleOrderBy(t.propertyIdentifier,!0)},this.getColorFilterConditionString=function(e,t){return angular.isDefined(e.comparisonProperty)?t[e.propertyToCompare.replace(".","_")]+e.comparisonOperator+t[e.comparisonProperty.replace(".","_")]:t[e.propertyToCompare.replace(".","_")]+e.comparisonOperator+e.comparisonValue},this.getKeyOfMatchedDisableRule=function(e,t){var i=-1;return angular.isDefined(f.getListing(e).disableRules)&&angular.forEach(f.getListing(e).disableRules,function(e,r){if(angular.isDefined(t[e.filterPropertyIdentifier])){if(angular.isString(t[e.filterPropertyIdentifier]))var n=t[e.filterPropertyIdentifier].trim();else var n=t[e.filterPropertyIdentifier];if("null"==e.filterComparisonValue&&(e.filterComparisonValue=""),f.filterService.filterMatch(n,e.filterComparisonOperator,e.filterComparisonValue)&&(i=r),-1!=i)return i}}),i},this.getPageRecordMatchesDisableRule=function(e,t){return-1!=f.getKeyOfMatchedDisableRule(e,t)},this.setExpandable=function(e,t){angular.isDefined(f.getListing(e))&&(f.getListing(e).expandable=t)},this.getKeyOfMatchedExpandableRule=function(e,t){var i=-1;return angular.isDefined(f.getListing(e))&&angular.isDefined(f.getListing(e).expandableRules)&&angular.forEach(f.getListing(e).expandableRules,function(e,r){if(angular.isDefined(t[e.filterPropertyIdentifier])){if(angular.isString(t[e.filterPropertyIdentifier]))var n=t[e.filterPropertyIdentifier].trim();else var n=t[e.filterPropertyIdentifier];if(f.filterService.filterMatch(n,e.filterComparisonOperator,e.filterComparisonValue)&&(i=r),-1!=i)return i}}),i},this.getExampleEntityForExpandableRecord=function(e,t){var i=f.getListing(e).getPageRecordChildCollectionConfigForExpandableRule(t);return angular.isDefined(i)?f.$hibachi.getEntityExample(f.getListing(e).getPageRecordChildCollectionConfigForExpandableRule(t).baseEntityName):f.getListing(e).exampleEntity},this.getPageRecordMatchesExpandableRule=function(e,t){return-1!=f.getKeyOfMatchedExpandableRule(e,t)},this.hasPageRecordRefreshChildrenEvent=function(e,t){return null!=f.getPageRecordRefreshChildrenEvent(e,t)},this.getPageRecordRefreshChildrenEvent=function(e,t){var i=f.getKeyOfMatchedExpandableRule(e,t);if(-1!=i)return f.getListing(e).expandableRules[i].refreshChildrenEvent},this.getPageRecordChildCollectionConfigForExpandableRule=function(e,t){var i=f.getKeyOfMatchedExpandableRule(e,t);if(null!=f.getListing(e)&&angular.isFunction(f.getListing(e).exampleEntity.$$getIDName)&&angular.isDefined(t[f.getListing(e).exampleEntity.$$getIDName()])&&angular.isDefined(f.getListing(e).childCollectionConfigs[t[f.getListing(e).exampleEntity.$$getIDName()]]))return f.getListing(e).childCollectionConfigs[t[f.getListing(e).exampleEntity.$$getIDName()]];if(-1!=i){var r=f.getListing(e).expandableRules[i].childrenCollectionConfig.clone();return angular.forEach(r.filterGroups[0],function(e,i){angular.forEach(e,function(e,i){angular.isString(e.value)&&e.value.length&&"$"==e.value.charAt(0)&&(e.value=f.utilityService.replaceStringWithProperties(e.value,t))})}),f.getListing(e).childCollectionConfigs[t[f.getListing(e).exampleEntity.$$getIDName()]]=r,f.getListing(e).childCollectionConfigs[t[f.getListing(e).exampleEntity.$$getIDName()]]}},this.listingDisplayStore=new n.IStore(this.state,this.listingDisplayStateReducer)}return e}();t.ListingService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(59),n=angular.module("logger",[r.alertmodule.name]).run([function(){}]);t.loggermodule=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){this.paginationService=e,angular.isUndefined(this.paginator)&&(this.paginator=e.createPagination())}return e}();t.SWPaginationBarController=r;var n=function(){function e(e,t){this.restrict="E",this.scope={},this.bindToController={paginator:"=?"},this.controller=r,this.controllerAs="swPaginationBar",this.link=function(e,t,i){},this.templateUrl=e.buildPartialsPath(t)+"paginationbar.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["hibachiPathBuilder","partialsPath"],t},e}();t.SWPaginationBar=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(653),n=i(651),o=i(16),s=angular.module("hibachi.pagination",[o.coremodule.name]).run([function(){}]).service("paginationService",r.PaginationService).directive("swPaginationBar",n.SWPaginationBar.Factory()).constant("partialsPath","pagination/components/");t.paginationmodule=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.observerService=e,this.uuid=t,this.pageShow=10,this.currentPage=1,this.pageStart=0,this.pageEnd=0,this.recordsCount=0,this.totalPages=0,this.pageShowOptions=[{display:10,value:10},{display:20,value:20},{display:50,value:50},{display:250,value:250},{display:"Auto",value:"Auto"}],this.autoScrollPage=1,this.autoScrollDisabled=!1,this.notifyById=!0,this.getSelectedPageShowOption=function(){return i.selectedPageShowOption},this.pageShowOptionChanged=function(e){i.setPageShow(e.value),i.currentPage=1,i.notify("swPaginationAction",{type:"setPageShow",payload:i.getPageShow()})},this.getTotalPages=function(){return i.totalPages},this.setTotalPages=function(e){i.totalPages=e},this.getPageStart=function(){return i.pageStart},this.setPageStart=function(e){i.pageStart=e},this.getPageEnd=function(){return i.pageEnd},this.setPageEnd=function(e){i.pageEnd=e},this.getRecordsCount=function(){return i.recordsCount},this.setRecordsCount=function(e){i.recordsCount=e},this.getPageShowOptions=function(){return i.pageShowOptions},this.setPageShowOptions=function(e){i.pageShowOptions=e},this.getPageShow=function(){return i.pageShow},this.setPageShow=function(e){i.pageShow=e},this.getCurrentPage=function(){return i.currentPage},this.setCurrentPage=function(e){i.currentPage=e,i.notify("swPaginationAction",{type:"setCurrentPage",payload:i.getCurrentPage()})},this.previousPage=function(){1!=i.getCurrentPage()&&i.setCurrentPage(i.getCurrentPage()-1)},this.nextPage=function(){i.getCurrentPage()<i.getTotalPages()&&(i.setCurrentPage(i.getCurrentPage()+1),i.notify("swPaginationAction",{type:"nextPage",payload:i.getCurrentPage()}))},this.hasPrevious=function(){return i.getPageStart()<=1},this.hasNext=function(){return i.getPageEnd()===i.getRecordsCount()},this.showPreviousJump=function(){return angular.isDefined(i.getCurrentPage())&&i.getCurrentPage()>3},this.showNextJump=function(){return!!(i.getCurrentPage()<i.getTotalPages()-3&&i.getTotalPages()>6)},this.previousJump=function(){i.setCurrentPage(i.currentPage-3)},this.nextJump=function(){i.setCurrentPage(i.getCurrentPage()+3)},this.showPageNumber=function(e){if(i.getCurrentPage()>=i.getTotalPages()-3&&e>i.getTotalPages()-6)return!0;if(i.getCurrentPage()<=3){if(e<6)return!0}else{var t=i.getCurrentPage()-2,r=i.getCurrentPage()+2;if(e>t&&e<r)return!0}return!1},this.setPageRecordsInfo=function(e){if(i.setRecordsCount(e.recordsCount),0===i.getRecordsCount()?i.setPageStart(0):i.setPageStart(e.pageRecordsStart),i.setPageEnd(e.pageRecordsEnd),i.setTotalPages(e.totalPages),i.totalPagesArray=[],angular.isUndefined(i.getCurrentPage())||i.getCurrentPage()<5)var t=1,r=i.getTotalPages()<=10?i.getTotalPages()+1:10;else var t=i.showNextJump()?i.getCurrentPage()-3:i.getTotalPages()-4,r=i.showNextJump()?i.getCurrentPage()+5:i.getTotalPages()+1;for(var n=t;n<r;n++)i.totalPagesArray.push(n)},this.uuid=t,this.selectedPageShowOption=this.pageShowOptions[0],this.observerService.attach(this.setPageRecordsInfo,"swPaginationUpdate",this.uuid)}return e.prototype.notify=function(e,t){!0===this.notifyById?this.observerService.notifyById(e,this.uuid,t):this.observerService.notify(e,t)},e}();t.Pagination=r;var n=function(){function e(e,t){var i=this;this.utilityService=e,this.observerService=t,this.paginations={},this.createPagination=function(e){var t=i.utilityService.createID(10);return angular.isDefined(e)&&(t=e),i.paginations[t]=new r(i.observerService,t),i.paginations[t]},this.getPagination=function(e){if(e)return i.paginations[e]}}return e}();t.PaginationService=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){function o(t,i,r){var n={};n={name:"name",context:"context",required:"required",error:"none",errorkey:"none"};for(var o in O)if(o===t||o===t+"Flag")for(var c in O[o]){var l=O[o][c].required||"false",i=O[o][c].contexts||"none";n={name:o,context:i,required:l,error:"none",errorkey:"none"};for(var w=a(s,P,O[o][c]),C=0;C<w.length;C++)if(1==w[C]){if("regex"===P[C]&&""!==r){var I=O[o][c].regex,_=u(r,I);return 1!=_?(D.push("Invalid input"),n.error=D[D.length-1],n.errorkey="invalid-"+S.REGEX.name,n.fail=!0):(D.push("Valid input"),n.error=D[D.length-1],n.errorkey="invalid-"+S.REGEX.name,n.fail=!1),n}if("minValue"===P[C]){var T=O[o][c].minValue;e.debug(T);var _=d(r,T);return e.debug("e>v"+_+" :"+r,":"+T),1!=_?(D.push("Minimum value is: "+T),n.error=D[D.length-1],n.errorkey="invalid-"+S.MIN_VALUE.name,n.fail=!0):(n.error=D[D.length-1],n.errorkey="invalid-"+S.MIN_VALUE.name,n.fail=!1),n}if("maxValue"===P[C]){var $=O[o][c].maxValue,_=f(r,$);return e.debug("Max Value result is: "+_),1!=_&&(D.push("Maximum value is: "+$),n.error=D[D.length-1],n.errorkey="invalid-"+S.MAX_VALUE.name,n.fail=!0),n}if("minLength"===P[C]){var A=O[o][c].minLength,_=p(r,A);return e.debug("Min Length result is: "+_),1!=_&&(D.push("Minimum length must be: "+A),n.error=D[D.length-1],n.errorkey="invalid-"+S.MIN_LENGTH.name,n.fail=!0),n}if("maxLength"===P[C]){var x=O[o][c].maxLength,_=h(r,x);return e.debug("Max Length result is: "+_),1!=_&&(D.push("Maximum length is: "+x),n.error=D[D.length-1],n.errorkey="invalid-"+S.MAX_LENGTH.name,n.fail=!0),n}if("eq"===P[C]){var E=O[o][c].eq,_=g(r,E);return 1!=_&&(D.push("Must equal "+E),n.error=D[D.length-1],n.errorkey="invalid-"+S.EQ.name,n.fail=!0),n}if("neq"===P[C]){var k=O[o][c].neq,_=y(r,k);return 1!=_&&(D.push("Must not equal: "+k),n.error=D[D.length-1],n.errorkey="invalid-"+S.NEQ.name,n.fail=!0),n}if("lte"===P[C]){var j=O[o][c].lte,_=v(r,j);return 1!=_&&(D.push("Must be less than "+j),n.error=D[D.length-1],n.errorkey="invalid-"+S.LTE.name,n.fail=!0),n}if("gte"===P[C]){var F=O[o][c].gte,_=m(r,F);return 1!=_&&(D.push("Must be greater than: "+F),n.error=D[D.length-1],n.errorkey="invalid-"+S.GTE.name,n.fail=!0),n}if("required"===P[C]){var L=O[o][c].require,_=b(r,L);return 1!=_?(D.push("Required"),n.error=D[D.length-1],n.errorkey=S.REQUIRED.name,n.fail=!0):(D.push("Required"),n.error=D[D.length-1],n.errorkey=S.REQUIRED.name,n.fail=!1),n}}}}function s(e,t){return void 0!=e[t]}function a(e,t,i){var r=[];return c(t,function(t){r.push(e(i,t))}),r}function c(e,t){for(var i=0;i<e.length;i++)t(e[i])}function l(e){var t=[];for(var i in e){var r=e[i].name||"stub";t.push(r)}return t}function u(e,t){return!!new RegExp(t).test(e)}function d(e,t){return e>=t}function f(e,t){return e<=t}function p(e,t){return e.length>=t}function h(e,t){return e.length<=t}function g(e,t){return e==t}function y(e,t){return e!=t}function v(e,t){return e<t}function m(e,t){return e>t}function b(e,t){return""==t&&1==e}var w={SAVE:{name:"save",value:0},DELETE:{name:"delete",value:1},EDIT:{name:"edit",value:2}},S={REGEX:{name:"regex",value:0},MIN_VALUE:{name:"minValue",value:1},MAX_VALUE:{name:"maxValue",value:2},EQ:{name:"eq",value:3},NEQ:{name:"neq",value:4},UNIQUE:{name:"unique",value:5},LTE:{name:"lte",value:6},GTE:{name:"gte",value:7},MIN_LENGTH:{name:"minLength",value:8},MAX_LENGTH:{name:"maxLength",value:9},DATA_TYPE:{name:"dataType",value:10},REQUIRED:{name:"required",value:11}};t.validationPropertiesEnum=S,t.contextsEnum=w;var C=t.contextsEnum.SAVE,P=(l(w),l(S)),O=t.propertyDisplay.object.validations.properties,D=(t.propertyDisplay.errors,[]);n.$parsers.unshift(function(r){var s=i.context.name,a=i.val(),c=o(s,C,a)||{};return e.debug(t),e.debug(c),n.$setValidity(c.errorkey,!c.fail),!0}),i.bind("blur",function(e){})}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$log","$hibachi"],t},e}();t.SWValidate=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){var o=function(t){return e.validateDataType(t,r.swvalidationdatatype)};n.$validators.swvalidationdatatype=o,n.$validators["swvalidation"+r.swvalidationdatatype]=o}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationDataType=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationeq=function(t,i){return e.validateEq(t,r.swvalidationeq)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationEq=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationGte=function(t,i){return e.validateGte(t,r.swvalidationGte)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationGte=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationlte=function(t,i){return e.validateLte(t,r.swvalidationlte)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationLte=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationmaxlength=function(t,i){var n=0;return i&&i.length&&(n=i.length),e.validateMaxLength(n||0,r.swvalidationmaxlength)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationMaxLength=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationmaxvalue=function(t,i){if(null==i)return!0;e.validateMaxValue(i,r.swvalidationmaxvalue)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationMaxValue=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"A",require:"^ngModel",link:function(e,i,r,n){n.$validators.swvalidationminlength=function(e,i){var n=0;return i&&i.length&&(n=i.length),t.validateMinLength(n||0,r.swvalidationminlength)}}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$log","validationService"],t},e}();t.SWValidationMinLength=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationminvalue=function(t,i){return null==i||e.validateMinValue(i,r.swvalidationminvalue)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationMinValue=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationneq=function(t){return e.validateNeq(t,r.swvalidationneq)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationNeq=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationnumeric=function(t,i){return e.validateNumeric(i)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationNumeric=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationregex=function(t){return e.validateRegex(t,r.swvalidationregex)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationRegex=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){return{restrict:"A",require:"^ngModel",link:function(t,i,r,n){n.$validators.swvalidationrequired=function(t,i){var n=t||i;return"true"!==r.swvalidationrequired||e.validateRequired(n)}}}}return e.Factory=function(){var t=function(t){return new e(t)};return t.$inject=["validationService"],t},e}();t.SWValidationRequired=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"A",require:["ngModel","^?swFormField"],link:function(e,t,i,r){r[0].$asyncValidators.swvalidationunique=function(e,t){var i=e||t,o=r[1].property;return n.validateUnique(i,r[1].object,o)}}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$http","$q","$hibachi","$log","validationService"],t},e}();t.SWValidationUnique=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"A",require:"ngModel",link:function(e,i,r,o){o.$asyncValidators.swvalidationuniqueornull=function(i,r){var o=i||r;if(e&&e.propertyDisplay&&e.propertyDisplay.property){var s=e.propertyDisplay.property;return n.validateUniqueOrNull(o,e.propertyDisplay.object,s)}return t.resolve()}}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$http","$q","$hibachi","$log","validationService"],t},e}();t.SWValidationUniqueOrNull=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){var i=this;this.$hibachi=e,this.$q=t,this.MY_EMAIL_REGEXP=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,this.validateUnique=function(e,t,r){var n=i.$q.defer();return t&&r?i.$hibachi.checkUniqueValue(t,r,e).then(function(e){e?n.resolve():n.reject()}):n.resolve(),n.promise},this.validateUniqueOrNull=function(e,t,r){var n=i.$q.defer();return t&&r?i.$hibachi.checkUniqueOrNullValue(t,r,e).then(function(e){e?n.resolve():n.reject()}):n.resolve(),n.promise},this.validateEmail=function(e){return i.validateDataType(e,"email")},this.validateDataType=function(e,t){return null==e||!(!angular.isString(e)||"string"!==t)||!(!angular.isNumber(parseInt(e))||"numeric"!==t)||!(!angular.isArray(e)||"array"!==t)||!(!angular.isDate(e)||"date"!==t)||!(!angular.isObject(e)||"object"!==t)||("email"===t?i.MY_EMAIL_REGEXP.test(e):!!angular.isUndefined(e&&"undefined"===t))},this.validateEq=function(e,t){return e===t},this.validateNeq=function(e,t){return e!==t},this.validateGte=function(e,t){return void 0===t&&(t=0),angular.isString(e)&&(e=parseInt(e)),angular.isString(t)&&(t=parseInt(t)),e>=t},this.validateLte=function(e,t){return void 0===t&&(t=0),angular.isString(e)&&(e=parseInt(e)),angular.isString(t)&&(t=parseInt(t)),e<=t},this.validateMaxLength=function(e,t){return void 0===t&&(t=0),i.validateLte(e,t)},this.validateMaxValue=function(e,t){return void 0===t&&(t=0),i.validateLte(e,t)},this.validateMinLength=function(e,t){return void 0===t&&(t=0),i.validateGte(e,t)},this.validateMinValue=function(e,t){return void 0===t&&(t=0),i.validateGte(e,t)},this.validateNumeric=function(e){return!isNaN(e)},this.validateRegex=function(e,t){return new RegExp(t).test(e)},this.validateRequired=function(e){return!!e},this.$hibachi=e,this.$q=t}return e}();t.ValidationService=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(654),n=i(661),o=i(655),s=i(656),a=i(657),c=i(658),l=i(659),u=i(660),d=i(662),f=i(663),p=i(664),h=i(665),g=i(666),y=i(667),v=i(668),m=i(669),b=i(16),w=angular.module("hibachi.validation",[b.coremodule.name]).run([function(){}]).directive("swValidate",r.SWValidate.Factory()).directive("swvalidationminlength",n.SWValidationMinLength.Factory()).directive("swvalidationdatatype",o.SWValidationDataType.Factory()).directive("swvalidationeq",s.SWValidationEq.Factory()).directive("swvalidationgte",a.SWValidationGte.Factory()).directive("swvalidationlte",c.SWValidationLte.Factory()).directive("swvalidationmaxlength",l.SWValidationMaxLength.Factory()).directive("swvalidationmaxvalue",u.SWValidationMaxValue.Factory()).directive("swvalidationminvalue",d.SWValidationMinValue.Factory()).directive("swvalidationneq",f.SWValidationNeq.Factory()).directive("swvalidationnumeric",p.SWValidationNumeric.Factory()).directive("swvalidationregex",h.SWValidationRegex.Factory()).directive("swvalidationrequired",g.SWValidationRequired.Factory()).directive("swvalidationunique",y.SWValidationUnique.Factory()).directive("swvalidationuniqueornull",v.SWValidationUniqueOrNull.Factory()).service("validationService",m.ValidationService);t.validationmodule=w},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i){return{restrict:"E",scope:{},templateUrl:i.buildPartialsPath(t)+"admincreatesuperuser.html",link:function(t,i,r){t.Account_SetupInitialAdmin=e.newAccount_SetupInitialAdmin()}}}return e.Factory=function(){var t=function(t,i,r){return new e(t,i,r)};return t.$inject=["$hibachi","workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWAdminCreateSuperUser=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){}return e}(),n=function(){function e(e,t){this.workflowPartialsPath=e,this.hibachiPathBuilder=t,this.restrict="AE",this.scope={},this.bindToController={schedule:"="},this.controller=r,this.controllerAs="swSchedulePreview",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath)+"schedulepreview.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder"],t},e.$inject=["workflowPartialsPath","hibachiPathBuilder"],e}();t.SWSchedulePreview=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"A",scope:{workflow:"="},templateUrl:t.buildPartialsPath(e)+"workflowbasic.html",link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowBasic=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"E",scope:{workflowCondition:"=",workflowConditionIndex:"=",workflow:"=",filterPropertiesList:"="},templateUrl:n.buildPartialsPath(r)+"workflowcondition.html",link:function(r,n,o){if(e.debug("workflowCondition init"),e.debug(r),r.selectBreadCrumb=function(e){var t=r.filterItem.breadCrumbs.length-1-e;r.filterItem.breadCrumbs.splice(e+1,t),r.selectedFilterPropertyChanged(null)},r.selectedFilterPropertyChanged=function(t){e.debug("selectedFilterProperty"),e.debug(t),r.selectedFilterProperty=t},angular.isUndefined(r.workflowCondition.breadCrumbs))if(r.workflowCondition.breadCrumbs=[],""===r.workflowCondition.propertyIdentifier)r.workflowCondition.breadCrumbs=[{entityAlias:r.workflow.data.workflowObject,cfc:r.workflow.data.workflowObject,propertyIdentifier:r.workflow.data.workflowObject}];else{var s=r.workflowCondition.propertyIdentifier.split(".");s.pop();for(var a in s){var c={entityAlias:s[a],cfc:s[a],propertyIdentifier:s[a]};r.workflowCondition.breadCrumbs.push(c)}}else angular.forEach(r.workflowCondition.breadCrumbs,function(e,n){if(angular.isUndefined(r.filterPropertiesList[e.propertyIdentifier]))t.getFilterPropertiesByBaseEntityName(e.cfc,!0).then(function(t){i.setPropertiesList(t,e.propertyIdentifier),r.filterPropertiesList[e.propertyIdentifier]=i.getPropertiesListByBaseEntityAlias(e.propertyIdentifier),i.formatPropertiesList(r.filterPropertiesList[e.propertyIdentifier],e.propertyIdentifier);var n=r.workflowCondition.propertyIdentifier.split(".");if(n.pop(),n=n.join(".").trim(),angular.isDefined(r.filterPropertiesList[n]))for(var o in r.filterPropertiesList[n].data){var s=r.filterPropertiesList[n].data[o];s.propertyIdentifier===r.workflowCondition.propertyIdentifier&&(r.selectedFilterProperty=s,r.selectedFilterProperty.value=r.workflowCondition.value,r.selectedFilterProperty.comparisonOperator=r.workflowCondition.comparisonOperator)}});else{var o=r.workflowCondition.propertyIdentifier.split(".");if(o.pop(),o=o.join(".").trim(),angular.isDefined(r.filterPropertiesList[o]))for(var s in r.filterPropertiesList[o].data){var a=r.filterPropertiesList[o].data[s];a.propertyIdentifier===r.workflowCondition.propertyIdentifier&&(r.selectedFilterProperty=a,r.selectedFilterProperty.value=r.workflowCondition.value,r.selectedFilterProperty.comparisonOperator=r.workflowCondition.comparisonOperator)}}})}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$log","$hibachi","metadataService","workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowCondition=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",templateUrl:t.buildPartialsPath(e)+"workflowconditiongroupitem.html",link:function(e,t,i){}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowConditionGroupItem=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{restrict:"E",scope:{workflowConditionGroupItem:"=",workflowConditionGroup:"=",workflow:"=",filterPropertiesList:"="},templateUrl:r.buildPartialsPath(i)+"workflowconditiongroups.html",link:function(i,r,n){e.debug("workflowconditiongroups init"),i.addWorkflowCondition=function(){e.debug("addWorkflowCondition");var r=t.newWorkflowCondition();t.addWorkflowCondition(i.workflowConditionGroupItem,r)},i.addWorkflowGroupItem=function(){e.debug("addWorkflowGrouptItem");var r=t.newWorkflowConditionGroupItem();t.addWorkflowConditionGroupItem(i.workflowConditionItem,r)}}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["$log","workflowConditionService","workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowConditionGroups=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){return{restrict:"E",scope:{workflowTask:"=",workflowTasks:"="},templateUrl:t.buildPartialsPath(e)+"workflowtask.html",link:function(e,t,i){e.removeWorkflowTask=function(t){t.$$delete().then(function(){t===e.workflowTasks.selectedTask&&delete e.workflowTasks.selectedTask,e.workflowTasks.splice(t.$$index,1);for(var i in e.workflowTasks)e.workflowTasks[i].$$index=i})}}}}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowTask=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){var a=this;this.$log=e,this.$hibachi=t,this.metadataService=i,this.workflowPartialsPath=r,this.hibachiPathBuilder=n,this.collectionConfigService=o,this.observerService=s,this.$log.debug("Workflow Task Actions Init"),this.$log.debug(this.workflowTask),this.openActions=!1,this.observerService.attach(function(e){angular.isDefined(a.emailTemplateCollectionConfig)&&(a.emailTemplateCollectionConfig.clearFilters(),a.emailTemplateCollectionConfig.addFilter("emailTemplateObject",e.value)),angular.isDefined(a.printTemplateCollectionConfig)&&(a.printTemplateCollectionConfig.clearFilters(),a.printTemplateCollectionConfig.addFilter("printTemplateObject",e.value))},"WorkflowWorkflowObjectOnChange");var c=function(e){"email"===e.data.actionType?e.$$getEmailTemplate():"print"===e.data.actionType&&e.$$getPrintTemplate()};this.getWorkflowTaskActions=function(){angular.isUndefined(a.workflowTask.data.workflowTaskActions)?a.workflowTask.$$getWorkflowTaskActions().then(function(){a.workflowTaskActions=a.workflowTask.data.workflowTaskActions,angular.forEach(a.workflowTaskActions,function(e){c(e)}),a.$log.debug(a.workflowTaskActions)}):a.workflowTaskActions=a.workflowTask.data.workflowTaskActions,angular.isUndefined(a.workflowTask.data.workflowTaskActions)&&(a.workflowTask.data.workflowTaskActions=[],a.workflowTaskActions=a.workflowTask.data.workflowTaskActions)},this.getWorkflowTaskActions(),this.saveWorkflowTaskAction=function(e,t){a.$log.debug("Context: "+t),a.$log.debug("saving task action and parent task"),a.$log.debug(e),a.workflowTaskActions.selectedTaskAction.$$save().then(function(){e.$$save,"add"==t?(a.$log.debug("Save and New"),a.addWorkflowTaskAction(e),a.finished=!1):"finish"==t&&(a.finished=!0),a.workflowTask.data.workflow.$$save()},function(e){angular.element('a[href="/##j-basic-2"]').click()})},this.setHidden=function(e){angular.isObject(e)||(e={}),angular.isUndefined(e.hidden)?e.hidden=!1:(a.$log.debug("setHidden()","Setting Hide Value To "+!e.hidden),e.hidden=!e.hidden)},this.addWorkflowTaskAction=function(e){var t=a.workflowTask.$$addWorkflowTaskAction();a.selectWorkflowTaskAction(t),a.$log.debug(a.workflow)},this.selectWorkflowTaskAction=function(e){a.$log.debug("Selecting new task action for editing: "),a.$log.debug(e),a.finished=!1,a.workflowTaskActions.selectedTaskAction=void 0,a.$hibachi.getFilterPropertiesByBaseEntityName(a.workflowTask.data.workflow.data.workflowObject,!0).then(function(t){a.filterPropertiesList={baseEntityName:a.workflowTask.data.workflow.data.workflowObject,baseEntityAlias:"_"+a.workflowTask.data.workflow.data.workflowObject},a.metadataService.setPropertiesList(t,a.workflowTask.data.workflow.data.workflowObject),a.filterPropertiesList[a.workflowTask.data.workflow.data.workflowObject]=a.metadataService.getPropertiesListByBaseEntityAlias(a.workflowTask.data.workflow.data.workflowObject),a.metadataService.formatPropertiesList(a.filterPropertiesList[a.workflowTask.data.workflow.data.workflowObject],a.workflowTask.data.workflow.data.workflowObject),a.workflowTaskActions.selectedTaskAction=e,a.emailTemplateSelected=a.workflowTaskActions.selectedTaskAction.data.emailTemplate?a.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateName:"",a.emailTemplateCollectionConfig=a.collectionConfigService.newCollectionConfig("EmailTemplate"),a.emailTemplateCollectionConfig.setDisplayProperties("emailTemplateID,emailTemplateName"),a.emailTemplateCollectionConfig.addFilter("emailTemplateObject",a.workflowTask.data.workflow.data.workflowObject),a.printTemplateSelected=a.workflowTaskActions.selectedTaskAction.data.printTemplate?a.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateName:"",a.printTemplateCollectionConfig=a.collectionConfigService.newCollectionConfig("PrintTemplate"),a.printTemplateCollectionConfig.setDisplayProperties("printTemplateID,printTemplateName"),a.printTemplateCollectionConfig.addFilter("printTemplateObject",a.workflowTask.data.workflow.data.workflowObject)})},this.deleteEntity=function(e){a.removeWorkflowTaskAction(e)},this.removeWorkflowTaskAction=function(e){e.$$delete().then(function(){e===a.workflowTaskActions.selectedTaskAction&&delete a.workflowTaskActions.selectedTaskAction,a.$log.debug("removeWorkflowTaskAction"),a.$log.debug(e),a.workflowTaskActions.splice(e.$$actionIndex,1);for(var t in a.workflowTaskActions)a.workflowTaskActions[t].$$actionIndex=t})},this.searchProcess={name:""},this.showProcessOptions=!1,this.processOptions=[],this.getProcessOptions=function(e){a.processOptions.length||a.$hibachi.getProcessOptions(e).then(function(e){a.processOptions=e.data}),a.showProcessOptions=!0},this.selectProcess=function(e){a.workflowTaskActions.selectedTaskAction.data.processMethod=e.value,a.searchProcess.name=e.value,a.workflowTaskActions.selectedTaskAction.forms.selectedTaskAction.$setDirty(),a.showProcessOptions=!1},this.selectEmailTemplate=function(e){if(angular.isDefined(a.workflowTaskActions.selectedTaskAction.data.emailTemplate))a.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateID=e.emailTemplateID;else{var t=a.$hibachi.newEmailTemplate();t.data.emailTemplateID=e.emailTemplateID,a.workflowTaskActions.selectedTaskAction.$$setEmailTemplate(t)}},this.selectPrintTemplate=function(e){if(angular.isDefined(a.workflowTaskActions.selectedTaskAction.data.printTemplate))a.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateID=e.printTemplateID;else{var t=a.$hibachi.newPrintTemplate();t.data.printTemplateID=e.printTemplateID,a.workflowTaskActions.selectedTaskAction.$$setPrintTemplate(t)}}}return e}(),n=function(){function e(e,t){this.workflowPartialsPath=e,this.hibachiPathBuilder=t,this.restrict="AE",this.scope={},this.bindToController={workflowTask:"="},this.controller=r,this.controllerAs="swWorkflowTaskActions",this.link=function(e,t,i){},this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath)+"workflowtaskactions.html"}return e.Factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder"],t},e.$inject=["workflowPartialsPath","hibachiPathBuilder"],e}();t.SWWorkflowTaskActions=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n){return{restrict:"A",scope:{workflow:"="},templateUrl:n.buildPartialsPath(r)+"workflowtasks.html",link:function(o,s,a){function c(t,i){e.debug("SwWorkflowTasks :"+t+" : "+i)}o.workflowPartialsPath=n.buildPartialsPath(r),o.propertiesList={},o.getWorkflowTasks=function(){if(c("getWorkflowTasks","Retrieving items"),c("getWorkflowTasks","Workflow Tasks"),e.debug(o.workflowTasks),!o.workflow.$$isPersisted())return o.workflow.data.workflowTasks=[],void(o.workflowTasks=o.workflow.data.workflowTasks);angular.isUndefined(o.workflow.data.workflowTasks)?o.workflow.$$getWorkflowTasks().then(function(){o.workflowTasks=o.workflow.data.workflowTasks}):(c("getWorkflowTasks","Retrieving cached Items"),o.workflowTasks=o.workflow.data.workflowTasks),angular.isUndefined(o.workflow.data.workflowTasks)&&(c("getWorkflowTasks","workflowTasks is undefined."),o.workflow.data.workflowTasks=[],o.workflowTasks=o.workflow.data.workflowTasks)},o.getWorkflowTasks(),o.setHidden=function(e){!angular.isObject(e)||angular.isUndefined(e.hidden)?e.hidden=!1:(c("setHidden()","Setting Hide Value To "+!e.hidden),e.hidden=!e.hidden)},o.addWorkflowTask=function(){var e=o.workflow.$$addWorkflowTask();c("var newWorkflowTask",e),o.selectWorkflowTask(e)},o.$watch("workflowTasks.selectedTask.data.workflow.data.workflowObject",function(e,t){c("scope.$watch","Change Detected "+e+" from "+t),e!==t&&angular.isDefined(o.workflowTasks.selectedTask)&&(c("scope.$watch","Change to "+e),o.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityAlias="_"+e.charAt(0).toLowerCase()+e.slice(1),o.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityName=e)}),o.saveWorkflowTask=function(e,t){o.workflowTasks.selectedTask.$$save().then(function(e){o.done=!0,delete o.workflowTasks.selectedTask,"add"===t?(o.addWorkflowTask(),o.finished=!0):"finish"==t&&(o.finished=!1),delete o.workflow.data.workflowTasks,o.getWorkflowTasks(),o.workflow.$$save()},function(e){})},o.selectWorkflowTask=function(r){o.done=!1,e.debug(r),o.finished=!1,o.workflowTasks.selectedTask=void 0,t.getFilterPropertiesByBaseEntityName(o.workflow.data.workflowObject,!0).then(function(e){o.filterPropertiesList={baseEntityName:o.workflow.data.workflowObject,baseEntityAlias:"_"+o.workflow.data.workflowObject},i.setPropertiesList(e,o.workflow.data.workflowObject),o.filterPropertiesList[o.workflow.data.workflowObject]=i.getPropertiesListByBaseEntityAlias(o.workflow.data.workflowObject),i.formatPropertiesList(o.filterPropertiesList[o.workflow.data.workflowObject],o.workflow.data.workflowObject),o.workflowTasks.selectedTask=r})},o.softRemoveTask=function(e){e===o.workflowTasks.selectedTask&&delete o.workflowTasks.selectedTask,o.removeIndexFromTasks(e.$$index),o.reindexTaskList()},o.hardRemoveTask=function(e){e.$$delete().then(function(){e===o.workflowTasks.selectedTask&&delete o.workflowTasks.selectedTask,o.removeIndexFromTasks(e.$$index),o.reindexTaskList()})},o.deleteEntity=function(e){o.hardRemoveTask(e)},o.reindexTaskList=function(){for(var e in o.workflowTasks)c("ReIndexing the list",e),o.workflowTasks[e].$$index=e},o.removeIndexFromTasks=function(e){c("RemoveIndexFromTasks",e),o.workflowTasks.splice(e,1)}}}}return e.Factory=function(){var t=function(t,i,r,n,o){return new e(t,i,r,n,o)};return t.$inject=["$log","$hibachi","metadataService","workflowPartialsPath","hibachiPathBuilder"],t},e}();t.SWWorkflowTasks=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s){return{restrict:"A",replace:!0,scope:{workflowTrigger:"=",workflowTriggers:"="},templateUrl:o.buildPartialsPath(n)+"workflowtrigger.html",link:function(n,o,a){n.selectWorkflowTrigger=function(e){n.done=!1,n.finished=!1,n.workflowTriggers.selectedTrigger=void 0,t.getFilterPropertiesByBaseEntityName(n.workflowTrigger.data.workflow.data.workflowObject,!0).then(function(t){n.filterPropertiesList={baseEntityName:n.workflowTrigger.data.workflow.data.workflowObject,baseEntityAlias:"_"+n.workflowTrigger.data.workflow.data.workflowObject},r.setPropertiesList(t,n.workflowTrigger.data.workflow.data.workflowObject),n.filterPropertiesList[n.workflowTrigger.data.workflow.data.workflowObject]=r.getPropertiesListByBaseEntityAlias(n.workflowTrigger.data.workflow.data.workflowObject),r.formatPropertiesList(n.filterPropertiesList[n.workflowTrigger.data.workflow.data.workflowObject],n.workflowTrigger.data.workflow.data.workflowObject),n.workflowTriggers.selectedTrigger=e})},n.executingTrigger=!1,n.executeWorkflowTrigger=function(r){if(!n.executingTrigger){if(!r.data.workflow.data.workflowTasks||!r.data.workflow.data.workflowTasks.length){var o=i.newAlert();return o.msg="You don't have any Task yet!",o.type="error",o.fade=!0,void i.addAlert(o)}n.executingTrigger=!0;var a=t.getConfig(),c=a.baseURL+"/index.cfm/?"+a.action+"=api:workflow.executeScheduleWorkflowTrigger&workflowTriggerID="+r.data.workflowTriggerID+"&x="+s.createID();e.get(c).finally(function(){n.executingTrigger=!1;var e=i.newAlert();e.msg="Task Triggered Successfully. Check History for Status",e.type="success",e.fade=!0,i.addAlert(e)})}},n.deleteEntity=function(e,t){n.deleteTrigger(e,t)},n.deleteTrigger=function(e,i){t.saveEntity("WorkflowTrigger",e.data.workflowTriggerID,{},"Delete").then(function(e){n.workflowTriggers.splice(i,1)})}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a){return new e(t,i,r,n,o,s,a)};return t.$inject=["$http","$hibachi","alertService","metadataService","workflowPartialsPath","hibachiPathBuilder","utilityService"],t},e}();t.SWWorkflowTrigger=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r){return{restrict:"A",scope:{workflow:"="},templateUrl:t.buildPartialsPath(e)+"workflowtriggerhistory.html",link:function(e,t,n){i.workflowID=e.workflow.data.workflowID,e.workflowTriggerHistoryCollection=r.newCollectionConfig("WorkflowTriggerHistory"),e.workflowTriggerHistoryCollection.addFilter("workflowTrigger.workflow.workflowID",i.workflowID,"="),e.workflowTriggerHistoryCollection.addDisplayProperty("workflowTrigger.triggerType"),e.workflowTriggerHistoryCollection.addDisplayProperty("response"),e.workflowTriggerHistoryCollection.addDisplayProperty("endTime"),e.workflowTriggerHistoryCollection.addDisplayProperty("startTime"),e.workflowTriggerHistoryCollection.addDisplayProperty("successFlag")}}}return e.Factory=function(){var t=function(t,i,r,n){return new e(t,i,r,n)};return t.$inject=["workflowPartialsPath","hibachiPathBuilder","$rootScope","collectionConfigService"],t},e}();t.SWWorkflowTriggerHistory=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t,i,r,n,o,s,a){return{restrict:"E",scope:{workflow:"="},templateUrl:n.buildPartialsPath(t)+"workflowtriggers.html",link:function(t,n,c,l){t.schedule={},t.$watch("workflowTriggers.selectedTrigger",function(e,i){void 0!==e&&e!==i&&("Schedule"==e.data.triggerType?(angular.isDefined(e.data.schedule)&&(t.schedule.selectedName=e.data.schedule.data.scheduleName,t.selectSchedule(e.data.schedule.data)),angular.isDefined(e.data.scheduleCollection)&&(t.selectedCollection=e.data.scheduleCollection.data.collectionName)):t.searchEvent.name=t.workflowTriggers.selectedTrigger.triggerEventTitle)}),t.collectionCollectionConfig=o.newCollectionConfig("Collection"),t.collectionCollectionConfig.setDisplayProperties("collectionID,collectionName"),t.collectionCollectionConfig.addFilter("collectionObject",t.workflow.data.workflowObject),r.attach(function(e){t.collectionCollectionConfig.clearFilters(),t.collectionCollectionConfig.addFilter("collectionObject",e.value),t.eventOptions=[]},"WorkflowWorkflowObjectOnChange"),t.scheduleCollectionConfig=o.newCollectionConfig("Schedule"),t.scheduleCollectionConfig.setDisplayProperties("scheduleID,scheduleName,daysOfMonthToRun,daysOfWeekToRun,recuringType,frequencyStartTime,frequencyEndTime,frequencyInterval"),t.daysOfweek=[],t.daysOfMonth=[],t.$id="swWorkflowTriggers",t.getWorkflowTriggers=function(){if(!t.workflow.$$isPersisted())return t.workflow.data.workflowTriggers=[],void(t.workflowTriggers=t.workflow.data.workflowTriggers);angular.isUndefined(t.workflow.data.workflowTriggers)?t.workflow.$$getWorkflowTriggers().then(function(){t.workflowTriggers=t.workflow.data.workflowTriggers,angular.isUndefined(t.workflow.data.workflowTriggers)&&(t.workflow.data.workflowTriggers=[],t.workflowTriggers=t.workflow.data.workflowTriggers),angular.forEach(t.workflowTriggers,function(e,t){"Schedule"===e.data.triggerType&&(e.$$getSchedule(),e.$$getScheduleCollection())})}):t.workflowTriggers=t.workflow.data.workflowTriggers},t.getWorkflowTriggers(),t.showCollections=!1,t.collections=[],t.searchEvent={name:""},t.showEventOptions=!1,t.eventOptions=[],t.getEventOptions=function(i){t.eventOptions.length||e.getEventOptions(i).then(function(e){t.eventOptions=e.data}),t.showEventOptions=!t.showEventOptions},t.saveWorkflowTrigger=function(e){t.workflowTriggers.selectedTrigger.$$isPersisted()||t.workflowTriggers.selectedTrigger.$$setWorkflow(t.workflow),t.workflowTriggers.selectedTrigger.$$save().then(function(){t.showEventOptions=!0,t.searchEvent={name:""},t.schedule.selectedName="",t.schedulePreview={},"add"==e?t.addWorkflowTrigger():"finish"==e&&(t.workflowTriggers.selectedTrigger=void 0),t.workflow.$$save()})},t.closeTrigger=function(){t.workflowTriggers.selectedTrigger.$$isPersisted()||t.workflowTriggers.selectedTrigger.$$setWorkflow(),t.workflowTriggers.selectedTrigger=void 0},t.selectEvent=function(e){t.workflowTriggers.selectedTrigger.data.triggerEventTitle=e.name,t.workflowTriggers.selectedTrigger.data.triggerEvent=e.value,e.entityName==t.workflow.data.workflowObject?t.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier="":t.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier=e.entityName,t.searchEvent.name=e.name,t.showEventOptions=!1,r.notifyById("pullBindings","WorkflowTriggertriggerEventpullBindings").then(function(){}),r.notifyById("pullBindings","WorkflowTriggertriggerEventTitlepullBindings").then(function(){})},t.selectCollection=function(e){t.workflowTriggers.selectedTrigger.data.scheduleCollection=e,t.showCollections=!1},t.removeWorkflowTrigger=function(e){e===t.workflowTriggers.selectedTrigger&&delete t.workflowTriggers.selectedTrigger,t.workflowTriggers.splice(e.$$index,1)},t.setAsEvent=function(e){e.$$isPersisted()||(e.data.saveTriggerHistoryFlag=0)},t.setAsSchedule=function(e){e.$$isPersisted()||(e.data.saveTriggerHistoryFlag=1)},t.addWorkflowTrigger=function(){var i=e.newWorkflowTrigger();t.workflowTriggers.selectedTrigger=i},t.addNewSchedule=function(){t.createSchedule=!0,t.scheduleEntity=e.newSchedule()},t.saveSchedule=function(){"weekly"==t.scheduleEntity.data.recuringType?t.scheduleEntity.data.daysOfWeekToRun=t.daysOfweek.filter(Number).join():"monthly"==t.scheduleEntity.data.recuringType&&(t.scheduleEntity.data.daysOfMonthToRun=t.daysOfMonth.filter(Number).join()),t.scheduleEntity.$$save().then(function(e){t.schedule.selectedName=angular.copy(t.scheduleEntity.data.scheduleName),t.selectSchedule(angular.copy(t.scheduleEntity.data)),i.resetForm(t.scheduleEntity.forms.scheduleForm),t.createSchedule=!1},function(){})},t.selectCollection=function(i){if(void 0===i)return void t.workflowTriggers.selectedTrigger.$$setScheduleCollection();if(angular.isDefined(t.workflowTriggers.selectedTrigger.data.scheduleCollection))t.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID=i.collectionID,t.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionName=i.collectionName;else{var r=e.newCollection();r.data.collectionID=i.collectionID,r.data.collectionName=i.collectionName,t.workflowTriggers.selectedTrigger.$$setScheduleCollection(r)}},t.viewCollection=function(){angular.isDefined(t.workflowTriggers.selectedTrigger.data.scheduleCollection)&&a.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"Collection",entityId:t.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID,readOnly:!0})},t.selectSchedule=function(i){if(void 0===i)return t.schedulePreview={},void t.workflowTriggers.selectedTrigger.$$setSchedule();if(t.schedulePreview=s.buildSchedulePreview(i,6),angular.isDefined(t.workflowTriggers.selectedTrigger.data.schedule))t.workflowTriggers.selectedTrigger.data.schedule.data.scheduleID=i.scheduleID,t.workflowTriggers.selectedTrigger.data.schedule.data.scheduleName=i.scheduleName;else{var r=e.newSchedule();r.data.scheduleID=i.scheduleID,r.data.scheduleName=i.scheduleName,t.workflowTriggers.selectedTrigger.$$setSchedule(r)}}}}}return e.Factory=function(){var t=function(t,i,r,n,o,s,a,c){return new e(t,i,r,n,o,s,a,c)};return t.$inject=["$hibachi","workflowPartialsPath","formService","observerService","hibachiPathBuilder","collectionConfigService","scheduleService","dialogService"],t},e}();t.SWWorkflowTriggers=r},function(e,t,i){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),o=function(e){function t(t,i,r){var n=e.call(this,t,i,r,"Schedule")||this;return n.$injector=t,n.$hibachi=i,n.utilityService=r,n.schedulePreview={},n.clearSchedulePreview=function(){n.schedulePreview={}},n.addSchedulePreviewItem=function(e,t){void 0===t&&(t=!0);var i=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],r=["January","February","March","April","May","June","July","August","September","October","November","December"],o=["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"],s=e.getMonth()+1+"-"+e.getDate()+"-"+e.getFullYear();void 0===n.schedulePreview[s]&&(n.schedulePreview[s]={day:e.getDate(),month:t?r[e.getMonth()]:o[e.getMonth()],year:e.getFullYear(),weekday:i[e.getDay()],times:[]}),n.schedulePreview[s].times.push(e.toLocaleTimeString())},n.buildSchedulePreview=function(e,t){void 0===t&&(t=10),n.clearSchedulePreview();var i=new Date(Date.parse(e.frequencyStartTime)),r=!!e.frequencyEndTime.trim()&&new Date(Date.parse(e.frequencyEndTime)),o=new Date,s=new Date;s.setHours(i.getHours()),s.setMinutes(i.getMinutes()),s.setSeconds(i.getSeconds());var a=[];if("weekly"==e.recuringType&&(a=e.daysOfWeekToRun.toString().split(","),!a.length||""==e.daysOfWeekToRun.toString().trim()))return n.schedulePreview;if("monthly"==e.recuringType&&(a=e.daysOfMonthToRun.toString().split(","),!a.length||!e.daysOfWeekToRun||""==e.daysOfWeekToRun.toString().trim()))return n.schedulePreview;for(var c=0,l=0;!(c>=t||l>=500);l++){var u=e.frequencyInterval&&e.frequencyInterval.toString().trim()?e.frequencyInterval*l*6e4:24*l*60*60*1e3,d=new Date(s.getTime()+u);if(!(d<o)){if("weekly"==e.recuringType){if(-1==a.indexOf((d.getDay()+1).toString()))continue}else if("monthly"==e.recuringType&&-1==a.indexOf(d.getDate().toString()))continue;r?n.utilityService.minutesOfDay(i)<=n.utilityService.minutesOfDay(d)&&n.utilityService.minutesOfDay(r)>=n.utilityService.minutesOfDay(d)&&(n.addSchedulePreviewItem(d),c++):(n.addSchedulePreviewItem(d),c++)}}return n.schedulePreview},n}return r(t,e),t}(n.BaseEntityService);t.ScheduleService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.propertyIdentifer="",this.comparisonOperator="",this.value="",this.displayPropertyIdentifier="",this.$$disabled=!1,this.$$isClosed=!0,this.$$isNew=!0}return e}();t.WorkflowCondition=r;var n=function(){function e(){this.workflowConditionGroup=[]}return e}();t.WorkflowConditionGroupItem=n;var o=function(){function e(e,t,i){var o=this;this.$log=e,this.newWorkflowCondition=function(){return new r},this.addWorkflowCondition=function(e,t){o.$log.debug("addWorkflowCondition"),o.$log.debug(e),o.$log.debug(t),e.length>=1&&(t.logicalOperator="AND"),e.push(t)},this.newWorkflowConditionGroupItem=function(){return new n},this.addWorkflowConditionGroupItem=function(e,t){e.push(t)}}return e.$inject=["$log","$hibachi","alertService"],e}();t.WorkflowConditionService=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(684),n=i(683),o=i(671),s=i(673),a=i(674),c=i(675),l=i(676),u=i(677),d=i(678),f=i(679),p=i(680),h=i(682),g=i(681),y=i(672),v=angular.module("hibachi.workflow",["hibachi.collection"]).config(function(){}).constant("workflowPartialsPath","workflow/components/").service("workflowConditionService",r.WorkflowConditionService).service("scheduleService",n.ScheduleService).directive("swAdminCreateSuperUser",o.SWAdminCreateSuperUser.Factory()).directive("swWorkflowBasic",s.SWWorkflowBasic.Factory()).directive("swWorkflowCondition",a.SWWorkflowCondition.Factory()).directive("swWorkflowConditionGroupItem",c.SWWorkflowConditionGroupItem.Factory()).directive("swWorkflowConditionGroups",l.SWWorkflowConditionGroups.Factory()).directive("swWorkflowTask",u.SWWorkflowTask.Factory()).directive("swWorkflowTaskActions",d.SWWorkflowTaskActions.Factory()).directive("swWorkflowTasks",f.SWWorkflowTasks.Factory()).directive("swWorkflowTrigger",p.SWWorkflowTrigger.Factory()).directive("swWorkflowTriggers",h.SWWorkflowTriggers.Factory()).directive("swWorkflowTriggerHistory",g.SWWorkflowTriggerHistory.Factory()).directive("swSchedulePreview",y.SWSchedulePreview.Factory());t.workflowmodule=v},function(e,t,i){e.exports=i(173)}],[686]);
=======
var hibachi=webpackJsonphibachi([0],[function(module,exports,__webpack_require__){"use strict";var root_1=__webpack_require__(9),toSubscriber_1=__webpack_require__(483),observable_1=__webpack_require__(36),pipe_1=__webpack_require__(59),Observable=function(){function Observable(subscribe){this._isScalar=!1,subscribe&&(this._subscribe=subscribe)}return Observable.prototype.lift=function(operator){var observable=new Observable;return observable.source=this,observable.operator=operator,observable},Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator,sink=toSubscriber_1.toSubscriber(observerOrNext,error,complete);if(operator?operator.call(sink,this.source):sink.add(this.source||!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink)),sink.syncErrorThrowable&&(sink.syncErrorThrowable=!1,sink.syncErrorThrown))throw sink.syncErrorValue;return sink},Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){sink.syncErrorThrown=!0,sink.syncErrorValue=err,sink.error(err)}},Observable.prototype.forEach=function(next,PromiseCtor){var _this=this;if(PromiseCtor||(root_1.root.Rx&&root_1.root.Rx.config&&root_1.root.Rx.config.Promise?PromiseCtor=root_1.root.Rx.config.Promise:root_1.root.Promise&&(PromiseCtor=root_1.root.Promise)),!PromiseCtor)throw new Error("no Promise impl found");return new PromiseCtor(function(resolve,reject){var subscription;subscription=_this.subscribe(function(value){if(subscription)try{next(value)}catch(err){reject(err),subscription.unsubscribe()}else next(value)},reject,resolve)})},Observable.prototype._subscribe=function(subscriber){return this.source.subscribe(subscriber)},Observable.prototype[observable_1.observable]=function(){return this},Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++)operations[_i-0]=arguments[_i];return 0===operations.length?this:pipe_1.pipeFromArray(operations)(this)},Observable.prototype.toPromise=function(PromiseCtor){var _this=this;if(PromiseCtor||(root_1.root.Rx&&root_1.root.Rx.config&&root_1.root.Rx.config.Promise?PromiseCtor=root_1.root.Rx.config.Promise:root_1.root.Promise&&(PromiseCtor=root_1.root.Promise)),!PromiseCtor)throw new Error("no Promise impl found");return new PromiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x},function(err){return reject(err)},function(){return resolve(value)})})},Observable.create=function(subscribe){return new Observable(subscribe)},Observable}();exports.Observable=Observable},function(module,exports,__webpack_require__){"use strict";function isTrustedSubscriber(obj){return obj instanceof Subscriber||"syncErrorThrowable"in obj&&obj[rxSubscriber_1.rxSubscriber]}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isFunction_1=__webpack_require__(41),Subscription_1=__webpack_require__(5),Observer_1=__webpack_require__(67),rxSubscriber_1=__webpack_require__(37),Subscriber=function(_super){function Subscriber(destinationOrNext,error,complete){switch(_super.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=Observer_1.empty;break;case 1:if(!destinationOrNext){this.destination=Observer_1.empty;break}if("object"==typeof destinationOrNext){if(isTrustedSubscriber(destinationOrNext)){var trustedSubscriber=destinationOrNext[rxSubscriber_1.rxSubscriber]();this.syncErrorThrowable=trustedSubscriber.syncErrorThrowable,this.destination=trustedSubscriber,trustedSubscriber.add(this)}else this.syncErrorThrowable=!0,this.destination=new SafeSubscriber(this,destinationOrNext);break}default:this.syncErrorThrowable=!0,this.destination=new SafeSubscriber(this,destinationOrNext,error,complete)}}return __extends(Subscriber,_super),Subscriber.prototype[rxSubscriber_1.rxSubscriber]=function(){return this},Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);return subscriber.syncErrorThrowable=!1,subscriber},Subscriber.prototype.next=function(value){this.isStopped||this._next(value)},Subscriber.prototype.error=function(err){this.isStopped||(this.isStopped=!0,this._error(err))},Subscriber.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},Subscriber.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,_super.prototype.unsubscribe.call(this))},Subscriber.prototype._next=function(value){this.destination.next(value)},Subscriber.prototype._error=function(err){this.destination.error(err),this.unsubscribe()},Subscriber.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},Subscriber.prototype._unsubscribeAndRecycle=function(){var _a=this,_parent=_a._parent,_parents=_a._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=_parent,this._parents=_parents,this},Subscriber}(Subscription_1.Subscription);exports.Subscriber=Subscriber;var SafeSubscriber=function(_super){function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){_super.call(this),this._parentSubscriber=_parentSubscriber;var next,context=this;isFunction_1.isFunction(observerOrNext)?next=observerOrNext:observerOrNext&&(next=observerOrNext.next,error=observerOrNext.error,complete=observerOrNext.complete,observerOrNext!==Observer_1.empty&&(context=Object.create(observerOrNext),isFunction_1.isFunction(context.unsubscribe)&&this.add(context.unsubscribe.bind(context)),context.unsubscribe=this.unsubscribe.bind(this))),this._context=context,this._next=next,this._error=error,this._complete=complete}return __extends(SafeSubscriber,_super),SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;_parentSubscriber.syncErrorThrowable?this.__tryOrSetError(_parentSubscriber,this._next,value)&&this.unsubscribe():this.__tryOrUnsub(this._next,value)}},SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._error)_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,this._error,err),this.unsubscribe()):(this.__tryOrUnsub(this._error,err),this.unsubscribe());else{if(!_parentSubscriber.syncErrorThrowable)throw this.unsubscribe(),err;_parentSubscriber.syncErrorValue=err,_parentSubscriber.syncErrorThrown=!0,this.unsubscribe()}}},SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function(){return _this._complete.call(_this._context)};_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,wrappedComplete),this.unsubscribe()):(this.__tryOrUnsub(wrappedComplete),this.unsubscribe())}else this.unsubscribe()}},SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value)}catch(err){throw this.unsubscribe(),err}},SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){try{fn.call(this._context,value)}catch(err){return parent.syncErrorValue=err,parent.syncErrorThrown=!0,!0}return!1},SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null,this._parentSubscriber=null,_parentSubscriber.unsubscribe()},SafeSubscriber}(Subscriber)},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),OuterSubscriber=function(_super){function OuterSubscriber(){_super.apply(this,arguments)}return __extends(OuterSubscriber,_super),OuterSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue)},OuterSubscriber.prototype.notifyError=function(error,innerSub){this.destination.error(error)},OuterSubscriber.prototype.notifyComplete=function(innerSub){this.destination.complete()},OuterSubscriber}(Subscriber_1.Subscriber);exports.OuterSubscriber=OuterSubscriber},function(module,exports,__webpack_require__){"use strict";function subscribeToResult(outerSubscriber,result,outerValue,outerIndex){var destination=new InnerSubscriber_1.InnerSubscriber(outerSubscriber,outerValue,outerIndex);if(destination.closed)return null;if(result instanceof Observable_1.Observable)return result._isScalar?(destination.next(result.value),destination.complete(),null):(destination.syncErrorThrowable=!0,result.subscribe(destination));if(isArrayLike_1.isArrayLike(result)){for(var i=0,len=result.length;i<len&&!destination.closed;i++)destination.next(result[i]);destination.closed||destination.complete()}else{if(isPromise_1.isPromise(result))return result.then(function(value){destination.closed||(destination.next(value),destination.complete())},function(err){return destination.error(err)}).then(null,function(err){root_1.root.setTimeout(function(){throw err})}),destination;if(result&&"function"==typeof result[iterator_1.iterator])for(var iterator=result[iterator_1.iterator]();;){var item=iterator.next();if(item.done){destination.complete();break}if(destination.next(item.value),destination.closed)break}else if(result&&"function"==typeof result[observable_1.observable]){var obs=result[observable_1.observable]();if("function"==typeof obs.subscribe)return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber,outerValue,outerIndex));destination.error(new TypeError("Provided object does not correctly implement Symbol.observable"))}else{var value=isObject_1.isObject(result)?"an invalid object":"'"+result+"'",msg="You provided "+value+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.";destination.error(new TypeError(msg))}}return null}var root_1=__webpack_require__(9),isArrayLike_1=__webpack_require__(164),isPromise_1=__webpack_require__(166),isObject_1=__webpack_require__(165),Observable_1=__webpack_require__(0),iterator_1=__webpack_require__(24),InnerSubscriber_1=__webpack_require__(190),observable_1=__webpack_require__(36);exports.subscribeToResult=subscribeToResult},function(module,exports,__webpack_require__){"use strict";var AsyncAction_1=__webpack_require__(22),AsyncScheduler_1=__webpack_require__(23);exports.async=new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction)},function(module,exports,__webpack_require__){"use strict";function flattenUnsubscriptionErrors(errors){return errors.reduce(function(errs,err){return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError?err.errors:err)},[])}var isArray_1=__webpack_require__(11),isObject_1=__webpack_require__(165),isFunction_1=__webpack_require__(41),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),UnsubscriptionError_1=__webpack_require__(161),Subscription=function(){function Subscription(unsubscribe){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,unsubscribe&&(this._unsubscribe=unsubscribe)}return Subscription.prototype.unsubscribe=function(){var errors,hasErrors=!1;if(!this.closed){var _a=this,_parent=_a._parent,_parents=_a._parents,_unsubscribe=_a._unsubscribe,_subscriptions=_a._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var index=-1,len=_parents?_parents.length:0;_parent;)_parent.remove(this),_parent=++index<len&&_parents[index]||null;if(isFunction_1.isFunction(_unsubscribe)){var trial=tryCatch_1.tryCatch(_unsubscribe).call(this);trial===errorObject_1.errorObject&&(hasErrors=!0,errors=errors||(errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError?flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors):[errorObject_1.errorObject.e]))}if(isArray_1.isArray(_subscriptions))for(index=-1,len=_subscriptions.length;++index<len;){var sub=_subscriptions[index];if(isObject_1.isObject(sub)){var trial=tryCatch_1.tryCatch(sub.unsubscribe).call(sub);if(trial===errorObject_1.errorObject){hasErrors=!0,errors=errors||[];var err=errorObject_1.errorObject.e;err instanceof UnsubscriptionError_1.UnsubscriptionError?errors=errors.concat(flattenUnsubscriptionErrors(err.errors)):errors.push(err)}}}if(hasErrors)throw new UnsubscriptionError_1.UnsubscriptionError(errors)}},Subscription.prototype.add=function(teardown){if(!teardown||teardown===Subscription.EMPTY)return Subscription.EMPTY;if(teardown===this)return this;var subscription=teardown;switch(typeof teardown){case"function":subscription=new Subscription(teardown);case"object":if(subscription.closed||"function"!=typeof subscription.unsubscribe)return subscription;if(this.closed)return subscription.unsubscribe(),subscription;if("function"!=typeof subscription._addParent){var tmp=subscription;subscription=new Subscription,subscription._subscriptions=[tmp]}break;default:throw new Error("unrecognized teardown "+teardown+" added to Subscription.")}return(this._subscriptions||(this._subscriptions=[])).push(subscription),subscription._addParent(this),subscription},Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);-1!==subscriptionIndex&&subscriptions.splice(subscriptionIndex,1)}},Subscription.prototype._addParent=function(parent){var _a=this,_parent=_a._parent,_parents=_a._parents;_parent&&_parent!==parent?_parents?-1===_parents.indexOf(parent)&&_parents.push(parent):this._parents=[parent]:this._parent=parent},Subscription.EMPTY=function(empty){return empty.closed=!0,empty}(new Subscription),Subscription}();exports.Subscription=Subscription},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),Subscriber_1=__webpack_require__(1),Subscription_1=__webpack_require__(5),ObjectUnsubscribedError_1=__webpack_require__(39),SubjectSubscription_1=__webpack_require__(68),rxSubscriber_1=__webpack_require__(37),SubjectSubscriber=function(_super){function SubjectSubscriber(destination){_super.call(this,destination),this.destination=destination}return __extends(SubjectSubscriber,_super),SubjectSubscriber}(Subscriber_1.Subscriber);exports.SubjectSubscriber=SubjectSubscriber;var Subject=function(_super){function Subject(){_super.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return __extends(Subject,_super),Subject.prototype[rxSubscriber_1.rxSubscriber]=function(){return new SubjectSubscriber(this)},Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);return subject.operator=operator,subject},Subject.prototype.next=function(value){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;if(!this.isStopped)for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].next(value)},Subject.prototype.error=function(err){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=err,this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].error(err);this.observers.length=0},Subject.prototype.complete=function(){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].complete();this.observers.length=0},Subject.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},Subject.prototype._trySubscribe=function(subscriber){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return _super.prototype._trySubscribe.call(this,subscriber)},Subject.prototype._subscribe=function(subscriber){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return this.hasError?(subscriber.error(this.thrownError),Subscription_1.Subscription.EMPTY):this.isStopped?(subscriber.complete(),Subscription_1.Subscription.EMPTY):(this.observers.push(subscriber),new SubjectSubscription_1.SubjectSubscription(this,subscriber))},Subject.prototype.asObservable=function(){var observable=new Observable_1.Observable;return observable.source=this,observable},Subject.create=function(destination,source){return new AnonymousSubject(destination,source)},Subject}(Observable_1.Observable);exports.Subject=Subject;var AnonymousSubject=function(_super){function AnonymousSubject(destination,source){_super.call(this),this.destination=destination,this.source=source}return __extends(AnonymousSubject,_super),AnonymousSubject.prototype.next=function(value){var destination=this.destination;destination&&destination.next&&destination.next(value)},AnonymousSubject.prototype.error=function(err){var destination=this.destination;destination&&destination.error&&this.destination.error(err)},AnonymousSubject.prototype.complete=function(){var destination=this.destination;destination&&destination.complete&&this.destination.complete()},AnonymousSubject.prototype._subscribe=function(subscriber){return this.source?this.source.subscribe(subscriber):Subscription_1.Subscription.EMPTY},AnonymousSubject}(Subject);exports.AnonymousSubject=AnonymousSubject},function(module,exports,__webpack_require__){"use strict";exports.errorObject={e:{}}},function(module,exports,__webpack_require__){"use strict";function tryCatcher(){try{return tryCatchTarget.apply(this,arguments)}catch(e){return errorObject_1.errorObject.e=e,errorObject_1.errorObject}}function tryCatch(fn){return tryCatchTarget=fn,tryCatcher}var tryCatchTarget,errorObject_1=__webpack_require__(7);exports.tryCatch=tryCatch},function(module,exports,__webpack_require__){"use strict";(function(global){var __window="undefined"!=typeof window&&window,__self="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,__global=void 0!==global&&global,_root=__window||__global||__self;exports.root=_root,function(){if(!_root)throw new Error("RxJS could not find any global context (window, self, global)")}()}).call(exports,__webpack_require__(42))},function(module,exports,__webpack_require__){"use strict";function isScheduler(value){return value&&"function"==typeof value.schedule}exports.isScheduler=isScheduler},function(module,exports,__webpack_require__){"use strict";exports.isArray=Array.isArray||function(x){return x&&"number"==typeof x.length}},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),ScalarObservable_1=__webpack_require__(43),EmptyObservable_1=__webpack_require__(13),isScheduler_1=__webpack_require__(10),ArrayObservable=function(_super){function ArrayObservable(array,scheduler){_super.call(this),this.array=array,this.scheduler=scheduler,scheduler||1!==array.length||(this._isScalar=!0,this.value=array[0])}return __extends(ArrayObservable,_super),ArrayObservable.create=function(array,scheduler){return new ArrayObservable(array,scheduler)},ArrayObservable.of=function(){for(var array=[],_i=0;_i<arguments.length;_i++)array[_i-0]=arguments[_i];var scheduler=array[array.length-1];isScheduler_1.isScheduler(scheduler)?array.pop():scheduler=null;var len=array.length;return len>1?new ArrayObservable(array,scheduler):1===len?new ScalarObservable_1.ScalarObservable(array[0],scheduler):new EmptyObservable_1.EmptyObservable(scheduler)},ArrayObservable.dispatch=function(state){var array=state.array,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count)return void subscriber.complete();subscriber.next(array[index]),subscriber.closed||(state.index=index+1,this.schedule(state))},ArrayObservable.prototype._subscribe=function(subscriber){var array=this.array,count=array.length,scheduler=this.scheduler;if(scheduler)return scheduler.schedule(ArrayObservable.dispatch,0,{array:array,index:0,count:count,subscriber:subscriber});for(var i=0;i<count&&!subscriber.closed;i++)subscriber.next(array[i]);subscriber.complete()},ArrayObservable}(Observable_1.Observable);exports.ArrayObservable=ArrayObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),EmptyObservable=function(_super){function EmptyObservable(scheduler){_super.call(this),this.scheduler=scheduler}return __extends(EmptyObservable,_super),EmptyObservable.create=function(scheduler){return new EmptyObservable(scheduler)},EmptyObservable.dispatch=function(arg){arg.subscriber.complete()},EmptyObservable.prototype._subscribe=function(subscriber){var scheduler=this.scheduler;if(scheduler)return scheduler.schedule(EmptyObservable.dispatch,0,{subscriber:subscriber});subscriber.complete()},EmptyObservable}(Observable_1.Observable);exports.EmptyObservable=EmptyObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseobject_1=__webpack_require__(168),Entities=__webpack_require__(573),Processes=__webpack_require__(579),BaseEntityService=function(_super){function BaseEntityService($injector,$hibachi,utilityService,baseObjectName,objectName){var _this=_super.call(this,$injector)||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this.baseObjectName=baseObjectName,_this.objectName=objectName,_this.newEntity=function(baseObjectName,objectName){return objectName||(objectName=baseObjectName),_this.newObject("Entity",baseObjectName,objectName)},_this.newProcessObject=function(baseObjectName,objectName){return objectName||(objectName=baseObjectName),_this.newObject("Process",baseObjectName,objectName)},_this.newObject=function(type,baseObjectName,objectName){objectName||(objectName=baseObjectName);var baseObject=_this.$hibachi.getEntityDefinition(baseObjectName);if(baseObject){var Barrell={};if("Entity"===type?Barrell=Entities:"Process"===type&&(Barrell=Processes),Barrell[objectName]){_this.utilityService.extend(Barrell[objectName],baseObject);var entity=new Barrell[objectName](_this.$injector)}else var entity=new baseObject;return entity}return{}},_this.utilityService=utilityService,_this.$hibachi=$hibachi,_this.$injector=$injector,_this.objectName||(_this.objectName=_this.baseObjectName),_this["new"+_this.objectName]=function(){return _this.newEntity(_this.baseObjectName,_this.objectName)},_this}return __extends(BaseEntityService,_super),BaseEntityService}(baseobject_1.BaseObject);exports.BaseEntityService=BaseEntityService},function(module,exports,__webpack_require__){"use strict";function multicast(subjectOrSubjectFactory,selector){return function(source){var subjectFactory;if(subjectFactory="function"==typeof subjectOrSubjectFactory?subjectOrSubjectFactory:function(){return subjectOrSubjectFactory},"function"==typeof selector)return source.lift(new MulticastOperator(subjectFactory,selector));var connectable=Object.create(source,ConnectableObservable_1.connectableObservableDescriptor);return connectable.source=source,connectable.subjectFactory=subjectFactory,connectable}}var ConnectableObservable_1=__webpack_require__(69);exports.multicast=multicast;var MulticastOperator=function(){function MulticastOperator(subjectFactory,selector){this.subjectFactory=subjectFactory,this.selector=selector}return MulticastOperator.prototype.call=function(subscriber,source){var selector=this.selector,subject=this.subjectFactory(),subscription=selector(subject).subscribe(subscriber);return subscription.add(source.subscribe(subject)),subscription},MulticastOperator}();exports.MulticastOperator=MulticastOperator},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var hibachiinterceptor_1=__webpack_require__(590),hibachipathbuilder_1=__webpack_require__(591),cacheservice_1=__webpack_require__(583),publicservice_1=__webpack_require__(602),accountservice_1=__webpack_require__(582),cartservice_1=__webpack_require__(584),draggableservice_1=__webpack_require__(585),utilityservice_1=__webpack_require__(609),selectionservice_1=__webpack_require__(606),observerservice_1=__webpack_require__(599),orderservice_1=__webpack_require__(601),orderpaymentservice_1=__webpack_require__(600),formservice_1=__webpack_require__(589),filterservice_1=__webpack_require__(588),expandableservice_1=__webpack_require__(587),metadataservice_1=__webpack_require__(598),rbkeyservice_1=__webpack_require__(603),typeaheadservice_1=__webpack_require__(608),hibachiservice_1=__webpack_require__(593),historyservice_1=__webpack_require__(596),localstorageservice_1=__webpack_require__(597),hibachiservicedecorator_1=__webpack_require__(594),hibachiscope_1=__webpack_require__(592),requestservice_1=__webpack_require__(604),scopeservice_1=__webpack_require__(605),skuservice_1=__webpack_require__(607),hibachivalidationservice_1=__webpack_require__(595),entityservice_1=__webpack_require__(586),globalsearch_1=__webpack_require__(564),percentage_1=__webpack_require__(567),entityrbkey_1=__webpack_require__(566),swtrim_1=__webpack_require__(568),swunique_1=__webpack_require__(569),datefilter_1=__webpack_require__(565),swactioncaller_1=__webpack_require__(525),swtypeaheadsearch_1=__webpack_require__(562),swtypeaheadinputfield_1=__webpack_require__(559),swtypeaheadmultiselect_1=__webpack_require__(560),swtypeaheadsearchlineitem_1=__webpack_require__(563),swtypeaheadremoveselection_1=__webpack_require__(561),swcollectionconfig_1=__webpack_require__(529),swcollectionfilter_1=__webpack_require__(530),swcollectionorderby_1=__webpack_require__(531),swcollectioncolumn_1=__webpack_require__(528),swactioncallerdropdown_1=__webpack_require__(526),swcolumnsorter_1=__webpack_require__(532),swconfirm_1=__webpack_require__(533),swdraggable_1=__webpack_require__(535),swdraggablecontainer_1=__webpack_require__(536),swentityactionbar_1=__webpack_require__(537),swentityactionbarbuttongroup_1=__webpack_require__(538),swexpandablerecord_1=__webpack_require__(539),swexpiringsessionnotifier_1=__webpack_require__(540),swgravatar_1=__webpack_require__(542),swlogin_1=__webpack_require__(545),swmodallauncher_1=__webpack_require__(546),swmodalwindow_1=__webpack_require__(547),swnumbersonly_1=__webpack_require__(548),swloading_1=__webpack_require__(544),swscrolltrigger_1=__webpack_require__(553),swtabgroup_1=__webpack_require__(557),swtabcontent_1=__webpack_require__(556),swtooltip_1=__webpack_require__(558),swrbkey_1=__webpack_require__(552),swoptions_1=__webpack_require__(549),swselection_1=__webpack_require__(554),swclickoutside_1=__webpack_require__(527),swdirective_1=__webpack_require__(534),swexportaction_1=__webpack_require__(541),swhref_1=__webpack_require__(543),swprocesscaller_1=__webpack_require__(551),swsortable_1=__webpack_require__(555),sworderbycontrols_1=__webpack_require__(550),alert_module_1=__webpack_require__(60),dialog_module_1=__webpack_require__(171),coremodule=angular.module("hibachi.core",["ngAnimate","ngRoute","ngSanitize","ui.bootstrap",alert_module_1.alertmodule.name,dialog_module_1.dialogmodule.name]).config(["$compileProvider","$httpProvider","$logProvider","$filterProvider","$provide","hibachiPathBuilder","appConfig",function($compileProvider,$httpProvider,$logProvider,$filterProvider,$provide,hibachiPathBuilder,appConfig){hibachiPathBuilder.setBaseURL(appConfig.baseURL),hibachiPathBuilder.setBasePartialsPath("/org/Hibachi/client/src/"),appConfig.debugFlag||(appConfig.debugFlag=!1),$logProvider.debugEnabled(appConfig.debugFlag),$filterProvider.register("likeFilter",function(){return function(text){if(angular.isDefined(text)&&angular.isString(text))return text.replace(new RegExp("%","g"),"")}}),$filterProvider.register("truncate",function(){return function(input,chars,breakOnWord){if(isNaN(chars))return input;if(chars<=0)return"";if(input&&input.length>chars){if(input=input.substring(0,chars),breakOnWord)for(;" "===input.charAt(input.length-1);)input=input.substr(0,input.length-1);else{var lastspace=input.lastIndexOf(" ");-1!==lastspace&&(input=input.substr(0,lastspace))}return input+"..."}return input}}),$filterProvider.register("pretruncate",function(){return function(input,chars,breakOnWord){if(isNaN(chars))return input;if(chars<=0)return"";if(input&&input.length>chars){if(input=input.slice("-"+chars),breakOnWord)for(;" "===input.charAt(input.length-1);)input=input.substr(0,input.length-1);else{var lastspace=input.lastIndexOf(" ");-1!==lastspace&&(input=input.substr(0,lastspace))}return"..."+input}return input}}),hibachiPathBuilder.setBaseURL(appConfig.baseURL),hibachiPathBuilder.setBasePartialsPath("/org/Hibachi/client/src/"),$httpProvider.interceptors.push("hibachiInterceptor"),$httpProvider.useApplyAsync(!0)}]).run(["$rootScope","$hibachi","$route","$location",function($rootScope,$hibachi,$route,$location){$rootScope.buildUrl=$hibachi.buildUrl;var original=$location.path;$location.path=function(path,reload){if(!1===reload)var lastRoute=$route.current,un=$rootScope.$on("$locationChangeSuccess",function(){$route.current=lastRoute,un()});return original.apply($location,[path])}}]).constant("hibachiPathBuilder",new hibachipathbuilder_1.HibachiPathBuilder).constant("corePartialsPath","core/components/").service("cacheService",cacheservice_1.CacheService).service("publicService",publicservice_1.PublicService).service("utilityService",utilityservice_1.UtilityService).service("selectionService",selectionservice_1.SelectionService).service("observerService",observerservice_1.ObserverService).service("draggableService",draggableservice_1.DraggableService).service("expandableService",expandableservice_1.ExpandableService).service("filterService",filterservice_1.FilterService).service("formService",formservice_1.FormService).service("historyService",historyservice_1.HistoryService).service("metadataService",metadataservice_1.MetaDataService).service("rbkeyService",rbkeyservice_1.RbKeyService).service("typeaheadService",typeaheadservice_1.TypeaheadService).provider("$hibachi",hibachiservice_1.$Hibachi).decorator("$hibachi",hibachiservicedecorator_1.HibachiServiceDecorator).service("hibachiInterceptor",hibachiinterceptor_1.HibachiInterceptor.Factory()).service("hibachiScope",hibachiscope_1.HibachiScope).service("scopeService",scopeservice_1.ScopeService).service("skuService",skuservice_1.SkuService).service("localStorageService",localstorageservice_1.LocalStorageService).service("requestService",requestservice_1.RequestService).service("accountService",accountservice_1.AccountService).service("orderService",orderservice_1.OrderService).service("orderPaymentService",orderpaymentservice_1.OrderPaymentService).service("cartService",cartservice_1.CartService).service("hibachiValidationService",hibachivalidationservice_1.HibachiValidationService).service("entityService",entityservice_1.EntityService).controller("globalSearch",globalsearch_1.GlobalSearchController).filter("dateFilter",["$filter",datefilter_1.DateFilter.Factory]).filter("percentage",[percentage_1.PercentageFilter.Factory]).filter("trim",[swtrim_1.SWTrim.Factory]).filter("entityRBKey",["rbkeyService",entityrbkey_1.EntityRBKey.Factory]).filter("swdate",["$filter",datefilter_1.DateFilter.Factory]).filter("unique",[swunique_1.SWUnique.Factory]).directive("swCollectionConfig",swcollectionconfig_1.SWCollectionConfig.Factory()).directive("swCollectionColumn",swcollectioncolumn_1.SWCollectionColumn.Factory()).directive("swCollectionFilter",swcollectionfilter_1.SWCollectionFilter.Factory()).directive("swCollectionOrderBy",swcollectionorderby_1.SWCollectionOrderBy.Factory()).directive("swTypeaheadSearch",swtypeaheadsearch_1.SWTypeaheadSearch.Factory()).directive("swTypeaheadInputField",swtypeaheadinputfield_1.SWTypeaheadInputField.Factory()).directive("swTypeaheadMultiselect",swtypeaheadmultiselect_1.SWTypeaheadMultiselect.Factory()).directive("swTypeaheadSearchLineItem",swtypeaheadsearchlineitem_1.SWTypeaheadSearchLineItem.Factory()).directive("swTypeaheadRemoveSelection",swtypeaheadremoveselection_1.SWTypeaheadRemoveSelection.Factory()).directive("swActionCaller",swactioncaller_1.SWActionCaller.Factory()).directive("swActionCallerDropdown",swactioncallerdropdown_1.SWActionCallerDropdown.Factory()).directive("swColumnSorter",swcolumnsorter_1.SWColumnSorter.Factory()).directive("swConfirm",swconfirm_1.SWConfirm.Factory()).directive("swEntityActionBar",swentityactionbar_1.SWEntityActionBar.Factory()).directive("swEntityActionBarButtonGroup",swentityactionbarbuttongroup_1.SWEntityActionBarButtonGroup.Factory()).directive("swExpandableRecord",swexpandablerecord_1.SWExpandableRecord.Factory()).directive("swExpiringSessionNotifier",swexpiringsessionnotifier_1.SWExpiringSessionNotifier.Factory()).directive("swGravatar",swgravatar_1.SWGravatar.Factory()).directive("swDraggable",swdraggable_1.SWDraggable.Factory()).directive("swDraggableContainer",swdraggablecontainer_1.SWDraggableContainer.Factory()).directive("swLogin",swlogin_1.SWLogin.Factory()).directive("swModalLauncher",swmodallauncher_1.SWModalLauncher.Factory()).directive("swModalWindow",swmodalwindow_1.SWModalWindow.Factory()).directive("swNumbersOnly",swnumbersonly_1.SWNumbersOnly.Factory()).directive("swLoading",swloading_1.SWLoading.Factory()).directive("swScrollTrigger",swscrolltrigger_1.SWScrollTrigger.Factory()).directive("swRbkey",swrbkey_1.SWRbKey.Factory()).directive("swOptions",swoptions_1.SWOptions.Factory()).directive("swSelection",swselection_1.SWSelection.Factory()).directive("swTabGroup",swtabgroup_1.SWTabGroup.Factory()).directive("swTabContent",swtabcontent_1.SWTabContent.Factory()).directive("swTooltip",swtooltip_1.SWTooltip.Factory()).directive("swClickOutside",swclickoutside_1.SWClickOutside.Factory()).directive("swDirective",swdirective_1.SWDirective.Factory()).directive("swExportAction",swexportaction_1.SWExportAction.Factory()).directive("swHref",swhref_1.SWHref.Factory()).directive("swProcessCaller",swprocesscaller_1.SWProcessCaller.Factory()).directive("sw:sortable",swsortable_1.SWSortable.Factory()).directive("swOrderByControls",sworderbycontrols_1.SWOrderByControls.Factory());exports.coremodule=coremodule},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),Notification=function(){function Notification(kind,value,error){this.kind=kind,this.value=value,this.error=error,this.hasValue="N"===kind}return Notification.prototype.observe=function(observer){switch(this.kind){case"N":return observer.next&&observer.next(this.value);case"E":return observer.error&&observer.error(this.error);case"C":return observer.complete&&observer.complete()}},Notification.prototype.do=function(next,error,complete){switch(this.kind){case"N":return next&&next(this.value);case"E":return error&&error(this.error);case"C":return complete&&complete()}},Notification.prototype.accept=function(nextOrObserver,error,complete){return nextOrObserver&&"function"==typeof nextOrObserver.next?this.observe(nextOrObserver):this.do(nextOrObserver,error,complete)},Notification.prototype.toObservable=function(){switch(this.kind){case"N":return Observable_1.Observable.of(this.value);case"E":return Observable_1.Observable.throw(this.error);case"C":return Observable_1.Observable.empty()}throw new Error("unexpected notification kind value")},Notification.createNext=function(value){return void 0!==value?new Notification("N",value):Notification.undefinedValueNotification},Notification.createError=function(err){return new Notification("E",void 0,err)},Notification.createComplete=function(){return Notification.completeNotification},Notification.completeNotification=new Notification("C"),Notification.undefinedValueNotification=new Notification("N",void 0),Notification}();exports.Notification=Notification},function(module,exports,__webpack_require__){"use strict";function concat(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return 1===observables.length||2===observables.length&&isScheduler_1.isScheduler(observables[1])?from_1.from(observables[0]):concatAll_1.concatAll()(of_1.of.apply(void 0,observables))}var isScheduler_1=__webpack_require__(10),of_1=__webpack_require__(74),from_1=__webpack_require__(73),concatAll_1=__webpack_require__(46);exports.concat=concat},function(module,exports,__webpack_require__){"use strict";function map(project,thisArg){return function(source){if("function"!=typeof project)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return source.lift(new MapOperator(project,thisArg))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.map=map;var MapOperator=function(){function MapOperator(project,thisArg){this.project=project,this.thisArg=thisArg}return MapOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapSubscriber(subscriber,this.project,this.thisArg))},MapOperator}();exports.MapOperator=MapOperator;var MapSubscriber=function(_super){function MapSubscriber(destination,project,thisArg){_super.call(this,destination),this.project=project,this.count=0,this.thisArg=thisArg||this}return __extends(MapSubscriber,_super),MapSubscriber.prototype._next=function(value){var result;try{result=this.project.call(this.thisArg,value,this.count++)}catch(err){return void this.destination.error(err)}this.destination.next(result)},MapSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function mergeMap(project,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),function(source){return"number"==typeof resultSelector&&(concurrent=resultSelector,resultSelector=null),source.lift(new MergeMapOperator(project,resultSelector,concurrent))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2);exports.mergeMap=mergeMap;var MergeMapOperator=function(){function MergeMapOperator(project,resultSelector,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),this.project=project,this.resultSelector=resultSelector,this.concurrent=concurrent}return MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.resultSelector,this.concurrent))},MergeMapOperator}();exports.MergeMapOperator=MergeMapOperator;var MergeMapSubscriber=function(_super){function MergeMapSubscriber(destination,project,resultSelector,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),_super.call(this,destination),this.project=project,this.resultSelector=resultSelector,this.concurrent=concurrent,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return __extends(MergeMapSubscriber,_super),MergeMapSubscriber.prototype._next=function(value){this.active<this.concurrent?this._tryNext(value):this.buffer.push(value)},MergeMapSubscriber.prototype._tryNext=function(value){var result,index=this.index++;try{result=this.project(value,index)}catch(err){return void this.destination.error(err)}this.active++,this._innerSub(result,value,index)},MergeMapSubscriber.prototype._innerSub=function(ish,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index))},MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete()},MergeMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.resultSelector?this._notifyResultSelector(outerValue,innerValue,outerIndex,innerIndex):this.destination.next(innerValue)},MergeMapSubscriber.prototype._notifyResultSelector=function(outerValue,innerValue,outerIndex,innerIndex){var result;try{result=this.resultSelector(outerValue,innerValue,outerIndex,innerIndex)}catch(err){return void this.destination.error(err)}this.destination.next(result)},MergeMapSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub),this.active--,buffer.length>0?this._next(buffer.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},MergeMapSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.MergeMapSubscriber=MergeMapSubscriber},function(module,exports,__webpack_require__){"use strict";function reduce(accumulator,seed){return arguments.length>=2?function(source){return pipe_1.pipe(scan_1.scan(accumulator,seed),takeLast_1.takeLast(1),defaultIfEmpty_1.defaultIfEmpty(seed))(source)}:function(source){return pipe_1.pipe(scan_1.scan(function(acc,value,index){return accumulator(acc,value,index+1)}),takeLast_1.takeLast(1))(source)}}var scan_1=__webpack_require__(54),takeLast_1=__webpack_require__(56),defaultIfEmpty_1=__webpack_require__(48),pipe_1=__webpack_require__(59);exports.reduce=reduce},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},root_1=__webpack_require__(9),Action_1=__webpack_require__(464),AsyncAction=function(_super){function AsyncAction(scheduler,work){_super.call(this,scheduler,work),this.scheduler=scheduler,this.work=work,this.pending=!1}return __extends(AsyncAction,_super),AsyncAction.prototype.schedule=function(state,delay){if(void 0===delay&&(delay=0),this.closed)return this;this.state=state,this.pending=!0;var id=this.id,scheduler=this.scheduler;return null!=id&&(this.id=this.recycleAsyncId(scheduler,id,delay)),this.delay=delay,this.id=this.id||this.requestAsyncId(scheduler,this.id,delay),this},AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),root_1.root.setInterval(scheduler.flush.bind(scheduler,this),delay)},AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&this.delay===delay&&!1===this.pending?id:root_1.root.clearInterval(id)&&void 0||void 0},AsyncAction.prototype.execute=function(state,delay){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var error=this._execute(state,delay);if(error)return error;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},AsyncAction.prototype._execute=function(state,delay){var errored=!1,errorValue=void 0;try{this.work(state)}catch(e){errored=!0,errorValue=!!e&&e||new Error(e)}if(errored)return this.unsubscribe(),errorValue},AsyncAction.prototype._unsubscribe=function(){var id=this.id,scheduler=this.scheduler,actions=scheduler.actions,index=actions.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==index&&actions.splice(index,1),null!=id&&(this.id=this.recycleAsyncId(scheduler,id,null)),this.delay=null},AsyncAction}(Action_1.Action);exports.AsyncAction=AsyncAction},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Scheduler_1=__webpack_require__(192),AsyncScheduler=function(_super){function AsyncScheduler(){_super.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return __extends(AsyncScheduler,_super),AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active)return void actions.push(action);var error;this.active=!0;do{if(error=action.execute(action.state,action.delay))break}while(action=actions.shift());if(this.active=!1,error){for(;action=actions.shift();)action.unsubscribe();throw error}},AsyncScheduler}(Scheduler_1.Scheduler);exports.AsyncScheduler=AsyncScheduler},function(module,exports,__webpack_require__){"use strict";function symbolIteratorPonyfill(root){var Symbol=root.Symbol;if("function"==typeof Symbol)return Symbol.iterator||(Symbol.iterator=Symbol("iterator polyfill")),Symbol.iterator;var Set_1=root.Set;if(Set_1&&"function"==typeof(new Set_1)["@@iterator"])return"@@iterator";var Map_1=root.Map;if(Map_1)for(var keys=Object.getOwnPropertyNames(Map_1.prototype),i=0;i<keys.length;++i){var key=keys[i];if("entries"!==key&&"size"!==key&&Map_1.prototype[key]===Map_1.prototype.entries)return key}return"@@iterator"}var root_1=__webpack_require__(9);exports.symbolIteratorPonyfill=symbolIteratorPonyfill,exports.iterator=symbolIteratorPonyfill(root_1.root),exports.$$iterator=exports.iterator},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},ArgumentOutOfRangeError=function(_super){function ArgumentOutOfRangeError(){var err=_super.call(this,"argument out of range");this.name=err.name="ArgumentOutOfRangeError",this.stack=err.stack,this.message=err.message}return __extends(ArgumentOutOfRangeError,_super),ArgumentOutOfRangeError}(Error);exports.ArgumentOutOfRangeError=ArgumentOutOfRangeError},function(module,exports,__webpack_require__){"use strict";function isNumeric(val){return!isArray_1.isArray(val)&&val-parseFloat(val)+1>=0}var isArray_1=__webpack_require__(11);exports.isNumeric=isNumeric},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var basetransient_1=__webpack_require__(61),BaseEntity=function(_super){function BaseEntity($injector){return _super.call(this,$injector)||this}return __extends(BaseEntity,_super),BaseEntity}(basetransient_1.BaseTransient);exports.BaseEntity=BaseEntity},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),Subscription_1=__webpack_require__(5),AsyncSubject=function(_super){function AsyncSubject(){_super.apply(this,arguments),this.value=null,this.hasNext=!1,this.hasCompleted=!1}return __extends(AsyncSubject,_super),AsyncSubject.prototype._subscribe=function(subscriber){return this.hasError?(subscriber.error(this.thrownError),Subscription_1.Subscription.EMPTY):this.hasCompleted&&this.hasNext?(subscriber.next(this.value),subscriber.complete(),Subscription_1.Subscription.EMPTY):_super.prototype._subscribe.call(this,subscriber)},AsyncSubject.prototype.next=function(value){this.hasCompleted||(this.value=value,this.hasNext=!0)},AsyncSubject.prototype.error=function(error){this.hasCompleted||_super.prototype.error.call(this,error)},AsyncSubject.prototype.complete=function(){this.hasCompleted=!0,this.hasNext&&_super.prototype.next.call(this,this.value),_super.prototype.complete.call(this)},AsyncSubject}(Subject_1.Subject);exports.AsyncSubject=AsyncSubject},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),queue_1=__webpack_require__(157),Subscription_1=__webpack_require__(5),observeOn_1=__webpack_require__(33),ObjectUnsubscribedError_1=__webpack_require__(39),SubjectSubscription_1=__webpack_require__(68),ReplaySubject=function(_super){function ReplaySubject(bufferSize,windowTime,scheduler){void 0===bufferSize&&(bufferSize=Number.POSITIVE_INFINITY),void 0===windowTime&&(windowTime=Number.POSITIVE_INFINITY),_super.call(this),this.scheduler=scheduler,this._events=[],this._bufferSize=bufferSize<1?1:bufferSize,this._windowTime=windowTime<1?1:windowTime}return __extends(ReplaySubject,_super),ReplaySubject.prototype.next=function(value){var now=this._getNow();this._events.push(new ReplayEvent(now,value)),this._trimBufferThenGetEvents(),_super.prototype.next.call(this,value)},ReplaySubject.prototype._subscribe=function(subscriber){var subscription,_events=this._trimBufferThenGetEvents(),scheduler=this.scheduler;if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;this.hasError?subscription=Subscription_1.Subscription.EMPTY:this.isStopped?subscription=Subscription_1.Subscription.EMPTY:(this.observers.push(subscriber),subscription=new SubjectSubscription_1.SubjectSubscription(this,subscriber)),scheduler&&subscriber.add(subscriber=new observeOn_1.ObserveOnSubscriber(subscriber,scheduler));for(var len=_events.length,i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i].value);return this.hasError?subscriber.error(this.thrownError):this.isStopped&&subscriber.complete(),subscription},ReplaySubject.prototype._getNow=function(){return(this.scheduler||queue_1.queue).now()},ReplaySubject.prototype._trimBufferThenGetEvents=function(){for(var now=this._getNow(),_bufferSize=this._bufferSize,_windowTime=this._windowTime,_events=this._events,eventsCount=_events.length,spliceCount=0;spliceCount<eventsCount&&!(now-_events[spliceCount].time<_windowTime);)spliceCount++;return eventsCount>_bufferSize&&(spliceCount=Math.max(spliceCount,eventsCount-_bufferSize)),spliceCount>0&&_events.splice(0,spliceCount),_events},ReplaySubject}(Subject_1.Subject);exports.ReplaySubject=ReplaySubject;var ReplayEvent=function(){function ReplayEvent(time,value){this.time=time,this.value=value}return ReplayEvent}()},function(module,exports,__webpack_require__){"use strict";function merge(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];var concurrent=Number.POSITIVE_INFINITY,scheduler=null,last=observables[observables.length-1];return isScheduler_1.isScheduler(last)?(scheduler=observables.pop(),observables.length>1&&"number"==typeof observables[observables.length-1]&&(concurrent=observables.pop())):"number"==typeof last&&(concurrent=observables.pop()),null===scheduler&&1===observables.length&&observables[0]instanceof Observable_1.Observable?observables[0]:mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables,scheduler))}var Observable_1=__webpack_require__(0),ArrayObservable_1=__webpack_require__(12),isScheduler_1=__webpack_require__(10),mergeAll_1=__webpack_require__(32);exports.merge=merge},function(module,exports,__webpack_require__){"use strict";function combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];var project=null;return"function"==typeof observables[observables.length-1]&&(project=observables.pop()),1===observables.length&&isArray_1.isArray(observables[0])&&(observables=observables[0].slice()),function(source){return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)),new CombineLatestOperator(project))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},ArrayObservable_1=__webpack_require__(12),isArray_1=__webpack_require__(11),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3),none={};exports.combineLatest=combineLatest;var CombineLatestOperator=function(){function CombineLatestOperator(project){this.project=project}return CombineLatestOperator.prototype.call=function(subscriber,source){return source.subscribe(new CombineLatestSubscriber(subscriber,this.project))},CombineLatestOperator}();exports.CombineLatestOperator=CombineLatestOperator;var CombineLatestSubscriber=function(_super){function CombineLatestSubscriber(destination,project){_super.call(this,destination),this.project=project,this.active=0,this.values=[],this.observables=[]}return __extends(CombineLatestSubscriber,_super),CombineLatestSubscriber.prototype._next=function(observable){this.values.push(none),this.observables.push(observable)},CombineLatestSubscriber.prototype._complete=function(){var observables=this.observables,len=observables.length;if(0===len)this.destination.complete();else{this.active=len,this.toRespond=len;for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult_1.subscribeToResult(this,observable,observable,i))}}},CombineLatestSubscriber.prototype.notifyComplete=function(unused){0==(this.active-=1)&&this.destination.complete()},CombineLatestSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var values=this.values,oldVal=values[outerIndex],toRespond=this.toRespond?oldVal===none?--this.toRespond:this.toRespond:0;values[outerIndex]=innerValue,0===toRespond&&(this.project?this._tryProject(values):this.destination.next(values.slice()))},CombineLatestSubscriber.prototype._tryProject=function(values){var result;try{result=this.project.apply(this,values)}catch(err){return void this.destination.error(err)}this.destination.next(result)},CombineLatestSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.CombineLatestSubscriber=CombineLatestSubscriber},function(module,exports,__webpack_require__){"use strict";function mergeAll(concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),mergeMap_1.mergeMap(identity_1.identity,null,concurrent)}var mergeMap_1=__webpack_require__(20),identity_1=__webpack_require__(163);exports.mergeAll=mergeAll},function(module,exports,__webpack_require__){"use strict";function observeOn(scheduler,delay){return void 0===delay&&(delay=0),function(source){return source.lift(new ObserveOnOperator(scheduler,delay))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Notification_1=__webpack_require__(17);exports.observeOn=observeOn;var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){void 0===delay&&(delay=0),this.scheduler=scheduler,this.delay=delay}return ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay))},ObserveOnOperator}();exports.ObserveOnOperator=ObserveOnOperator;var ObserveOnSubscriber=function(_super){function ObserveOnSubscriber(destination,scheduler,delay){void 0===delay&&(delay=0),_super.call(this,destination),this.scheduler=scheduler,this.delay=delay}return __extends(ObserveOnSubscriber,_super),ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination),this.unsubscribe()},ObserveOnSubscriber.prototype.scheduleMessage=function(notification){this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)))},ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification_1.Notification.createNext(value))},ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(Notification_1.Notification.createError(err))},ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification_1.Notification.createComplete())},ObserveOnSubscriber}(Subscriber_1.Subscriber);exports.ObserveOnSubscriber=ObserveOnSubscriber;var ObserveOnMessage=function(){function ObserveOnMessage(notification,destination){this.notification=notification,this.destination=destination}return ObserveOnMessage}();exports.ObserveOnMessage=ObserveOnMessage},function(module,exports,__webpack_require__){"use strict";function throttle(durationSelector,config){return void 0===config&&(config=exports.defaultThrottleConfig),function(source){return source.lift(new ThrottleOperator(durationSelector,config.leading,config.trailing))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.defaultThrottleConfig={leading:!0,trailing:!1},exports.throttle=throttle;var ThrottleOperator=function(){function ThrottleOperator(durationSelector,leading,trailing){this.durationSelector=durationSelector,this.leading=leading,this.trailing=trailing}return ThrottleOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleSubscriber(subscriber,this.durationSelector,this.leading,this.trailing))},ThrottleOperator}(),ThrottleSubscriber=function(_super){function ThrottleSubscriber(destination,durationSelector,_leading,_trailing){_super.call(this,destination),this.destination=destination,this.durationSelector=durationSelector,this._leading=_leading,this._trailing=_trailing,this._hasTrailingValue=!1}return __extends(ThrottleSubscriber,_super),ThrottleSubscriber.prototype._next=function(value){if(this.throttled)this._trailing&&(this._hasTrailingValue=!0,this._trailingValue=value);else{var duration=this.tryDurationSelector(value);duration&&this.add(this.throttled=subscribeToResult_1.subscribeToResult(this,duration)),this._leading&&(this.destination.next(value),this._trailing&&(this._hasTrailingValue=!0,this._trailingValue=value))}},ThrottleSubscriber.prototype.tryDurationSelector=function(value){try{return this.durationSelector(value)}catch(err){return this.destination.error(err),null}},ThrottleSubscriber.prototype._unsubscribe=function(){var _a=this,throttled=_a.throttled;_a._trailingValue,_a._hasTrailingValue,_a._trailing;this._trailingValue=null,this._hasTrailingValue=!1,throttled&&(this.remove(throttled),this.throttled=null,throttled.unsubscribe())},ThrottleSubscriber.prototype._sendTrailing=function(){var _a=this,destination=_a.destination,throttled=_a.throttled,_trailing=_a._trailing,_trailingValue=_a._trailingValue,_hasTrailingValue=_a._hasTrailingValue;throttled&&_trailing&&_hasTrailingValue&&(destination.next(_trailingValue),this._trailingValue=null,this._hasTrailingValue=!1)},ThrottleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this._sendTrailing(),this._unsubscribe()},ThrottleSubscriber.prototype.notifyComplete=function(){this._sendTrailing(),this._unsubscribe()},ThrottleSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function zip(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return function(source){return source.lift.call(zipStatic.apply(void 0,[source].concat(observables)))}}function zipStatic(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];var project=observables[observables.length-1];return"function"==typeof project&&observables.pop(),new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project))}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},ArrayObservable_1=__webpack_require__(12),isArray_1=__webpack_require__(11),Subscriber_1=__webpack_require__(1),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3),iterator_1=__webpack_require__(24);exports.zip=zip,exports.zipStatic=zipStatic;var ZipOperator=function(){function ZipOperator(project){this.project=project}return ZipOperator.prototype.call=function(subscriber,source){return source.subscribe(new ZipSubscriber(subscriber,this.project))},ZipOperator}();exports.ZipOperator=ZipOperator;var ZipSubscriber=function(_super){function ZipSubscriber(destination,project,values){void 0===values&&(values=Object.create(null)),_super.call(this,destination),this.iterators=[],this.active=0,this.project="function"==typeof project?project:null,this.values=values}return __extends(ZipSubscriber,_super),ZipSubscriber.prototype._next=function(value){var iterators=this.iterators;isArray_1.isArray(value)?iterators.push(new StaticArrayIterator(value)):"function"==typeof value[iterator_1.iterator]?iterators.push(new StaticIterator(value[iterator_1.iterator]())):iterators.push(new ZipBufferIterator(this.destination,this,value))},ZipSubscriber.prototype._complete=function(){var iterators=this.iterators,len=iterators.length;if(0===len)return void this.destination.complete();this.active=len;for(var i=0;i<len;i++){var iterator=iterators[i];iterator.stillUnsubscribed?this.add(iterator.subscribe(iterator,i)):this.active--}},ZipSubscriber.prototype.notifyInactive=function(){0===--this.active&&this.destination.complete()},ZipSubscriber.prototype.checkIterators=function(){for(var iterators=this.iterators,len=iterators.length,destination=this.destination,i=0;i<len;i++){var iterator=iterators[i];if("function"==typeof iterator.hasValue&&!iterator.hasValue())return}for(var shouldComplete=!1,args=[],i=0;i<len;i++){var iterator=iterators[i],result=iterator.next();if(iterator.hasCompleted()&&(shouldComplete=!0),result.done)return void destination.complete();args.push(result.value)}this.project?this._tryProject(args):destination.next(args),shouldComplete&&destination.complete()},ZipSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args)}catch(err){return void this.destination.error(err)}this.destination.next(result)},ZipSubscriber}(Subscriber_1.Subscriber);exports.ZipSubscriber=ZipSubscriber;var StaticIterator=function(){function StaticIterator(iterator){this.iterator=iterator,this.nextResult=iterator.next()}return StaticIterator.prototype.hasValue=function(){return!0},StaticIterator.prototype.next=function(){var result=this.nextResult;return this.nextResult=this.iterator.next(),result},StaticIterator.prototype.hasCompleted=function(){var nextResult=this.nextResult;return nextResult&&nextResult.done},StaticIterator}(),StaticArrayIterator=function(){function StaticArrayIterator(array){this.array=array,this.index=0,this.length=0,this.length=array.length}return StaticArrayIterator.prototype[iterator_1.iterator]=function(){return this},StaticArrayIterator.prototype.next=function(value){var i=this.index++,array=this.array;return i<this.length?{value:array[i],done:!1}:{value:null,done:!0}},StaticArrayIterator.prototype.hasValue=function(){return this.array.length>this.index},StaticArrayIterator.prototype.hasCompleted=function(){return this.array.length===this.index},StaticArrayIterator}(),ZipBufferIterator=function(_super){function ZipBufferIterator(destination,parent,observable){_super.call(this,destination),this.parent=parent,this.observable=observable,this.stillUnsubscribed=!0,this.buffer=[],this.isComplete=!1}return __extends(ZipBufferIterator,_super),ZipBufferIterator.prototype[iterator_1.iterator]=function(){return this},ZipBufferIterator.prototype.next=function(){var buffer=this.buffer;return 0===buffer.length&&this.isComplete?{value:null,done:!0}:{value:buffer.shift(),done:!1}},ZipBufferIterator.prototype.hasValue=function(){return this.buffer.length>0},ZipBufferIterator.prototype.hasCompleted=function(){return 0===this.buffer.length&&this.isComplete},ZipBufferIterator.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=!0,this.parent.notifyInactive()):this.destination.complete()},ZipBufferIterator.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.buffer.push(innerValue),this.parent.checkIterators()},ZipBufferIterator.prototype.subscribe=function(value,index){return subscribeToResult_1.subscribeToResult(this,this.observable,this,index)},ZipBufferIterator}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function getSymbolObservable(context){var $$observable,Symbol=context.Symbol;return"function"==typeof Symbol?Symbol.observable?$$observable=Symbol.observable:($$observable=Symbol("observable"),Symbol.observable=$$observable):$$observable="@@observable",$$observable}var root_1=__webpack_require__(9);exports.getSymbolObservable=getSymbolObservable,exports.observable=getSymbolObservable(root_1.root),exports.$$observable=exports.observable},function(module,exports,__webpack_require__){"use strict";var root_1=__webpack_require__(9),Symbol=root_1.root.Symbol;exports.rxSubscriber="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("rxSubscriber"):"@@rxSubscriber",exports.$$rxSubscriber=exports.rxSubscriber},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},EmptyError=function(_super){function EmptyError(){var err=_super.call(this,"no elements in sequence");this.name=err.name="EmptyError",this.stack=err.stack,this.message=err.message}return __extends(EmptyError,_super),EmptyError}(Error);exports.EmptyError=EmptyError},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},ObjectUnsubscribedError=function(_super){function ObjectUnsubscribedError(){var err=_super.call(this,"object unsubscribed");this.name=err.name="ObjectUnsubscribedError",this.stack=err.stack,this.message=err.message}return __extends(ObjectUnsubscribedError,_super),ObjectUnsubscribedError}(Error);exports.ObjectUnsubscribedError=ObjectUnsubscribedError},function(module,exports,__webpack_require__){"use strict";function isDate(value){return value instanceof Date&&!isNaN(+value)}exports.isDate=isDate},function(module,exports,__webpack_require__){"use strict";function isFunction(x){return"function"==typeof x}exports.isFunction=isFunction},function(module,exports){var g;g=function(){return this}();try{g=g||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(g=window)}module.exports=g},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),ScalarObservable=function(_super){function ScalarObservable(value,scheduler){_super.call(this),this.value=value,this.scheduler=scheduler,this._isScalar=!0,scheduler&&(this._isScalar=!1)}return __extends(ScalarObservable,_super),ScalarObservable.create=function(value,scheduler){return new ScalarObservable(value,scheduler)},ScalarObservable.dispatch=function(state){var done=state.done,value=state.value,subscriber=state.subscriber;if(done)return void subscriber.complete();subscriber.next(value),subscriber.closed||(state.done=!0,this.schedule(state))},ScalarObservable.prototype._subscribe=function(subscriber){var value=this.value,scheduler=this.scheduler;if(scheduler)return scheduler.schedule(ScalarObservable.dispatch,0,{done:!1,value:value,subscriber:subscriber});subscriber.next(value),subscriber.closed||subscriber.complete()},ScalarObservable}(Observable_1.Observable);exports.ScalarObservable=ScalarObservable},function(module,exports,__webpack_require__){"use strict";function race(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];if(1===observables.length){if(!isArray_1.isArray(observables[0]))return observables[0];observables=observables[0]}return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isArray_1=__webpack_require__(11),ArrayObservable_1=__webpack_require__(12),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.race=race;var RaceOperator=function(){function RaceOperator(){}return RaceOperator.prototype.call=function(subscriber,source){return source.subscribe(new RaceSubscriber(subscriber))},RaceOperator}();exports.RaceOperator=RaceOperator;var RaceSubscriber=function(_super){function RaceSubscriber(destination){_super.call(this,destination),this.hasFirst=!1,this.observables=[],this.subscriptions=[]}return __extends(RaceSubscriber,_super),RaceSubscriber.prototype._next=function(observable){this.observables.push(observable)},RaceSubscriber.prototype._complete=function(){var observables=this.observables,len=observables.length;if(0===len)this.destination.complete();else{for(var i=0;i<len&&!this.hasFirst;i++){var observable=observables[i],subscription=subscribeToResult_1.subscribeToResult(this,observable,observable,i);this.subscriptions&&this.subscriptions.push(subscription),this.add(subscription)}this.observables=null}},RaceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(!this.hasFirst){this.hasFirst=!0;for(var i=0;i<this.subscriptions.length;i++)if(i!==outerIndex){var subscription=this.subscriptions[i];subscription.unsubscribe(),this.remove(subscription)}this.subscriptions=null}this.destination.next(innerValue)},RaceSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.RaceSubscriber=RaceSubscriber},function(module,exports,__webpack_require__){"use strict";function audit(durationSelector){return function(source){return source.lift(new AuditOperator(durationSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.audit=audit;var AuditOperator=function(){function AuditOperator(durationSelector){this.durationSelector=durationSelector}return AuditOperator.prototype.call=function(subscriber,source){return source.subscribe(new AuditSubscriber(subscriber,this.durationSelector))},AuditOperator}(),AuditSubscriber=function(_super){function AuditSubscriber(destination,durationSelector){_super.call(this,destination),this.durationSelector=durationSelector,this.hasValue=!1}return __extends(AuditSubscriber,_super),AuditSubscriber.prototype._next=function(value){if(this.value=value,this.hasValue=!0,!this.throttled){var duration=tryCatch_1.tryCatch(this.durationSelector)(value);if(duration===errorObject_1.errorObject)this.destination.error(errorObject_1.errorObject.e);else{var innerSubscription=subscribeToResult_1.subscribeToResult(this,duration);innerSubscription.closed?this.clearThrottle():this.add(this.throttled=innerSubscription)}}},AuditSubscriber.prototype.clearThrottle=function(){var _a=this,value=_a.value,hasValue=_a.hasValue,throttled=_a.throttled;throttled&&(this.remove(throttled),this.throttled=null,throttled.unsubscribe()),hasValue&&(this.value=null,this.hasValue=!1,this.destination.next(value))},AuditSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex){this.clearThrottle()},AuditSubscriber.prototype.notifyComplete=function(){this.clearThrottle()},AuditSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function concatAll(){return mergeAll_1.mergeAll(1)}var mergeAll_1=__webpack_require__(32);exports.concatAll=concatAll},function(module,exports,__webpack_require__){"use strict";function concatMap(project,resultSelector){return mergeMap_1.mergeMap(project,resultSelector,1)}var mergeMap_1=__webpack_require__(20);exports.concatMap=concatMap},function(module,exports,__webpack_require__){"use strict";function defaultIfEmpty(defaultValue){return void 0===defaultValue&&(defaultValue=null),function(source){return source.lift(new DefaultIfEmptyOperator(defaultValue))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.defaultIfEmpty=defaultIfEmpty;var DefaultIfEmptyOperator=function(){function DefaultIfEmptyOperator(defaultValue){this.defaultValue=defaultValue}return DefaultIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new DefaultIfEmptySubscriber(subscriber,this.defaultValue))},DefaultIfEmptyOperator}(),DefaultIfEmptySubscriber=function(_super){function DefaultIfEmptySubscriber(destination,defaultValue){_super.call(this,destination),this.defaultValue=defaultValue,this.isEmpty=!0}return __extends(DefaultIfEmptySubscriber,_super),DefaultIfEmptySubscriber.prototype._next=function(value){this.isEmpty=!1,this.destination.next(value)},DefaultIfEmptySubscriber.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},DefaultIfEmptySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function distinctUntilChanged(compare,keySelector){return function(source){return source.lift(new DistinctUntilChangedOperator(compare,keySelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7);exports.distinctUntilChanged=distinctUntilChanged;var DistinctUntilChangedOperator=function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare,this.keySelector=keySelector}return DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector))},DistinctUntilChangedOperator}(),DistinctUntilChangedSubscriber=function(_super){function DistinctUntilChangedSubscriber(destination,compare,keySelector){_super.call(this,destination),this.keySelector=keySelector,this.hasKey=!1,"function"==typeof compare&&(this.compare=compare)}return __extends(DistinctUntilChangedSubscriber,_super),DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y},DistinctUntilChangedSubscriber.prototype._next=function(value){var keySelector=this.keySelector,key=value;if(keySelector&&(key=tryCatch_1.tryCatch(this.keySelector)(value))===errorObject_1.errorObject)return this.destination.error(errorObject_1.errorObject.e);var result=!1;if(this.hasKey){if((result=tryCatch_1.tryCatch(this.compare)(this.key,key))===errorObject_1.errorObject)return this.destination.error(errorObject_1.errorObject.e)}else this.hasKey=!0;!1===Boolean(result)&&(this.key=key,this.destination.next(value))},DistinctUntilChangedSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function filter(predicate,thisArg){return function(source){return source.lift(new FilterOperator(predicate,thisArg))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.filter=filter;var FilterOperator=function(){function FilterOperator(predicate,thisArg){this.predicate=predicate,this.thisArg=thisArg}return FilterOperator.prototype.call=function(subscriber,source){return source.subscribe(new FilterSubscriber(subscriber,this.predicate,this.thisArg))},FilterOperator}(),FilterSubscriber=function(_super){function FilterSubscriber(destination,predicate,thisArg){_super.call(this,destination),this.predicate=predicate,this.thisArg=thisArg,this.count=0}return __extends(FilterSubscriber,_super),FilterSubscriber.prototype._next=function(value){var result;try{result=this.predicate.call(this.thisArg,value,this.count++)}catch(err){return void this.destination.error(err)}result&&this.destination.next(value)},FilterSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function find(predicate,thisArg){if("function"!=typeof predicate)throw new TypeError("predicate is not a function");return function(source){return source.lift(new FindValueOperator(predicate,source,!1,thisArg))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.find=find;var FindValueOperator=function(){function FindValueOperator(predicate,source,yieldIndex,thisArg){this.predicate=predicate,this.source=source,this.yieldIndex=yieldIndex,this.thisArg=thisArg}return FindValueOperator.prototype.call=function(observer,source){return source.subscribe(new FindValueSubscriber(observer,this.predicate,this.source,this.yieldIndex,this.thisArg))},FindValueOperator}();exports.FindValueOperator=FindValueOperator;var FindValueSubscriber=function(_super){function FindValueSubscriber(destination,predicate,source,yieldIndex,thisArg){_super.call(this,destination),this.predicate=predicate,this.source=source,this.yieldIndex=yieldIndex,this.thisArg=thisArg,this.index=0}return __extends(FindValueSubscriber,_super),FindValueSubscriber.prototype.notifyComplete=function(value){var destination=this.destination;destination.next(value),destination.complete()},FindValueSubscriber.prototype._next=function(value){var _a=this,predicate=_a.predicate,thisArg=_a.thisArg,index=this.index++;try{predicate.call(thisArg||this,value,index,this.source)&&this.notifyComplete(this.yieldIndex?index:value)}catch(err){this.destination.error(err)}},FindValueSubscriber.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:void 0)},FindValueSubscriber}(Subscriber_1.Subscriber);exports.FindValueSubscriber=FindValueSubscriber},function(module,exports,__webpack_require__){"use strict";function onErrorResumeNext(){for(var nextSources=[],_i=0;_i<arguments.length;_i++)nextSources[_i-0]=arguments[_i];return 1===nextSources.length&&isArray_1.isArray(nextSources[0])&&(nextSources=nextSources[0]),function(source){return source.lift(new OnErrorResumeNextOperator(nextSources))}}function onErrorResumeNextStatic(){for(var nextSources=[],_i=0;_i<arguments.length;_i++)nextSources[_i-0]=arguments[_i];var source=null;return 1===nextSources.length&&isArray_1.isArray(nextSources[0])&&(nextSources=nextSources[0]),source=nextSources.shift(),new FromObservable_1.FromObservable(source,null).lift(new OnErrorResumeNextOperator(nextSources))}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},FromObservable_1=__webpack_require__(70),isArray_1=__webpack_require__(11),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.onErrorResumeNext=onErrorResumeNext,exports.onErrorResumeNextStatic=onErrorResumeNextStatic;var OnErrorResumeNextOperator=function(){function OnErrorResumeNextOperator(nextSources){this.nextSources=nextSources}return OnErrorResumeNextOperator.prototype.call=function(subscriber,source){return source.subscribe(new OnErrorResumeNextSubscriber(subscriber,this.nextSources))},OnErrorResumeNextOperator}(),OnErrorResumeNextSubscriber=function(_super){function OnErrorResumeNextSubscriber(destination,nextSources){_super.call(this,destination),this.destination=destination,this.nextSources=nextSources}return __extends(OnErrorResumeNextSubscriber,_super),OnErrorResumeNextSubscriber.prototype.notifyError=function(error,innerSub){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype.notifyComplete=function(innerSub){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype._error=function(err){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype._complete=function(){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype.subscribeToNextSource=function(){var next=this.nextSources.shift();next?this.add(subscribeToResult_1.subscribeToResult(this,next)):this.destination.complete()},OnErrorResumeNextSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function refCount(){return function(source){return source.lift(new RefCountOperator(source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.refCount=refCount;var RefCountOperator=function(){function RefCountOperator(connectable){this.connectable=connectable}return RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable),subscription=source.subscribe(refCounter);return refCounter.closed||(refCounter.connection=connectable.connect()),subscription},RefCountOperator}(),RefCountSubscriber=function(_super){function RefCountSubscriber(destination,connectable){_super.call(this,destination),this.connectable=connectable}return __extends(RefCountSubscriber,_super),RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable)return void(this.connection=null);this.connectable=null;var refCount=connectable._refCount;if(refCount<=0)return void(this.connection=null);if(connectable._refCount=refCount-1,refCount>1)return void(this.connection=null);var connection=this.connection,sharedConnection=connectable._connection;this.connection=null,!sharedConnection||connection&&sharedConnection!==connection||sharedConnection.unsubscribe()},RefCountSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function scan(accumulator,seed){var hasSeed=!1;return arguments.length>=2&&(hasSeed=!0),function(source){return source.lift(new ScanOperator(accumulator,seed,hasSeed))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.scan=scan;var ScanOperator=function(){function ScanOperator(accumulator,seed,hasSeed){void 0===hasSeed&&(hasSeed=!1),this.accumulator=accumulator,this.seed=seed,this.hasSeed=hasSeed}return ScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new ScanSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed))},ScanOperator}(),ScanSubscriber=function(_super){function ScanSubscriber(destination,accumulator,_seed,hasSeed){_super.call(this,destination),this.accumulator=accumulator,this._seed=_seed,this.hasSeed=hasSeed,this.index=0}return __extends(ScanSubscriber,_super),Object.defineProperty(ScanSubscriber.prototype,"seed",{get:function(){return this._seed},set:function(value){this.hasSeed=!0,this._seed=value},enumerable:!0,configurable:!0}),ScanSubscriber.prototype._next=function(value){if(this.hasSeed)return this._tryNext(value);this.seed=value,this.destination.next(value)},ScanSubscriber.prototype._tryNext=function(value){var result,index=this.index++;try{result=this.accumulator(this.seed,value,index)}catch(err){this.destination.error(err)}this.seed=result,this.destination.next(result)},ScanSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function switchMap(project,resultSelector){return function(source){return source.lift(new SwitchMapOperator(project,resultSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.switchMap=switchMap;var SwitchMapOperator=function(){function SwitchMapOperator(project,resultSelector){this.project=project,this.resultSelector=resultSelector}return SwitchMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapSubscriber(subscriber,this.project,this.resultSelector))},SwitchMapOperator}(),SwitchMapSubscriber=function(_super){function SwitchMapSubscriber(destination,project,resultSelector){_super.call(this,destination),this.project=project,this.resultSelector=resultSelector,this.index=0}return __extends(SwitchMapSubscriber,_super),SwitchMapSubscriber.prototype._next=function(value){var result,index=this.index++;try{result=this.project(value,index)}catch(error){return void this.destination.error(error)}this._innerSub(result,value,index)},SwitchMapSubscriber.prototype._innerSub=function(result,value,index){var innerSubscription=this.innerSubscription;innerSubscription&&innerSubscription.unsubscribe(),this.add(this.innerSubscription=subscribeToResult_1.subscribeToResult(this,result,value,index))},SwitchMapSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;innerSubscription&&!innerSubscription.closed||_super.prototype._complete.call(this)},SwitchMapSubscriber.prototype._unsubscribe=function(){this.innerSubscription=null},SwitchMapSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub),this.innerSubscription=null,this.isStopped&&_super.prototype._complete.call(this)},SwitchMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.resultSelector?this._tryNotifyNext(outerValue,innerValue,outerIndex,innerIndex):this.destination.next(innerValue)},SwitchMapSubscriber.prototype._tryNotifyNext=function(outerValue,innerValue,outerIndex,innerIndex){var result;try{result=this.resultSelector(outerValue,innerValue,outerIndex,innerIndex)}catch(err){return void this.destination.error(err)}this.destination.next(result)},SwitchMapSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function takeLast(count){return function(source){return 0===count?new EmptyObservable_1.EmptyObservable:source.lift(new TakeLastOperator(count))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),ArgumentOutOfRangeError_1=__webpack_require__(25),EmptyObservable_1=__webpack_require__(13);exports.takeLast=takeLast;var TakeLastOperator=function(){function TakeLastOperator(total){if(this.total=total,this.total<0)throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError}return TakeLastOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeLastSubscriber(subscriber,this.total))},TakeLastOperator}(),TakeLastSubscriber=function(_super){function TakeLastSubscriber(destination,total){_super.call(this,destination),this.total=total,this.ring=new Array,this.count=0}return __extends(TakeLastSubscriber,_super),TakeLastSubscriber.prototype._next=function(value){var ring=this.ring,total=this.total,count=this.count++;if(ring.length<total)ring.push(value);else{ring[count%total]=value}},TakeLastSubscriber.prototype._complete=function(){var destination=this.destination,count=this.count;if(count>0)for(var total=this.count>=this.total?this.total:this.count,ring=this.ring,i=0;i<total;i++){var idx=count++%total;destination.next(ring[idx])}destination.complete()},TakeLastSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function timestamp(scheduler){return void 0===scheduler&&(scheduler=async_1.async),map_1.map(function(value){return new Timestamp(value,scheduler.now())})}var async_1=__webpack_require__(4),map_1=__webpack_require__(19);exports.timestamp=timestamp;var Timestamp=function(){function Timestamp(value,timestamp){this.value=value,this.timestamp=timestamp}return Timestamp}();exports.Timestamp=Timestamp},function(module,exports,__webpack_require__){"use strict";function noop(){}exports.noop=noop},function(module,exports,__webpack_require__){"use strict";function pipe(){for(var fns=[],_i=0;_i<arguments.length;_i++)fns[_i-0]=arguments[_i];return pipeFromArray(fns)}function pipeFromArray(fns){return fns?1===fns.length?fns[0]:function(input){return fns.reduce(function(prev,fn){return fn(prev)},input)}:noop_1.noop}var noop_1=__webpack_require__(58);exports.pipe=pipe,exports.pipeFromArray=pipeFromArray},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var alertcontroller_1=__webpack_require__(484),alertservice_1=__webpack_require__(486),alertmodule=angular.module("hibachi.alert",[]).controller("alertController",alertcontroller_1.AlertController).service("alertService",alertservice_1.AlertService);exports.alertmodule=alertmodule},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseobject_1=__webpack_require__(168),BaseTransient=function(_super){function BaseTransient($injector){var _this=_super.call(this,$injector)||this;return _this.errors={},_this.messages={},_this.populate=function(response){var data=response;response.data&&(data=response.data),data=_this.utilityService.nvpToObject(data);for(var key in data)!function(){var propertyIdentifier=key.replace(_this.className.toLowerCase()+".",""),propertyIdentifierArray=propertyIdentifier.split("."),propertyIdentifierKey=propertyIdentifier.replace(/\./g,"_"),currentEntity=_this;angular.forEach(propertyIdentifierArray,function(property,propertyKey){if(currentEntity.metaData[property])if(propertyKey===propertyIdentifierArray.length-1)if(angular.isObject(data[key])&&currentEntity.metaData[property].fieldtype&&"many-to-one"===currentEntity.metaData[property].fieldtype){var relatedEntity=_this.entityService.newEntity(currentEntity.metaData[property].cfc);relatedEntity.populate?(relatedEntity.populate(data[key]),currentEntity["$$set"+currentEntity.metaData[property].name.charAt(0).toUpperCase()+currentEntity.metaData[property].name.slice(1)](relatedEntity)):(relatedEntity.$$init(data[key]),currentEntity["$$set"+currentEntity.metaData[property].name.charAt(0).toUpperCase()+currentEntity.metaData[property].name.slice(1)](relatedEntity))}else angular.isArray(data[propertyIdentifierKey])&&currentEntity.metaData[property].fieldtype&&"one-to-many"===currentEntity.metaData[property].fieldtype?(currentEntity[property]=[],angular.forEach(data[key],function(arrayItem,propertyKey){var relatedEntity=_this.entityService.newEntity(currentEntity.metaData[property].cfc);if(relatedEntity.populate){relatedEntity.populate(arrayItem);var hasItem=!1;for(var item in currentEntity[property])if(currentEntity[property][item].$$getID().length>0&&currentEntity[property][item].$$getID()===relatedEntity.$$getID()){hasItem=!0;break}hasItem||currentEntity["$$add"+currentEntity.metaData[property].singularname.charAt(0).toUpperCase()+currentEntity.metaData[property].singularname.slice(1)](relatedEntity)}else relatedEntity.$$init(arrayItem),currentEntity["$$add"+currentEntity.metaData[property].singularname.charAt(0).toUpperCase()+currentEntity.metaData[property].singularname.slice(1)](relatedEntity)})):currentEntity[property]=data[key];else{var propertyMetaData=currentEntity.metaData[property];relatedEntity=angular.isUndefined(currentEntity.data[property])||currentEntity.data[property]&&null===currentEntity.data[property]?"one-to-many"===propertyMetaData.fieldtype?[]:_this.$hibachi["new"+propertyMetaData.cfc]():currentEntity.data[property],currentEntity["$$set"+propertyMetaData.name.charAt(0).toUpperCase()+propertyMetaData.name.slice(1)](relatedEntity),currentEntity=relatedEntity}else _this[key]=data[key]})}();response.errors&&(_this.errors=response.errors,_this.messages=response.messages)},_this.addError=function(errorName,errorMessage){_this.errors[errorName]||(_this.errors[errorName]=[]),angular.isArray(errorMessage)?_this.addErrorsByArray(errorName,errorMessage):angular.isObject(errorMessage)?_this.addErrorsByObject(errorName,errorMessage):_this.errors[errorName].push(errorMessage)},_this.addErrorsByArray=function(errorName,errorMessages){for(var i=0;i<errorMessages.length;i++){var message=errorMessages[i];_this.errors[errorName].push(message)}},_this.addErrorsByObject=function(errorName,errorMessage){_this.errors[errorName]||(_this.errors[errorName]=[]);for(var key in errorMessage)for(var i=0;i<errorMessage[key].length;i++){var message=errorMessage[i];_this.errors[errorName].push(message)}},_this.addErrors=function(errors){for(var key in errors){_this.errors[key]||(_this.errors[key]=[]);for(var message in errors[key])_this.errors[key].push(message)}},_this.getError=function(errorName){return _this.getErrorByErrorName(errorName)},_this.getErrorByErrorName=function(errorName){return _this.errors[errorName]},_this.hasError=function(errorName){return _this.hasErrorByErrorName(errorName)},_this.hasErrorByErrorName=function(errorName){return angular.isDefined(_this.errors[errorName])},_this.hasErrors=function(){return Object.keys(_this.errors).length},_this.hasSuccessfulAction=function(action){},_this.$hibachi=_this.getService("$hibachi"),_this.hibachiValidationService=_this.getService("hibachiValidationService"),_this.utilityService=_this.getService("utilityService"),_this.entityService=_this.getService("entityService"),_this}return __extends(BaseTransient,_super),BaseTransient}(baseobject_1.BaseObject);exports.BaseTransient=BaseTransient},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var BaseService=function(){function BaseService(){}return BaseService}();exports.BaseService=BaseService},function(module,exports,__webpack_require__){(function(global){function Timeout(id,clearFn){this._id=id,this._clearFn=clearFn}var apply=Function.prototype.apply;exports.setTimeout=function(){return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout)},exports.setInterval=function(){return new Timeout(apply.call(setInterval,window,arguments),clearInterval)},exports.clearTimeout=exports.clearInterval=function(timeout){timeout&&timeout.close()},Timeout.prototype.unref=Timeout.prototype.ref=function(){},Timeout.prototype.close=function(){this._clearFn.call(window,this._id)},exports.enroll=function(item,msecs){clearTimeout(item._idleTimeoutId),item._idleTimeout=msecs},exports.unenroll=function(item){clearTimeout(item._idleTimeoutId),item._idleTimeout=-1},exports._unrefActive=exports.active=function(item){clearTimeout(item._idleTimeoutId);var msecs=item._idleTimeout;msecs>=0&&(item._idleTimeoutId=setTimeout(function(){item._onTimeout&&item._onTimeout()},msecs))},__webpack_require__(187),exports.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==global&&global.setImmediate||this&&this.setImmediate,exports.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==global&&global.clearImmediate||this&&this.clearImmediate}).call(exports,__webpack_require__(42))},function(module,exports){var charenc={utf8:{stringToBytes:function(str){return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)))},bytesToString:function(bytes){return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)))}},bin:{stringToBytes:function(str){for(var bytes=[],i=0;i<str.length;i++)bytes.push(255&str.charCodeAt(i));return bytes},bytesToString:function(bytes){for(var str=[],i=0;i<bytes.length;i++)str.push(String.fromCharCode(bytes[i]));return str.join("")}}};module.exports=charenc},function(module,exports,__webpack_require__){!function(){var crypt=__webpack_require__(188),utf8=__webpack_require__(64).utf8,isBuffer=__webpack_require__(189),bin=__webpack_require__(64).bin,md5=function(message,options){message.constructor==String?message=options&&"binary"===options.encoding?bin.stringToBytes(message):utf8.stringToBytes(message):isBuffer(message)?message=Array.prototype.slice.call(message,0):Array.isArray(message)||(message=message.toString());for(var m=crypt.bytesToWords(message),l=8*message.length,a=1732584193,b=-271733879,c=-1732584194,d=271733878,i=0;i<m.length;i++)m[i]=16711935&(m[i]<<8|m[i]>>>24)|4278255360&(m[i]<<24|m[i]>>>8);m[l>>>5]|=128<<l%32,m[14+(l+64>>>9<<4)]=l;for(var FF=md5._ff,GG=md5._gg,HH=md5._hh,II=md5._ii,i=0;i<m.length;i+=16){var aa=a,bb=b,cc=c,dd=d;a=FF(a,b,c,d,m[i+0],7,-680876936),d=FF(d,a,b,c,m[i+1],12,-389564586),c=FF(c,d,a,b,m[i+2],17,606105819),b=FF(b,c,d,a,m[i+3],22,-1044525330),a=FF(a,b,c,d,m[i+4],7,-176418897),d=FF(d,a,b,c,m[i+5],12,1200080426),c=FF(c,d,a,b,m[i+6],17,-1473231341),b=FF(b,c,d,a,m[i+7],22,-45705983),a=FF(a,b,c,d,m[i+8],7,1770035416),d=FF(d,a,b,c,m[i+9],12,-1958414417),c=FF(c,d,a,b,m[i+10],17,-42063),b=FF(b,c,d,a,m[i+11],22,-1990404162),a=FF(a,b,c,d,m[i+12],7,1804603682),d=FF(d,a,b,c,m[i+13],12,-40341101),c=FF(c,d,a,b,m[i+14],17,-1502002290),b=FF(b,c,d,a,m[i+15],22,1236535329),a=GG(a,b,c,d,m[i+1],5,-165796510),d=GG(d,a,b,c,m[i+6],9,-1069501632),c=GG(c,d,a,b,m[i+11],14,643717713),b=GG(b,c,d,a,m[i+0],20,-373897302),a=GG(a,b,c,d,m[i+5],5,-701558691),d=GG(d,a,b,c,m[i+10],9,38016083),c=GG(c,d,a,b,m[i+15],14,-660478335),b=GG(b,c,d,a,m[i+4],20,-405537848),a=GG(a,b,c,d,m[i+9],5,568446438),d=GG(d,a,b,c,m[i+14],9,-1019803690),c=GG(c,d,a,b,m[i+3],14,-187363961),b=GG(b,c,d,a,m[i+8],20,1163531501),a=GG(a,b,c,d,m[i+13],5,-1444681467),d=GG(d,a,b,c,m[i+2],9,-51403784),c=GG(c,d,a,b,m[i+7],14,1735328473),b=GG(b,c,d,a,m[i+12],20,-1926607734),a=HH(a,b,c,d,m[i+5],4,-378558),d=HH(d,a,b,c,m[i+8],11,-2022574463),c=HH(c,d,a,b,m[i+11],16,1839030562),b=HH(b,c,d,a,m[i+14],23,-35309556),a=HH(a,b,c,d,m[i+1],4,-1530992060),d=HH(d,a,b,c,m[i+4],11,1272893353),c=HH(c,d,a,b,m[i+7],16,-155497632),b=HH(b,c,d,a,m[i+10],23,-1094730640),a=HH(a,b,c,d,m[i+13],4,681279174),d=HH(d,a,b,c,m[i+0],11,-358537222),c=HH(c,d,a,b,m[i+3],16,-722521979),b=HH(b,c,d,a,m[i+6],23,76029189),a=HH(a,b,c,d,m[i+9],4,-640364487),d=HH(d,a,b,c,m[i+12],11,-421815835),c=HH(c,d,a,b,m[i+15],16,530742520),b=HH(b,c,d,a,m[i+2],23,-995338651),a=II(a,b,c,d,m[i+0],6,-198630844),d=II(d,a,b,c,m[i+7],10,1126891415),c=II(c,d,a,b,m[i+14],15,-1416354905),b=II(b,c,d,a,m[i+5],21,-57434055),a=II(a,b,c,d,m[i+12],6,1700485571),d=II(d,a,b,c,m[i+3],10,-1894986606),c=II(c,d,a,b,m[i+10],15,-1051523),b=II(b,c,d,a,m[i+1],21,-2054922799),a=II(a,b,c,d,m[i+8],6,1873313359),d=II(d,a,b,c,m[i+15],10,-30611744),c=II(c,d,a,b,m[i+6],15,-1560198380),b=II(b,c,d,a,m[i+13],21,1309151649),a=II(a,b,c,d,m[i+4],6,-145523070),d=II(d,a,b,c,m[i+11],10,-1120210379),c=II(c,d,a,b,m[i+2],15,718787259),b=II(b,c,d,a,m[i+9],21,-343485551),a=a+aa>>>0,b=b+bb>>>0,c=c+cc>>>0,d=d+dd>>>0}return crypt.endian([a,b,c,d])};md5._ff=function(a,b,c,d,x,s,t){var n=a+(b&c|~b&d)+(x>>>0)+t;return(n<<s|n>>>32-s)+b},md5._gg=function(a,b,c,d,x,s,t){var n=a+(b&d|c&~d)+(x>>>0)+t;return(n<<s|n>>>32-s)+b},md5._hh=function(a,b,c,d,x,s,t){var n=a+(b^c^d)+(x>>>0)+t;return(n<<s|n>>>32-s)+b},md5._ii=function(a,b,c,d,x,s,t){var n=a+(c^(b|~d))+(x>>>0)+t;return(n<<s|n>>>32-s)+b},md5._blocksize=16,md5._digestsize=16,module.exports=function(message,options){if(void 0===message||null===message)throw new Error("Illegal argument "+message);var digestbytes=crypt.wordsToBytes(md5(message,options));return options&&options.asBytes?digestbytes:options&&options.asString?bin.bytesToString(digestbytes):crypt.bytesToHex(digestbytes)}}()},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),ObjectUnsubscribedError_1=__webpack_require__(39),BehaviorSubject=function(_super){function BehaviorSubject(_value){_super.call(this),this._value=_value}return __extends(BehaviorSubject,_super),Object.defineProperty(BehaviorSubject.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);return subscription&&!subscription.closed&&subscriber.next(this._value),subscription},BehaviorSubject.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return this._value},BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value)},BehaviorSubject}(Subject_1.Subject);exports.BehaviorSubject=BehaviorSubject},function(module,exports,__webpack_require__){"use strict";exports.empty={closed:!0,next:function(value){},error:function(err){throw err},complete:function(){}}},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscription_1=__webpack_require__(5),SubjectSubscription=function(_super){function SubjectSubscription(subject,subscriber){_super.call(this),this.subject=subject,this.subscriber=subscriber,this.closed=!1}return __extends(SubjectSubscription,_super),SubjectSubscription.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var subject=this.subject,observers=subject.observers;if(this.subject=null,observers&&0!==observers.length&&!subject.isStopped&&!subject.closed){var subscriberIndex=observers.indexOf(this.subscriber);-1!==subscriberIndex&&observers.splice(subscriberIndex,1)}}},SubjectSubscription}(Subscription_1.Subscription);exports.SubjectSubscription=SubjectSubscription},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),Observable_1=__webpack_require__(0),Subscriber_1=__webpack_require__(1),Subscription_1=__webpack_require__(5),refCount_1=__webpack_require__(53),ConnectableObservable=function(_super){function ConnectableObservable(source,subjectFactory){_super.call(this),this.source=source,this.subjectFactory=subjectFactory,this._refCount=0,this._isComplete=!1}return __extends(ConnectableObservable,_super),ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber)},ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;return subject&&!subject.isStopped||(this._subject=this.subjectFactory()),this._subject},ConnectableObservable.prototype.connect=function(){var connection=this._connection;return connection||(this._isComplete=!1,connection=this._connection=new Subscription_1.Subscription,connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this))),connection.closed?(this._connection=null,connection=Subscription_1.Subscription.EMPTY):this._connection=connection),connection},ConnectableObservable.prototype.refCount=function(){return refCount_1.refCount()(this)},ConnectableObservable}(Observable_1.Observable);exports.ConnectableObservable=ConnectableObservable;var connectableProto=ConnectableObservable.prototype;exports.connectableObservableDescriptor={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:!0},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}};var ConnectableSubscriber=function(_super){function ConnectableSubscriber(destination,connectable){_super.call(this,destination),this.connectable=connectable}return __extends(ConnectableSubscriber,_super),ConnectableSubscriber.prototype._error=function(err){this._unsubscribe(),_super.prototype._error.call(this,err)},ConnectableSubscriber.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),_super.prototype._complete.call(this)},ConnectableSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var connection=connectable._connection;connectable._refCount=0,connectable._subject=null,connectable._connection=null,connection&&connection.unsubscribe()}},ConnectableSubscriber}(Subject_1.SubjectSubscriber),RefCountSubscriber=(function(){function RefCountOperator(connectable){this.connectable=connectable}RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable),subscription=source.subscribe(refCounter);return refCounter.closed||(refCounter.connection=connectable.connect()),subscription}}(),function(_super){function RefCountSubscriber(destination,connectable){_super.call(this,destination),this.connectable=connectable}return __extends(RefCountSubscriber,_super),RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable)return void(this.connection=null);this.connectable=null;var refCount=connectable._refCount;if(refCount<=0)return void(this.connection=null);if(connectable._refCount=refCount-1,refCount>1)return void(this.connection=null);var connection=this.connection,sharedConnection=connectable._connection;this.connection=null,!sharedConnection||connection&&sharedConnection!==connection||sharedConnection.unsubscribe()},RefCountSubscriber}(Subscriber_1.Subscriber))},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isArray_1=__webpack_require__(11),isArrayLike_1=__webpack_require__(164),isPromise_1=__webpack_require__(166),PromiseObservable_1=__webpack_require__(71),IteratorObservable_1=__webpack_require__(333),ArrayObservable_1=__webpack_require__(12),ArrayLikeObservable_1=__webpack_require__(322),iterator_1=__webpack_require__(24),Observable_1=__webpack_require__(0),observeOn_1=__webpack_require__(33),observable_1=__webpack_require__(36),FromObservable=function(_super){function FromObservable(ish,scheduler){_super.call(this,null),this.ish=ish,this.scheduler=scheduler}return __extends(FromObservable,_super),FromObservable.create=function(ish,scheduler){if(null!=ish){if("function"==typeof ish[observable_1.observable])return ish instanceof Observable_1.Observable&&!scheduler?ish:new FromObservable(ish,scheduler);if(isArray_1.isArray(ish))return new ArrayObservable_1.ArrayObservable(ish,scheduler);if(isPromise_1.isPromise(ish))return new PromiseObservable_1.PromiseObservable(ish,scheduler);if("function"==typeof ish[iterator_1.iterator]||"string"==typeof ish)return new IteratorObservable_1.IteratorObservable(ish,scheduler);if(isArrayLike_1.isArrayLike(ish))return new ArrayLikeObservable_1.ArrayLikeObservable(ish,scheduler)}throw new TypeError((null!==ish&&typeof ish||ish)+" is not observable")},FromObservable.prototype._subscribe=function(subscriber){var ish=this.ish,scheduler=this.scheduler;return null==scheduler?ish[observable_1.observable]().subscribe(subscriber):ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber,scheduler,0))},FromObservable}(Observable_1.Observable);exports.FromObservable=FromObservable},function(module,exports,__webpack_require__){"use strict";function dispatchNext(arg){var value=arg.value,subscriber=arg.subscriber;subscriber.closed||(subscriber.next(value),subscriber.complete())}function dispatchError(arg){var err=arg.err,subscriber=arg.subscriber;subscriber.closed||subscriber.error(err)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},root_1=__webpack_require__(9),Observable_1=__webpack_require__(0),PromiseObservable=function(_super){function PromiseObservable(promise,scheduler){_super.call(this),this.promise=promise,this.scheduler=scheduler}return __extends(PromiseObservable,_super),PromiseObservable.create=function(promise,scheduler){return new PromiseObservable(promise,scheduler)},PromiseObservable.prototype._subscribe=function(subscriber){var _this=this,promise=this.promise,scheduler=this.scheduler;if(null==scheduler)this._isScalar?subscriber.closed||(subscriber.next(this.value),subscriber.complete()):promise.then(function(value){_this.value=value,_this._isScalar=!0,subscriber.closed||(subscriber.next(value),subscriber.complete())},function(err){subscriber.closed||subscriber.error(err)}).then(null,function(err){root_1.root.setTimeout(function(){throw err})});else if(this._isScalar){if(!subscriber.closed)return scheduler.schedule(dispatchNext,0,{value:this.value,subscriber:subscriber})}else promise.then(function(value){_this.value=value,_this._isScalar=!0,subscriber.closed||subscriber.add(scheduler.schedule(dispatchNext,0,{value:value,subscriber:subscriber}))},function(err){subscriber.closed||subscriber.add(scheduler.schedule(dispatchError,0,{err:err,subscriber:subscriber}))}).then(null,function(err){root_1.root.setTimeout(function(){throw err})})},PromiseObservable}(Observable_1.Observable);exports.PromiseObservable=PromiseObservable},function(module,exports,__webpack_require__){"use strict";function getCORSRequest(){if(root_1.root.XMLHttpRequest)return new root_1.root.XMLHttpRequest;if(root_1.root.XDomainRequest)return new root_1.root.XDomainRequest;throw new Error("CORS is not supported by your browser")}function getXMLHttpRequest(){if(root_1.root.XMLHttpRequest)return new root_1.root.XMLHttpRequest;var progId=void 0;try{for(var progIds=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],i=0;i<3;i++)try{if(progId=progIds[i],new root_1.root.ActiveXObject(progId))break}catch(e){}return new root_1.root.ActiveXObject(progId)}catch(e){throw new Error("XMLHttpRequest is not supported by your browser")}}function ajaxGet(url,headers){return void 0===headers&&(headers=null),new AjaxObservable({method:"GET",url:url,headers:headers})}function ajaxPost(url,body,headers){return new AjaxObservable({method:"POST",url:url,body:body,headers:headers})}function ajaxDelete(url,headers){return new AjaxObservable({method:"DELETE",url:url,headers:headers})}function ajaxPut(url,body,headers){return new AjaxObservable({method:"PUT",url:url,body:body,headers:headers})}function ajaxPatch(url,body,headers){return new AjaxObservable({method:"PATCH",url:url,body:body,headers:headers})}function ajaxGetJSON(url,headers){return mapResponse(new AjaxObservable({method:"GET",url:url,responseType:"json",headers:headers}))}function parseXhrResponse(responseType,xhr){switch(responseType){case"json":return"response"in xhr?xhr.responseType?xhr.response:JSON.parse(xhr.response||xhr.responseText||"null"):JSON.parse(xhr.responseText||"null");case"xml":return xhr.responseXML;case"text":default:return"response"in xhr?xhr.response:xhr.responseText}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},root_1=__webpack_require__(9),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),Observable_1=__webpack_require__(0),Subscriber_1=__webpack_require__(1),map_1=__webpack_require__(19);exports.ajaxGet=ajaxGet,exports.ajaxPost=ajaxPost,exports.ajaxDelete=ajaxDelete,exports.ajaxPut=ajaxPut,exports.ajaxPatch=ajaxPatch;var mapResponse=map_1.map(function(x,index){return x.response});exports.ajaxGetJSON=ajaxGetJSON;var AjaxObservable=function(_super){function AjaxObservable(urlOrRequest){_super.call(this);var request={async:!0,createXHR:function(){return this.crossDomain?getCORSRequest.call(this):getXMLHttpRequest()},crossDomain:!1,withCredentials:!1,headers:{},method:"GET",responseType:"json",timeout:0};if("string"==typeof urlOrRequest)request.url=urlOrRequest;else for(var prop in urlOrRequest)urlOrRequest.hasOwnProperty(prop)&&(request[prop]=urlOrRequest[prop]);this.request=request}return __extends(AjaxObservable,_super),AjaxObservable.prototype._subscribe=function(subscriber){return new AjaxSubscriber(subscriber,this.request)},AjaxObservable.create=function(){var create=function(urlOrRequest){return new AjaxObservable(urlOrRequest)};return create.get=ajaxGet,create.post=ajaxPost,create.delete=ajaxDelete,create.put=ajaxPut,create.patch=ajaxPatch,create.getJSON=ajaxGetJSON,create}(),AjaxObservable}(Observable_1.Observable);exports.AjaxObservable=AjaxObservable;var AjaxSubscriber=function(_super){function AjaxSubscriber(destination,request){_super.call(this,destination),this.request=request,this.done=!1;var headers=request.headers=request.headers||{};request.crossDomain||headers["X-Requested-With"]||(headers["X-Requested-With"]="XMLHttpRequest"),"Content-Type"in headers||root_1.root.FormData&&request.body instanceof root_1.root.FormData||void 0===request.body||(headers["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),request.body=this.serializeBody(request.body,request.headers["Content-Type"]),this.send()}return __extends(AjaxSubscriber,_super),AjaxSubscriber.prototype.next=function(e){this.done=!0;var _a=this,xhr=_a.xhr,request=_a.request,destination=_a.destination,response=new AjaxResponse(e,xhr,request);destination.next(response)},AjaxSubscriber.prototype.send=function(){var _a=this,request=_a.request,_b=_a.request,user=_b.user,method=_b.method,url=_b.url,async=_b.async,password=_b.password,headers=_b.headers,body=_b.body,createXHR=request.createXHR,xhr=tryCatch_1.tryCatch(createXHR).call(request);if(xhr===errorObject_1.errorObject)this.error(errorObject_1.errorObject.e);else{this.xhr=xhr,this.setupEvents(xhr,request);if((user?tryCatch_1.tryCatch(xhr.open).call(xhr,method,url,async,user,password):tryCatch_1.tryCatch(xhr.open).call(xhr,method,url,async))===errorObject_1.errorObject)return this.error(errorObject_1.errorObject.e),null;if(async&&(xhr.timeout=request.timeout,xhr.responseType=request.responseType),"withCredentials"in xhr&&(xhr.withCredentials=!!request.withCredentials),this.setHeaders(xhr,headers),(body?tryCatch_1.tryCatch(xhr.send).call(xhr,body):tryCatch_1.tryCatch(xhr.send).call(xhr))===errorObject_1.errorObject)return this.error(errorObject_1.errorObject.e),null}return xhr},AjaxSubscriber.prototype.serializeBody=function(body,contentType){if(!body||"string"==typeof body)return body;if(root_1.root.FormData&&body instanceof root_1.root.FormData)return body;if(contentType){var splitIndex=contentType.indexOf(";");-1!==splitIndex&&(contentType=contentType.substring(0,splitIndex))}switch(contentType){case"application/x-www-form-urlencoded":return Object.keys(body).map(function(key){return encodeURI(key)+"="+encodeURI(body[key])}).join("&");case"application/json":return JSON.stringify(body);default:return body}},AjaxSubscriber.prototype.setHeaders=function(xhr,headers){for(var key in headers)headers.hasOwnProperty(key)&&xhr.setRequestHeader(key,headers[key])},AjaxSubscriber.prototype.setupEvents=function(xhr,request){function xhrTimeout(e){var _a=xhrTimeout,subscriber=_a.subscriber,progressSubscriber=_a.progressSubscriber,request=_a.request;progressSubscriber&&progressSubscriber.error(e),subscriber.error(new AjaxTimeoutError(this,request))}function xhrReadyStateChange(e){var _a=xhrReadyStateChange,subscriber=_a.subscriber,progressSubscriber=_a.progressSubscriber,request=_a.request;if(4===this.readyState){var status_1=1223===this.status?204:this.status,response="text"===this.responseType?this.response||this.responseText:this.response;0===status_1&&(status_1=response?200:0),200<=status_1&&status_1<300?(progressSubscriber&&progressSubscriber.complete(),subscriber.next(e),subscriber.complete()):(progressSubscriber&&progressSubscriber.error(e),subscriber.error(new AjaxError("ajax error "+status_1,this,request)))}}var progressSubscriber=request.progressSubscriber;if(xhr.ontimeout=xhrTimeout,xhrTimeout.request=request,xhrTimeout.subscriber=this,xhrTimeout.progressSubscriber=progressSubscriber,xhr.upload&&"withCredentials"in xhr){if(progressSubscriber){var xhrProgress_1;xhrProgress_1=function(e){xhrProgress_1.progressSubscriber.next(e)},root_1.root.XDomainRequest?xhr.onprogress=xhrProgress_1:xhr.upload.onprogress=xhrProgress_1,xhrProgress_1.progressSubscriber=progressSubscriber}var xhrError_1;xhrError_1=function(e){var _a=xhrError_1,progressSubscriber=_a.progressSubscriber,subscriber=_a.subscriber,request=_a.request;progressSubscriber&&progressSubscriber.error(e),subscriber.error(new AjaxError("ajax error",this,request))},xhr.onerror=xhrError_1,xhrError_1.request=request,xhrError_1.subscriber=this,xhrError_1.progressSubscriber=progressSubscriber}xhr.onreadystatechange=xhrReadyStateChange,xhrReadyStateChange.subscriber=this,xhrReadyStateChange.progressSubscriber=progressSubscriber,xhrReadyStateChange.request=request},AjaxSubscriber.prototype.unsubscribe=function(){var _a=this,done=_a.done,xhr=_a.xhr;!done&&xhr&&4!==xhr.readyState&&"function"==typeof xhr.abort&&xhr.abort(),_super.prototype.unsubscribe.call(this)},AjaxSubscriber}(Subscriber_1.Subscriber);exports.AjaxSubscriber=AjaxSubscriber;var AjaxResponse=function(){function AjaxResponse(originalEvent,xhr,request){this.originalEvent=originalEvent,this.xhr=xhr,this.request=request,this.status=xhr.status,this.responseType=xhr.responseType||request.responseType,this.response=parseXhrResponse(this.responseType,xhr)}return AjaxResponse}();exports.AjaxResponse=AjaxResponse;var AjaxError=function(_super){function AjaxError(message,xhr,request){_super.call(this,message),this.message=message,this.xhr=xhr,this.request=request,this.status=xhr.status,this.responseType=xhr.responseType||request.responseType,this.response=parseXhrResponse(this.responseType,xhr)}return __extends(AjaxError,_super),AjaxError}(Error);exports.AjaxError=AjaxError;var AjaxTimeoutError=function(_super){function AjaxTimeoutError(xhr,request){_super.call(this,"ajax timeout",xhr,request)}return __extends(AjaxTimeoutError,_super),AjaxTimeoutError}(AjaxError);exports.AjaxTimeoutError=AjaxTimeoutError},function(module,exports,__webpack_require__){"use strict";var FromObservable_1=__webpack_require__(70);exports.from=FromObservable_1.FromObservable.create},function(module,exports,__webpack_require__){"use strict";var ArrayObservable_1=__webpack_require__(12);exports.of=ArrayObservable_1.ArrayObservable.of},function(module,exports,__webpack_require__){"use strict";var TimerObservable_1=__webpack_require__(338);exports.timer=TimerObservable_1.TimerObservable.create},function(module,exports,__webpack_require__){"use strict";function timeInterval(scheduler){return void 0===scheduler&&(scheduler=async_1.async),timeInterval_1.timeInterval(scheduler)(this)}var async_1=__webpack_require__(4),timeInterval_1=__webpack_require__(144);exports.TimeInterval=timeInterval_1.TimeInterval,exports.timeInterval=timeInterval},function(module,exports,__webpack_require__){"use strict";function auditTime(duration,scheduler){return void 0===scheduler&&(scheduler=async_1.async),audit_1.audit(function(){return timer_1.timer(duration,scheduler)})}var async_1=__webpack_require__(4),audit_1=__webpack_require__(45),timer_1=__webpack_require__(75);exports.auditTime=auditTime},function(module,exports,__webpack_require__){"use strict";function buffer(closingNotifier){return function(source){return source.lift(new BufferOperator(closingNotifier))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.buffer=buffer;var BufferOperator=function(){function BufferOperator(closingNotifier){this.closingNotifier=closingNotifier}return BufferOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferSubscriber(subscriber,this.closingNotifier))},BufferOperator}(),BufferSubscriber=function(_super){function BufferSubscriber(destination,closingNotifier){_super.call(this,destination),this.buffer=[],this.add(subscribeToResult_1.subscribeToResult(this,closingNotifier))}return __extends(BufferSubscriber,_super),BufferSubscriber.prototype._next=function(value){this.buffer.push(value)},BufferSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var buffer=this.buffer;this.buffer=[],this.destination.next(buffer)},BufferSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function bufferCount(bufferSize,startBufferEvery){return void 0===startBufferEvery&&(startBufferEvery=null),function(source){return source.lift(new BufferCountOperator(bufferSize,startBufferEvery))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.bufferCount=bufferCount;var BufferCountOperator=function(){function BufferCountOperator(bufferSize,startBufferEvery){this.bufferSize=bufferSize,this.startBufferEvery=startBufferEvery,this.subscriberClass=startBufferEvery&&bufferSize!==startBufferEvery?BufferSkipCountSubscriber:BufferCountSubscriber}return BufferCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new this.subscriberClass(subscriber,this.bufferSize,this.startBufferEvery))},BufferCountOperator}(),BufferCountSubscriber=function(_super){function BufferCountSubscriber(destination,bufferSize){_super.call(this,destination),this.bufferSize=bufferSize,this.buffer=[]}return __extends(BufferCountSubscriber,_super),BufferCountSubscriber.prototype._next=function(value){var buffer=this.buffer;buffer.push(value),buffer.length==this.bufferSize&&(this.destination.next(buffer),this.buffer=[])},BufferCountSubscriber.prototype._complete=function(){var buffer=this.buffer;buffer.length>0&&this.destination.next(buffer),_super.prototype._complete.call(this)},BufferCountSubscriber}(Subscriber_1.Subscriber),BufferSkipCountSubscriber=function(_super){function BufferSkipCountSubscriber(destination,bufferSize,startBufferEvery){_super.call(this,destination),this.bufferSize=bufferSize,this.startBufferEvery=startBufferEvery,this.buffers=[],this.count=0}return __extends(BufferSkipCountSubscriber,_super),BufferSkipCountSubscriber.prototype._next=function(value){var _a=this,bufferSize=_a.bufferSize,startBufferEvery=_a.startBufferEvery,buffers=_a.buffers,count=_a.count;this.count++,count%startBufferEvery==0&&buffers.push([]);for(var i=buffers.length;i--;){var buffer=buffers[i];buffer.push(value),buffer.length===bufferSize&&(buffers.splice(i,1),this.destination.next(buffer))}},BufferSkipCountSubscriber.prototype._complete=function(){for(var _a=this,buffers=_a.buffers,destination=_a.destination;buffers.length>0;){var buffer=buffers.shift();buffer.length>0&&destination.next(buffer)}_super.prototype._complete.call(this)},BufferSkipCountSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function bufferTime(bufferTimeSpan){var length=arguments.length,scheduler=async_1.async;isScheduler_1.isScheduler(arguments[arguments.length-1])&&(scheduler=arguments[arguments.length-1],length--);var bufferCreationInterval=null;length>=2&&(bufferCreationInterval=arguments[1]);var maxBufferSize=Number.POSITIVE_INFINITY;return length>=3&&(maxBufferSize=arguments[2]),function(source){return source.lift(new BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler))}}function dispatchBufferTimeSpanOnly(state){var subscriber=state.subscriber,prevContext=state.context;prevContext&&subscriber.closeContext(prevContext),subscriber.closed||(state.context=subscriber.openContext(),state.context.closeAction=this.schedule(state,state.bufferTimeSpan))}function dispatchBufferCreation(state){var bufferCreationInterval=state.bufferCreationInterval,bufferTimeSpan=state.bufferTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,context=subscriber.openContext(),action=this;subscriber.closed||(subscriber.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,{subscriber:subscriber,context:context})),action.schedule(state,bufferCreationInterval))}function dispatchBufferClose(arg){var subscriber=arg.subscriber,context=arg.context;subscriber.closeContext(context)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},async_1=__webpack_require__(4),Subscriber_1=__webpack_require__(1),isScheduler_1=__webpack_require__(10);exports.bufferTime=bufferTime;var BufferTimeOperator=function(){function BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){this.bufferTimeSpan=bufferTimeSpan,this.bufferCreationInterval=bufferCreationInterval,this.maxBufferSize=maxBufferSize,this.scheduler=scheduler}return BufferTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferTimeSubscriber(subscriber,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler))},BufferTimeOperator}(),Context=function(){function Context(){this.buffer=[]}return Context}(),BufferTimeSubscriber=function(_super){function BufferTimeSubscriber(destination,bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){_super.call(this,destination),this.bufferTimeSpan=bufferTimeSpan,this.bufferCreationInterval=bufferCreationInterval,this.maxBufferSize=maxBufferSize,this.scheduler=scheduler,this.contexts=[];var context=this.openContext();if(this.timespanOnly=null==bufferCreationInterval||bufferCreationInterval<0,this.timespanOnly){var timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState))}else{var closeState={subscriber:this,context:context},creationState={bufferTimeSpan:bufferTimeSpan,bufferCreationInterval:bufferCreationInterval,subscriber:this,scheduler:scheduler};this.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,closeState)),this.add(scheduler.schedule(dispatchBufferCreation,bufferCreationInterval,creationState))}}return __extends(BufferTimeSubscriber,_super),BufferTimeSubscriber.prototype._next=function(value){for(var filledBufferContext,contexts=this.contexts,len=contexts.length,i=0;i<len;i++){var context=contexts[i],buffer=context.buffer;buffer.push(value),buffer.length==this.maxBufferSize&&(filledBufferContext=context)}filledBufferContext&&this.onBufferFull(filledBufferContext)},BufferTimeSubscriber.prototype._error=function(err){this.contexts.length=0,_super.prototype._error.call(this,err)},BufferTimeSubscriber.prototype._complete=function(){for(var _a=this,contexts=_a.contexts,destination=_a.destination;contexts.length>0;){var context=contexts.shift();destination.next(context.buffer)}_super.prototype._complete.call(this)},BufferTimeSubscriber.prototype._unsubscribe=function(){this.contexts=null},BufferTimeSubscriber.prototype.onBufferFull=function(context){this.closeContext(context);var closeAction=context.closeAction;if(closeAction.unsubscribe(),this.remove(closeAction),!this.closed&&this.timespanOnly){context=this.openContext();var bufferTimeSpan=this.bufferTimeSpan,timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=this.scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState))}},BufferTimeSubscriber.prototype.openContext=function(){var context=new Context;return this.contexts.push(context),context},BufferTimeSubscriber.prototype.closeContext=function(context){this.destination.next(context.buffer);var contexts=this.contexts;(contexts?contexts.indexOf(context):-1)>=0&&contexts.splice(contexts.indexOf(context),1)},BufferTimeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function bufferToggle(openings,closingSelector){return function(source){return source.lift(new BufferToggleOperator(openings,closingSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscription_1=__webpack_require__(5),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2);exports.bufferToggle=bufferToggle;var BufferToggleOperator=function(){function BufferToggleOperator(openings,closingSelector){this.openings=openings,this.closingSelector=closingSelector}return BufferToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferToggleSubscriber(subscriber,this.openings,this.closingSelector))},BufferToggleOperator}(),BufferToggleSubscriber=function(_super){function BufferToggleSubscriber(destination,openings,closingSelector){_super.call(this,destination),this.openings=openings,this.closingSelector=closingSelector,this.contexts=[],this.add(subscribeToResult_1.subscribeToResult(this,openings))}return __extends(BufferToggleSubscriber,_super),BufferToggleSubscriber.prototype._next=function(value){for(var contexts=this.contexts,len=contexts.length,i=0;i<len;i++)contexts[i].buffer.push(value)},BufferToggleSubscriber.prototype._error=function(err){for(var contexts=this.contexts;contexts.length>0;){var context=contexts.shift();context.subscription.unsubscribe(),context.buffer=null,context.subscription=null}this.contexts=null,_super.prototype._error.call(this,err)},BufferToggleSubscriber.prototype._complete=function(){for(var contexts=this.contexts;contexts.length>0;){var context=contexts.shift();this.destination.next(context.buffer),context.subscription.unsubscribe(),context.buffer=null,context.subscription=null}this.contexts=null,_super.prototype._complete.call(this)},BufferToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){outerValue?this.closeBuffer(outerValue):this.openBuffer(innerValue)},BufferToggleSubscriber.prototype.notifyComplete=function(innerSub){this.closeBuffer(innerSub.context)},BufferToggleSubscriber.prototype.openBuffer=function(value){try{var closingSelector=this.closingSelector,closingNotifier=closingSelector.call(this,value);closingNotifier&&this.trySubscribe(closingNotifier)}catch(err){this._error(err)}},BufferToggleSubscriber.prototype.closeBuffer=function(context){var contexts=this.contexts;if(contexts&&context){var buffer=context.buffer,subscription=context.subscription;this.destination.next(buffer),contexts.splice(contexts.indexOf(context),1),this.remove(subscription),subscription.unsubscribe()}},BufferToggleSubscriber.prototype.trySubscribe=function(closingNotifier){var contexts=this.contexts,buffer=[],subscription=new Subscription_1.Subscription,context={buffer:buffer,subscription:subscription};contexts.push(context);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context);!innerSubscription||innerSubscription.closed?this.closeBuffer(context):(innerSubscription.context=context,this.add(innerSubscription),subscription.add(innerSubscription))},BufferToggleSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function bufferWhen(closingSelector){return function(source){return source.lift(new BufferWhenOperator(closingSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscription_1=__webpack_require__(5),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.bufferWhen=bufferWhen;var BufferWhenOperator=function(){function BufferWhenOperator(closingSelector){this.closingSelector=closingSelector}return BufferWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferWhenSubscriber(subscriber,this.closingSelector))},BufferWhenOperator}(),BufferWhenSubscriber=function(_super){function BufferWhenSubscriber(destination,closingSelector){_super.call(this,destination),this.closingSelector=closingSelector,this.subscribing=!1,this.openBuffer()}return __extends(BufferWhenSubscriber,_super),BufferWhenSubscriber.prototype._next=function(value){this.buffer.push(value)},BufferWhenSubscriber.prototype._complete=function(){var buffer=this.buffer;buffer&&this.destination.next(buffer),_super.prototype._complete.call(this)},BufferWhenSubscriber.prototype._unsubscribe=function(){this.buffer=null,this.subscribing=!1},BufferWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openBuffer()},BufferWhenSubscriber.prototype.notifyComplete=function(){this.subscribing?this.complete():this.openBuffer()},BufferWhenSubscriber.prototype.openBuffer=function(){var closingSubscription=this.closingSubscription;closingSubscription&&(this.remove(closingSubscription),closingSubscription.unsubscribe());var buffer=this.buffer;this.buffer&&this.destination.next(buffer),this.buffer=[];var closingNotifier=tryCatch_1.tryCatch(this.closingSelector)();closingNotifier===errorObject_1.errorObject?this.error(errorObject_1.errorObject.e):(closingSubscription=new Subscription_1.Subscription,this.closingSubscription=closingSubscription,this.add(closingSubscription),this.subscribing=!0,closingSubscription.add(subscribeToResult_1.subscribeToResult(this,closingNotifier)),this.subscribing=!1)},BufferWhenSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function catchError(selector){return function(source){var operator=new CatchOperator(selector),caught=source.lift(operator);return operator.caught=caught}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.catchError=catchError;var CatchOperator=function(){function CatchOperator(selector){this.selector=selector}return CatchOperator.prototype.call=function(subscriber,source){return source.subscribe(new CatchSubscriber(subscriber,this.selector,this.caught))},CatchOperator}(),CatchSubscriber=function(_super){function CatchSubscriber(destination,selector,caught){_super.call(this,destination),this.selector=selector,this.caught=caught}return __extends(CatchSubscriber,_super),CatchSubscriber.prototype.error=function(err){if(!this.isStopped){var result=void 0;try{result=this.selector(err,this.caught)}catch(err2){return void _super.prototype.error.call(this,err2)}this._unsubscribeAndRecycle(),this.add(subscribeToResult_1.subscribeToResult(this,result))}},CatchSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function combineAll(project){return function(source){return source.lift(new combineLatest_1.CombineLatestOperator(project))}}var combineLatest_1=__webpack_require__(31);exports.combineAll=combineAll},function(module,exports,__webpack_require__){"use strict";function concat(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return function(source){return source.lift.call(concat_1.concat.apply(void 0,[source].concat(observables)))}}var concat_1=__webpack_require__(18),concat_2=__webpack_require__(18);exports.concatStatic=concat_2.concat,exports.concat=concat},function(module,exports,__webpack_require__){"use strict";function concatMapTo(innerObservable,resultSelector){return concatMap_1.concatMap(function(){return innerObservable},resultSelector)}var concatMap_1=__webpack_require__(47);exports.concatMapTo=concatMapTo},function(module,exports,__webpack_require__){"use strict";function count(predicate){return function(source){return source.lift(new CountOperator(predicate,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.count=count;var CountOperator=function(){function CountOperator(predicate,source){this.predicate=predicate,this.source=source}return CountOperator.prototype.call=function(subscriber,source){return source.subscribe(new CountSubscriber(subscriber,this.predicate,this.source))},CountOperator}(),CountSubscriber=function(_super){function CountSubscriber(destination,predicate,source){_super.call(this,destination),this.predicate=predicate,this.source=source,this.count=0,this.index=0}return __extends(CountSubscriber,_super),CountSubscriber.prototype._next=function(value){this.predicate?this._tryPredicate(value):this.count++},CountSubscriber.prototype._tryPredicate=function(value){var result;try{result=this.predicate(value,this.index++,this.source)}catch(err){return void this.destination.error(err)}result&&this.count++},CountSubscriber.prototype._complete=function(){this.destination.next(this.count),this.destination.complete()},CountSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function debounce(durationSelector){return function(source){return source.lift(new DebounceOperator(durationSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.debounce=debounce;var DebounceOperator=function(){function DebounceOperator(durationSelector){this.durationSelector=durationSelector}return DebounceOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceSubscriber(subscriber,this.durationSelector))},DebounceOperator}(),DebounceSubscriber=function(_super){function DebounceSubscriber(destination,durationSelector){_super.call(this,destination),this.durationSelector=durationSelector,this.hasValue=!1,this.durationSubscription=null}return __extends(DebounceSubscriber,_super),DebounceSubscriber.prototype._next=function(value){try{var result=this.durationSelector.call(this,value);result&&this._tryNext(value,result)}catch(err){this.destination.error(err)}},DebounceSubscriber.prototype._complete=function(){this.emitValue(),this.destination.complete()},DebounceSubscriber.prototype._tryNext=function(value,duration){var subscription=this.durationSubscription;this.value=value,this.hasValue=!0,subscription&&(subscription.unsubscribe(),this.remove(subscription)),subscription=subscribeToResult_1.subscribeToResult(this,duration),subscription.closed||this.add(this.durationSubscription=subscription)},DebounceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue()},DebounceSubscriber.prototype.notifyComplete=function(){this.emitValue()},DebounceSubscriber.prototype.emitValue=function(){if(this.hasValue){var value=this.value,subscription=this.durationSubscription;subscription&&(this.durationSubscription=null,subscription.unsubscribe(),this.remove(subscription)),this.value=null,this.hasValue=!1,_super.prototype._next.call(this,value)}},DebounceSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=async_1.async),function(source){return source.lift(new DebounceTimeOperator(dueTime,scheduler))}}function dispatchNext(subscriber){subscriber.debouncedNext()}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),async_1=__webpack_require__(4);exports.debounceTime=debounceTime;var DebounceTimeOperator=function(){function DebounceTimeOperator(dueTime,scheduler){this.dueTime=dueTime,this.scheduler=scheduler}return DebounceTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceTimeSubscriber(subscriber,this.dueTime,this.scheduler))},DebounceTimeOperator}(),DebounceTimeSubscriber=function(_super){function DebounceTimeSubscriber(destination,dueTime,scheduler){_super.call(this,destination),this.dueTime=dueTime,this.scheduler=scheduler,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}return __extends(DebounceTimeSubscriber,_super),DebounceTimeSubscriber.prototype._next=function(value){this.clearDebounce(),this.lastValue=value,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(dispatchNext,this.dueTime,this))},DebounceTimeSubscriber.prototype._complete=function(){this.debouncedNext(),this.destination.complete()},DebounceTimeSubscriber.prototype.debouncedNext=function(){this.clearDebounce(),this.hasValue&&(this.destination.next(this.lastValue),this.lastValue=null,this.hasValue=!1)},DebounceTimeSubscriber.prototype.clearDebounce=function(){var debouncedSubscription=this.debouncedSubscription;null!==debouncedSubscription&&(this.remove(debouncedSubscription),debouncedSubscription.unsubscribe(),this.debouncedSubscription=null)},DebounceTimeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function delay(delay,scheduler){void 0===scheduler&&(scheduler=async_1.async);var absoluteDelay=isDate_1.isDate(delay),delayFor=absoluteDelay?+delay-scheduler.now():Math.abs(delay);return function(source){return source.lift(new DelayOperator(delayFor,scheduler))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},async_1=__webpack_require__(4),isDate_1=__webpack_require__(40),Subscriber_1=__webpack_require__(1),Notification_1=__webpack_require__(17);exports.delay=delay;var DelayOperator=function(){function DelayOperator(delay,scheduler){this.delay=delay,this.scheduler=scheduler}return DelayOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelaySubscriber(subscriber,this.delay,this.scheduler))},DelayOperator}(),DelaySubscriber=function(_super){function DelaySubscriber(destination,delay,scheduler){_super.call(this,destination),this.delay=delay,this.scheduler=scheduler,this.queue=[],this.active=!1,this.errored=!1}return __extends(DelaySubscriber,_super),DelaySubscriber.dispatch=function(state){for(var source=state.source,queue=source.queue,scheduler=state.scheduler,destination=state.destination;queue.length>0&&queue[0].time-scheduler.now()<=0;)queue.shift().notification.observe(destination);if(queue.length>0){var delay_1=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay_1)}else source.active=!1},DelaySubscriber.prototype._schedule=function(scheduler){this.active=!0,this.add(scheduler.schedule(DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}))},DelaySubscriber.prototype.scheduleNotification=function(notification){if(!0!==this.errored){var scheduler=this.scheduler,message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message),!1===this.active&&this._schedule(scheduler)}},DelaySubscriber.prototype._next=function(value){this.scheduleNotification(Notification_1.Notification.createNext(value))},DelaySubscriber.prototype._error=function(err){this.errored=!0,this.queue=[],this.destination.error(err)},DelaySubscriber.prototype._complete=function(){this.scheduleNotification(Notification_1.Notification.createComplete())},DelaySubscriber}(Subscriber_1.Subscriber),DelayMessage=function(){function DelayMessage(time,notification){this.time=time,this.notification=notification}return DelayMessage}()},function(module,exports,__webpack_require__){"use strict";function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return new SubscriptionDelayObservable(source,subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector))}:function(source){return source.lift(new DelayWhenOperator(delayDurationSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Observable_1=__webpack_require__(0),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.delayWhen=delayWhen;var DelayWhenOperator=function(){function DelayWhenOperator(delayDurationSelector){this.delayDurationSelector=delayDurationSelector}return DelayWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelayWhenSubscriber(subscriber,this.delayDurationSelector))},DelayWhenOperator}(),DelayWhenSubscriber=function(_super){function DelayWhenSubscriber(destination,delayDurationSelector){_super.call(this,destination),this.delayDurationSelector=delayDurationSelector,this.completed=!1,this.delayNotifierSubscriptions=[],this.values=[]}return __extends(DelayWhenSubscriber,_super),DelayWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(outerValue),this.removeSubscription(innerSub),this.tryComplete()},DelayWhenSubscriber.prototype.notifyError=function(error,innerSub){this._error(error)},DelayWhenSubscriber.prototype.notifyComplete=function(innerSub){var value=this.removeSubscription(innerSub);value&&this.destination.next(value),this.tryComplete()},DelayWhenSubscriber.prototype._next=function(value){try{var delayNotifier=this.delayDurationSelector(value);delayNotifier&&this.tryDelay(delayNotifier,value)}catch(err){this.destination.error(err)}},DelayWhenSubscriber.prototype._complete=function(){this.completed=!0,this.tryComplete()},DelayWhenSubscriber.prototype.removeSubscription=function(subscription){subscription.unsubscribe();var subscriptionIdx=this.delayNotifierSubscriptions.indexOf(subscription),value=null;return-1!==subscriptionIdx&&(value=this.values[subscriptionIdx],this.delayNotifierSubscriptions.splice(subscriptionIdx,1),this.values.splice(subscriptionIdx,1)),value},DelayWhenSubscriber.prototype.tryDelay=function(delayNotifier,value){var notifierSubscription=subscribeToResult_1.subscribeToResult(this,delayNotifier,value);notifierSubscription&&!notifierSubscription.closed&&(this.add(notifierSubscription),this.delayNotifierSubscriptions.push(notifierSubscription)),this.values.push(value)},DelayWhenSubscriber.prototype.tryComplete=function(){this.completed&&0===this.delayNotifierSubscriptions.length&&this.destination.complete()},DelayWhenSubscriber}(OuterSubscriber_1.OuterSubscriber),SubscriptionDelayObservable=function(_super){function SubscriptionDelayObservable(source,subscriptionDelay){_super.call(this),this.source=source,this.subscriptionDelay=subscriptionDelay}return __extends(SubscriptionDelayObservable,_super),SubscriptionDelayObservable.prototype._subscribe=function(subscriber){this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber,this.source))},SubscriptionDelayObservable}(Observable_1.Observable),SubscriptionDelaySubscriber=function(_super){function SubscriptionDelaySubscriber(parent,source){_super.call(this),this.parent=parent,this.source=source,this.sourceSubscribed=!1}return __extends(SubscriptionDelaySubscriber,_super),SubscriptionDelaySubscriber.prototype._next=function(unused){this.subscribeToSource()},SubscriptionDelaySubscriber.prototype._error=function(err){this.unsubscribe(),this.parent.error(err)},SubscriptionDelaySubscriber.prototype._complete=function(){this.subscribeToSource()},SubscriptionDelaySubscriber.prototype.subscribeToSource=function(){this.sourceSubscribed||(this.sourceSubscribed=!0,this.unsubscribe(),this.source.subscribe(this.parent))},SubscriptionDelaySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function dematerialize(){return function(source){return source.lift(new DeMaterializeOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.dematerialize=dematerialize;var DeMaterializeOperator=function(){function DeMaterializeOperator(){}return DeMaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DeMaterializeSubscriber(subscriber))},DeMaterializeOperator}(),DeMaterializeSubscriber=function(_super){function DeMaterializeSubscriber(destination){_super.call(this,destination)}return __extends(DeMaterializeSubscriber,_super),DeMaterializeSubscriber.prototype._next=function(value){value.observe(this.destination)},DeMaterializeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function distinct(keySelector,flushes){return function(source){return source.lift(new DistinctOperator(keySelector,flushes))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3),Set_1=__webpack_require__(480);exports.distinct=distinct;var DistinctOperator=function(){function DistinctOperator(keySelector,flushes){this.keySelector=keySelector,this.flushes=flushes}return DistinctOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctSubscriber(subscriber,this.keySelector,this.flushes))},DistinctOperator}(),DistinctSubscriber=function(_super){function DistinctSubscriber(destination,keySelector,flushes){_super.call(this,destination),this.keySelector=keySelector,this.values=new Set_1.Set,flushes&&this.add(subscribeToResult_1.subscribeToResult(this,flushes))}return __extends(DistinctSubscriber,_super),DistinctSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values.clear()},DistinctSubscriber.prototype.notifyError=function(error,innerSub){this._error(error)},DistinctSubscriber.prototype._next=function(value){this.keySelector?this._useKeySelector(value):this._finalizeNext(value,value)},DistinctSubscriber.prototype._useKeySelector=function(value){var key,destination=this.destination;try{key=this.keySelector(value)}catch(err){return void destination.error(err)}this._finalizeNext(key,value)},DistinctSubscriber.prototype._finalizeNext=function(key,value){var values=this.values;values.has(key)||(values.add(key),this.destination.next(value))},DistinctSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.DistinctSubscriber=DistinctSubscriber},function(module,exports,__webpack_require__){"use strict";function distinctUntilKeyChanged(key,compare){return distinctUntilChanged_1.distinctUntilChanged(function(x,y){return compare?compare(x[key],y[key]):x[key]===y[key]})}var distinctUntilChanged_1=__webpack_require__(49);exports.distinctUntilKeyChanged=distinctUntilKeyChanged},function(module,exports,__webpack_require__){"use strict";function elementAt(index,defaultValue){return function(source){return source.lift(new ElementAtOperator(index,defaultValue))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),ArgumentOutOfRangeError_1=__webpack_require__(25);exports.elementAt=elementAt;var ElementAtOperator=function(){function ElementAtOperator(index,defaultValue){if(this.index=index,this.defaultValue=defaultValue,index<0)throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError}return ElementAtOperator.prototype.call=function(subscriber,source){return source.subscribe(new ElementAtSubscriber(subscriber,this.index,this.defaultValue))},ElementAtOperator}(),ElementAtSubscriber=function(_super){function ElementAtSubscriber(destination,index,defaultValue){_super.call(this,destination),this.index=index,this.defaultValue=defaultValue}return __extends(ElementAtSubscriber,_super),ElementAtSubscriber.prototype._next=function(x){0==this.index--&&(this.destination.next(x),this.destination.complete())},ElementAtSubscriber.prototype._complete=function(){var destination=this.destination;this.index>=0&&(void 0!==this.defaultValue?destination.next(this.defaultValue):destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError)),destination.complete()},ElementAtSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function every(predicate,thisArg){return function(source){return source.lift(new EveryOperator(predicate,thisArg,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.every=every;var EveryOperator=function(){function EveryOperator(predicate,thisArg,source){this.predicate=predicate,this.thisArg=thisArg,this.source=source}return EveryOperator.prototype.call=function(observer,source){return source.subscribe(new EverySubscriber(observer,this.predicate,this.thisArg,this.source))},EveryOperator}(),EverySubscriber=function(_super){function EverySubscriber(destination,predicate,thisArg,source){_super.call(this,destination),this.predicate=predicate,this.thisArg=thisArg,this.source=source,this.index=0,this.thisArg=thisArg||this}return __extends(EverySubscriber,_super),EverySubscriber.prototype.notifyComplete=function(everyValueMatch){this.destination.next(everyValueMatch),this.destination.complete()},EverySubscriber.prototype._next=function(value){var result=!1;try{result=this.predicate.call(this.thisArg,value,this.index++,this.source)}catch(err){return void this.destination.error(err)}result||this.notifyComplete(!1)},EverySubscriber.prototype._complete=function(){this.notifyComplete(!0)},EverySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function exhaust(){return function(source){return source.lift(new SwitchFirstOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.exhaust=exhaust;var SwitchFirstOperator=function(){function SwitchFirstOperator(){}return SwitchFirstOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstSubscriber(subscriber))},SwitchFirstOperator}(),SwitchFirstSubscriber=function(_super){function SwitchFirstSubscriber(destination){_super.call(this,destination),this.hasCompleted=!1,this.hasSubscription=!1}return __extends(SwitchFirstSubscriber,_super),SwitchFirstSubscriber.prototype._next=function(value){this.hasSubscription||(this.hasSubscription=!0,this.add(subscribeToResult_1.subscribeToResult(this,value)))},SwitchFirstSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete()},SwitchFirstSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub),this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},SwitchFirstSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function exhaustMap(project,resultSelector){return function(source){return source.lift(new SwitchFirstMapOperator(project,resultSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.exhaustMap=exhaustMap;var SwitchFirstMapOperator=function(){function SwitchFirstMapOperator(project,resultSelector){this.project=project,this.resultSelector=resultSelector}return SwitchFirstMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstMapSubscriber(subscriber,this.project,this.resultSelector))},SwitchFirstMapOperator}(),SwitchFirstMapSubscriber=function(_super){function SwitchFirstMapSubscriber(destination,project,resultSelector){_super.call(this,destination),this.project=project,this.resultSelector=resultSelector,this.hasSubscription=!1,this.hasCompleted=!1,this.index=0}return __extends(SwitchFirstMapSubscriber,_super),SwitchFirstMapSubscriber.prototype._next=function(value){this.hasSubscription||this.tryNext(value)},SwitchFirstMapSubscriber.prototype.tryNext=function(value){var index=this.index++,destination=this.destination;try{var result=this.project(value,index);this.hasSubscription=!0,this.add(subscribeToResult_1.subscribeToResult(this,result,value,index))}catch(err){destination.error(err)}},SwitchFirstMapSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete()},SwitchFirstMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;resultSelector?this.trySelectResult(outerValue,innerValue,outerIndex,innerIndex):destination.next(innerValue)},SwitchFirstMapSubscriber.prototype.trySelectResult=function(outerValue,innerValue,outerIndex,innerIndex){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;try{var result=resultSelector(outerValue,innerValue,outerIndex,innerIndex);destination.next(result)}catch(err){destination.error(err)}},SwitchFirstMapSubscriber.prototype.notifyError=function(err){this.destination.error(err)},SwitchFirstMapSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub),this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},SwitchFirstMapSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function expand(project,concurrent,scheduler){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),void 0===scheduler&&(scheduler=void 0),concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent,function(source){return source.lift(new ExpandOperator(project,concurrent,scheduler))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.expand=expand;var ExpandOperator=function(){function ExpandOperator(project,concurrent,scheduler){this.project=project,this.concurrent=concurrent,this.scheduler=scheduler}return ExpandOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExpandSubscriber(subscriber,this.project,this.concurrent,this.scheduler))},ExpandOperator}();exports.ExpandOperator=ExpandOperator;var ExpandSubscriber=function(_super){function ExpandSubscriber(destination,project,concurrent,scheduler){_super.call(this,destination),this.project=project,this.concurrent=concurrent,this.scheduler=scheduler,this.index=0,this.active=0,this.hasCompleted=!1,concurrent<Number.POSITIVE_INFINITY&&(this.buffer=[])}return __extends(ExpandSubscriber,_super),ExpandSubscriber.dispatch=function(arg){var subscriber=arg.subscriber,result=arg.result,value=arg.value,index=arg.index;subscriber.subscribeToProjection(result,value,index)},ExpandSubscriber.prototype._next=function(value){var destination=this.destination;if(destination.closed)return void this._complete();var index=this.index++;if(this.active<this.concurrent){destination.next(value);var result=tryCatch_1.tryCatch(this.project)(value,index);if(result===errorObject_1.errorObject)destination.error(errorObject_1.errorObject.e);else if(this.scheduler){var state={subscriber:this,result:result,value:value,index:index};this.add(this.scheduler.schedule(ExpandSubscriber.dispatch,0,state))}else this.subscribeToProjection(result,value,index)}else this.buffer.push(value)},ExpandSubscriber.prototype.subscribeToProjection=function(result,value,index){this.active++,this.add(subscribeToResult_1.subscribeToResult(this,result,value,index))},ExpandSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasCompleted&&0===this.active&&this.destination.complete()},ExpandSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this._next(innerValue)},ExpandSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub),this.active--,buffer&&buffer.length>0&&this._next(buffer.shift()),this.hasCompleted&&0===this.active&&this.destination.complete()},ExpandSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.ExpandSubscriber=ExpandSubscriber},function(module,exports,__webpack_require__){"use strict";function finalize(callback){return function(source){return source.lift(new FinallyOperator(callback))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Subscription_1=__webpack_require__(5);exports.finalize=finalize;var FinallyOperator=function(){function FinallyOperator(callback){this.callback=callback}return FinallyOperator.prototype.call=function(subscriber,source){return source.subscribe(new FinallySubscriber(subscriber,this.callback))},FinallyOperator}(),FinallySubscriber=function(_super){function FinallySubscriber(destination,callback){_super.call(this,destination),this.add(new Subscription_1.Subscription(callback))}return __extends(FinallySubscriber,_super),FinallySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function findIndex(predicate,thisArg){return function(source){return source.lift(new find_1.FindValueOperator(predicate,source,!0,thisArg))}}var find_1=__webpack_require__(51);exports.findIndex=findIndex},function(module,exports,__webpack_require__){"use strict";function first(predicate,resultSelector,defaultValue){return function(source){return source.lift(new FirstOperator(predicate,resultSelector,defaultValue,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),EmptyError_1=__webpack_require__(38);exports.first=first;var FirstOperator=function(){function FirstOperator(predicate,resultSelector,defaultValue,source){this.predicate=predicate,this.resultSelector=resultSelector,this.defaultValue=defaultValue,this.source=source}return FirstOperator.prototype.call=function(observer,source){return source.subscribe(new FirstSubscriber(observer,this.predicate,this.resultSelector,this.defaultValue,this.source))},FirstOperator}(),FirstSubscriber=function(_super){function FirstSubscriber(destination,predicate,resultSelector,defaultValue,source){_super.call(this,destination),this.predicate=predicate,this.resultSelector=resultSelector,this.defaultValue=defaultValue,this.source=source,this.index=0,this.hasCompleted=!1,this._emitted=!1}return __extends(FirstSubscriber,_super),FirstSubscriber.prototype._next=function(value){var index=this.index++;this.predicate?this._tryPredicate(value,index):this._emit(value,index)},FirstSubscriber.prototype._tryPredicate=function(value,index){var result;try{result=this.predicate(value,index,this.source)}catch(err){return void this.destination.error(err)}result&&this._emit(value,index)},FirstSubscriber.prototype._emit=function(value,index){if(this.resultSelector)return void this._tryResultSelector(value,index);this._emitFinal(value)},FirstSubscriber.prototype._tryResultSelector=function(value,index){var result;try{result=this.resultSelector(value,index)}catch(err){return void this.destination.error(err)}this._emitFinal(result)},FirstSubscriber.prototype._emitFinal=function(value){var destination=this.destination;this._emitted||(this._emitted=!0,destination.next(value),destination.complete(),this.hasCompleted=!0)},FirstSubscriber.prototype._complete=function(){var destination=this.destination;this.hasCompleted||void 0===this.defaultValue?this.hasCompleted||destination.error(new EmptyError_1.EmptyError):(destination.next(this.defaultValue),destination.complete())},FirstSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return function(source){return source.lift(new GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Subscription_1=__webpack_require__(5),Observable_1=__webpack_require__(0),Subject_1=__webpack_require__(6),Map_1=__webpack_require__(478),FastMap_1=__webpack_require__(476);exports.groupBy=groupBy;var GroupByOperator=function(){function GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector){this.keySelector=keySelector,this.elementSelector=elementSelector,this.durationSelector=durationSelector,this.subjectSelector=subjectSelector}return GroupByOperator.prototype.call=function(subscriber,source){return source.subscribe(new GroupBySubscriber(subscriber,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector))},GroupByOperator}(),GroupBySubscriber=function(_super){function GroupBySubscriber(destination,keySelector,elementSelector,durationSelector,subjectSelector){_super.call(this,destination),this.keySelector=keySelector,this.elementSelector=elementSelector,this.durationSelector=durationSelector,this.subjectSelector=subjectSelector,this.groups=null,this.attemptedToUnsubscribe=!1,this.count=0}return __extends(GroupBySubscriber,_super),GroupBySubscriber.prototype._next=function(value){var key;try{key=this.keySelector(value)}catch(err){return void this.error(err)}this._group(value,key)},GroupBySubscriber.prototype._group=function(value,key){var groups=this.groups;groups||(groups=this.groups="string"==typeof key?new FastMap_1.FastMap:new Map_1.Map);var element,group=groups.get(key);if(this.elementSelector)try{element=this.elementSelector(value)}catch(err){this.error(err)}else element=value;if(!group){group=this.subjectSelector?this.subjectSelector():new Subject_1.Subject,groups.set(key,group);var groupedObservable=new GroupedObservable(key,group,this);if(this.destination.next(groupedObservable),this.durationSelector){var duration=void 0;try{duration=this.durationSelector(new GroupedObservable(key,group))}catch(err){return void this.error(err)}this.add(duration.subscribe(new GroupDurationSubscriber(key,group,this)))}}group.closed||group.next(element)},GroupBySubscriber.prototype._error=function(err){var groups=this.groups;groups&&(groups.forEach(function(group,key){group.error(err)}),groups.clear()),this.destination.error(err)},GroupBySubscriber.prototype._complete=function(){var groups=this.groups;groups&&(groups.forEach(function(group,key){group.complete()}),groups.clear()),this.destination.complete()},GroupBySubscriber.prototype.removeGroup=function(key){this.groups.delete(key)},GroupBySubscriber.prototype.unsubscribe=function(){this.closed||(this.attemptedToUnsubscribe=!0,0===this.count&&_super.prototype.unsubscribe.call(this))},GroupBySubscriber}(Subscriber_1.Subscriber),GroupDurationSubscriber=function(_super){function GroupDurationSubscriber(key,group,parent){_super.call(this,group),this.key=key,this.group=group,this.parent=parent}return __extends(GroupDurationSubscriber,_super),GroupDurationSubscriber.prototype._next=function(value){this.complete()},GroupDurationSubscriber.prototype._unsubscribe=function(){var _a=this,parent=_a.parent,key=_a.key;this.key=this.parent=null,parent&&parent.removeGroup(key)},GroupDurationSubscriber}(Subscriber_1.Subscriber),GroupedObservable=function(_super){function GroupedObservable(key,groupSubject,refCountSubscription){_super.call(this),this.key=key,this.groupSubject=groupSubject,this.refCountSubscription=refCountSubscription}return __extends(GroupedObservable,_super),GroupedObservable.prototype._subscribe=function(subscriber){var subscription=new Subscription_1.Subscription,_a=this,refCountSubscription=_a.refCountSubscription,groupSubject=_a.groupSubject;return refCountSubscription&&!refCountSubscription.closed&&subscription.add(new InnerRefCountSubscription(refCountSubscription)),subscription.add(groupSubject.subscribe(subscriber)),subscription},GroupedObservable}(Observable_1.Observable);exports.GroupedObservable=GroupedObservable;var InnerRefCountSubscription=function(_super){function InnerRefCountSubscription(parent){_super.call(this),this.parent=parent,parent.count++}return __extends(InnerRefCountSubscription,_super),InnerRefCountSubscription.prototype.unsubscribe=function(){var parent=this.parent;parent.closed||this.closed||(_super.prototype.unsubscribe.call(this),parent.count-=1,0===parent.count&&parent.attemptedToUnsubscribe&&parent.unsubscribe())},InnerRefCountSubscription}(Subscription_1.Subscription)},function(module,exports,__webpack_require__){"use strict";function ignoreElements(){return function(source){return source.lift(new IgnoreElementsOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),noop_1=__webpack_require__(58);exports.ignoreElements=ignoreElements;var IgnoreElementsOperator=function(){function IgnoreElementsOperator(){}return IgnoreElementsOperator.prototype.call=function(subscriber,source){return source.subscribe(new IgnoreElementsSubscriber(subscriber))},IgnoreElementsOperator}(),IgnoreElementsSubscriber=function(_super){function IgnoreElementsSubscriber(){_super.apply(this,arguments)}return __extends(IgnoreElementsSubscriber,_super),IgnoreElementsSubscriber.prototype._next=function(unused){noop_1.noop()},IgnoreElementsSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function isEmpty(){return function(source){return source.lift(new IsEmptyOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.isEmpty=isEmpty;var IsEmptyOperator=function(){function IsEmptyOperator(){}return IsEmptyOperator.prototype.call=function(observer,source){return source.subscribe(new IsEmptySubscriber(observer))},IsEmptyOperator}(),IsEmptySubscriber=function(_super){function IsEmptySubscriber(destination){_super.call(this,destination)}return __extends(IsEmptySubscriber,_super),IsEmptySubscriber.prototype.notifyComplete=function(isEmpty){var destination=this.destination;destination.next(isEmpty),destination.complete()},IsEmptySubscriber.prototype._next=function(value){this.notifyComplete(!1)},IsEmptySubscriber.prototype._complete=function(){this.notifyComplete(!0)},IsEmptySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function last(predicate,resultSelector,defaultValue){return function(source){return source.lift(new LastOperator(predicate,resultSelector,defaultValue,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),EmptyError_1=__webpack_require__(38);exports.last=last;var LastOperator=function(){function LastOperator(predicate,resultSelector,defaultValue,source){this.predicate=predicate,this.resultSelector=resultSelector,this.defaultValue=defaultValue,this.source=source}return LastOperator.prototype.call=function(observer,source){return source.subscribe(new LastSubscriber(observer,this.predicate,this.resultSelector,this.defaultValue,this.source))},LastOperator}(),LastSubscriber=function(_super){function LastSubscriber(destination,predicate,resultSelector,defaultValue,source){_super.call(this,destination),this.predicate=predicate,this.resultSelector=resultSelector,this.defaultValue=defaultValue,this.source=source,this.hasValue=!1,this.index=0,void 0!==defaultValue&&(this.lastValue=defaultValue,this.hasValue=!0)}return __extends(LastSubscriber,_super),LastSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate)this._tryPredicate(value,index);else{if(this.resultSelector)return void this._tryResultSelector(value,index);this.lastValue=value,this.hasValue=!0}},LastSubscriber.prototype._tryPredicate=function(value,index){var result;try{result=this.predicate(value,index,this.source)}catch(err){return void this.destination.error(err)}if(result){if(this.resultSelector)return void this._tryResultSelector(value,index);this.lastValue=value,this.hasValue=!0}},LastSubscriber.prototype._tryResultSelector=function(value,index){var result;try{result=this.resultSelector(value,index)}catch(err){return void this.destination.error(err)}this.lastValue=result,this.hasValue=!0},LastSubscriber.prototype._complete=function(){var destination=this.destination;this.hasValue?(destination.next(this.lastValue),destination.complete()):destination.error(new EmptyError_1.EmptyError)},LastSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function mapTo(value){return function(source){return source.lift(new MapToOperator(value))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.mapTo=mapTo;var MapToOperator=function(){function MapToOperator(value){this.value=value}return MapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapToSubscriber(subscriber,this.value))},MapToOperator}(),MapToSubscriber=function(_super){function MapToSubscriber(destination,value){_super.call(this,destination),this.value=value}return __extends(MapToSubscriber,_super),MapToSubscriber.prototype._next=function(x){this.destination.next(this.value)},MapToSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function materialize(){return function(source){return source.lift(new MaterializeOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Notification_1=__webpack_require__(17);exports.materialize=materialize;var MaterializeOperator=function(){function MaterializeOperator(){}return MaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new MaterializeSubscriber(subscriber))},MaterializeOperator}(),MaterializeSubscriber=function(_super){function MaterializeSubscriber(destination){_super.call(this,destination)}return __extends(MaterializeSubscriber,_super),MaterializeSubscriber.prototype._next=function(value){this.destination.next(Notification_1.Notification.createNext(value))},MaterializeSubscriber.prototype._error=function(err){var destination=this.destination;destination.next(Notification_1.Notification.createError(err)),destination.complete()},MaterializeSubscriber.prototype._complete=function(){var destination=this.destination;destination.next(Notification_1.Notification.createComplete()),destination.complete()},MaterializeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function max(comparer){var max="function"==typeof comparer?function(x,y){return comparer(x,y)>0?x:y}:function(x,y){return x>y?x:y};return reduce_1.reduce(max)}var reduce_1=__webpack_require__(21);exports.max=max},function(module,exports,__webpack_require__){"use strict";function merge(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return function(source){return source.lift.call(merge_1.merge.apply(void 0,[source].concat(observables)))}}var merge_1=__webpack_require__(30),merge_2=__webpack_require__(30);exports.mergeStatic=merge_2.merge,exports.merge=merge},function(module,exports,__webpack_require__){"use strict";function mergeMapTo(innerObservable,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),"number"==typeof resultSelector&&(concurrent=resultSelector,resultSelector=null),function(source){return source.lift(new MergeMapToOperator(innerObservable,resultSelector,concurrent))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.mergeMapTo=mergeMapTo;var MergeMapToOperator=function(){function MergeMapToOperator(ish,resultSelector,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),this.ish=ish,this.resultSelector=resultSelector,this.concurrent=concurrent}return MergeMapToOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapToSubscriber(observer,this.ish,this.resultSelector,this.concurrent))},MergeMapToOperator}();exports.MergeMapToOperator=MergeMapToOperator;var MergeMapToSubscriber=function(_super){function MergeMapToSubscriber(destination,ish,resultSelector,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),_super.call(this,destination),this.ish=ish,this.resultSelector=resultSelector,this.concurrent=concurrent,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return __extends(MergeMapToSubscriber,_super),MergeMapToSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var resultSelector=this.resultSelector,index=this.index++,ish=this.ish,destination=this.destination;this.active++,this._innerSub(ish,destination,resultSelector,value,index)}else this.buffer.push(value)},MergeMapToSubscriber.prototype._innerSub=function(ish,destination,resultSelector,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index))},MergeMapToSubscriber.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete()},MergeMapToSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;resultSelector?this.trySelectResult(outerValue,innerValue,outerIndex,innerIndex):destination.next(innerValue)},MergeMapToSubscriber.prototype.trySelectResult=function(outerValue,innerValue,outerIndex,innerIndex){var result,_a=this,resultSelector=_a.resultSelector,destination=_a.destination;try{result=resultSelector(outerValue,innerValue,outerIndex,innerIndex)}catch(err){return void destination.error(err)}destination.next(result)},MergeMapToSubscriber.prototype.notifyError=function(err){this.destination.error(err)},MergeMapToSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub),this.active--,buffer.length>0?this._next(buffer.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},MergeMapToSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.MergeMapToSubscriber=MergeMapToSubscriber},function(module,exports,__webpack_require__){"use strict";function mergeScan(accumulator,seed,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),function(source){return source.lift(new MergeScanOperator(accumulator,seed,concurrent))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2);exports.mergeScan=mergeScan;var MergeScanOperator=function(){function MergeScanOperator(accumulator,seed,concurrent){this.accumulator=accumulator,this.seed=seed,this.concurrent=concurrent}return MergeScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new MergeScanSubscriber(subscriber,this.accumulator,this.seed,this.concurrent))},MergeScanOperator}();exports.MergeScanOperator=MergeScanOperator;var MergeScanSubscriber=function(_super){function MergeScanSubscriber(destination,accumulator,acc,concurrent){_super.call(this,destination),this.accumulator=accumulator,this.acc=acc,this.concurrent=concurrent,this.hasValue=!1,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}return __extends(MergeScanSubscriber,_super),MergeScanSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var index=this.index++,ish=tryCatch_1.tryCatch(this.accumulator)(this.acc,value),destination=this.destination;ish===errorObject_1.errorObject?destination.error(errorObject_1.errorObject.e):(this.active++,this._innerSub(ish,value,index))}else this.buffer.push(value)},MergeScanSubscriber.prototype._innerSub=function(ish,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index))},MergeScanSubscriber.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())},MergeScanSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var destination=this.destination;this.acc=innerValue,this.hasValue=!0,destination.next(innerValue)},MergeScanSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub),this.active--,buffer.length>0?this._next(buffer.shift()):0===this.active&&this.hasCompleted&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())},MergeScanSubscriber}(OuterSubscriber_1.OuterSubscriber);exports.MergeScanSubscriber=MergeScanSubscriber},function(module,exports,__webpack_require__){"use strict";function min(comparer){var min="function"==typeof comparer?function(x,y){return comparer(x,y)<0?x:y}:function(x,y){return x<y?x:y};return reduce_1.reduce(min)}var reduce_1=__webpack_require__(21);exports.min=min},function(module,exports,__webpack_require__){"use strict";function pairwise(){return function(source){return source.lift(new PairwiseOperator)}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.pairwise=pairwise;var PairwiseOperator=function(){function PairwiseOperator(){}return PairwiseOperator.prototype.call=function(subscriber,source){return source.subscribe(new PairwiseSubscriber(subscriber))},PairwiseOperator}(),PairwiseSubscriber=function(_super){function PairwiseSubscriber(destination){_super.call(this,destination),this.hasPrev=!1}return __extends(PairwiseSubscriber,_super),PairwiseSubscriber.prototype._next=function(value){this.hasPrev?this.destination.next([this.prev,value]):this.hasPrev=!0,this.prev=value},PairwiseSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function partition(predicate,thisArg){return function(source){return[filter_1.filter(predicate,thisArg)(source),filter_1.filter(not_1.not(predicate,thisArg))(source)]}}var not_1=__webpack_require__(482),filter_1=__webpack_require__(50);exports.partition=partition},function(module,exports,__webpack_require__){"use strict";function pluck(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i-0]=arguments[_i];var length=properties.length;if(0===length)throw new Error("list of properties cannot be empty.");return function(source){return map_1.map(plucker(properties,length))(source)}}function plucker(props,length){return function(x){for(var currentProp=x,i=0;i<length;i++){var p=currentProp[props[i]];if(void 0===p)return;currentProp=p}return currentProp}}var map_1=__webpack_require__(19);exports.pluck=pluck},function(module,exports,__webpack_require__){"use strict";function publish(selector){return selector?multicast_1.multicast(function(){return new Subject_1.Subject},selector):multicast_1.multicast(new Subject_1.Subject)}var Subject_1=__webpack_require__(6),multicast_1=__webpack_require__(15);exports.publish=publish},function(module,exports,__webpack_require__){"use strict";function publishBehavior(value){return function(source){return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source)}}var BehaviorSubject_1=__webpack_require__(66),multicast_1=__webpack_require__(15);exports.publishBehavior=publishBehavior},function(module,exports,__webpack_require__){"use strict";function publishLast(){return function(source){return multicast_1.multicast(new AsyncSubject_1.AsyncSubject)(source)}}var AsyncSubject_1=__webpack_require__(28),multicast_1=__webpack_require__(15);exports.publishLast=publishLast},function(module,exports,__webpack_require__){"use strict";function publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler){selectorOrScheduler&&"function"!=typeof selectorOrScheduler&&(scheduler=selectorOrScheduler);var selector="function"==typeof selectorOrScheduler?selectorOrScheduler:void 0,subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler);return function(source){return multicast_1.multicast(function(){return subject},selector)(source)}}var ReplaySubject_1=__webpack_require__(29),multicast_1=__webpack_require__(15);exports.publishReplay=publishReplay},function(module,exports,__webpack_require__){"use strict";function race(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return function(source){return 1===observables.length&&isArray_1.isArray(observables[0])&&(observables=observables[0]),source.lift.call(race_1.race.apply(void 0,[source].concat(observables)))}}var isArray_1=__webpack_require__(11),race_1=__webpack_require__(44);exports.race=race},function(module,exports,__webpack_require__){"use strict";function repeat(count){return void 0===count&&(count=-1),function(source){return 0===count?new EmptyObservable_1.EmptyObservable:count<0?source.lift(new RepeatOperator(-1,source)):source.lift(new RepeatOperator(count-1,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),EmptyObservable_1=__webpack_require__(13);exports.repeat=repeat;var RepeatOperator=function(){function RepeatOperator(count,source){this.count=count,this.source=source}return RepeatOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatSubscriber(subscriber,this.count,this.source))},RepeatOperator}(),RepeatSubscriber=function(_super){function RepeatSubscriber(destination,count,source){_super.call(this,destination),this.count=count,this.source=source}return __extends(RepeatSubscriber,_super),RepeatSubscriber.prototype.complete=function(){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(0===count)return _super.prototype.complete.call(this);count>-1&&(this.count=count-1),source.subscribe(this._unsubscribeAndRecycle())}},RepeatSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function repeatWhen(notifier){return function(source){return source.lift(new RepeatWhenOperator(notifier))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.repeatWhen=repeatWhen;var RepeatWhenOperator=function(){function RepeatWhenOperator(notifier){this.notifier=notifier}return RepeatWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatWhenSubscriber(subscriber,this.notifier,source))},RepeatWhenOperator}(),RepeatWhenSubscriber=function(_super){function RepeatWhenSubscriber(destination,notifier,source){_super.call(this,destination),this.notifier=notifier,this.source=source,this.sourceIsBeingSubscribedTo=!0}return __extends(RepeatWhenSubscriber,_super),RepeatWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.sourceIsBeingSubscribedTo=!0,this.source.subscribe(this)},RepeatWhenSubscriber.prototype.notifyComplete=function(innerSub){if(!1===this.sourceIsBeingSubscribedTo)return _super.prototype.complete.call(this)},RepeatWhenSubscriber.prototype.complete=function(){if(this.sourceIsBeingSubscribedTo=!1,!this.isStopped){if(this.retries||this.subscribeToRetries(),!this.retriesSubscription||this.retriesSubscription.closed)return _super.prototype.complete.call(this);this._unsubscribeAndRecycle(),this.notifications.next()}},RepeatWhenSubscriber.prototype._unsubscribe=function(){var _a=this,notifications=_a.notifications,retriesSubscription=_a.retriesSubscription;notifications&&(notifications.unsubscribe(),this.notifications=null),retriesSubscription&&(retriesSubscription.unsubscribe(),this.retriesSubscription=null),this.retries=null},RepeatWhenSubscriber.prototype._unsubscribeAndRecycle=function(){var _a=this,notifications=_a.notifications,retries=_a.retries,retriesSubscription=_a.retriesSubscription;return this.notifications=null,this.retries=null,this.retriesSubscription=null,_super.prototype._unsubscribeAndRecycle.call(this),this.notifications=notifications,this.retries=retries,this.retriesSubscription=retriesSubscription,this},RepeatWhenSubscriber.prototype.subscribeToRetries=function(){this.notifications=new Subject_1.Subject;var retries=tryCatch_1.tryCatch(this.notifier)(this.notifications);if(retries===errorObject_1.errorObject)return _super.prototype.complete.call(this);this.retries=retries,this.retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries)},RepeatWhenSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function retry(count){return void 0===count&&(count=-1),function(source){return source.lift(new RetryOperator(count,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.retry=retry;var RetryOperator=function(){function RetryOperator(count,source){this.count=count,this.source=source}return RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetrySubscriber(subscriber,this.count,this.source))},RetryOperator}(),RetrySubscriber=function(_super){function RetrySubscriber(destination,count,source){_super.call(this,destination),this.count=count,this.source=source}return __extends(RetrySubscriber,_super),RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(0===count)return _super.prototype.error.call(this,err);count>-1&&(this.count=count-1),source.subscribe(this._unsubscribeAndRecycle())}},RetrySubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function retryWhen(notifier){return function(source){return source.lift(new RetryWhenOperator(notifier,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.retryWhen=retryWhen;var RetryWhenOperator=function(){function RetryWhenOperator(notifier,source){this.notifier=notifier,this.source=source}return RetryWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetryWhenSubscriber(subscriber,this.notifier,this.source))},RetryWhenOperator}(),RetryWhenSubscriber=function(_super){function RetryWhenSubscriber(destination,notifier,source){_super.call(this,destination),this.notifier=notifier,this.source=source}return __extends(RetryWhenSubscriber,_super),RetryWhenSubscriber.prototype.error=function(err){if(!this.isStopped){var errors=this.errors,retries=this.retries,retriesSubscription=this.retriesSubscription;if(retries)this.errors=null,this.retriesSubscription=null;else{if(errors=new Subject_1.Subject,(retries=tryCatch_1.tryCatch(this.notifier)(errors))===errorObject_1.errorObject)return _super.prototype.error.call(this,errorObject_1.errorObject.e);retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries)}this._unsubscribeAndRecycle(),this.errors=errors,this.retries=retries,this.retriesSubscription=retriesSubscription,errors.next(err)}},RetryWhenSubscriber.prototype._unsubscribe=function(){var _a=this,errors=_a.errors,retriesSubscription=_a.retriesSubscription;errors&&(errors.unsubscribe(),this.errors=null),retriesSubscription&&(retriesSubscription.unsubscribe(),this.retriesSubscription=null),this.retries=null},RetryWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,errors=_a.errors,retries=_a.retries,retriesSubscription=_a.retriesSubscription;this.errors=null,this.retries=null,this.retriesSubscription=null,this._unsubscribeAndRecycle(),this.errors=errors,this.retries=retries,this.retriesSubscription=retriesSubscription,this.source.subscribe(this)},RetryWhenSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function sample(notifier){return function(source){return source.lift(new SampleOperator(notifier))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.sample=sample;var SampleOperator=function(){function SampleOperator(notifier){this.notifier=notifier}return SampleOperator.prototype.call=function(subscriber,source){var sampleSubscriber=new SampleSubscriber(subscriber),subscription=source.subscribe(sampleSubscriber);return subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber,this.notifier)),subscription},SampleOperator}(),SampleSubscriber=function(_super){function SampleSubscriber(){_super.apply(this,arguments),this.hasValue=!1}return __extends(SampleSubscriber,_super),SampleSubscriber.prototype._next=function(value){this.value=value,this.hasValue=!0},SampleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue()},SampleSubscriber.prototype.notifyComplete=function(){this.emitValue()},SampleSubscriber.prototype.emitValue=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.value))},SampleSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function sampleTime(period,scheduler){return void 0===scheduler&&(scheduler=async_1.async),function(source){return source.lift(new SampleTimeOperator(period,scheduler))}}function dispatchNotification(state){var subscriber=state.subscriber,period=state.period;subscriber.notifyNext(),this.schedule(state,period)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),async_1=__webpack_require__(4);exports.sampleTime=sampleTime;var SampleTimeOperator=function(){function SampleTimeOperator(period,scheduler){this.period=period,this.scheduler=scheduler}return SampleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new SampleTimeSubscriber(subscriber,this.period,this.scheduler))},SampleTimeOperator}(),SampleTimeSubscriber=function(_super){function SampleTimeSubscriber(destination,period,scheduler){_super.call(this,destination),this.period=period,this.scheduler=scheduler,this.hasValue=!1,this.add(scheduler.schedule(dispatchNotification,period,{subscriber:this,period:period}))}return __extends(SampleTimeSubscriber,_super),SampleTimeSubscriber.prototype._next=function(value){this.lastValue=value,this.hasValue=!0},SampleTimeSubscriber.prototype.notifyNext=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.lastValue))},SampleTimeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function sequenceEqual(compareTo,comparor){return function(source){return source.lift(new SequenceEqualOperator(compareTo,comparor))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7);exports.sequenceEqual=sequenceEqual;var SequenceEqualOperator=function(){function SequenceEqualOperator(compareTo,comparor){this.compareTo=compareTo,this.comparor=comparor}return SequenceEqualOperator.prototype.call=function(subscriber,source){return source.subscribe(new SequenceEqualSubscriber(subscriber,this.compareTo,this.comparor))},SequenceEqualOperator}();exports.SequenceEqualOperator=SequenceEqualOperator;var SequenceEqualSubscriber=function(_super){function SequenceEqualSubscriber(destination,compareTo,comparor){_super.call(this,destination),this.compareTo=compareTo,this.comparor=comparor,this._a=[],this._b=[],this._oneComplete=!1,this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination,this)))}return __extends(SequenceEqualSubscriber,_super),SequenceEqualSubscriber.prototype._next=function(value){this._oneComplete&&0===this._b.length?this.emit(!1):(this._a.push(value),this.checkValues())},SequenceEqualSubscriber.prototype._complete=function(){this._oneComplete?this.emit(0===this._a.length&&0===this._b.length):this._oneComplete=!0},SequenceEqualSubscriber.prototype.checkValues=function(){for(var _c=this,_a=_c._a,_b=_c._b,comparor=_c.comparor;_a.length>0&&_b.length>0;){var a=_a.shift(),b=_b.shift(),areEqual=!1;comparor?(areEqual=tryCatch_1.tryCatch(comparor)(a,b))===errorObject_1.errorObject&&this.destination.error(errorObject_1.errorObject.e):areEqual=a===b,areEqual||this.emit(!1)}},SequenceEqualSubscriber.prototype.emit=function(value){var destination=this.destination;destination.next(value),destination.complete()},SequenceEqualSubscriber.prototype.nextB=function(value){this._oneComplete&&0===this._a.length?this.emit(!1):(this._b.push(value),this.checkValues())},SequenceEqualSubscriber}(Subscriber_1.Subscriber);exports.SequenceEqualSubscriber=SequenceEqualSubscriber;var SequenceEqualCompareToSubscriber=function(_super){function SequenceEqualCompareToSubscriber(destination,parent){_super.call(this,destination),this.parent=parent}return __extends(SequenceEqualCompareToSubscriber,_super),SequenceEqualCompareToSubscriber.prototype._next=function(value){this.parent.nextB(value)},SequenceEqualCompareToSubscriber.prototype._error=function(err){this.parent.error(err)},SequenceEqualCompareToSubscriber.prototype._complete=function(){this.parent._complete()},SequenceEqualCompareToSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function shareSubjectFactory(){return new Subject_1.Subject}function share(){return function(source){return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source))}}var multicast_1=__webpack_require__(15),refCount_1=__webpack_require__(53),Subject_1=__webpack_require__(6);exports.share=share},function(module,exports,__webpack_require__){"use strict";function shareReplay(bufferSize,windowTime,scheduler){return function(source){return source.lift(shareReplayOperator(bufferSize,windowTime,scheduler))}}function shareReplayOperator(bufferSize,windowTime,scheduler){var subject,subscription,refCount=0,hasError=!1,isComplete=!1;return function(source){refCount++,subject&&!hasError||(hasError=!1,subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler),subscription=source.subscribe({next:function(value){subject.next(value)},error:function(err){hasError=!0,subject.error(err)},complete:function(){isComplete=!0,subject.complete()}}));var innerSub=subject.subscribe(this);return function(){refCount--,innerSub.unsubscribe(),subscription&&0===refCount&&isComplete&&subscription.unsubscribe()}}}var ReplaySubject_1=__webpack_require__(29);exports.shareReplay=shareReplay},function(module,exports,__webpack_require__){"use strict";function single(predicate){return function(source){return source.lift(new SingleOperator(predicate,source))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),EmptyError_1=__webpack_require__(38);exports.single=single;var SingleOperator=function(){function SingleOperator(predicate,source){this.predicate=predicate,this.source=source}return SingleOperator.prototype.call=function(subscriber,source){return source.subscribe(new SingleSubscriber(subscriber,this.predicate,this.source))},SingleOperator}(),SingleSubscriber=function(_super){function SingleSubscriber(destination,predicate,source){_super.call(this,destination),this.predicate=predicate,this.source=source,this.seenValue=!1,this.index=0}return __extends(SingleSubscriber,_super),SingleSubscriber.prototype.applySingleValue=function(value){this.seenValue?this.destination.error("Sequence contains more than one element"):(this.seenValue=!0,this.singleValue=value)},SingleSubscriber.prototype._next=function(value){var index=this.index++;this.predicate?this.tryNext(value,index):this.applySingleValue(value)},SingleSubscriber.prototype.tryNext=function(value,index){try{this.predicate(value,index,this.source)&&this.applySingleValue(value)}catch(err){this.destination.error(err)}},SingleSubscriber.prototype._complete=function(){var destination=this.destination;this.index>0?(destination.next(this.seenValue?this.singleValue:void 0),destination.complete()):destination.error(new EmptyError_1.EmptyError)},SingleSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function skip(count){return function(source){return source.lift(new SkipOperator(count))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.skip=skip;var SkipOperator=function(){function SkipOperator(total){this.total=total}return SkipOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipSubscriber(subscriber,this.total))},SkipOperator}(),SkipSubscriber=function(_super){function SkipSubscriber(destination,total){_super.call(this,destination),this.total=total,this.count=0}return __extends(SkipSubscriber,_super),SkipSubscriber.prototype._next=function(x){++this.count>this.total&&this.destination.next(x)},SkipSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function skipLast(count){return function(source){return source.lift(new SkipLastOperator(count))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),ArgumentOutOfRangeError_1=__webpack_require__(25);exports.skipLast=skipLast;var SkipLastOperator=function(){function SkipLastOperator(_skipCount){if(this._skipCount=_skipCount,this._skipCount<0)throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError}return SkipLastOperator.prototype.call=function(subscriber,source){return 0===this._skipCount?source.subscribe(new Subscriber_1.Subscriber(subscriber)):source.subscribe(new SkipLastSubscriber(subscriber,this._skipCount))},SkipLastOperator}(),SkipLastSubscriber=function(_super){function SkipLastSubscriber(destination,_skipCount){_super.call(this,destination),this._skipCount=_skipCount,this._count=0,this._ring=new Array(_skipCount)}return __extends(SkipLastSubscriber,_super),SkipLastSubscriber.prototype._next=function(value){var skipCount=this._skipCount,count=this._count++;if(count<skipCount)this._ring[count]=value;else{var currentIndex=count%skipCount,ring=this._ring,oldValue=ring[currentIndex];ring[currentIndex]=value,this.destination.next(oldValue)}},SkipLastSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function skipUntil(notifier){return function(source){return source.lift(new SkipUntilOperator(notifier))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.skipUntil=skipUntil;var SkipUntilOperator=function(){function SkipUntilOperator(notifier){this.notifier=notifier}return SkipUntilOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipUntilSubscriber(subscriber,this.notifier))},SkipUntilOperator}(),SkipUntilSubscriber=function(_super){function SkipUntilSubscriber(destination,notifier){_super.call(this,destination),this.hasValue=!1,this.isInnerStopped=!1,this.add(subscribeToResult_1.subscribeToResult(this,notifier))}return __extends(SkipUntilSubscriber,_super),SkipUntilSubscriber.prototype._next=function(value){this.hasValue&&_super.prototype._next.call(this,value)},SkipUntilSubscriber.prototype._complete=function(){this.isInnerStopped?_super.prototype._complete.call(this):this.unsubscribe()},SkipUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.hasValue=!0},SkipUntilSubscriber.prototype.notifyComplete=function(){this.isInnerStopped=!0,this.isStopped&&_super.prototype._complete.call(this)},SkipUntilSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function skipWhile(predicate){return function(source){return source.lift(new SkipWhileOperator(predicate))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.skipWhile=skipWhile;var SkipWhileOperator=function(){function SkipWhileOperator(predicate){this.predicate=predicate}return SkipWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipWhileSubscriber(subscriber,this.predicate))},SkipWhileOperator}(),SkipWhileSubscriber=function(_super){function SkipWhileSubscriber(destination,predicate){_super.call(this,destination),this.predicate=predicate,this.skipping=!0,this.index=0}return __extends(SkipWhileSubscriber,_super),SkipWhileSubscriber.prototype._next=function(value){var destination=this.destination;this.skipping&&this.tryCallPredicate(value),this.skipping||destination.next(value)},SkipWhileSubscriber.prototype.tryCallPredicate=function(value){try{var result=this.predicate(value,this.index++);this.skipping=Boolean(result)}catch(err){this.destination.error(err)}},SkipWhileSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function startWith(){for(var array=[],_i=0;_i<arguments.length;_i++)array[_i-0]=arguments[_i];return function(source){var scheduler=array[array.length-1];isScheduler_1.isScheduler(scheduler)?array.pop():scheduler=null;var len=array.length;return 1===len?concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0],scheduler),source):len>1?concat_1.concat(new ArrayObservable_1.ArrayObservable(array,scheduler),source):concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler),source)}}var ArrayObservable_1=__webpack_require__(12),ScalarObservable_1=__webpack_require__(43),EmptyObservable_1=__webpack_require__(13),concat_1=__webpack_require__(18),isScheduler_1=__webpack_require__(10);exports.startWith=startWith},function(module,exports,__webpack_require__){"use strict";function switchAll(){return switchMap_1.switchMap(identity_1.identity)}var switchMap_1=__webpack_require__(55),identity_1=__webpack_require__(163);exports.switchAll=switchAll},function(module,exports,__webpack_require__){"use strict";function switchMapTo(innerObservable,resultSelector){return function(source){return source.lift(new SwitchMapToOperator(innerObservable,resultSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.switchMapTo=switchMapTo;var SwitchMapToOperator=function(){function SwitchMapToOperator(observable,resultSelector){this.observable=observable,this.resultSelector=resultSelector}return SwitchMapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapToSubscriber(subscriber,this.observable,this.resultSelector))},SwitchMapToOperator}(),SwitchMapToSubscriber=function(_super){function SwitchMapToSubscriber(destination,inner,resultSelector){_super.call(this,destination),this.inner=inner,this.resultSelector=resultSelector,this.index=0}return __extends(SwitchMapToSubscriber,_super),SwitchMapToSubscriber.prototype._next=function(value){var innerSubscription=this.innerSubscription;innerSubscription&&innerSubscription.unsubscribe(),this.add(this.innerSubscription=subscribeToResult_1.subscribeToResult(this,this.inner,value,this.index++))},SwitchMapToSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;innerSubscription&&!innerSubscription.closed||_super.prototype._complete.call(this)},SwitchMapToSubscriber.prototype._unsubscribe=function(){this.innerSubscription=null},SwitchMapToSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub),this.innerSubscription=null,this.isStopped&&_super.prototype._complete.call(this)},SwitchMapToSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;resultSelector?this.tryResultSelector(outerValue,innerValue,outerIndex,innerIndex):destination.next(innerValue)},SwitchMapToSubscriber.prototype.tryResultSelector=function(outerValue,innerValue,outerIndex,innerIndex){var result,_a=this,resultSelector=_a.resultSelector,destination=_a.destination;try{result=resultSelector(outerValue,innerValue,outerIndex,innerIndex)}catch(err){return void destination.error(err)}destination.next(result)},SwitchMapToSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function take(count){return function(source){return 0===count?new EmptyObservable_1.EmptyObservable:source.lift(new TakeOperator(count))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),ArgumentOutOfRangeError_1=__webpack_require__(25),EmptyObservable_1=__webpack_require__(13);exports.take=take;var TakeOperator=function(){function TakeOperator(total){if(this.total=total,this.total<0)throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError}return TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeSubscriber(subscriber,this.total))},TakeOperator}(),TakeSubscriber=function(_super){function TakeSubscriber(destination,total){_super.call(this,destination),this.total=total,this.count=0}return __extends(TakeSubscriber,_super),TakeSubscriber.prototype._next=function(value){var total=this.total,count=++this.count;count<=total&&(this.destination.next(value),count===total&&(this.destination.complete(),this.unsubscribe()))},TakeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function takeUntil(notifier){return function(source){return source.lift(new TakeUntilOperator(notifier))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.takeUntil=takeUntil;var TakeUntilOperator=function(){function TakeUntilOperator(notifier){this.notifier=notifier}return TakeUntilOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeUntilSubscriber(subscriber,this.notifier))},TakeUntilOperator}(),TakeUntilSubscriber=function(_super){function TakeUntilSubscriber(destination,notifier){_super.call(this,destination),this.notifier=notifier,this.add(subscribeToResult_1.subscribeToResult(this,notifier))}return __extends(TakeUntilSubscriber,_super),TakeUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.complete()},TakeUntilSubscriber.prototype.notifyComplete=function(){},TakeUntilSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function takeWhile(predicate){return function(source){return source.lift(new TakeWhileOperator(predicate))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.takeWhile=takeWhile;var TakeWhileOperator=function(){function TakeWhileOperator(predicate){this.predicate=predicate}return TakeWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeWhileSubscriber(subscriber,this.predicate))},TakeWhileOperator}(),TakeWhileSubscriber=function(_super){function TakeWhileSubscriber(destination,predicate){_super.call(this,destination),this.predicate=predicate,this.index=0}return __extends(TakeWhileSubscriber,_super),TakeWhileSubscriber.prototype._next=function(value){var result,destination=this.destination;try{result=this.predicate(value,this.index++)}catch(err){return void destination.error(err)}this.nextOrComplete(value,result)},TakeWhileSubscriber.prototype.nextOrComplete=function(value,predicateResult){var destination=this.destination;Boolean(predicateResult)?destination.next(value):destination.complete()},TakeWhileSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function tap(nextOrObserver,error,complete){return function(source){return source.lift(new DoOperator(nextOrObserver,error,complete))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1);exports.tap=tap;var DoOperator=function(){function DoOperator(nextOrObserver,error,complete){this.nextOrObserver=nextOrObserver,this.error=error,this.complete=complete}return DoOperator.prototype.call=function(subscriber,source){return source.subscribe(new DoSubscriber(subscriber,this.nextOrObserver,this.error,this.complete))},DoOperator}(),DoSubscriber=function(_super){function DoSubscriber(destination,nextOrObserver,error,complete){_super.call(this,destination);var safeSubscriber=new Subscriber_1.Subscriber(nextOrObserver,error,complete);safeSubscriber.syncErrorThrowable=!0,this.add(safeSubscriber),this.safeSubscriber=safeSubscriber}return __extends(DoSubscriber,_super),DoSubscriber.prototype._next=function(value){var safeSubscriber=this.safeSubscriber;safeSubscriber.next(value),safeSubscriber.syncErrorThrown?this.destination.error(safeSubscriber.syncErrorValue):this.destination.next(value)},DoSubscriber.prototype._error=function(err){var safeSubscriber=this.safeSubscriber;safeSubscriber.error(err),safeSubscriber.syncErrorThrown?this.destination.error(safeSubscriber.syncErrorValue):this.destination.error(err)},DoSubscriber.prototype._complete=function(){var safeSubscriber=this.safeSubscriber;safeSubscriber.complete(),safeSubscriber.syncErrorThrown?this.destination.error(safeSubscriber.syncErrorValue):this.destination.complete()},DoSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function throttleTime(duration,scheduler,config){return void 0===scheduler&&(scheduler=async_1.async),void 0===config&&(config=throttle_1.defaultThrottleConfig),function(source){return source.lift(new ThrottleTimeOperator(duration,scheduler,config.leading,config.trailing))}}function dispatchNext(arg){arg.subscriber.clearThrottle()}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),async_1=__webpack_require__(4),throttle_1=__webpack_require__(34);exports.throttleTime=throttleTime;var ThrottleTimeOperator=function(){function ThrottleTimeOperator(duration,scheduler,leading,trailing){this.duration=duration,this.scheduler=scheduler,this.leading=leading,this.trailing=trailing}return ThrottleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleTimeSubscriber(subscriber,this.duration,this.scheduler,this.leading,this.trailing))},ThrottleTimeOperator}(),ThrottleTimeSubscriber=function(_super){function ThrottleTimeSubscriber(destination,duration,scheduler,leading,trailing){_super.call(this,destination),this.duration=duration,this.scheduler=scheduler,this.leading=leading,this.trailing=trailing,this._hasTrailingValue=!1,this._trailingValue=null}return __extends(ThrottleTimeSubscriber,_super),ThrottleTimeSubscriber.prototype._next=function(value){this.throttled?this.trailing&&(this._trailingValue=value,this._hasTrailingValue=!0):(this.add(this.throttled=this.scheduler.schedule(dispatchNext,this.duration,{subscriber:this})),this.leading&&this.destination.next(value))},ThrottleTimeSubscriber.prototype.clearThrottle=function(){var throttled=this.throttled;throttled&&(this.trailing&&this._hasTrailingValue&&(this.destination.next(this._trailingValue),this._trailingValue=null,this._hasTrailingValue=!1),throttled.unsubscribe(),this.remove(throttled),this.throttled=null)},ThrottleTimeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function timeInterval(scheduler){return void 0===scheduler&&(scheduler=async_1.async),function(source){return source.lift(new TimeIntervalOperator(scheduler))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),async_1=__webpack_require__(4);exports.timeInterval=timeInterval;var TimeInterval=function(){function TimeInterval(value,interval){this.value=value,this.interval=interval}return TimeInterval}();exports.TimeInterval=TimeInterval;var TimeIntervalOperator=function(){function TimeIntervalOperator(scheduler){this.scheduler=scheduler}return TimeIntervalOperator.prototype.call=function(observer,source){return source.subscribe(new TimeIntervalSubscriber(observer,this.scheduler))},TimeIntervalOperator}(),TimeIntervalSubscriber=function(_super){function TimeIntervalSubscriber(destination,scheduler){_super.call(this,destination),this.scheduler=scheduler,this.lastTime=0,this.lastTime=scheduler.now()}return __extends(TimeIntervalSubscriber,_super),TimeIntervalSubscriber.prototype._next=function(value){var now=this.scheduler.now(),span=now-this.lastTime;this.lastTime=now,this.destination.next(new TimeInterval(value,span))},TimeIntervalSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function timeout(due,scheduler){void 0===scheduler&&(scheduler=async_1.async);var absoluteTimeout=isDate_1.isDate(due),waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return function(source){return source.lift(new TimeoutOperator(waitFor,absoluteTimeout,scheduler,new TimeoutError_1.TimeoutError))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},async_1=__webpack_require__(4),isDate_1=__webpack_require__(40),Subscriber_1=__webpack_require__(1),TimeoutError_1=__webpack_require__(160);exports.timeout=timeout;var TimeoutOperator=function(){function TimeoutOperator(waitFor,absoluteTimeout,scheduler,errorInstance){this.waitFor=waitFor,this.absoluteTimeout=absoluteTimeout,this.scheduler=scheduler,this.errorInstance=errorInstance}return TimeoutOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.scheduler,this.errorInstance))},TimeoutOperator}(),TimeoutSubscriber=function(_super){function TimeoutSubscriber(destination,absoluteTimeout,waitFor,scheduler,errorInstance){_super.call(this,destination),this.absoluteTimeout=absoluteTimeout,this.waitFor=waitFor,this.scheduler=scheduler,this.errorInstance=errorInstance,this.action=null,this.scheduleTimeout()}return __extends(TimeoutSubscriber,_super),TimeoutSubscriber.dispatchTimeout=function(subscriber){subscriber.error(subscriber.errorInstance)},TimeoutSubscriber.prototype.scheduleTimeout=function(){var action=this.action;action?this.action=action.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout,this.waitFor,this))},TimeoutSubscriber.prototype._next=function(value){this.absoluteTimeout||this.scheduleTimeout(),_super.prototype._next.call(this,value)},TimeoutSubscriber.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.errorInstance=null},TimeoutSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function timeoutWith(due,withObservable,scheduler){return void 0===scheduler&&(scheduler=async_1.async),function(source){var absoluteTimeout=isDate_1.isDate(due),waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return source.lift(new TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},async_1=__webpack_require__(4),isDate_1=__webpack_require__(40),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.timeoutWith=timeoutWith;var TimeoutWithOperator=function(){function TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler){this.waitFor=waitFor,this.absoluteTimeout=absoluteTimeout,this.withObservable=withObservable,this.scheduler=scheduler}return TimeoutWithOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutWithSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},TimeoutWithOperator}(),TimeoutWithSubscriber=function(_super){function TimeoutWithSubscriber(destination,absoluteTimeout,waitFor,withObservable,scheduler){_super.call(this,destination),this.absoluteTimeout=absoluteTimeout,this.waitFor=waitFor,this.withObservable=withObservable,this.scheduler=scheduler,this.action=null,this.scheduleTimeout()}return __extends(TimeoutWithSubscriber,_super),TimeoutWithSubscriber.dispatchTimeout=function(subscriber){var withObservable=subscriber.withObservable;subscriber._unsubscribeAndRecycle(),subscriber.add(subscribeToResult_1.subscribeToResult(subscriber,withObservable))},TimeoutWithSubscriber.prototype.scheduleTimeout=function(){var action=this.action;action?this.action=action.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout,this.waitFor,this))},TimeoutWithSubscriber.prototype._next=function(value){this.absoluteTimeout||this.scheduleTimeout(),_super.prototype._next.call(this,value)},TimeoutWithSubscriber.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.withObservable=null},TimeoutWithSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function toArrayReducer(arr,item,index){return 0===index?[item]:(arr.push(item),arr)}function toArray(){return reduce_1.reduce(toArrayReducer,[])}var reduce_1=__webpack_require__(21);exports.toArray=toArray},function(module,exports,__webpack_require__){"use strict";function window(windowBoundaries){return function(source){return source.lift(new WindowOperator(windowBoundaries))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.window=window;var WindowOperator=function(){function WindowOperator(windowBoundaries){this.windowBoundaries=windowBoundaries}return WindowOperator.prototype.call=function(subscriber,source){var windowSubscriber=new WindowSubscriber(subscriber),sourceSubscription=source.subscribe(windowSubscriber);return sourceSubscription.closed||windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber,this.windowBoundaries)),sourceSubscription},WindowOperator}(),WindowSubscriber=function(_super){function WindowSubscriber(destination){_super.call(this,destination),this.window=new Subject_1.Subject,destination.next(this.window)}return __extends(WindowSubscriber,_super),WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow()},WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error)},WindowSubscriber.prototype.notifyComplete=function(innerSub){this._complete()},WindowSubscriber.prototype._next=function(value){this.window.next(value)},WindowSubscriber.prototype._error=function(err){this.window.error(err),this.destination.error(err)},WindowSubscriber.prototype._complete=function(){this.window.complete(),this.destination.complete()},WindowSubscriber.prototype._unsubscribe=function(){this.window=null},WindowSubscriber.prototype.openWindow=function(){var prevWindow=this.window;prevWindow&&prevWindow.complete();var destination=this.destination,newWindow=this.window=new Subject_1.Subject;destination.next(newWindow)},WindowSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function windowCount(windowSize,startWindowEvery){return void 0===startWindowEvery&&(startWindowEvery=0),function(source){return source.lift(new WindowCountOperator(windowSize,startWindowEvery))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),Subject_1=__webpack_require__(6);exports.windowCount=windowCount;var WindowCountOperator=function(){function WindowCountOperator(windowSize,startWindowEvery){this.windowSize=windowSize,this.startWindowEvery=startWindowEvery}return WindowCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowCountSubscriber(subscriber,this.windowSize,this.startWindowEvery))},WindowCountOperator}(),WindowCountSubscriber=function(_super){function WindowCountSubscriber(destination,windowSize,startWindowEvery){_super.call(this,destination),this.destination=destination,this.windowSize=windowSize,this.startWindowEvery=startWindowEvery,this.windows=[new Subject_1.Subject],this.count=0,destination.next(this.windows[0])}return __extends(WindowCountSubscriber,_super),WindowCountSubscriber.prototype._next=function(value){for(var startWindowEvery=this.startWindowEvery>0?this.startWindowEvery:this.windowSize,destination=this.destination,windowSize=this.windowSize,windows=this.windows,len=windows.length,i=0;i<len&&!this.closed;i++)windows[i].next(value);var c=this.count-windowSize+1;if(c>=0&&c%startWindowEvery==0&&!this.closed&&windows.shift().complete(),++this.count%startWindowEvery==0&&!this.closed){var window_1=new Subject_1.Subject;windows.push(window_1),destination.next(window_1)}},WindowCountSubscriber.prototype._error=function(err){var windows=this.windows;if(windows)for(;windows.length>0&&!this.closed;)windows.shift().error(err);this.destination.error(err)},WindowCountSubscriber.prototype._complete=function(){var windows=this.windows;if(windows)for(;windows.length>0&&!this.closed;)windows.shift().complete();this.destination.complete()},WindowCountSubscriber.prototype._unsubscribe=function(){this.count=0,this.windows=null},WindowCountSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function windowTime(windowTimeSpan){var scheduler=async_1.async,windowCreationInterval=null,maxWindowSize=Number.POSITIVE_INFINITY;return isScheduler_1.isScheduler(arguments[3])&&(scheduler=arguments[3]),isScheduler_1.isScheduler(arguments[2])?scheduler=arguments[2]:isNumeric_1.isNumeric(arguments[2])&&(maxWindowSize=arguments[2]),isScheduler_1.isScheduler(arguments[1])?scheduler=arguments[1]:isNumeric_1.isNumeric(arguments[1])&&(windowCreationInterval=arguments[1]),function(source){return source.lift(new WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler))}}function dispatchWindowTimeSpanOnly(state){var subscriber=state.subscriber,windowTimeSpan=state.windowTimeSpan,window=state.window;window&&subscriber.closeWindow(window),state.window=subscriber.openWindow(),this.schedule(state,windowTimeSpan)}function dispatchWindowCreation(state){var windowTimeSpan=state.windowTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,windowCreationInterval=state.windowCreationInterval,window=subscriber.openWindow(),action=this,context={action:action,subscription:null},timeSpanState={subscriber:subscriber,window:window,context:context};context.subscription=scheduler.schedule(dispatchWindowClose,windowTimeSpan,timeSpanState),action.add(context.subscription),action.schedule(state,windowCreationInterval)}function dispatchWindowClose(state){var subscriber=state.subscriber,window=state.window,context=state.context;context&&context.action&&context.subscription&&context.action.remove(context.subscription),subscriber.closeWindow(window)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),async_1=__webpack_require__(4),Subscriber_1=__webpack_require__(1),isNumeric_1=__webpack_require__(26),isScheduler_1=__webpack_require__(10);exports.windowTime=windowTime;var WindowTimeOperator=function(){function WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){this.windowTimeSpan=windowTimeSpan,this.windowCreationInterval=windowCreationInterval,this.maxWindowSize=maxWindowSize,this.scheduler=scheduler}return WindowTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowTimeSubscriber(subscriber,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler))},WindowTimeOperator}(),CountedSubject=function(_super){function CountedSubject(){_super.apply(this,arguments),this._numberOfNextedValues=0}return __extends(CountedSubject,_super),CountedSubject.prototype.next=function(value){this._numberOfNextedValues++,_super.prototype.next.call(this,value)},Object.defineProperty(CountedSubject.prototype,"numberOfNextedValues",{get:function(){return this._numberOfNextedValues},enumerable:!0,configurable:!0}),CountedSubject}(Subject_1.Subject),WindowTimeSubscriber=function(_super){function WindowTimeSubscriber(destination,windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){_super.call(this,destination),this.destination=destination,this.windowTimeSpan=windowTimeSpan,this.windowCreationInterval=windowCreationInterval,this.maxWindowSize=maxWindowSize,this.scheduler=scheduler,this.windows=[];var window=this.openWindow();if(null!==windowCreationInterval&&windowCreationInterval>=0){var closeState={subscriber:this,window:window,context:null},creationState={windowTimeSpan:windowTimeSpan,windowCreationInterval:windowCreationInterval,subscriber:this,scheduler:scheduler};this.add(scheduler.schedule(dispatchWindowClose,windowTimeSpan,closeState)),this.add(scheduler.schedule(dispatchWindowCreation,windowCreationInterval,creationState))}else{var timeSpanOnlyState={subscriber:this,window:window,windowTimeSpan:windowTimeSpan};this.add(scheduler.schedule(dispatchWindowTimeSpanOnly,windowTimeSpan,timeSpanOnlyState))}}return __extends(WindowTimeSubscriber,_super),WindowTimeSubscriber.prototype._next=function(value){for(var windows=this.windows,len=windows.length,i=0;i<len;i++){var window_1=windows[i];window_1.closed||(window_1.next(value),window_1.numberOfNextedValues>=this.maxWindowSize&&this.closeWindow(window_1))}},WindowTimeSubscriber.prototype._error=function(err){for(var windows=this.windows;windows.length>0;)windows.shift().error(err);this.destination.error(err)},WindowTimeSubscriber.prototype._complete=function(){for(var windows=this.windows;windows.length>0;){var window_2=windows.shift();window_2.closed||window_2.complete()}this.destination.complete()},WindowTimeSubscriber.prototype.openWindow=function(){var window=new CountedSubject;return this.windows.push(window),this.destination.next(window),window},WindowTimeSubscriber.prototype.closeWindow=function(window){window.complete();var windows=this.windows;windows.splice(windows.indexOf(window),1)},WindowTimeSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";function windowToggle(openings,closingSelector){return function(source){return source.lift(new WindowToggleOperator(openings,closingSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),Subscription_1=__webpack_require__(5),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.windowToggle=windowToggle;var WindowToggleOperator=function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings,this.closingSelector=closingSelector}return WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowToggleSubscriber(subscriber,this.openings,this.closingSelector))},WindowToggleOperator}(),WindowToggleSubscriber=function(_super){function WindowToggleSubscriber(destination,openings,closingSelector){_super.call(this,destination),this.openings=openings,this.closingSelector=closingSelector,this.contexts=[],this.add(this.openSubscription=subscribeToResult_1.subscribeToResult(this,openings,openings))}return __extends(WindowToggleSubscriber,_super),WindowToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;if(contexts)for(var len=contexts.length,i=0;i<len;i++)contexts[i].window.next(value)},WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context=contexts[index];context.window.error(err),context.subscription.unsubscribe()}_super.prototype._error.call(this,err)},WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context=contexts[index];context.window.complete(),context.subscription.unsubscribe()}_super.prototype._complete.call(this)},WindowToggleSubscriber.prototype._unsubscribe=function(){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context=contexts[index];context.window.unsubscribe(),context.subscription.unsubscribe()}},WindowToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(outerValue===this.openings){var closingSelector=this.closingSelector,closingNotifier=tryCatch_1.tryCatch(closingSelector)(innerValue);if(closingNotifier===errorObject_1.errorObject)return this.error(errorObject_1.errorObject.e);var window_1=new Subject_1.Subject,subscription=new Subscription_1.Subscription,context={window:window_1,subscription:subscription};this.contexts.push(context);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context);innerSubscription.closed?this.closeWindow(this.contexts.length-1):(innerSubscription.context=context,subscription.add(innerSubscription)),this.destination.next(window_1)}else this.closeWindow(this.contexts.indexOf(outerValue))},WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err)},WindowToggleSubscriber.prototype.notifyComplete=function(inner){inner!==this.openSubscription&&this.closeWindow(this.contexts.indexOf(inner.context))},WindowToggleSubscriber.prototype.closeWindow=function(index){if(-1!==index){var contexts=this.contexts,context=contexts[index],window=context.window,subscription=context.subscription;contexts.splice(index,1),window.complete(),subscription.unsubscribe()}},WindowToggleSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function windowWhen(closingSelector){return function(source){return source.lift(new WindowOperator(closingSelector))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.windowWhen=windowWhen;var WindowOperator=function(){function WindowOperator(closingSelector){this.closingSelector=closingSelector}return WindowOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowSubscriber(subscriber,this.closingSelector))},WindowOperator}(),WindowSubscriber=function(_super){function WindowSubscriber(destination,closingSelector){_super.call(this,destination),this.destination=destination,this.closingSelector=closingSelector,this.openWindow()}return __extends(WindowSubscriber,_super),WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow(innerSub)},WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error)},WindowSubscriber.prototype.notifyComplete=function(innerSub){this.openWindow(innerSub)},WindowSubscriber.prototype._next=function(value){this.window.next(value)},WindowSubscriber.prototype._error=function(err){this.window.error(err),this.destination.error(err),this.unsubscribeClosingNotification()},WindowSubscriber.prototype._complete=function(){this.window.complete(),this.destination.complete(),this.unsubscribeClosingNotification()},WindowSubscriber.prototype.unsubscribeClosingNotification=function(){this.closingNotification&&this.closingNotification.unsubscribe()},WindowSubscriber.prototype.openWindow=function(innerSub){void 0===innerSub&&(innerSub=null),innerSub&&(this.remove(innerSub),innerSub.unsubscribe());var prevWindow=this.window;prevWindow&&prevWindow.complete();var window=this.window=new Subject_1.Subject;this.destination.next(window);var closingNotifier=tryCatch_1.tryCatch(this.closingSelector)();if(closingNotifier===errorObject_1.errorObject){var err=errorObject_1.errorObject.e;this.destination.error(err),this.window.error(err)}else this.add(this.closingNotification=subscribeToResult_1.subscribeToResult(this,closingNotifier))},WindowSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function withLatestFrom(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];return function(source){var project;"function"==typeof args[args.length-1]&&(project=args.pop());var observables=args;return source.lift(new WithLatestFromOperator(observables,project))}}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},OuterSubscriber_1=__webpack_require__(2),subscribeToResult_1=__webpack_require__(3);exports.withLatestFrom=withLatestFrom;var WithLatestFromOperator=function(){function WithLatestFromOperator(observables,project){this.observables=observables,this.project=project}return WithLatestFromOperator.prototype.call=function(subscriber,source){return source.subscribe(new WithLatestFromSubscriber(subscriber,this.observables,this.project))},WithLatestFromOperator}(),WithLatestFromSubscriber=function(_super){function WithLatestFromSubscriber(destination,observables,project){_super.call(this,destination),this.observables=observables,this.project=project,this.toRespond=[];var len=observables.length;this.values=new Array(len);for(var i=0;i<len;i++)this.toRespond.push(i);for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult_1.subscribeToResult(this,observable,observable,i))}}return __extends(WithLatestFromSubscriber,_super),WithLatestFromSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue;var toRespond=this.toRespond;if(toRespond.length>0){var found=toRespond.indexOf(outerIndex);-1!==found&&toRespond.splice(found,1)}},WithLatestFromSubscriber.prototype.notifyComplete=function(){},WithLatestFromSubscriber.prototype._next=function(value){if(0===this.toRespond.length){var args=[value].concat(this.values);this.project?this._tryProject(args):this.destination.next(args)}},WithLatestFromSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args)}catch(err){return void this.destination.error(err)}this.destination.next(result)},WithLatestFromSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function zipAll(project){return function(source){return source.lift(new zip_1.ZipOperator(project))}}var zip_1=__webpack_require__(35);exports.zipAll=zipAll},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncAction_1=__webpack_require__(22),AsyncScheduler_1=__webpack_require__(23),VirtualTimeScheduler=function(_super){function VirtualTimeScheduler(SchedulerAction,maxFrames){var _this=this;void 0===SchedulerAction&&(SchedulerAction=VirtualAction),void 0===maxFrames&&(maxFrames=Number.POSITIVE_INFINITY),_super.call(this,SchedulerAction,function(){return _this.frame}),this.maxFrames=maxFrames,this.frame=0,this.index=-1}return __extends(VirtualTimeScheduler,_super),VirtualTimeScheduler.prototype.flush=function(){for(var error,action,_a=this,actions=_a.actions,maxFrames=_a.maxFrames;(action=actions.shift())&&(this.frame=action.delay)<=maxFrames&&!(error=action.execute(action.state,action.delay)););if(error){for(;action=actions.shift();)action.unsubscribe();throw error}},VirtualTimeScheduler.frameTimeFactor=10,VirtualTimeScheduler}(AsyncScheduler_1.AsyncScheduler);exports.VirtualTimeScheduler=VirtualTimeScheduler;var VirtualAction=function(_super){function VirtualAction(scheduler,work,index){void 0===index&&(index=scheduler.index+=1),_super.call(this,scheduler,work),this.scheduler=scheduler,this.work=work,this.index=index,this.active=!0,this.index=scheduler.index=index}return __extends(VirtualAction,_super),VirtualAction.prototype.schedule=function(state,delay){if(void 0===delay&&(delay=0),!this.id)return _super.prototype.schedule.call(this,state,delay);this.active=!1;var action=new VirtualAction(this.scheduler,this.work);return this.add(action),action.schedule(state,delay)},VirtualAction.prototype.requestAsyncId=function(scheduler,id,delay){void 0===delay&&(delay=0),this.delay=scheduler.frame+delay;var actions=scheduler.actions;return actions.push(this),actions.sort(VirtualAction.sortActions),!0},VirtualAction.prototype.recycleAsyncId=function(scheduler,id,delay){void 0===delay&&(delay=0)},VirtualAction.prototype._execute=function(state,delay){if(!0===this.active)return _super.prototype._execute.call(this,state,delay)},VirtualAction.sortActions=function(a,b){return a.delay===b.delay?a.index===b.index?0:a.index>b.index?1:-1:a.delay>b.delay?1:-1},VirtualAction}(AsyncAction_1.AsyncAction);exports.VirtualAction=VirtualAction},function(module,exports,__webpack_require__){"use strict";var AsapAction_1=__webpack_require__(467),AsapScheduler_1=__webpack_require__(468);exports.asap=new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction)},function(module,exports,__webpack_require__){"use strict";var QueueAction_1=__webpack_require__(469),QueueScheduler_1=__webpack_require__(470);exports.queue=new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction)},function(module,exports,__webpack_require__){"use strict";var SubscriptionLog=function(){function SubscriptionLog(subscribedFrame,unsubscribedFrame){void 0===unsubscribedFrame&&(unsubscribedFrame=Number.POSITIVE_INFINITY),this.subscribedFrame=subscribedFrame,this.unsubscribedFrame=unsubscribedFrame}return SubscriptionLog}();exports.SubscriptionLog=SubscriptionLog},function(module,exports,__webpack_require__){"use strict";var SubscriptionLog_1=__webpack_require__(158),SubscriptionLoggable=function(){function SubscriptionLoggable(){this.subscriptions=[]}return SubscriptionLoggable.prototype.logSubscribedFrame=function(){return this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now())),this.subscriptions.length-1},SubscriptionLoggable.prototype.logUnsubscribedFrame=function(index){var subscriptionLogs=this.subscriptions,oldSubscriptionLog=subscriptionLogs[index];subscriptionLogs[index]=new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame,this.scheduler.now())},SubscriptionLoggable}();exports.SubscriptionLoggable=SubscriptionLoggable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},TimeoutError=function(_super){function TimeoutError(){var err=_super.call(this,"Timeout has occurred");this.name=err.name="TimeoutError",this.stack=err.stack,this.message=err.message}return __extends(TimeoutError,_super),TimeoutError}(Error);exports.TimeoutError=TimeoutError},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},UnsubscriptionError=function(_super){function UnsubscriptionError(errors){_super.call(this),this.errors=errors;var err=Error.call(this,errors?errors.length+" errors occurred during unsubscription:\n  "+errors.map(function(err,i){return i+1+") "+err.toString()}).join("\n  "):"");this.name=err.name="UnsubscriptionError",this.stack=err.stack,this.message=err.message}return __extends(UnsubscriptionError,_super),UnsubscriptionError}(Error);exports.UnsubscriptionError=UnsubscriptionError},function(module,exports,__webpack_require__){"use strict";function applyMixins(derivedCtor,baseCtors){for(var i=0,len=baseCtors.length;i<len;i++)for(var baseCtor=baseCtors[i],propertyKeys=Object.getOwnPropertyNames(baseCtor.prototype),j=0,len2=propertyKeys.length;j<len2;j++){var name_1=propertyKeys[j];derivedCtor.prototype[name_1]=baseCtor.prototype[name_1]}}exports.applyMixins=applyMixins},function(module,exports,__webpack_require__){"use strict";function identity(x){return x}exports.identity=identity},function(module,exports,__webpack_require__){"use strict";exports.isArrayLike=function(x){return x&&"number"==typeof x.length}},function(module,exports,__webpack_require__){"use strict";function isObject(x){return null!=x&&"object"==typeof x}exports.isObject=isObject},function(module,exports,__webpack_require__){"use strict";function isPromise(value){return value&&"function"!=typeof value.subscribe&&"function"==typeof value.then}exports.isPromise=isPromise},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core_module_1=__webpack_require__(16),collectionconfigservice_1=__webpack_require__(523),collectionservice_1=__webpack_require__(524),collections_1=__webpack_require__(518),createcollection_1=__webpack_require__(520),confirmationcontroller_1=__webpack_require__(519),entity_createcollection_1=__webpack_require__(521),swcollection_1=__webpack_require__(497),swaddfilterbuttons_1=__webpack_require__(496),swdisplayoptions_1=__webpack_require__(512),swdisplayitem_1=__webpack_require__(510),swdisplayitemaggregate_1=__webpack_require__(511),swcollectiontable_1=__webpack_require__(498),swcolumnitem_1=__webpack_require__(499),swconditioncriteria_1=__webpack_require__(500),swcriteria_1=__webpack_require__(501),swcriteriaboolean_1=__webpack_require__(502),swcriteriadate_1=__webpack_require__(503),swcriteriamanytomany_1=__webpack_require__(504),swcriteriamanytoone_1=__webpack_require__(505),swcriterianumber_1=__webpack_require__(506),swcriteriaonetomany_1=__webpack_require__(507),swcriteriarelatedobject_1=__webpack_require__(508),swcriteriastring_1=__webpack_require__(509),sweditfilteritem_1=__webpack_require__(513),swfiltergroups_1=__webpack_require__(515),swfilteritem_1=__webpack_require__(516),swfiltergroupitem_1=__webpack_require__(514),swrestrictionconfig_1=__webpack_require__(517),aggregatefilter_1=__webpack_require__(522),collectionmodule=angular.module("hibachi.collection",[core_module_1.coremodule.name]).config([function(){}]).run([function(){}]).constant("collectionPartialsPath","collection/components/").controller("collections",collections_1.CollectionController).controller("confirmationController",confirmationcontroller_1.ConfirmationController).controller("createCollection",createcollection_1.CreateCollection).controller("entity_createcollection",entity_createcollection_1.CollectionCreateController).factory("collectionConfigService",["rbkeyService","$hibachi","utilityService","observerService",function(rbkeyService,$hibachi,utilityService,observerService){return new collectionconfigservice_1.CollectionConfig(rbkeyService,$hibachi,utilityService,observerService)}]).service("collectionService",collectionservice_1.CollectionService).directive("swRestrictionConfig",swrestrictionconfig_1.SWRestrictionConfig.Factory()).directive("swCollection",swcollection_1.SWCollection.Factory()).directive("swAddFilterButtons",swaddfilterbuttons_1.SWAddFilterButtons.Factory()).directive("swDisplayOptions",swdisplayoptions_1.SWDisplayOptions.Factory()).directive("swDisplayItem",swdisplayitem_1.SWDisplayItem.Factory()).directive("swDisplayItemAggregate",swdisplayitemaggregate_1.SWDisplayItemAggregate.Factory()).directive("swCollectionTable",swcollectiontable_1.SWCollectionTable.Factory()).directive("swColumnItem",swcolumnitem_1.SWColumnItem.Factory()).directive("swConditionCriteria",swconditioncriteria_1.SWConditionCriteria.Factory()).directive("swCriteria",swcriteria_1.SWCriteria.Factory()).directive("swCriteriaBoolean",swcriteriaboolean_1.SWCriteriaBoolean.Factory()).directive("swCriteriaDate",swcriteriadate_1.SWCriteriaDate.Factory()).directive("swCriteriaManyToMany",swcriteriamanytomany_1.SWCriteriaManyToMany.Factory()).directive("swCriteriaManyToOne",swcriteriamanytoone_1.SWCriteriaManyToOne.Factory()).directive("swCriteriaNumber",swcriterianumber_1.SWCriteriaNumber.Factory()).directive("swCriteriaOneToMany",swcriteriaonetomany_1.SWCriteriaOneToMany.Factory()).directive("swCriteriaRelatedObject",swcriteriarelatedobject_1.SWCriteriaRelatedObject.Factory()).directive("swCriteriaString",swcriteriastring_1.SWCriteriaString.Factory()).directive("swEditFilterItem",sweditfilteritem_1.SWEditFilterItem.Factory()).directive("swFilterGroups",swfiltergroups_1.SWFilterGroups.Factory()).directive("swFilterItem",swfilteritem_1.SWFilterItem.Factory()).directive("swFilterGroupItem",swfiltergroupitem_1.SWFilterGroupItem.Factory()).filter("aggregateFilter",["$filter",aggregatefilter_1.AggregateFilter.Factory]);exports.collectionmodule=collectionmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var BaseObject=function(){function BaseObject($injector){var _this=this;this.getService=function(serviceName){if(_this.$injector.has(serviceName))return _this.$injector.get(serviceName)},this.getHibachiScope=function(){return _this.getService("publicService")},this.getAppConfig=function(){return _this.getService("appConfig")},this.$injector=$injector;var constructorString=this.constructor.toString();this.className=constructorString.match(/\w+/g)[1]}return BaseObject}();exports.BaseObject=BaseObject},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var basetransient_1=__webpack_require__(61),Request=function(_super){function Request(url,data,method,headers,$injector){var _this=_super.call(this,$injector)||this;_this.loading=!0,_this.errors={},_this.processResponse=function(response){_this.loading=!1,response.errors&&(_this.errors=response.errors),response.messages&&(_this.messages=response.messages)},_this.getAction=function(){var config=_this.getAppConfig(),actionName=config.action,params=_this.utilityService.getQueryParamsFromUrl(_this.url);return params[actionName]?params[actionName]:_this.data&&_this.data[actionName]?_this.data[actionName]:_this.url.indexOf("api/scope/")>0?_this.extractPublicAction(_this.url):void 0},_this.extractPublicAction=function(url){return/\api\/scope\/(.*?)(?=\/|\?|$)/.exec(url)[1]},_this.processSuccess=function(response){_this.processResponse(response)},_this.processError=function(response){_this.processResponse(response)},_this.toFormParams=function(data){return data?$.param(data):""},_this.serializeData=function(data){if(!angular.isObject(data))return null==data?"":data.toString();var buffer=[];for(var name in data)if(data.hasOwnProperty(name)){var value=data[name];buffer.push(encodeURIComponent(name)+"="+encodeURIComponent(null==value?"":value))}return buffer.join("&").replace(/%20/g,"+")},_this.headers=headers,_this.$q=_this.getService("$q"),_this.$http=_this.getService("$http"),_this.$window=_this.getService("$window"),_this.url=url,_this.data=data,_this.method=method,_this.utilityService=_this.getService("utilityService"),method||(method=void 0==data?"get":"post");var deferred=_this.$q.defer();if("post"==method){"application/json"!==_this.headers["Content-Type"]&&(data=_this.toFormParams(data));_this.$http({url:url,data:data,headers:_this.headers,method:"post"}).success(function(result){_this.processSuccess(result),deferred.resolve(result)}).error(function(response){_this.processError(response),deferred.reject(response)});_this.promise=deferred.promise}else _this.$http({url:url,method:"get"}).success(function(result){_this.processSuccess(result),deferred.resolve(result)}).error(function(reason){_this.processError(reason),deferred.reject(reason)}),_this.promise=deferred.promise;return _this}return __extends(Request,_super),Request}(basetransient_1.BaseTransient);exports.Request=Request},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var rxjs_1=__webpack_require__(191),IStore=function(){function IStore(initialState,reducer,middleware){var _this=this;return this.initialState=initialState,this.reducer=reducer,this.middleware=middleware,this.dispatch=function(action){return _this.actionStream$.next(action)},this.getInstance=function(){return _this.store$},this.actionStream$=new rxjs_1.Subject,this.store$=this.actionStream$.startWith(initialState).scan(reducer),middleware&&this.store$,this}return IStore}();exports.IStore=IStore},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var dialogservice_1=__webpack_require__(611),pagedialog_1=__webpack_require__(610),dialogmodule=angular.module("hibachi.dialog",[]).config(function(){}).service("dialogService",dialogservice_1.DialogService).controller("pageDialog",pagedialog_1.PageDialogController).constant("dialogPartials","dialog/components/");exports.dialogmodule=dialogmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWPropertyDisplayController=function(){function SWPropertyDisplayController($filter,utilityService,$injector,metadataService,observerService,listingService){var _this=this;this.$filter=$filter,this.utilityService=utilityService,this.$injector=$injector,this.metadataService=metadataService,this.observerService=observerService,this.listingService=listingService,this.saved=!1,this.$onInit=function(){var bindToControllerProps=_this.$injector.get("swPropertyDisplayDirective")[0].bindToController;for(var i in bindToControllerProps)!_this[i]&&_this.swForm&&_this.swForm[i]&&(_this[i]=_this.swForm[i]);if(_this.errors={},_this.edited=!1,_this.edit=_this.edit||_this.editing,_this.editing=_this.editing||_this.edit,_this.errorName=_this.errorName||_this.name,_this.initialValue=_this.object[_this.property],_this.propertyDisplayID=_this.utilityService.createID(32),angular.isUndefined(_this.showSave)&&(_this.showSave=!0),angular.isUndefined(_this.inListingDisplay)&&(_this.inListingDisplay=!1),angular.isUndefined(_this.rowSaveEnabled)&&(_this.rowSaveEnabled=_this.inListingDisplay),angular.isDefined(_this.revertToValue)&&angular.isUndefined(_this.showRevert)&&(_this.showRevert=!0),angular.isDefined(_this.revertToValue)&&angular.isUndefined(_this.revertText)&&(_this.revertText=_this.revertToValue),angular.isUndefined(_this.showRevert)&&(_this.showRevert=!1),angular.isUndefined(_this.rawFileTarget)&&(_this.rawFileTarget=_this.property),angular.isUndefined(_this.editing)&&(_this.editing=!1),angular.isUndefined(_this.editable)&&(_this.editable=!0),angular.isUndefined(_this.isHidden)&&(_this.isHidden=!1),angular.isUndefined(_this.noValidate)&&(_this.noValidate=!1),angular.isUndefined(_this.inModal)&&(_this.inModal=!1),angular.isUndefined(_this.optionsArguments)&&(_this.optionsArguments={}),"hidden"!==_this.fieldType&&angular.isUndefined(_this.inListingDisplay)||angular.isDefined(_this.inListingDisplay)&&!_this.inListingDisplay?_this.showLabel=!0:_this.showLabel=!1,angular.isDefined(_this.pageRecord)&&angular.isUndefined(_this.pageRecord.edited)&&(_this.pageRecord.edited=!1),_this.applyFilter=function(model,filter){try{return _this.$filter(filter)(model)}catch(e){return model}},angular.isUndefined(_this.fieldType)&&_this.object&&_this.object.metaData&&(_this.fieldType=_this.metadataService.getPropertyFieldType(_this.object,_this.propertyIdentifier)),angular.isUndefined(_this.title)&&_this.object&&_this.object.metaData&&(_this.labelText=_this.metadataService.getPropertyTitle(_this.object,_this.propertyIdentifier)),_this.labelText=_this.labelText||_this.title,_this.title=_this.title||_this.labelText,_this.fieldType=_this.fieldType||"text",_this.class=_this.class||"form-control",_this.fieldAttributes=_this.fieldAttributes||"",_this.label=_this.label||"true",_this.labelText=_this.labelText||"",_this.labelClass=_this.labelClass||"",_this.name=_this.name||"unnamed",_this.value=_this.value||_this.initialValue,_this.object=_this.object||_this.swForm.object,_this.options&&angular.isString(_this.options)){var optionsArray=[];optionsArray=_this.options.toString().split(","),angular.forEach(optionsArray,function(o){var newOption={name:"",value:""};newOption.name=o,newOption.value=o,_this.optionValues.push(newOption)})}"yesno"==_this.fieldType&&_this.value&&angular.isString(_this.value)&&(_this.selected,_this.value),angular.isUndefined(_this.hint)&&_this.object&&_this.object.metaData&&(_this.hint=_this.metadataService.getPropertyHintByObjectAndPropertyIdentifier(_this.object,_this.propertyIdentifier)),(_this.hasOnChangeCallback||_this.inListingDisplay||_this.onChangeEvent)&&angular.isDefined(_this.swForm)&&angular.isDefined(_this.name)&&(_this.swInputOnChangeEvent=_this.swForm.name+_this.name+"change",_this.observerService.attach(_this.onChange,_this.swInputOnChangeEvent))},this.onChange=function(result){_this.edited=!0,_this.saved&&(_this.saved=!1),_this.hasOnChangeCallback&&_this.onChangeCallback(result),_this.inListingDisplay&&_this.rowSaveEnabled&&_this.listingService.markEdited(_this.listingID,_this.pageRecordIndex,_this.propertyDisplayID,_this.save),angular.isDefined(_this.onChangeEvent)&&_this.observerService.notify(_this.onChangeEvent,result)},this.clear=function(){_this.reverted&&(_this.reverted=!1,_this.showRevert=!0),_this.edited=!1,_this.object.data[_this.property]=_this.initialValue,_this.inListingDisplay&&_this.rowSaveEnabled&&_this.listingService.markUnedited(_this.listingID,_this.pageRecordIndex,_this.propertyDisplayID)},this.revert=function(){_this.showRevert=!1,_this.reverted=!0,_this.object.data[_this.property]=_this.revertToValue,_this.onChange()},this.save=function(){_this.edited=!1,_this.saved=!0,_this.inModal?_this.hasModalCallback&&_this.modalCallback():_this.object.$$save().then(function(response){_this.hasSaveCallback&&_this.saveCallback(response)},function(reason){_this.edited=!0,_this.saved=!1})}}return SWPropertyDisplayController}();exports.SWPropertyDisplayController=SWPropertyDisplayController;var SWPropertyDisplay=function(){function SWPropertyDisplay($compile,scopeService,coreFormPartialsPath,hibachiPathBuilder,swpropertyPartialPath){var _this=this;this.$compile=$compile,this.scopeService=scopeService,this.coreFormPartialsPath=coreFormPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.swpropertyPartialPath=swpropertyPartialPath,this.require={swForm:"?^swForm",form:"?^form"},this.restrict="AE",this.scope={},this.bindToController={name:"@?",errorName:"@?",class:"@?",edit:"@?",valueObject:"=?",valueObjectProperty:"=?",propertyIdentifier:"@?",valueOptions:"=?",fieldAttributes:"@?",label:"@?",labelText:"@?",labelClass:"@?",errorText:"@?",errorClass:"@?",formTemplate:"@?",eventAnnouncers:"@",hideErrors:"=?",value:"@?",property:"@?",object:"=?",editable:"=?",editing:"=?",isHidden:"=?",title:"=?",hint:"@?",options:"=?",optionsArguments:"=?",eagerLoadOptions:"=?",isDirty:"=?",onChangeCallback:"&?onChange",onChangeEvent:"@?",saveCallback:"&?",fieldType:"@?",rawFileTarget:"@?",binaryFileTarget:"@?",noValidate:"=?",inListingDisplay:"=?",inModal:"=?",modalCallback:"&?",hasModalCallback:"=?",rowSaveEnabled:"=?",revertToValue:"=?",revertText:"@?",showRevert:"=?",showSave:"=?",placeholderText:"@",placeholderRbKey:"@",inputAttributes:"@?",optionValues:"=?",eventListeners:"=?",context:"@?"},this.controller=SWPropertyDisplayController,this.controllerAs="swPropertyDisplay",this.templateUrlPath="propertydisplay.html",this.link=function($scope,element,attrs,formController){if($scope.frmController=formController,$scope.swfPropertyDisplay=$scope.swPropertyDisplay,angular.isDefined(attrs.onChange)?$scope.swPropertyDisplay.hasOnChangeCallback=!0:$scope.swPropertyDisplay.hasOnChangeCallback=!1,angular.isDefined(attrs.saveCallback)?$scope.swPropertyDisplay.hasSaveCallback=!0:$scope.swPropertyDisplay.hasSaveCallback=!1,angular.isDefined($scope.swPropertyDisplay.inListingDisplay)&&$scope.swPropertyDisplay.inListingDisplay){var currentScope=_this.scopeService.getRootParentScope($scope,"pageRecord");angular.isDefined(currentScope.pageRecord)&&($scope.swPropertyDisplay.pageRecord=currentScope.pageRecord);var currentScope=_this.scopeService.getRootParentScope($scope,"pageRecordKey");angular.isDefined(currentScope.pageRecordKey)&&($scope.swPropertyDisplay.pageRecordIndex=currentScope.pageRecordKey);var currentScope=_this.scopeService.getRootParentScope($scope,"swListingDisplay");angular.isDefined(currentScope.swListingDisplay)&&($scope.swPropertyDisplay.listingID=currentScope.swListingDisplay.tableID)}if(angular.isDefined($scope.swPropertyDisplay.inModal)&&$scope.swPropertyDisplay.inModal){var modalScope=_this.scopeService.getRootParentScope($scope,"swModalLauncher");$scope.swPropertyDisplay.modalName=modalScope.swModalLauncher.modalName,angular.isFunction(modalScope.swModalLauncher.launchModal)&&($scope.swPropertyDisplay.modalCallback=modalScope.swModalLauncher.launchModal,$scope.swPropertyDisplay.hasModalCallback=!0)}},this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath)+swpropertyPartialPath}return SWPropertyDisplay.Factory=function(swpropertyClass,swpropertyPartialPath){var directive=function($compile,scopeService,coreFormPartialsPath,hibachiPathBuilder){return new swpropertyClass($compile,scopeService,coreFormPartialsPath,hibachiPathBuilder,swpropertyPartialPath)};return directive.$inject=["$compile","scopeService","coreFormPartialsPath","hibachiPathBuilder"],directive},SWPropertyDisplay.$inject=["coreFormPartialsPath","hibachiPathBuilder"],SWPropertyDisplay}();exports.SWPropertyDisplay=SWPropertyDisplay},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),basebootstrap_1=__webpack_require__(487),hibachi_module_1=__webpack_require__(633),logger_module_1=__webpack_require__(650),bootstrapper=function(_super){function bootstrapper(){var _this=this;return(_this=_super.call(this,[hibachi_module_1.hibachimodule.name,logger_module_1.loggermodule.name])||this).bootstrap(),_this}return __extends(bootstrapper,_super),bootstrapper}(basebootstrap_1.BaseBootStrapper);module.exports=new bootstrapper},,,,,,,,,,,,,function(module,exports){function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(fun){if(cachedSetTimeout===setTimeout)return setTimeout(fun,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(fun,0);try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout)return clearTimeout(marker);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(marker);try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=runTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,runClearTimeout(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}var cachedSetTimeout,cachedClearTimeout,process=module.exports={};!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(name){return[]},process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},function(module,exports,__webpack_require__){(function(global,process){!function(global,undefined){"use strict";function setImmediate(callback){"function"!=typeof callback&&(callback=new Function(""+callback));for(var args=new Array(arguments.length-1),i=0;i<args.length;i++)args[i]=arguments[i+1];var task={callback:callback,args:args};return tasksByHandle[nextHandle]=task,registerImmediate(nextHandle),nextHandle++}function clearImmediate(handle){delete tasksByHandle[handle]}function run(task){var callback=task.callback,args=task.args;switch(args.length){case 0:callback();break;case 1:callback(args[0]);break;case 2:callback(args[0],args[1]);break;case 3:callback(args[0],args[1],args[2]);break;default:callback.apply(undefined,args)}}function runIfPresent(handle){if(currentlyRunningATask)setTimeout(runIfPresent,0,handle);else{var task=tasksByHandle[handle];if(task){currentlyRunningATask=!0;try{run(task)}finally{clearImmediate(handle),currentlyRunningATask=!1}}}}if(!global.setImmediate){var registerImmediate,nextHandle=1,tasksByHandle={},currentlyRunningATask=!1,doc=global.document,attachTo=Object.getPrototypeOf&&Object.getPrototypeOf(global);attachTo=attachTo&&attachTo.setTimeout?attachTo:global,"[object process]"==={}.toString.call(global.process)?function(){registerImmediate=function(handle){process.nextTick(function(){runIfPresent(handle)})}}():function(){if(global.postMessage&&!global.importScripts){var postMessageIsAsynchronous=!0,oldOnMessage=global.onmessage;return global.onmessage=function(){postMessageIsAsynchronous=!1},global.postMessage("","*"),global.onmessage=oldOnMessage,postMessageIsAsynchronous}}()?function(){var messagePrefix="setImmediate$"+Math.random()+"$",onGlobalMessage=function(event){event.source===global&&"string"==typeof event.data&&0===event.data.indexOf(messagePrefix)&&runIfPresent(+event.data.slice(messagePrefix.length))};global.addEventListener?global.addEventListener("message",onGlobalMessage,!1):global.attachEvent("onmessage",onGlobalMessage),registerImmediate=function(handle){global.postMessage(messagePrefix+handle,"*")}}():global.MessageChannel?function(){var channel=new MessageChannel;channel.port1.onmessage=function(event){runIfPresent(event.data)},registerImmediate=function(handle){channel.port2.postMessage(handle)}}():doc&&"onreadystatechange"in doc.createElement("script")?function(){var html=doc.documentElement;registerImmediate=function(handle){var script=doc.createElement("script");script.onreadystatechange=function(){runIfPresent(handle),script.onreadystatechange=null,html.removeChild(script),script=null},html.appendChild(script)}}():function(){registerImmediate=function(handle){setTimeout(runIfPresent,0,handle)}}(),attachTo.setImmediate=setImmediate,attachTo.clearImmediate=clearImmediate}}("undefined"==typeof self?void 0===global?this:global:self)}).call(exports,__webpack_require__(42),__webpack_require__(186))},function(module,exports){!function(){var base64map="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",crypt={rotl:function(n,b){return n<<b|n>>>32-b},rotr:function(n,b){return n<<32-b|n>>>b},endian:function(n){if(n.constructor==Number)return 16711935&crypt.rotl(n,8)|4278255360&crypt.rotl(n,24);for(var i=0;i<n.length;i++)n[i]=crypt.endian(n[i]);return n},randomBytes:function(n){for(var bytes=[];n>0;n--)bytes.push(Math.floor(256*Math.random()));return bytes},bytesToWords:function(bytes){for(var words=[],i=0,b=0;i<bytes.length;i++,b+=8)words[b>>>5]|=bytes[i]<<24-b%32;return words},wordsToBytes:function(words){for(var bytes=[],b=0;b<32*words.length;b+=8)bytes.push(words[b>>>5]>>>24-b%32&255);return bytes},bytesToHex:function(bytes){for(var hex=[],i=0;i<bytes.length;i++)hex.push((bytes[i]>>>4).toString(16)),hex.push((15&bytes[i]).toString(16));return hex.join("")},hexToBytes:function(hex){for(var bytes=[],c=0;c<hex.length;c+=2)bytes.push(parseInt(hex.substr(c,2),16));return bytes},bytesToBase64:function(bytes){for(var base64=[],i=0;i<bytes.length;i+=3)for(var triplet=bytes[i]<<16|bytes[i+1]<<8|bytes[i+2],j=0;j<4;j++)8*i+6*j<=8*bytes.length?base64.push(base64map.charAt(triplet>>>6*(3-j)&63)):base64.push("=");return base64.join("")},base64ToBytes:function(base64){base64=base64.replace(/[^A-Z0-9+\/]/gi,"");for(var bytes=[],i=0,imod4=0;i<base64.length;imod4=++i%4)0!=imod4&&bytes.push((base64map.indexOf(base64.charAt(i-1))&Math.pow(2,-2*imod4+8)-1)<<2*imod4|base64map.indexOf(base64.charAt(i))>>>6-2*imod4);return bytes}};module.exports=crypt}()},function(module,exports){function isBuffer(obj){return!!obj.constructor&&"function"==typeof obj.constructor.isBuffer&&obj.constructor.isBuffer(obj)}function isSlowBuffer(obj){return"function"==typeof obj.readFloatLE&&"function"==typeof obj.slice&&isBuffer(obj.slice(0,0))}module.exports=function(obj){return null!=obj&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer)}},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscriber_1=__webpack_require__(1),InnerSubscriber=function(_super){function InnerSubscriber(parent,outerValue,outerIndex){_super.call(this),this.parent=parent,this.outerValue=outerValue,this.outerIndex=outerIndex,this.index=0}return __extends(InnerSubscriber,_super),InnerSubscriber.prototype._next=function(value){this.parent.notifyNext(this.outerValue,value,this.outerIndex,this.index++,this)},InnerSubscriber.prototype._error=function(error){this.parent.notifyError(error,this),this.unsubscribe()},InnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},InnerSubscriber}(Subscriber_1.Subscriber);exports.InnerSubscriber=InnerSubscriber},function(module,exports,__webpack_require__){"use strict";var Subject_1=__webpack_require__(6);exports.Subject=Subject_1.Subject,exports.AnonymousSubject=Subject_1.AnonymousSubject;var Observable_1=__webpack_require__(0);exports.Observable=Observable_1.Observable,__webpack_require__(193),__webpack_require__(194),__webpack_require__(195),__webpack_require__(196),__webpack_require__(197),__webpack_require__(200),__webpack_require__(201),__webpack_require__(202),__webpack_require__(203),__webpack_require__(204),__webpack_require__(205),__webpack_require__(206),__webpack_require__(207),__webpack_require__(208),__webpack_require__(209),__webpack_require__(214),__webpack_require__(210),__webpack_require__(211),__webpack_require__(212),__webpack_require__(213),__webpack_require__(215),__webpack_require__(218),__webpack_require__(216),__webpack_require__(217),__webpack_require__(219),__webpack_require__(198),__webpack_require__(199),__webpack_require__(222),__webpack_require__(223),__webpack_require__(224),__webpack_require__(225),__webpack_require__(226),__webpack_require__(227),__webpack_require__(228),__webpack_require__(229),__webpack_require__(230),__webpack_require__(231),__webpack_require__(232),__webpack_require__(233),__webpack_require__(234),__webpack_require__(240),__webpack_require__(235),__webpack_require__(236),__webpack_require__(237),__webpack_require__(238),__webpack_require__(239),__webpack_require__(241),__webpack_require__(242),__webpack_require__(243),__webpack_require__(244),__webpack_require__(247),__webpack_require__(248),__webpack_require__(249),__webpack_require__(245),__webpack_require__(250),__webpack_require__(251),__webpack_require__(252),__webpack_require__(253),__webpack_require__(254),__webpack_require__(255),__webpack_require__(256),__webpack_require__(257),__webpack_require__(220),__webpack_require__(221),__webpack_require__(258),__webpack_require__(259),__webpack_require__(246),__webpack_require__(260),__webpack_require__(261),__webpack_require__(262),__webpack_require__(263),__webpack_require__(264),__webpack_require__(265),__webpack_require__(266),__webpack_require__(267),__webpack_require__(268),__webpack_require__(269),__webpack_require__(270),__webpack_require__(271),__webpack_require__(272),__webpack_require__(273),__webpack_require__(274),__webpack_require__(275),__webpack_require__(276),__webpack_require__(277),__webpack_require__(279),__webpack_require__(278),__webpack_require__(280),__webpack_require__(281),__webpack_require__(282),__webpack_require__(283),__webpack_require__(284),__webpack_require__(285),__webpack_require__(286),__webpack_require__(287),__webpack_require__(288),__webpack_require__(289),__webpack_require__(290),__webpack_require__(291),__webpack_require__(292),__webpack_require__(293),__webpack_require__(294),__webpack_require__(295),__webpack_require__(296),__webpack_require__(297),__webpack_require__(298),__webpack_require__(299),__webpack_require__(300),__webpack_require__(301),__webpack_require__(302),__webpack_require__(303),__webpack_require__(304),__webpack_require__(305),__webpack_require__(306),__webpack_require__(307),__webpack_require__(308),__webpack_require__(309),__webpack_require__(310),__webpack_require__(311),__webpack_require__(312),__webpack_require__(313),__webpack_require__(314),__webpack_require__(315),__webpack_require__(316),__webpack_require__(317),__webpack_require__(318),__webpack_require__(319),__webpack_require__(320),__webpack_require__(321);var Subscription_1=__webpack_require__(5);exports.Subscription=Subscription_1.Subscription;var Subscriber_1=__webpack_require__(1);exports.Subscriber=Subscriber_1.Subscriber;var AsyncSubject_1=__webpack_require__(28);exports.AsyncSubject=AsyncSubject_1.AsyncSubject;var ReplaySubject_1=__webpack_require__(29);exports.ReplaySubject=ReplaySubject_1.ReplaySubject;var BehaviorSubject_1=__webpack_require__(66);exports.BehaviorSubject=BehaviorSubject_1.BehaviorSubject;var ConnectableObservable_1=__webpack_require__(69);exports.ConnectableObservable=ConnectableObservable_1.ConnectableObservable;var Notification_1=__webpack_require__(17);exports.Notification=Notification_1.Notification;var EmptyError_1=__webpack_require__(38);exports.EmptyError=EmptyError_1.EmptyError;var ArgumentOutOfRangeError_1=__webpack_require__(25);exports.ArgumentOutOfRangeError=ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;var ObjectUnsubscribedError_1=__webpack_require__(39);exports.ObjectUnsubscribedError=ObjectUnsubscribedError_1.ObjectUnsubscribedError;var TimeoutError_1=__webpack_require__(160);exports.TimeoutError=TimeoutError_1.TimeoutError;var UnsubscriptionError_1=__webpack_require__(161);exports.UnsubscriptionError=UnsubscriptionError_1.UnsubscriptionError;var timeInterval_1=__webpack_require__(76);exports.TimeInterval=timeInterval_1.TimeInterval;var timestamp_1=__webpack_require__(57);exports.Timestamp=timestamp_1.Timestamp;var TestScheduler_1=__webpack_require__(474);exports.TestScheduler=TestScheduler_1.TestScheduler;var VirtualTimeScheduler_1=__webpack_require__(155);exports.VirtualTimeScheduler=VirtualTimeScheduler_1.VirtualTimeScheduler;var AjaxObservable_1=__webpack_require__(72);exports.AjaxResponse=AjaxObservable_1.AjaxResponse,exports.AjaxError=AjaxObservable_1.AjaxError,exports.AjaxTimeoutError=AjaxObservable_1.AjaxTimeoutError;var pipe_1=__webpack_require__(59);exports.pipe=pipe_1.pipe;var asap_1=__webpack_require__(156),async_1=__webpack_require__(4),queue_1=__webpack_require__(157),animationFrame_1=__webpack_require__(471),rxSubscriber_1=__webpack_require__(37),iterator_1=__webpack_require__(24),observable_1=__webpack_require__(36),_operators=__webpack_require__(462);exports.operators=_operators;var Scheduler={asap:asap_1.asap,queue:queue_1.queue,animationFrame:animationFrame_1.animationFrame,async:async_1.async};exports.Scheduler=Scheduler;var Symbol={rxSubscriber:rxSubscriber_1.rxSubscriber,observable:observable_1.observable,iterator:iterator_1.iterator};exports.Symbol=Symbol},function(module,exports,__webpack_require__){"use strict";var Scheduler=function(){function Scheduler(SchedulerAction,now){void 0===now&&(now=Scheduler.now),this.SchedulerAction=SchedulerAction,this.now=now}return Scheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),new this.SchedulerAction(this,work).schedule(state,delay)},Scheduler.now=Date.now?Date.now:function(){return+new Date},Scheduler}();exports.Scheduler=Scheduler},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bindCallback_1=__webpack_require__(340);Observable_1.Observable.bindCallback=bindCallback_1.bindCallback},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bindNodeCallback_1=__webpack_require__(341);Observable_1.Observable.bindNodeCallback=bindNodeCallback_1.bindNodeCallback},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),combineLatest_1=__webpack_require__(342);Observable_1.Observable.combineLatest=combineLatest_1.combineLatest},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),concat_1=__webpack_require__(18);Observable_1.Observable.concat=concat_1.concat},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),defer_1=__webpack_require__(343);Observable_1.Observable.defer=defer_1.defer},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),ajax_1=__webpack_require__(345);Observable_1.Observable.ajax=ajax_1.ajax},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),webSocket_1=__webpack_require__(346);Observable_1.Observable.webSocket=webSocket_1.webSocket},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),empty_1=__webpack_require__(347);Observable_1.Observable.empty=empty_1.empty},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),forkJoin_1=__webpack_require__(348);Observable_1.Observable.forkJoin=forkJoin_1.forkJoin},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),from_1=__webpack_require__(73);Observable_1.Observable.from=from_1.from},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),fromEvent_1=__webpack_require__(349);Observable_1.Observable.fromEvent=fromEvent_1.fromEvent},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),fromEventPattern_1=__webpack_require__(350);Observable_1.Observable.fromEventPattern=fromEventPattern_1.fromEventPattern},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),fromPromise_1=__webpack_require__(351);Observable_1.Observable.fromPromise=fromPromise_1.fromPromise},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),generate_1=__webpack_require__(352);Observable_1.Observable.generate=generate_1.generate},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),if_1=__webpack_require__(353);Observable_1.Observable.if=if_1._if},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),interval_1=__webpack_require__(354);Observable_1.Observable.interval=interval_1.interval},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),merge_1=__webpack_require__(30);Observable_1.Observable.merge=merge_1.merge},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),never_1=__webpack_require__(355);Observable_1.Observable.never=never_1.never},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),of_1=__webpack_require__(74);Observable_1.Observable.of=of_1.of},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),onErrorResumeNext_1=__webpack_require__(356);Observable_1.Observable.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),pairs_1=__webpack_require__(357);Observable_1.Observable.pairs=pairs_1.pairs},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),race_1=__webpack_require__(44);Observable_1.Observable.race=race_1.race},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),range_1=__webpack_require__(358);Observable_1.Observable.range=range_1.range},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),throw_1=__webpack_require__(359);Observable_1.Observable.throw=throw_1._throw},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),timer_1=__webpack_require__(75);Observable_1.Observable.timer=timer_1.timer},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),using_1=__webpack_require__(360);Observable_1.Observable.using=using_1.using},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),zip_1=__webpack_require__(361);Observable_1.Observable.zip=zip_1.zip},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),audit_1=__webpack_require__(362);Observable_1.Observable.prototype.audit=audit_1.audit},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),auditTime_1=__webpack_require__(363);Observable_1.Observable.prototype.auditTime=auditTime_1.auditTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),buffer_1=__webpack_require__(364);Observable_1.Observable.prototype.buffer=buffer_1.buffer},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bufferCount_1=__webpack_require__(365);Observable_1.Observable.prototype.bufferCount=bufferCount_1.bufferCount},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bufferTime_1=__webpack_require__(366);Observable_1.Observable.prototype.bufferTime=bufferTime_1.bufferTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bufferToggle_1=__webpack_require__(367);Observable_1.Observable.prototype.bufferToggle=bufferToggle_1.bufferToggle},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),bufferWhen_1=__webpack_require__(368);Observable_1.Observable.prototype.bufferWhen=bufferWhen_1.bufferWhen},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),catch_1=__webpack_require__(369);Observable_1.Observable.prototype.catch=catch_1._catch,Observable_1.Observable.prototype._catch=catch_1._catch},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),combineAll_1=__webpack_require__(370);Observable_1.Observable.prototype.combineAll=combineAll_1.combineAll},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),combineLatest_1=__webpack_require__(371);Observable_1.Observable.prototype.combineLatest=combineLatest_1.combineLatest},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),concat_1=__webpack_require__(372);Observable_1.Observable.prototype.concat=concat_1.concat},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),concatAll_1=__webpack_require__(373);Observable_1.Observable.prototype.concatAll=concatAll_1.concatAll},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),concatMap_1=__webpack_require__(374);Observable_1.Observable.prototype.concatMap=concatMap_1.concatMap},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),concatMapTo_1=__webpack_require__(375);Observable_1.Observable.prototype.concatMapTo=concatMapTo_1.concatMapTo},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),count_1=__webpack_require__(376);Observable_1.Observable.prototype.count=count_1.count},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),debounce_1=__webpack_require__(377);Observable_1.Observable.prototype.debounce=debounce_1.debounce},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),debounceTime_1=__webpack_require__(378);Observable_1.Observable.prototype.debounceTime=debounceTime_1.debounceTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),defaultIfEmpty_1=__webpack_require__(379);Observable_1.Observable.prototype.defaultIfEmpty=defaultIfEmpty_1.defaultIfEmpty},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),delay_1=__webpack_require__(380);Observable_1.Observable.prototype.delay=delay_1.delay},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),delayWhen_1=__webpack_require__(381);Observable_1.Observable.prototype.delayWhen=delayWhen_1.delayWhen},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),dematerialize_1=__webpack_require__(382);Observable_1.Observable.prototype.dematerialize=dematerialize_1.dematerialize},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),distinct_1=__webpack_require__(383);Observable_1.Observable.prototype.distinct=distinct_1.distinct},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),distinctUntilChanged_1=__webpack_require__(384);Observable_1.Observable.prototype.distinctUntilChanged=distinctUntilChanged_1.distinctUntilChanged},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),distinctUntilKeyChanged_1=__webpack_require__(385);Observable_1.Observable.prototype.distinctUntilKeyChanged=distinctUntilKeyChanged_1.distinctUntilKeyChanged},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),do_1=__webpack_require__(386);Observable_1.Observable.prototype.do=do_1._do,Observable_1.Observable.prototype._do=do_1._do},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),elementAt_1=__webpack_require__(387);Observable_1.Observable.prototype.elementAt=elementAt_1.elementAt},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),every_1=__webpack_require__(388);Observable_1.Observable.prototype.every=every_1.every},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),exhaust_1=__webpack_require__(389);Observable_1.Observable.prototype.exhaust=exhaust_1.exhaust},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),exhaustMap_1=__webpack_require__(390);Observable_1.Observable.prototype.exhaustMap=exhaustMap_1.exhaustMap},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),expand_1=__webpack_require__(391);Observable_1.Observable.prototype.expand=expand_1.expand},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),filter_1=__webpack_require__(392);Observable_1.Observable.prototype.filter=filter_1.filter},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),finally_1=__webpack_require__(393);Observable_1.Observable.prototype.finally=finally_1._finally,Observable_1.Observable.prototype._finally=finally_1._finally},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),find_1=__webpack_require__(394);Observable_1.Observable.prototype.find=find_1.find},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),findIndex_1=__webpack_require__(395);Observable_1.Observable.prototype.findIndex=findIndex_1.findIndex},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),first_1=__webpack_require__(396);Observable_1.Observable.prototype.first=first_1.first},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),groupBy_1=__webpack_require__(397);Observable_1.Observable.prototype.groupBy=groupBy_1.groupBy},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),ignoreElements_1=__webpack_require__(398);Observable_1.Observable.prototype.ignoreElements=ignoreElements_1.ignoreElements},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),isEmpty_1=__webpack_require__(399);Observable_1.Observable.prototype.isEmpty=isEmpty_1.isEmpty},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),last_1=__webpack_require__(400);Observable_1.Observable.prototype.last=last_1.last},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),let_1=__webpack_require__(401);Observable_1.Observable.prototype.let=let_1.letProto,Observable_1.Observable.prototype.letBind=let_1.letProto},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),map_1=__webpack_require__(402);Observable_1.Observable.prototype.map=map_1.map},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),mapTo_1=__webpack_require__(403);Observable_1.Observable.prototype.mapTo=mapTo_1.mapTo},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),materialize_1=__webpack_require__(404);Observable_1.Observable.prototype.materialize=materialize_1.materialize},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),max_1=__webpack_require__(405);Observable_1.Observable.prototype.max=max_1.max},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),merge_1=__webpack_require__(406);Observable_1.Observable.prototype.merge=merge_1.merge},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),mergeAll_1=__webpack_require__(407);Observable_1.Observable.prototype.mergeAll=mergeAll_1.mergeAll},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),mergeMap_1=__webpack_require__(408);Observable_1.Observable.prototype.mergeMap=mergeMap_1.mergeMap,Observable_1.Observable.prototype.flatMap=mergeMap_1.mergeMap},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),mergeMapTo_1=__webpack_require__(409);Observable_1.Observable.prototype.flatMapTo=mergeMapTo_1.mergeMapTo,Observable_1.Observable.prototype.mergeMapTo=mergeMapTo_1.mergeMapTo},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),mergeScan_1=__webpack_require__(410);Observable_1.Observable.prototype.mergeScan=mergeScan_1.mergeScan},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),min_1=__webpack_require__(411);Observable_1.Observable.prototype.min=min_1.min},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),multicast_1=__webpack_require__(412);Observable_1.Observable.prototype.multicast=multicast_1.multicast},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),observeOn_1=__webpack_require__(413);Observable_1.Observable.prototype.observeOn=observeOn_1.observeOn},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),onErrorResumeNext_1=__webpack_require__(414);Observable_1.Observable.prototype.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),pairwise_1=__webpack_require__(415);Observable_1.Observable.prototype.pairwise=pairwise_1.pairwise},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),partition_1=__webpack_require__(416);Observable_1.Observable.prototype.partition=partition_1.partition},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),pluck_1=__webpack_require__(417);Observable_1.Observable.prototype.pluck=pluck_1.pluck},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),publish_1=__webpack_require__(418);Observable_1.Observable.prototype.publish=publish_1.publish},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),publishBehavior_1=__webpack_require__(419);Observable_1.Observable.prototype.publishBehavior=publishBehavior_1.publishBehavior},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),publishLast_1=__webpack_require__(420);Observable_1.Observable.prototype.publishLast=publishLast_1.publishLast},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),publishReplay_1=__webpack_require__(421);Observable_1.Observable.prototype.publishReplay=publishReplay_1.publishReplay},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),race_1=__webpack_require__(422);Observable_1.Observable.prototype.race=race_1.race},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),reduce_1=__webpack_require__(423);Observable_1.Observable.prototype.reduce=reduce_1.reduce},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),repeat_1=__webpack_require__(424);Observable_1.Observable.prototype.repeat=repeat_1.repeat},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),repeatWhen_1=__webpack_require__(425);Observable_1.Observable.prototype.repeatWhen=repeatWhen_1.repeatWhen},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),retry_1=__webpack_require__(426);Observable_1.Observable.prototype.retry=retry_1.retry},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),retryWhen_1=__webpack_require__(427);Observable_1.Observable.prototype.retryWhen=retryWhen_1.retryWhen},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),sample_1=__webpack_require__(428);Observable_1.Observable.prototype.sample=sample_1.sample},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),sampleTime_1=__webpack_require__(429);Observable_1.Observable.prototype.sampleTime=sampleTime_1.sampleTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),scan_1=__webpack_require__(430);Observable_1.Observable.prototype.scan=scan_1.scan},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),sequenceEqual_1=__webpack_require__(431);Observable_1.Observable.prototype.sequenceEqual=sequenceEqual_1.sequenceEqual},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),share_1=__webpack_require__(432);Observable_1.Observable.prototype.share=share_1.share},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),shareReplay_1=__webpack_require__(433);Observable_1.Observable.prototype.shareReplay=shareReplay_1.shareReplay},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),single_1=__webpack_require__(434);Observable_1.Observable.prototype.single=single_1.single},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),skip_1=__webpack_require__(435);Observable_1.Observable.prototype.skip=skip_1.skip},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),skipLast_1=__webpack_require__(436);Observable_1.Observable.prototype.skipLast=skipLast_1.skipLast},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),skipUntil_1=__webpack_require__(437);Observable_1.Observable.prototype.skipUntil=skipUntil_1.skipUntil},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),skipWhile_1=__webpack_require__(438);Observable_1.Observable.prototype.skipWhile=skipWhile_1.skipWhile},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),startWith_1=__webpack_require__(439);Observable_1.Observable.prototype.startWith=startWith_1.startWith},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),subscribeOn_1=__webpack_require__(440);Observable_1.Observable.prototype.subscribeOn=subscribeOn_1.subscribeOn},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),switch_1=__webpack_require__(441);Observable_1.Observable.prototype.switch=switch_1._switch,Observable_1.Observable.prototype._switch=switch_1._switch},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),switchMap_1=__webpack_require__(442);Observable_1.Observable.prototype.switchMap=switchMap_1.switchMap},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),switchMapTo_1=__webpack_require__(443);Observable_1.Observable.prototype.switchMapTo=switchMapTo_1.switchMapTo},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),take_1=__webpack_require__(444);Observable_1.Observable.prototype.take=take_1.take},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),takeLast_1=__webpack_require__(445);Observable_1.Observable.prototype.takeLast=takeLast_1.takeLast},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),takeUntil_1=__webpack_require__(446);Observable_1.Observable.prototype.takeUntil=takeUntil_1.takeUntil},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),takeWhile_1=__webpack_require__(447);Observable_1.Observable.prototype.takeWhile=takeWhile_1.takeWhile},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),throttle_1=__webpack_require__(448);Observable_1.Observable.prototype.throttle=throttle_1.throttle},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),throttleTime_1=__webpack_require__(449);Observable_1.Observable.prototype.throttleTime=throttleTime_1.throttleTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),timeInterval_1=__webpack_require__(76);Observable_1.Observable.prototype.timeInterval=timeInterval_1.timeInterval},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),timeout_1=__webpack_require__(450);Observable_1.Observable.prototype.timeout=timeout_1.timeout},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),timeoutWith_1=__webpack_require__(451);Observable_1.Observable.prototype.timeoutWith=timeoutWith_1.timeoutWith},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),timestamp_1=__webpack_require__(452);Observable_1.Observable.prototype.timestamp=timestamp_1.timestamp},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),toArray_1=__webpack_require__(453);Observable_1.Observable.prototype.toArray=toArray_1.toArray},function(module,exports){},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),window_1=__webpack_require__(454);Observable_1.Observable.prototype.window=window_1.window},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),windowCount_1=__webpack_require__(455);Observable_1.Observable.prototype.windowCount=windowCount_1.windowCount},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),windowTime_1=__webpack_require__(456);Observable_1.Observable.prototype.windowTime=windowTime_1.windowTime},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),windowToggle_1=__webpack_require__(457);Observable_1.Observable.prototype.windowToggle=windowToggle_1.windowToggle},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),windowWhen_1=__webpack_require__(458);Observable_1.Observable.prototype.windowWhen=windowWhen_1.windowWhen},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),withLatestFrom_1=__webpack_require__(459);Observable_1.Observable.prototype.withLatestFrom=withLatestFrom_1.withLatestFrom},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),zip_1=__webpack_require__(460);Observable_1.Observable.prototype.zip=zip_1.zipProto},function(module,exports,__webpack_require__){"use strict";var Observable_1=__webpack_require__(0),zipAll_1=__webpack_require__(461);Observable_1.Observable.prototype.zipAll=zipAll_1.zipAll},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),ScalarObservable_1=__webpack_require__(43),EmptyObservable_1=__webpack_require__(13),ArrayLikeObservable=function(_super){function ArrayLikeObservable(arrayLike,scheduler){_super.call(this),this.arrayLike=arrayLike,this.scheduler=scheduler,scheduler||1!==arrayLike.length||(this._isScalar=!0,this.value=arrayLike[0])}return __extends(ArrayLikeObservable,_super),ArrayLikeObservable.create=function(arrayLike,scheduler){var length=arrayLike.length;return 0===length?new EmptyObservable_1.EmptyObservable:1===length?new ScalarObservable_1.ScalarObservable(arrayLike[0],scheduler):new ArrayLikeObservable(arrayLike,scheduler)},ArrayLikeObservable.dispatch=function(state){var arrayLike=state.arrayLike,index=state.index,length=state.length,subscriber=state.subscriber;if(!subscriber.closed){if(index>=length)return void subscriber.complete();subscriber.next(arrayLike[index]),state.index=index+1,this.schedule(state)}},ArrayLikeObservable.prototype._subscribe=function(subscriber){var _a=this,arrayLike=_a.arrayLike,scheduler=_a.scheduler,length=arrayLike.length;if(scheduler)return scheduler.schedule(ArrayLikeObservable.dispatch,0,{arrayLike:arrayLike,index:0,length:length,subscriber:subscriber});for(var i=0;i<length&&!subscriber.closed;i++)subscriber.next(arrayLike[i]);subscriber.complete()},ArrayLikeObservable}(Observable_1.Observable);exports.ArrayLikeObservable=ArrayLikeObservable},function(module,exports,__webpack_require__){"use strict";function dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value),subject.complete()}function dispatchError(arg){var err=arg.err;arg.subject.error(err)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),AsyncSubject_1=__webpack_require__(28),BoundCallbackObservable=function(_super){function BoundCallbackObservable(callbackFunc,selector,args,context,scheduler){_super.call(this),this.callbackFunc=callbackFunc,this.selector=selector,this.args=args,this.context=context,this.scheduler=scheduler}return __extends(BoundCallbackObservable,_super),BoundCallbackObservable.create=function(func,selector,scheduler){return void 0===selector&&(selector=void 0),function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];return new BoundCallbackObservable(func,selector,args,this,scheduler)}},BoundCallbackObservable.prototype._subscribe=function(subscriber){var callbackFunc=this.callbackFunc,args=this.args,scheduler=this.scheduler,subject=this.subject;if(scheduler)return scheduler.schedule(BoundCallbackObservable.dispatch,0,{source:this,subscriber:subscriber,context:this.context});if(!subject){subject=this.subject=new AsyncSubject_1.AsyncSubject;var handler=function handlerFn(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i-0]=arguments[_i];var source=handlerFn.source,selector=source.selector,subject=source.subject;if(selector){var result_1=tryCatch_1.tryCatch(selector).apply(this,innerArgs);result_1===errorObject_1.errorObject?subject.error(errorObject_1.errorObject.e):(subject.next(result_1),subject.complete())}else subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs),subject.complete()};handler.source=this;tryCatch_1.tryCatch(callbackFunc).apply(this.context,args.concat(handler))===errorObject_1.errorObject&&subject.error(errorObject_1.errorObject.e)}return subject.subscribe(subscriber)},BoundCallbackObservable.dispatch=function(state){var self=this,source=state.source,subscriber=state.subscriber,context=state.context,callbackFunc=source.callbackFunc,args=source.args,scheduler=source.scheduler,subject=source.subject;if(!subject){subject=source.subject=new AsyncSubject_1.AsyncSubject;var handler=function handlerFn(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i-0]=arguments[_i];var source=handlerFn.source,selector=source.selector,subject=source.subject;if(selector){var result_2=tryCatch_1.tryCatch(selector).apply(this,innerArgs);result_2===errorObject_1.errorObject?self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject})):self.add(scheduler.schedule(dispatchNext,0,{value:result_2,subject:subject}))}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;self.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}))}};handler.source=source;tryCatch_1.tryCatch(callbackFunc).apply(context,args.concat(handler))===errorObject_1.errorObject&&subject.error(errorObject_1.errorObject.e)}self.add(subject.subscribe(subscriber))},BoundCallbackObservable}(Observable_1.Observable);exports.BoundCallbackObservable=BoundCallbackObservable},function(module,exports,__webpack_require__){"use strict";function dispatch(state){var self=this,source=state.source,subscriber=state.subscriber,context=state.context,_a=source,callbackFunc=_a.callbackFunc,args=_a.args,scheduler=_a.scheduler,subject=source.subject;if(!subject){subject=source.subject=new AsyncSubject_1.AsyncSubject;var handler=function handlerFn(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i-0]=arguments[_i];var source=handlerFn.source,selector=source.selector,subject=source.subject,err=innerArgs.shift();if(err)self.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));else if(selector){var result_2=tryCatch_1.tryCatch(selector).apply(this,innerArgs);result_2===errorObject_1.errorObject?self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject})):self.add(scheduler.schedule(dispatchNext,0,{value:result_2,subject:subject}))}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;self.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}))}};handler.source=source;tryCatch_1.tryCatch(callbackFunc).apply(context,args.concat(handler))===errorObject_1.errorObject&&self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject}))}self.add(subject.subscribe(subscriber))}function dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value),subject.complete()}function dispatchError(arg){var err=arg.err;arg.subject.error(err)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),AsyncSubject_1=__webpack_require__(28),BoundNodeCallbackObservable=function(_super){function BoundNodeCallbackObservable(callbackFunc,selector,args,context,scheduler){_super.call(this),this.callbackFunc=callbackFunc,this.selector=selector,this.args=args,this.context=context,this.scheduler=scheduler}return __extends(BoundNodeCallbackObservable,_super),BoundNodeCallbackObservable.create=function(func,selector,scheduler){return void 0===selector&&(selector=void 0),function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];return new BoundNodeCallbackObservable(func,selector,args,this,scheduler)}},BoundNodeCallbackObservable.prototype._subscribe=function(subscriber){var callbackFunc=this.callbackFunc,args=this.args,scheduler=this.scheduler,subject=this.subject;if(scheduler)return scheduler.schedule(dispatch,0,{source:this,subscriber:subscriber,context:this.context});if(!subject){subject=this.subject=new AsyncSubject_1.AsyncSubject;var handler=function handlerFn(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i-0]=arguments[_i];var source=handlerFn.source,selector=source.selector,subject=source.subject,err=innerArgs.shift();if(err)subject.error(err);else if(selector){var result_1=tryCatch_1.tryCatch(selector).apply(this,innerArgs);result_1===errorObject_1.errorObject?subject.error(errorObject_1.errorObject.e):(subject.next(result_1),subject.complete())}else subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs),subject.complete()};handler.source=this;tryCatch_1.tryCatch(callbackFunc).apply(this.context,args.concat(handler))===errorObject_1.errorObject&&subject.error(errorObject_1.errorObject.e)}return subject.subscribe(subscriber)},BoundNodeCallbackObservable}(Observable_1.Observable);exports.BoundNodeCallbackObservable=BoundNodeCallbackObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2),DeferObservable=function(_super){function DeferObservable(observableFactory){_super.call(this),this.observableFactory=observableFactory}return __extends(DeferObservable,_super),DeferObservable.create=function(observableFactory){return new DeferObservable(observableFactory)},DeferObservable.prototype._subscribe=function(subscriber){return new DeferSubscriber(subscriber,this.observableFactory)},DeferObservable}(Observable_1.Observable);exports.DeferObservable=DeferObservable;var DeferSubscriber=function(_super){function DeferSubscriber(destination,factory){_super.call(this,destination),this.factory=factory,this.tryDefer()}return __extends(DeferSubscriber,_super),DeferSubscriber.prototype.tryDefer=function(){try{this._callFactory()}catch(err){this._error(err)}},DeferSubscriber.prototype._callFactory=function(){var result=this.factory();result&&this.add(subscribeToResult_1.subscribeToResult(this,result))},DeferSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),ErrorObservable=function(_super){function ErrorObservable(error,scheduler){_super.call(this),this.error=error,this.scheduler=scheduler}return __extends(ErrorObservable,_super),ErrorObservable.create=function(error,scheduler){return new ErrorObservable(error,scheduler)},ErrorObservable.dispatch=function(arg){var error=arg.error;arg.subscriber.error(error)},ErrorObservable.prototype._subscribe=function(subscriber){var error=this.error,scheduler=this.scheduler;if(subscriber.syncErrorThrowable=!0,scheduler)return scheduler.schedule(ErrorObservable.dispatch,0,{error:error,subscriber:subscriber});subscriber.error(error)},ErrorObservable}(Observable_1.Observable);exports.ErrorObservable=ErrorObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),EmptyObservable_1=__webpack_require__(13),isArray_1=__webpack_require__(11),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2),ForkJoinObservable=function(_super){function ForkJoinObservable(sources,resultSelector){_super.call(this),this.sources=sources,this.resultSelector=resultSelector}return __extends(ForkJoinObservable,_super),ForkJoinObservable.create=function(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i-0]=arguments[_i];if(null===sources||0===arguments.length)return new EmptyObservable_1.EmptyObservable;var resultSelector=null;return"function"==typeof sources[sources.length-1]&&(resultSelector=sources.pop()),1===sources.length&&isArray_1.isArray(sources[0])&&(sources=sources[0]),0===sources.length?new EmptyObservable_1.EmptyObservable:new ForkJoinObservable(sources,resultSelector)},ForkJoinObservable.prototype._subscribe=function(subscriber){return new ForkJoinSubscriber(subscriber,this.sources,this.resultSelector)},ForkJoinObservable}(Observable_1.Observable);exports.ForkJoinObservable=ForkJoinObservable;var ForkJoinSubscriber=function(_super){function ForkJoinSubscriber(destination,sources,resultSelector){_super.call(this,destination),this.sources=sources,this.resultSelector=resultSelector,this.completed=0,this.haveValues=0;var len=sources.length;this.total=len,this.values=new Array(len);for(var i=0;i<len;i++){var source=sources[i],innerSubscription=subscribeToResult_1.subscribeToResult(this,source,null,i);innerSubscription&&(innerSubscription.outerIndex=i,this.add(innerSubscription))}}return __extends(ForkJoinSubscriber,_super),ForkJoinSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue,innerSub._hasValue||(innerSub._hasValue=!0,this.haveValues++)},ForkJoinSubscriber.prototype.notifyComplete=function(innerSub){var destination=this.destination,_a=this,haveValues=_a.haveValues,resultSelector=_a.resultSelector,values=_a.values,len=values.length;if(!innerSub._hasValue)return void destination.complete();if(++this.completed===len){if(haveValues===len){var value=resultSelector?resultSelector.apply(this,values):values;destination.next(value)}destination.complete()}},ForkJoinSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";function isNodeStyleEventEmitter(sourceObj){return!!sourceObj&&"function"==typeof sourceObj.addListener&&"function"==typeof sourceObj.removeListener}function isJQueryStyleEventEmitter(sourceObj){return!!sourceObj&&"function"==typeof sourceObj.on&&"function"==typeof sourceObj.off}function isNodeList(sourceObj){return!!sourceObj&&"[object NodeList]"===toString.call(sourceObj)}function isHTMLCollection(sourceObj){return!!sourceObj&&"[object HTMLCollection]"===toString.call(sourceObj)}function isEventTarget(sourceObj){return!!sourceObj&&"function"==typeof sourceObj.addEventListener&&"function"==typeof sourceObj.removeEventListener}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),tryCatch_1=__webpack_require__(8),isFunction_1=__webpack_require__(41),errorObject_1=__webpack_require__(7),Subscription_1=__webpack_require__(5),toString=Object.prototype.toString,FromEventObservable=function(_super){function FromEventObservable(sourceObj,eventName,selector,options){_super.call(this),this.sourceObj=sourceObj,this.eventName=eventName,this.selector=selector,this.options=options}return __extends(FromEventObservable,_super),FromEventObservable.create=function(target,eventName,options,selector){return isFunction_1.isFunction(options)&&(selector=options,options=void 0),new FromEventObservable(target,eventName,selector,options)},FromEventObservable.setupSubscription=function(sourceObj,eventName,handler,subscriber,options){var unsubscribe;if(isNodeList(sourceObj)||isHTMLCollection(sourceObj))for(var i=0,len=sourceObj.length;i<len;i++)FromEventObservable.setupSubscription(sourceObj[i],eventName,handler,subscriber,options);else if(isEventTarget(sourceObj)){var source_1=sourceObj;sourceObj.addEventListener(eventName,handler,options),unsubscribe=function(){return source_1.removeEventListener(eventName,handler,options)}}else if(isJQueryStyleEventEmitter(sourceObj)){var source_2=sourceObj;sourceObj.on(eventName,handler),unsubscribe=function(){return source_2.off(eventName,handler)}}else{if(!isNodeStyleEventEmitter(sourceObj))throw new TypeError("Invalid event target");var source_3=sourceObj;sourceObj.addListener(eventName,handler),unsubscribe=function(){return source_3.removeListener(eventName,handler)}}subscriber.add(new Subscription_1.Subscription(unsubscribe))},FromEventObservable.prototype._subscribe=function(subscriber){var sourceObj=this.sourceObj,eventName=this.eventName,options=this.options,selector=this.selector,handler=selector?function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];var result=tryCatch_1.tryCatch(selector).apply(void 0,args);result===errorObject_1.errorObject?subscriber.error(errorObject_1.errorObject.e):subscriber.next(result)}:function(e){return subscriber.next(e)};FromEventObservable.setupSubscription(sourceObj,eventName,handler,subscriber,options)},FromEventObservable}(Observable_1.Observable);exports.FromEventObservable=FromEventObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isFunction_1=__webpack_require__(41),Observable_1=__webpack_require__(0),Subscription_1=__webpack_require__(5),FromEventPatternObservable=function(_super){function FromEventPatternObservable(addHandler,removeHandler,selector){_super.call(this),this.addHandler=addHandler,this.removeHandler=removeHandler,this.selector=selector}return __extends(FromEventPatternObservable,_super),FromEventPatternObservable.create=function(addHandler,removeHandler,selector){return new FromEventPatternObservable(addHandler,removeHandler,selector)},FromEventPatternObservable.prototype._subscribe=function(subscriber){var _this=this,removeHandler=this.removeHandler,handler=this.selector?function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];_this._callSelector(subscriber,args)}:function(e){subscriber.next(e)},retValue=this._callAddHandler(handler,subscriber);isFunction_1.isFunction(removeHandler)&&subscriber.add(new Subscription_1.Subscription(function(){removeHandler(handler,retValue)}))},FromEventPatternObservable.prototype._callSelector=function(subscriber,args){try{var result=this.selector.apply(this,args);subscriber.next(result)}catch(e){subscriber.error(e)}},FromEventPatternObservable.prototype._callAddHandler=function(handler,errorSubscriber){try{return this.addHandler(handler)||null}catch(e){errorSubscriber.error(e)}},FromEventPatternObservable}(Observable_1.Observable);exports.FromEventPatternObservable=FromEventPatternObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),isScheduler_1=__webpack_require__(10),selfSelector=function(value){return value},GenerateObservable=function(_super){function GenerateObservable(initialState,condition,iterate,resultSelector,scheduler){_super.call(this),this.initialState=initialState,this.condition=condition,this.iterate=iterate,this.resultSelector=resultSelector,this.scheduler=scheduler}return __extends(GenerateObservable,_super),GenerateObservable.create=function(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler){return 1==arguments.length?new GenerateObservable(initialStateOrOptions.initialState,initialStateOrOptions.condition,initialStateOrOptions.iterate,initialStateOrOptions.resultSelector||selfSelector,initialStateOrOptions.scheduler):void 0===resultSelectorOrObservable||isScheduler_1.isScheduler(resultSelectorOrObservable)?new GenerateObservable(initialStateOrOptions,condition,iterate,selfSelector,resultSelectorOrObservable):new GenerateObservable(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler)},GenerateObservable.prototype._subscribe=function(subscriber){var state=this.initialState;if(this.scheduler)return this.scheduler.schedule(GenerateObservable.dispatch,0,{subscriber:subscriber,iterate:this.iterate,condition:this.condition,resultSelector:this.resultSelector,state:state});for(var _a=this,condition=_a.condition,resultSelector=_a.resultSelector,iterate=_a.iterate;;){if(condition){var conditionResult=void 0;try{conditionResult=condition(state)}catch(err){return void subscriber.error(err)}if(!conditionResult){subscriber.complete();break}}var value=void 0;try{value=resultSelector(state)}catch(err){return void subscriber.error(err)}if(subscriber.next(value),subscriber.closed)break;try{state=iterate(state)}catch(err){return void subscriber.error(err)}}},GenerateObservable.dispatch=function(state){var subscriber=state.subscriber,condition=state.condition;if(!subscriber.closed){if(state.needIterate)try{state.state=state.iterate(state.state)}catch(err){return void subscriber.error(err)}else state.needIterate=!0;if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state)}catch(err){return void subscriber.error(err)}if(!conditionResult)return void subscriber.complete();if(subscriber.closed)return}var value;try{value=state.resultSelector(state.state)}catch(err){return void subscriber.error(err)}if(!subscriber.closed&&(subscriber.next(value),!subscriber.closed))return this.schedule(state)}},GenerateObservable}(Observable_1.Observable);exports.GenerateObservable=GenerateObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2),IfObservable=function(_super){function IfObservable(condition,thenSource,elseSource){_super.call(this),this.condition=condition,this.thenSource=thenSource,this.elseSource=elseSource}return __extends(IfObservable,_super),IfObservable.create=function(condition,thenSource,elseSource){return new IfObservable(condition,thenSource,elseSource)},IfObservable.prototype._subscribe=function(subscriber){var _a=this,condition=_a.condition,thenSource=_a.thenSource,elseSource=_a.elseSource;return new IfSubscriber(subscriber,condition,thenSource,elseSource)},IfObservable}(Observable_1.Observable);exports.IfObservable=IfObservable;var IfSubscriber=function(_super){function IfSubscriber(destination,condition,thenSource,elseSource){_super.call(this,destination),this.condition=condition,this.thenSource=thenSource,this.elseSource=elseSource,this.tryIf()}return __extends(IfSubscriber,_super),IfSubscriber.prototype.tryIf=function(){var result,_a=this,condition=_a.condition,thenSource=_a.thenSource,elseSource=_a.elseSource;try{result=condition();var source=result?thenSource:elseSource;source?this.add(subscribeToResult_1.subscribeToResult(this,source)):this._complete()}catch(err){this._error(err)}},IfSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isNumeric_1=__webpack_require__(26),Observable_1=__webpack_require__(0),async_1=__webpack_require__(4),IntervalObservable=function(_super){function IntervalObservable(period,scheduler){void 0===period&&(period=0),void 0===scheduler&&(scheduler=async_1.async),_super.call(this),this.period=period,this.scheduler=scheduler,(!isNumeric_1.isNumeric(period)||period<0)&&(this.period=0),scheduler&&"function"==typeof scheduler.schedule||(this.scheduler=async_1.async)}return __extends(IntervalObservable,_super),IntervalObservable.create=function(period,scheduler){return void 0===period&&(period=0),void 0===scheduler&&(scheduler=async_1.async),new IntervalObservable(period,scheduler)},IntervalObservable.dispatch=function(state){var index=state.index,subscriber=state.subscriber,period=state.period;subscriber.next(index),subscriber.closed||(state.index+=1,this.schedule(state,period))},IntervalObservable.prototype._subscribe=function(subscriber){var period=this.period,scheduler=this.scheduler;subscriber.add(scheduler.schedule(IntervalObservable.dispatch,period,{index:0,subscriber:subscriber,period:period}))},IntervalObservable}(Observable_1.Observable);exports.IntervalObservable=IntervalObservable},function(module,exports,__webpack_require__){"use strict";function getIterator(obj){var i=obj[iterator_1.iterator];if(!i&&"string"==typeof obj)return new StringIterator(obj);if(!i&&void 0!==obj.length)return new ArrayIterator(obj);if(!i)throw new TypeError("object is not iterable");return obj[iterator_1.iterator]()}function toLength(o){var len=+o.length;return isNaN(len)?0:0!==len&&numberIsFinite(len)?(len=sign(len)*Math.floor(Math.abs(len)),len<=0?0:len>maxSafeInteger?maxSafeInteger:len):len}function numberIsFinite(value){return"number"==typeof value&&root_1.root.isFinite(value)}function sign(value){var valueAsNumber=+value;return 0===valueAsNumber?valueAsNumber:isNaN(valueAsNumber)?valueAsNumber:valueAsNumber<0?-1:1}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},root_1=__webpack_require__(9),Observable_1=__webpack_require__(0),iterator_1=__webpack_require__(24),IteratorObservable=function(_super){function IteratorObservable(iterator,scheduler){if(_super.call(this),this.scheduler=scheduler,null==iterator)throw new Error("iterator cannot be null.");this.iterator=getIterator(iterator)}return __extends(IteratorObservable,_super),IteratorObservable.create=function(iterator,scheduler){return new IteratorObservable(iterator,scheduler)},IteratorObservable.dispatch=function(state){var index=state.index,hasError=state.hasError,iterator=state.iterator,subscriber=state.subscriber;if(hasError)return void subscriber.error(state.error);var result=iterator.next();return result.done?void subscriber.complete():(subscriber.next(result.value),state.index=index+1,subscriber.closed?void("function"==typeof iterator.return&&iterator.return()):void this.schedule(state))},IteratorObservable.prototype._subscribe=function(subscriber){var _a=this,iterator=_a.iterator,scheduler=_a.scheduler;if(scheduler)return scheduler.schedule(IteratorObservable.dispatch,0,{index:0,iterator:iterator,subscriber:subscriber});for(;;){var result=iterator.next();if(result.done){subscriber.complete();break}if(subscriber.next(result.value),subscriber.closed){"function"==typeof iterator.return&&iterator.return();break}}},IteratorObservable}(Observable_1.Observable);exports.IteratorObservable=IteratorObservable;var StringIterator=function(){function StringIterator(str,idx,len){void 0===idx&&(idx=0),void 0===len&&(len=str.length),this.str=str,this.idx=idx,this.len=len}return StringIterator.prototype[iterator_1.iterator]=function(){return this},StringIterator.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.str.charAt(this.idx++)}:{done:!0,value:void 0}},StringIterator}(),ArrayIterator=function(){function ArrayIterator(arr,idx,len){void 0===idx&&(idx=0),void 0===len&&(len=toLength(arr)),this.arr=arr,this.idx=idx,this.len=len}return ArrayIterator.prototype[iterator_1.iterator]=function(){return this},ArrayIterator.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.arr[this.idx++]}:{done:!0,value:void 0}},ArrayIterator}(),maxSafeInteger=Math.pow(2,53)-1},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),noop_1=__webpack_require__(58),NeverObservable=function(_super){function NeverObservable(){_super.call(this)}return __extends(NeverObservable,_super),NeverObservable.create=function(){return new NeverObservable},NeverObservable.prototype._subscribe=function(subscriber){noop_1.noop()},NeverObservable}(Observable_1.Observable);exports.NeverObservable=NeverObservable},function(module,exports,__webpack_require__){"use strict";function dispatch(state){var obj=state.obj,keys=state.keys,length=state.length,index=state.index,subscriber=state.subscriber;if(index===length)return void subscriber.complete();var key=keys[index];subscriber.next([key,obj[key]]),state.index=index+1,this.schedule(state)}var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),PairsObservable=function(_super){function PairsObservable(obj,scheduler){_super.call(this),this.obj=obj,this.scheduler=scheduler,this.keys=Object.keys(obj)}return __extends(PairsObservable,_super),PairsObservable.create=function(obj,scheduler){return new PairsObservable(obj,scheduler)},PairsObservable.prototype._subscribe=function(subscriber){var _a=this,keys=_a.keys,scheduler=_a.scheduler,length=keys.length;if(scheduler)return scheduler.schedule(dispatch,0,{obj:this.obj,keys:keys,length:length,index:0,subscriber:subscriber});for(var idx=0;idx<length;idx++){var key=keys[idx];subscriber.next([key,this.obj[key]])}subscriber.complete()},PairsObservable}(Observable_1.Observable);exports.PairsObservable=PairsObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),RangeObservable=function(_super){function RangeObservable(start,count,scheduler){_super.call(this),this.start=start,this._count=count,this.scheduler=scheduler}return __extends(RangeObservable,_super),RangeObservable.create=function(start,count,scheduler){return void 0===start&&(start=0),void 0===count&&(count=0),new RangeObservable(start,count,scheduler)},RangeObservable.dispatch=function(state){var start=state.start,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count)return void subscriber.complete();subscriber.next(start),subscriber.closed||(state.index=index+1,state.start=start+1,this.schedule(state))},RangeObservable.prototype._subscribe=function(subscriber){var index=0,start=this.start,count=this._count,scheduler=this.scheduler;if(scheduler)return scheduler.schedule(RangeObservable.dispatch,0,{index:index,count:count,start:start,subscriber:subscriber});for(;;){if(index++>=count){subscriber.complete();break}if(subscriber.next(start++),subscriber.closed)break}},RangeObservable}(Observable_1.Observable);exports.RangeObservable=RangeObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),asap_1=__webpack_require__(156),isNumeric_1=__webpack_require__(26),SubscribeOnObservable=function(_super){function SubscribeOnObservable(source,delayTime,scheduler){void 0===delayTime&&(delayTime=0),void 0===scheduler&&(scheduler=asap_1.asap),_super.call(this),this.source=source,this.delayTime=delayTime,this.scheduler=scheduler,(!isNumeric_1.isNumeric(delayTime)||delayTime<0)&&(this.delayTime=0),scheduler&&"function"==typeof scheduler.schedule||(this.scheduler=asap_1.asap)}return __extends(SubscribeOnObservable,_super),SubscribeOnObservable.create=function(source,delay,scheduler){return void 0===delay&&(delay=0),void 0===scheduler&&(scheduler=asap_1.asap),new SubscribeOnObservable(source,delay,scheduler)},SubscribeOnObservable.dispatch=function(arg){var source=arg.source,subscriber=arg.subscriber;return this.add(source.subscribe(subscriber))},SubscribeOnObservable.prototype._subscribe=function(subscriber){var delay=this.delayTime,source=this.source;return this.scheduler.schedule(SubscribeOnObservable.dispatch,delay,{source:source,subscriber:subscriber})},SubscribeOnObservable}(Observable_1.Observable);exports.SubscribeOnObservable=SubscribeOnObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},isNumeric_1=__webpack_require__(26),Observable_1=__webpack_require__(0),async_1=__webpack_require__(4),isScheduler_1=__webpack_require__(10),isDate_1=__webpack_require__(40),TimerObservable=function(_super){function TimerObservable(dueTime,period,scheduler){void 0===dueTime&&(dueTime=0),_super.call(this),this.period=-1,this.dueTime=0,isNumeric_1.isNumeric(period)?this.period=Number(period)<1&&1||Number(period):isScheduler_1.isScheduler(period)&&(scheduler=period),isScheduler_1.isScheduler(scheduler)||(scheduler=async_1.async),this.scheduler=scheduler,this.dueTime=isDate_1.isDate(dueTime)?+dueTime-this.scheduler.now():dueTime}return __extends(TimerObservable,_super),TimerObservable.create=function(initialDelay,period,scheduler){return void 0===initialDelay&&(initialDelay=0),new TimerObservable(initialDelay,period,scheduler)},TimerObservable.dispatch=function(state){var index=state.index,period=state.period,subscriber=state.subscriber,action=this;if(subscriber.next(index),!subscriber.closed){if(-1===period)return subscriber.complete();state.index=index+1,action.schedule(state,period)}},TimerObservable.prototype._subscribe=function(subscriber){var _a=this,period=_a.period,dueTime=_a.dueTime;return _a.scheduler.schedule(TimerObservable.dispatch,dueTime,{index:0,period:period,subscriber:subscriber})},TimerObservable}(Observable_1.Observable);exports.TimerObservable=TimerObservable},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),subscribeToResult_1=__webpack_require__(3),OuterSubscriber_1=__webpack_require__(2),UsingObservable=function(_super){function UsingObservable(resourceFactory,observableFactory){_super.call(this),this.resourceFactory=resourceFactory,this.observableFactory=observableFactory}return __extends(UsingObservable,_super),UsingObservable.create=function(resourceFactory,observableFactory){return new UsingObservable(resourceFactory,observableFactory)},UsingObservable.prototype._subscribe=function(subscriber){var resource,_a=this,resourceFactory=_a.resourceFactory,observableFactory=_a.observableFactory;try{return resource=resourceFactory(),new UsingSubscriber(subscriber,resource,observableFactory)}catch(err){subscriber.error(err)}},UsingObservable}(Observable_1.Observable);exports.UsingObservable=UsingObservable;var UsingSubscriber=function(_super){function UsingSubscriber(destination,resource,observableFactory){_super.call(this,destination),this.resource=resource,this.observableFactory=observableFactory,destination.add(resource),this.tryUse()}return __extends(UsingSubscriber,_super),UsingSubscriber.prototype.tryUse=function(){try{var source=this.observableFactory.call(this,this.resource);source&&this.add(subscribeToResult_1.subscribeToResult(this,source))}catch(err){this._error(err)}},UsingSubscriber}(OuterSubscriber_1.OuterSubscriber)},function(module,exports,__webpack_require__){"use strict";var BoundCallbackObservable_1=__webpack_require__(323);exports.bindCallback=BoundCallbackObservable_1.BoundCallbackObservable.create},function(module,exports,__webpack_require__){"use strict";var BoundNodeCallbackObservable_1=__webpack_require__(324);exports.bindNodeCallback=BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create},function(module,exports,__webpack_require__){"use strict";function combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];var project=null,scheduler=null;return isScheduler_1.isScheduler(observables[observables.length-1])&&(scheduler=observables.pop()),"function"==typeof observables[observables.length-1]&&(project=observables.pop()),1===observables.length&&isArray_1.isArray(observables[0])&&(observables=observables[0]),new ArrayObservable_1.ArrayObservable(observables,scheduler).lift(new combineLatest_1.CombineLatestOperator(project))}var isScheduler_1=__webpack_require__(10),isArray_1=__webpack_require__(11),ArrayObservable_1=__webpack_require__(12),combineLatest_1=__webpack_require__(31);exports.combineLatest=combineLatest},function(module,exports,__webpack_require__){"use strict";var DeferObservable_1=__webpack_require__(325);exports.defer=DeferObservable_1.DeferObservable.create},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),Subscriber_1=__webpack_require__(1),Observable_1=__webpack_require__(0),Subscription_1=__webpack_require__(5),root_1=__webpack_require__(9),ReplaySubject_1=__webpack_require__(29),tryCatch_1=__webpack_require__(8),errorObject_1=__webpack_require__(7),assign_1=__webpack_require__(481),WebSocketSubject=function(_super){function WebSocketSubject(urlConfigOrSource,destination){if(urlConfigOrSource instanceof Observable_1.Observable)_super.call(this,destination,urlConfigOrSource);else{if(_super.call(this),this.WebSocketCtor=root_1.root.WebSocket,this._output=new Subject_1.Subject,"string"==typeof urlConfigOrSource?this.url=urlConfigOrSource:assign_1.assign(this,urlConfigOrSource),!this.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new ReplaySubject_1.ReplaySubject}}return __extends(WebSocketSubject,_super),WebSocketSubject.prototype.resultSelector=function(e){return JSON.parse(e.data)},WebSocketSubject.create=function(urlConfigOrSource){return new WebSocketSubject(urlConfigOrSource)},WebSocketSubject.prototype.lift=function(operator){var sock=new WebSocketSubject(this,this.destination);return sock.operator=operator,sock},WebSocketSubject.prototype._resetState=function(){this.socket=null,this.source||(this.destination=new ReplaySubject_1.ReplaySubject),this._output=new Subject_1.Subject},WebSocketSubject.prototype.multiplex=function(subMsg,unsubMsg,messageFilter){var self=this;return new Observable_1.Observable(function(observer){var result=tryCatch_1.tryCatch(subMsg)();result===errorObject_1.errorObject?observer.error(errorObject_1.errorObject.e):self.next(result);var subscription=self.subscribe(function(x){var result=tryCatch_1.tryCatch(messageFilter)(x);result===errorObject_1.errorObject?observer.error(errorObject_1.errorObject.e):result&&observer.next(x)},function(err){return observer.error(err)},function(){return observer.complete()});return function(){var result=tryCatch_1.tryCatch(unsubMsg)();result===errorObject_1.errorObject?observer.error(errorObject_1.errorObject.e):self.next(result),subscription.unsubscribe()}})},WebSocketSubject.prototype._connectSocket=function(){var _this=this,WebSocketCtor=this.WebSocketCtor,observer=this._output,socket=null;try{socket=this.protocol?new WebSocketCtor(this.url,this.protocol):new WebSocketCtor(this.url),this.socket=socket,this.binaryType&&(this.socket.binaryType=this.binaryType)}catch(e){return void observer.error(e)}var subscription=new Subscription_1.Subscription(function(){_this.socket=null,socket&&1===socket.readyState&&socket.close()});socket.onopen=function(e){var openObserver=_this.openObserver;openObserver&&openObserver.next(e);var queue=_this.destination;_this.destination=Subscriber_1.Subscriber.create(function(x){return 1===socket.readyState&&socket.send(x)},function(e){var closingObserver=_this.closingObserver;closingObserver&&closingObserver.next(void 0),e&&e.code?socket.close(e.code,e.reason):observer.error(new TypeError("WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }")),_this._resetState()},function(){var closingObserver=_this.closingObserver;closingObserver&&closingObserver.next(void 0),socket.close(),_this._resetState()}),queue&&queue instanceof ReplaySubject_1.ReplaySubject&&subscription.add(queue.subscribe(_this.destination))},socket.onerror=function(e){_this._resetState(),observer.error(e)},socket.onclose=function(e){_this._resetState();var closeObserver=_this.closeObserver;closeObserver&&closeObserver.next(e),e.wasClean?observer.complete():observer.error(e)},socket.onmessage=function(e){var result=tryCatch_1.tryCatch(_this.resultSelector)(e);result===errorObject_1.errorObject?observer.error(errorObject_1.errorObject.e):observer.next(result)}},WebSocketSubject.prototype._subscribe=function(subscriber){var _this=this,source=this.source;if(source)return source.subscribe(subscriber);this.socket||this._connectSocket();var subscription=new Subscription_1.Subscription;return subscription.add(this._output.subscribe(subscriber)),subscription.add(function(){var socket=_this.socket;0===_this._output.observers.length&&(socket&&1===socket.readyState&&socket.close(),_this._resetState())}),subscription},WebSocketSubject.prototype.unsubscribe=function(){var _a=this,source=_a.source,socket=_a.socket;socket&&1===socket.readyState&&(socket.close(),this._resetState()),_super.prototype.unsubscribe.call(this),source||(this.destination=new ReplaySubject_1.ReplaySubject)},WebSocketSubject}(Subject_1.AnonymousSubject);exports.WebSocketSubject=WebSocketSubject},function(module,exports,__webpack_require__){"use strict";var AjaxObservable_1=__webpack_require__(72);exports.ajax=AjaxObservable_1.AjaxObservable.create},function(module,exports,__webpack_require__){"use strict";var WebSocketSubject_1=__webpack_require__(344);exports.webSocket=WebSocketSubject_1.WebSocketSubject.create},function(module,exports,__webpack_require__){"use strict";var EmptyObservable_1=__webpack_require__(13);exports.empty=EmptyObservable_1.EmptyObservable.create},function(module,exports,__webpack_require__){"use strict";var ForkJoinObservable_1=__webpack_require__(327);exports.forkJoin=ForkJoinObservable_1.ForkJoinObservable.create},function(module,exports,__webpack_require__){"use strict";var FromEventObservable_1=__webpack_require__(328);exports.fromEvent=FromEventObservable_1.FromEventObservable.create},function(module,exports,__webpack_require__){"use strict";var FromEventPatternObservable_1=__webpack_require__(329);exports.fromEventPattern=FromEventPatternObservable_1.FromEventPatternObservable.create},function(module,exports,__webpack_require__){"use strict";var PromiseObservable_1=__webpack_require__(71);exports.fromPromise=PromiseObservable_1.PromiseObservable.create},function(module,exports,__webpack_require__){"use strict";var GenerateObservable_1=__webpack_require__(330);exports.generate=GenerateObservable_1.GenerateObservable.create},function(module,exports,__webpack_require__){"use strict";var IfObservable_1=__webpack_require__(331);exports._if=IfObservable_1.IfObservable.create},function(module,exports,__webpack_require__){"use strict";var IntervalObservable_1=__webpack_require__(332);exports.interval=IntervalObservable_1.IntervalObservable.create},function(module,exports,__webpack_require__){"use strict";var NeverObservable_1=__webpack_require__(334);exports.never=NeverObservable_1.NeverObservable.create},function(module,exports,__webpack_require__){"use strict";var onErrorResumeNext_1=__webpack_require__(52);exports.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNextStatic},function(module,exports,__webpack_require__){"use strict";var PairsObservable_1=__webpack_require__(335);exports.pairs=PairsObservable_1.PairsObservable.create},function(module,exports,__webpack_require__){"use strict";var RangeObservable_1=__webpack_require__(336);exports.range=RangeObservable_1.RangeObservable.create},function(module,exports,__webpack_require__){"use strict";var ErrorObservable_1=__webpack_require__(326);exports._throw=ErrorObservable_1.ErrorObservable.create},function(module,exports,__webpack_require__){"use strict";var UsingObservable_1=__webpack_require__(339);exports.using=UsingObservable_1.UsingObservable.create},function(module,exports,__webpack_require__){"use strict";var zip_1=__webpack_require__(35);exports.zip=zip_1.zipStatic},function(module,exports,__webpack_require__){"use strict";function audit(durationSelector){return audit_1.audit(durationSelector)(this)}var audit_1=__webpack_require__(45);exports.audit=audit},function(module,exports,__webpack_require__){"use strict";function auditTime(duration,scheduler){return void 0===scheduler&&(scheduler=async_1.async),auditTime_1.auditTime(duration,scheduler)(this)}var async_1=__webpack_require__(4),auditTime_1=__webpack_require__(77);exports.auditTime=auditTime},function(module,exports,__webpack_require__){"use strict";function buffer(closingNotifier){return buffer_1.buffer(closingNotifier)(this)}var buffer_1=__webpack_require__(78);exports.buffer=buffer},function(module,exports,__webpack_require__){"use strict";function bufferCount(bufferSize,startBufferEvery){return void 0===startBufferEvery&&(startBufferEvery=null),bufferCount_1.bufferCount(bufferSize,startBufferEvery)(this)}var bufferCount_1=__webpack_require__(79);exports.bufferCount=bufferCount},function(module,exports,__webpack_require__){"use strict";function bufferTime(bufferTimeSpan){var length=arguments.length,scheduler=async_1.async;isScheduler_1.isScheduler(arguments[arguments.length-1])&&(scheduler=arguments[arguments.length-1],length--);var bufferCreationInterval=null;length>=2&&(bufferCreationInterval=arguments[1]);var maxBufferSize=Number.POSITIVE_INFINITY;return length>=3&&(maxBufferSize=arguments[2]),bufferTime_1.bufferTime(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler)(this)}var async_1=__webpack_require__(4),isScheduler_1=__webpack_require__(10),bufferTime_1=__webpack_require__(80);exports.bufferTime=bufferTime},function(module,exports,__webpack_require__){"use strict";function bufferToggle(openings,closingSelector){return bufferToggle_1.bufferToggle(openings,closingSelector)(this)}var bufferToggle_1=__webpack_require__(81);exports.bufferToggle=bufferToggle},function(module,exports,__webpack_require__){"use strict";function bufferWhen(closingSelector){return bufferWhen_1.bufferWhen(closingSelector)(this)}var bufferWhen_1=__webpack_require__(82);exports.bufferWhen=bufferWhen},function(module,exports,__webpack_require__){"use strict";function _catch(selector){return catchError_1.catchError(selector)(this)}var catchError_1=__webpack_require__(83);exports._catch=_catch},function(module,exports,__webpack_require__){"use strict";function combineAll(project){return combineAll_1.combineAll(project)(this)}var combineAll_1=__webpack_require__(84);exports.combineAll=combineAll},function(module,exports,__webpack_require__){"use strict";function combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return combineLatest_1.combineLatest.apply(void 0,observables)(this)}var combineLatest_1=__webpack_require__(31);exports.combineLatest=combineLatest},function(module,exports,__webpack_require__){"use strict";function concat(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return concat_1.concat.apply(void 0,observables)(this)}var concat_1=__webpack_require__(85),concat_2=__webpack_require__(18);exports.concatStatic=concat_2.concat,exports.concat=concat},function(module,exports,__webpack_require__){"use strict";function concatAll(){return concatAll_1.concatAll()(this)}var concatAll_1=__webpack_require__(46);exports.concatAll=concatAll},function(module,exports,__webpack_require__){"use strict";function concatMap(project,resultSelector){return concatMap_1.concatMap(project,resultSelector)(this)}var concatMap_1=__webpack_require__(47);exports.concatMap=concatMap},function(module,exports,__webpack_require__){"use strict";function concatMapTo(innerObservable,resultSelector){return concatMapTo_1.concatMapTo(innerObservable,resultSelector)(this)}var concatMapTo_1=__webpack_require__(86);exports.concatMapTo=concatMapTo},function(module,exports,__webpack_require__){"use strict";function count(predicate){return count_1.count(predicate)(this)}var count_1=__webpack_require__(87);exports.count=count},function(module,exports,__webpack_require__){"use strict";function debounce(durationSelector){return debounce_1.debounce(durationSelector)(this)}var debounce_1=__webpack_require__(88);exports.debounce=debounce},function(module,exports,__webpack_require__){"use strict";function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=async_1.async),debounceTime_1.debounceTime(dueTime,scheduler)(this)}var async_1=__webpack_require__(4),debounceTime_1=__webpack_require__(89);exports.debounceTime=debounceTime},function(module,exports,__webpack_require__){"use strict";function defaultIfEmpty(defaultValue){return void 0===defaultValue&&(defaultValue=null),defaultIfEmpty_1.defaultIfEmpty(defaultValue)(this)}var defaultIfEmpty_1=__webpack_require__(48);exports.defaultIfEmpty=defaultIfEmpty},function(module,exports,__webpack_require__){"use strict";function delay(delay,scheduler){return void 0===scheduler&&(scheduler=async_1.async),delay_1.delay(delay,scheduler)(this)}var async_1=__webpack_require__(4),delay_1=__webpack_require__(90);exports.delay=delay},function(module,exports,__webpack_require__){"use strict";function delayWhen(delayDurationSelector,subscriptionDelay){return delayWhen_1.delayWhen(delayDurationSelector,subscriptionDelay)(this)}var delayWhen_1=__webpack_require__(91);exports.delayWhen=delayWhen},function(module,exports,__webpack_require__){"use strict";function dematerialize(){return dematerialize_1.dematerialize()(this)}var dematerialize_1=__webpack_require__(92);exports.dematerialize=dematerialize},function(module,exports,__webpack_require__){"use strict";function distinct(keySelector,flushes){return distinct_1.distinct(keySelector,flushes)(this)}var distinct_1=__webpack_require__(93);exports.distinct=distinct},function(module,exports,__webpack_require__){"use strict";function distinctUntilChanged(compare,keySelector){return distinctUntilChanged_1.distinctUntilChanged(compare,keySelector)(this)}var distinctUntilChanged_1=__webpack_require__(49);exports.distinctUntilChanged=distinctUntilChanged},function(module,exports,__webpack_require__){"use strict";function distinctUntilKeyChanged(key,compare){return distinctUntilKeyChanged_1.distinctUntilKeyChanged(key,compare)(this)}var distinctUntilKeyChanged_1=__webpack_require__(94);exports.distinctUntilKeyChanged=distinctUntilKeyChanged},function(module,exports,__webpack_require__){"use strict";function _do(nextOrObserver,error,complete){return tap_1.tap(nextOrObserver,error,complete)(this)}var tap_1=__webpack_require__(142);exports._do=_do},function(module,exports,__webpack_require__){"use strict";function elementAt(index,defaultValue){return elementAt_1.elementAt(index,defaultValue)(this)}var elementAt_1=__webpack_require__(95);exports.elementAt=elementAt},function(module,exports,__webpack_require__){"use strict";function every(predicate,thisArg){return every_1.every(predicate,thisArg)(this)}var every_1=__webpack_require__(96);exports.every=every},function(module,exports,__webpack_require__){"use strict";function exhaust(){return exhaust_1.exhaust()(this)}var exhaust_1=__webpack_require__(97);exports.exhaust=exhaust},function(module,exports,__webpack_require__){"use strict";function exhaustMap(project,resultSelector){return exhaustMap_1.exhaustMap(project,resultSelector)(this)}var exhaustMap_1=__webpack_require__(98);exports.exhaustMap=exhaustMap},function(module,exports,__webpack_require__){"use strict";function expand(project,concurrent,scheduler){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),void 0===scheduler&&(scheduler=void 0),concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent,expand_1.expand(project,concurrent,scheduler)(this)}var expand_1=__webpack_require__(99);exports.expand=expand},function(module,exports,__webpack_require__){"use strict";function filter(predicate,thisArg){return filter_1.filter(predicate,thisArg)(this)}var filter_1=__webpack_require__(50);exports.filter=filter},function(module,exports,__webpack_require__){"use strict";function _finally(callback){return finalize_1.finalize(callback)(this)}var finalize_1=__webpack_require__(100);exports._finally=_finally},function(module,exports,__webpack_require__){"use strict";function find(predicate,thisArg){return find_1.find(predicate,thisArg)(this)}var find_1=__webpack_require__(51);exports.find=find},function(module,exports,__webpack_require__){"use strict";function findIndex(predicate,thisArg){return findIndex_1.findIndex(predicate,thisArg)(this)}var findIndex_1=__webpack_require__(101);exports.findIndex=findIndex},function(module,exports,__webpack_require__){"use strict";function first(predicate,resultSelector,defaultValue){return first_1.first(predicate,resultSelector,defaultValue)(this)}var first_1=__webpack_require__(102);exports.first=first},function(module,exports,__webpack_require__){"use strict";function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return groupBy_1.groupBy(keySelector,elementSelector,durationSelector,subjectSelector)(this)}var groupBy_1=__webpack_require__(103);exports.GroupedObservable=groupBy_1.GroupedObservable,exports.groupBy=groupBy},function(module,exports,__webpack_require__){"use strict";function ignoreElements(){return ignoreElements_1.ignoreElements()(this)}var ignoreElements_1=__webpack_require__(104);exports.ignoreElements=ignoreElements},function(module,exports,__webpack_require__){"use strict";function isEmpty(){return isEmpty_1.isEmpty()(this)}var isEmpty_1=__webpack_require__(105);exports.isEmpty=isEmpty},function(module,exports,__webpack_require__){"use strict";function last(predicate,resultSelector,defaultValue){return last_1.last(predicate,resultSelector,defaultValue)(this)}var last_1=__webpack_require__(106);exports.last=last},function(module,exports,__webpack_require__){"use strict";function letProto(func){return func(this)}exports.letProto=letProto},function(module,exports,__webpack_require__){"use strict";function map(project,thisArg){return map_1.map(project,thisArg)(this)}var map_1=__webpack_require__(19);exports.map=map},function(module,exports,__webpack_require__){"use strict";function mapTo(value){return mapTo_1.mapTo(value)(this)}var mapTo_1=__webpack_require__(107);exports.mapTo=mapTo},function(module,exports,__webpack_require__){"use strict";function materialize(){return materialize_1.materialize()(this)}var materialize_1=__webpack_require__(108);exports.materialize=materialize},function(module,exports,__webpack_require__){"use strict";function max(comparer){return max_1.max(comparer)(this)}var max_1=__webpack_require__(109);exports.max=max},function(module,exports,__webpack_require__){"use strict";function merge(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return merge_1.merge.apply(void 0,observables)(this)}var merge_1=__webpack_require__(110),merge_2=__webpack_require__(30);exports.mergeStatic=merge_2.merge,exports.merge=merge},function(module,exports,__webpack_require__){"use strict";function mergeAll(concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),mergeAll_1.mergeAll(concurrent)(this)}var mergeAll_1=__webpack_require__(32);exports.mergeAll=mergeAll},function(module,exports,__webpack_require__){"use strict";function mergeMap(project,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),mergeMap_1.mergeMap(project,resultSelector,concurrent)(this)}var mergeMap_1=__webpack_require__(20);exports.mergeMap=mergeMap},function(module,exports,__webpack_require__){"use strict";function mergeMapTo(innerObservable,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),mergeMapTo_1.mergeMapTo(innerObservable,resultSelector,concurrent)(this)}var mergeMapTo_1=__webpack_require__(111);exports.mergeMapTo=mergeMapTo},function(module,exports,__webpack_require__){"use strict";function mergeScan(accumulator,seed,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),mergeScan_1.mergeScan(accumulator,seed,concurrent)(this)}var mergeScan_1=__webpack_require__(112);exports.mergeScan=mergeScan},function(module,exports,__webpack_require__){"use strict";function min(comparer){return min_1.min(comparer)(this)}var min_1=__webpack_require__(113);exports.min=min},function(module,exports,__webpack_require__){"use strict";function multicast(subjectOrSubjectFactory,selector){return multicast_1.multicast(subjectOrSubjectFactory,selector)(this)}var multicast_1=__webpack_require__(15);exports.multicast=multicast},function(module,exports,__webpack_require__){"use strict";function observeOn(scheduler,delay){return void 0===delay&&(delay=0),observeOn_1.observeOn(scheduler,delay)(this)}var observeOn_1=__webpack_require__(33);exports.observeOn=observeOn},function(module,exports,__webpack_require__){"use strict";function onErrorResumeNext(){for(var nextSources=[],_i=0;_i<arguments.length;_i++)nextSources[_i-0]=arguments[_i];return onErrorResumeNext_1.onErrorResumeNext.apply(void 0,nextSources)(this)}var onErrorResumeNext_1=__webpack_require__(52);exports.onErrorResumeNext=onErrorResumeNext},function(module,exports,__webpack_require__){"use strict";function pairwise(){return pairwise_1.pairwise()(this)}var pairwise_1=__webpack_require__(114);exports.pairwise=pairwise},function(module,exports,__webpack_require__){"use strict";function partition(predicate,thisArg){return partition_1.partition(predicate,thisArg)(this)}var partition_1=__webpack_require__(115);exports.partition=partition},function(module,exports,__webpack_require__){"use strict";function pluck(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i-0]=arguments[_i];return pluck_1.pluck.apply(void 0,properties)(this)}var pluck_1=__webpack_require__(116);exports.pluck=pluck},function(module,exports,__webpack_require__){"use strict";function publish(selector){return publish_1.publish(selector)(this)}var publish_1=__webpack_require__(117);exports.publish=publish},function(module,exports,__webpack_require__){"use strict";function publishBehavior(value){return publishBehavior_1.publishBehavior(value)(this)}var publishBehavior_1=__webpack_require__(118);exports.publishBehavior=publishBehavior},function(module,exports,__webpack_require__){"use strict";function publishLast(){return publishLast_1.publishLast()(this)}var publishLast_1=__webpack_require__(119);exports.publishLast=publishLast},function(module,exports,__webpack_require__){"use strict";function publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler){return publishReplay_1.publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler)(this)}var publishReplay_1=__webpack_require__(120);exports.publishReplay=publishReplay},function(module,exports,__webpack_require__){"use strict";function race(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return race_1.race.apply(void 0,observables)(this)}var race_1=__webpack_require__(121),race_2=__webpack_require__(44);exports.raceStatic=race_2.race,exports.race=race},function(module,exports,__webpack_require__){"use strict";function reduce(accumulator,seed){return arguments.length>=2?reduce_1.reduce(accumulator,seed)(this):reduce_1.reduce(accumulator)(this)}var reduce_1=__webpack_require__(21);exports.reduce=reduce},function(module,exports,__webpack_require__){"use strict";function repeat(count){return void 0===count&&(count=-1),repeat_1.repeat(count)(this)}var repeat_1=__webpack_require__(122);exports.repeat=repeat},function(module,exports,__webpack_require__){"use strict";function repeatWhen(notifier){return repeatWhen_1.repeatWhen(notifier)(this)}var repeatWhen_1=__webpack_require__(123);exports.repeatWhen=repeatWhen},function(module,exports,__webpack_require__){"use strict";function retry(count){return void 0===count&&(count=-1),retry_1.retry(count)(this)}var retry_1=__webpack_require__(124);exports.retry=retry},function(module,exports,__webpack_require__){"use strict";function retryWhen(notifier){return retryWhen_1.retryWhen(notifier)(this)}var retryWhen_1=__webpack_require__(125);exports.retryWhen=retryWhen},function(module,exports,__webpack_require__){"use strict";function sample(notifier){return sample_1.sample(notifier)(this)}var sample_1=__webpack_require__(126);exports.sample=sample},function(module,exports,__webpack_require__){"use strict";function sampleTime(period,scheduler){return void 0===scheduler&&(scheduler=async_1.async),sampleTime_1.sampleTime(period,scheduler)(this)}var async_1=__webpack_require__(4),sampleTime_1=__webpack_require__(127);exports.sampleTime=sampleTime},function(module,exports,__webpack_require__){"use strict";function scan(accumulator,seed){return arguments.length>=2?scan_1.scan(accumulator,seed)(this):scan_1.scan(accumulator)(this)}var scan_1=__webpack_require__(54);exports.scan=scan},function(module,exports,__webpack_require__){"use strict";function sequenceEqual(compareTo,comparor){return sequenceEqual_1.sequenceEqual(compareTo,comparor)(this)}var sequenceEqual_1=__webpack_require__(128);exports.sequenceEqual=sequenceEqual},function(module,exports,__webpack_require__){"use strict";function share(){return share_1.share()(this)}var share_1=__webpack_require__(129);exports.share=share},function(module,exports,__webpack_require__){"use strict";function shareReplay(bufferSize,windowTime,scheduler){return shareReplay_1.shareReplay(bufferSize,windowTime,scheduler)(this)}var shareReplay_1=__webpack_require__(130);exports.shareReplay=shareReplay},function(module,exports,__webpack_require__){"use strict";function single(predicate){return single_1.single(predicate)(this)}var single_1=__webpack_require__(131);exports.single=single},function(module,exports,__webpack_require__){"use strict";function skip(count){return skip_1.skip(count)(this)}var skip_1=__webpack_require__(132);exports.skip=skip},function(module,exports,__webpack_require__){"use strict";function skipLast(count){return skipLast_1.skipLast(count)(this)}var skipLast_1=__webpack_require__(133);exports.skipLast=skipLast},function(module,exports,__webpack_require__){"use strict";function skipUntil(notifier){return skipUntil_1.skipUntil(notifier)(this)}var skipUntil_1=__webpack_require__(134);exports.skipUntil=skipUntil},function(module,exports,__webpack_require__){"use strict";function skipWhile(predicate){return skipWhile_1.skipWhile(predicate)(this)}var skipWhile_1=__webpack_require__(135);exports.skipWhile=skipWhile},function(module,exports,__webpack_require__){"use strict";function startWith(){for(var array=[],_i=0;_i<arguments.length;_i++)array[_i-0]=arguments[_i];return startWith_1.startWith.apply(void 0,array)(this)}var startWith_1=__webpack_require__(136);exports.startWith=startWith},function(module,exports,__webpack_require__){"use strict";function subscribeOn(scheduler,delay){return void 0===delay&&(delay=0),subscribeOn_1.subscribeOn(scheduler,delay)(this)}var subscribeOn_1=__webpack_require__(463);exports.subscribeOn=subscribeOn},function(module,exports,__webpack_require__){"use strict";function _switch(){return switchAll_1.switchAll()(this)}var switchAll_1=__webpack_require__(137);exports._switch=_switch},function(module,exports,__webpack_require__){"use strict";function switchMap(project,resultSelector){return switchMap_1.switchMap(project,resultSelector)(this)}var switchMap_1=__webpack_require__(55);exports.switchMap=switchMap},function(module,exports,__webpack_require__){"use strict";function switchMapTo(innerObservable,resultSelector){return switchMapTo_1.switchMapTo(innerObservable,resultSelector)(this)}var switchMapTo_1=__webpack_require__(138);exports.switchMapTo=switchMapTo},function(module,exports,__webpack_require__){"use strict";function take(count){return take_1.take(count)(this)}var take_1=__webpack_require__(139);exports.take=take},function(module,exports,__webpack_require__){"use strict";function takeLast(count){return takeLast_1.takeLast(count)(this)}var takeLast_1=__webpack_require__(56);exports.takeLast=takeLast},function(module,exports,__webpack_require__){"use strict";function takeUntil(notifier){return takeUntil_1.takeUntil(notifier)(this)}var takeUntil_1=__webpack_require__(140);exports.takeUntil=takeUntil},function(module,exports,__webpack_require__){"use strict";function takeWhile(predicate){return takeWhile_1.takeWhile(predicate)(this)}var takeWhile_1=__webpack_require__(141);exports.takeWhile=takeWhile},function(module,exports,__webpack_require__){"use strict";function throttle(durationSelector,config){return void 0===config&&(config=throttle_1.defaultThrottleConfig),throttle_1.throttle(durationSelector,config)(this)}var throttle_1=__webpack_require__(34);exports.throttle=throttle},function(module,exports,__webpack_require__){"use strict";function throttleTime(duration,scheduler,config){return void 0===scheduler&&(scheduler=async_1.async),void 0===config&&(config=throttle_1.defaultThrottleConfig),throttleTime_1.throttleTime(duration,scheduler,config)(this)}var async_1=__webpack_require__(4),throttle_1=__webpack_require__(34),throttleTime_1=__webpack_require__(143);exports.throttleTime=throttleTime},function(module,exports,__webpack_require__){"use strict";function timeout(due,scheduler){return void 0===scheduler&&(scheduler=async_1.async),timeout_1.timeout(due,scheduler)(this)}var async_1=__webpack_require__(4),timeout_1=__webpack_require__(145);exports.timeout=timeout},function(module,exports,__webpack_require__){"use strict";function timeoutWith(due,withObservable,scheduler){return void 0===scheduler&&(scheduler=async_1.async),timeoutWith_1.timeoutWith(due,withObservable,scheduler)(this)}var async_1=__webpack_require__(4),timeoutWith_1=__webpack_require__(146);exports.timeoutWith=timeoutWith},function(module,exports,__webpack_require__){"use strict";function timestamp(scheduler){return void 0===scheduler&&(scheduler=async_1.async),timestamp_1.timestamp(scheduler)(this)}var async_1=__webpack_require__(4),timestamp_1=__webpack_require__(57);exports.timestamp=timestamp},function(module,exports,__webpack_require__){"use strict";function toArray(){return toArray_1.toArray()(this)}var toArray_1=__webpack_require__(147);exports.toArray=toArray},function(module,exports,__webpack_require__){"use strict";function window(windowBoundaries){return window_1.window(windowBoundaries)(this)}var window_1=__webpack_require__(148);exports.window=window},function(module,exports,__webpack_require__){"use strict";function windowCount(windowSize,startWindowEvery){return void 0===startWindowEvery&&(startWindowEvery=0),windowCount_1.windowCount(windowSize,startWindowEvery)(this)}var windowCount_1=__webpack_require__(149);exports.windowCount=windowCount},function(module,exports,__webpack_require__){"use strict";function windowTime(windowTimeSpan){var scheduler=async_1.async,windowCreationInterval=null,maxWindowSize=Number.POSITIVE_INFINITY;return isScheduler_1.isScheduler(arguments[3])&&(scheduler=arguments[3]),isScheduler_1.isScheduler(arguments[2])?scheduler=arguments[2]:isNumeric_1.isNumeric(arguments[2])&&(maxWindowSize=arguments[2]),isScheduler_1.isScheduler(arguments[1])?scheduler=arguments[1]:isNumeric_1.isNumeric(arguments[1])&&(windowCreationInterval=arguments[1]),windowTime_1.windowTime(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler)(this)}var async_1=__webpack_require__(4),isNumeric_1=__webpack_require__(26),isScheduler_1=__webpack_require__(10),windowTime_1=__webpack_require__(150);exports.windowTime=windowTime},function(module,exports,__webpack_require__){"use strict";function windowToggle(openings,closingSelector){return windowToggle_1.windowToggle(openings,closingSelector)(this)}var windowToggle_1=__webpack_require__(151);exports.windowToggle=windowToggle},function(module,exports,__webpack_require__){"use strict";function windowWhen(closingSelector){return windowWhen_1.windowWhen(closingSelector)(this)}var windowWhen_1=__webpack_require__(152);exports.windowWhen=windowWhen},function(module,exports,__webpack_require__){"use strict";function withLatestFrom(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i-0]=arguments[_i];return withLatestFrom_1.withLatestFrom.apply(void 0,args)(this)}var withLatestFrom_1=__webpack_require__(153);exports.withLatestFrom=withLatestFrom},function(module,exports,__webpack_require__){"use strict";function zipProto(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i-0]=arguments[_i];return zip_1.zip.apply(void 0,observables)(this)}var zip_1=__webpack_require__(35);exports.zipProto=zipProto},function(module,exports,__webpack_require__){"use strict";function zipAll(project){return zipAll_1.zipAll(project)(this)}var zipAll_1=__webpack_require__(154);exports.zipAll=zipAll},function(module,exports,__webpack_require__){"use strict";var audit_1=__webpack_require__(45);exports.audit=audit_1.audit;var auditTime_1=__webpack_require__(77);exports.auditTime=auditTime_1.auditTime;var buffer_1=__webpack_require__(78);exports.buffer=buffer_1.buffer;var bufferCount_1=__webpack_require__(79);exports.bufferCount=bufferCount_1.bufferCount;var bufferTime_1=__webpack_require__(80);exports.bufferTime=bufferTime_1.bufferTime;var bufferToggle_1=__webpack_require__(81);exports.bufferToggle=bufferToggle_1.bufferToggle;var bufferWhen_1=__webpack_require__(82);exports.bufferWhen=bufferWhen_1.bufferWhen;var catchError_1=__webpack_require__(83);exports.catchError=catchError_1.catchError;var combineAll_1=__webpack_require__(84);exports.combineAll=combineAll_1.combineAll;var combineLatest_1=__webpack_require__(31);exports.combineLatest=combineLatest_1.combineLatest;var concat_1=__webpack_require__(85);exports.concat=concat_1.concat;var concatAll_1=__webpack_require__(46);exports.concatAll=concatAll_1.concatAll;var concatMap_1=__webpack_require__(47);exports.concatMap=concatMap_1.concatMap;var concatMapTo_1=__webpack_require__(86);exports.concatMapTo=concatMapTo_1.concatMapTo;var count_1=__webpack_require__(87);exports.count=count_1.count;var debounce_1=__webpack_require__(88);exports.debounce=debounce_1.debounce;var debounceTime_1=__webpack_require__(89);exports.debounceTime=debounceTime_1.debounceTime;var defaultIfEmpty_1=__webpack_require__(48);exports.defaultIfEmpty=defaultIfEmpty_1.defaultIfEmpty;var delay_1=__webpack_require__(90);exports.delay=delay_1.delay;var delayWhen_1=__webpack_require__(91);exports.delayWhen=delayWhen_1.delayWhen;var dematerialize_1=__webpack_require__(92);exports.dematerialize=dematerialize_1.dematerialize;var distinct_1=__webpack_require__(93);exports.distinct=distinct_1.distinct;var distinctUntilChanged_1=__webpack_require__(49);exports.distinctUntilChanged=distinctUntilChanged_1.distinctUntilChanged;var distinctUntilKeyChanged_1=__webpack_require__(94);exports.distinctUntilKeyChanged=distinctUntilKeyChanged_1.distinctUntilKeyChanged;var elementAt_1=__webpack_require__(95);exports.elementAt=elementAt_1.elementAt;var every_1=__webpack_require__(96);exports.every=every_1.every;var exhaust_1=__webpack_require__(97);exports.exhaust=exhaust_1.exhaust;var exhaustMap_1=__webpack_require__(98);exports.exhaustMap=exhaustMap_1.exhaustMap;var expand_1=__webpack_require__(99);exports.expand=expand_1.expand;var filter_1=__webpack_require__(50);exports.filter=filter_1.filter;var finalize_1=__webpack_require__(100);exports.finalize=finalize_1.finalize;var find_1=__webpack_require__(51);exports.find=find_1.find;var findIndex_1=__webpack_require__(101);exports.findIndex=findIndex_1.findIndex;var first_1=__webpack_require__(102);exports.first=first_1.first;var groupBy_1=__webpack_require__(103);exports.groupBy=groupBy_1.groupBy;var ignoreElements_1=__webpack_require__(104);exports.ignoreElements=ignoreElements_1.ignoreElements;var isEmpty_1=__webpack_require__(105);exports.isEmpty=isEmpty_1.isEmpty;var last_1=__webpack_require__(106);exports.last=last_1.last;var map_1=__webpack_require__(19);exports.map=map_1.map;var mapTo_1=__webpack_require__(107);exports.mapTo=mapTo_1.mapTo;var materialize_1=__webpack_require__(108);exports.materialize=materialize_1.materialize;var max_1=__webpack_require__(109);exports.max=max_1.max;var merge_1=__webpack_require__(110);exports.merge=merge_1.merge;var mergeAll_1=__webpack_require__(32);exports.mergeAll=mergeAll_1.mergeAll;var mergeMap_1=__webpack_require__(20);exports.mergeMap=mergeMap_1.mergeMap;var mergeMap_2=__webpack_require__(20);exports.flatMap=mergeMap_2.mergeMap;var mergeMapTo_1=__webpack_require__(111);exports.mergeMapTo=mergeMapTo_1.mergeMapTo;var mergeScan_1=__webpack_require__(112);exports.mergeScan=mergeScan_1.mergeScan;var min_1=__webpack_require__(113);exports.min=min_1.min;var multicast_1=__webpack_require__(15);exports.multicast=multicast_1.multicast;var observeOn_1=__webpack_require__(33);exports.observeOn=observeOn_1.observeOn;var onErrorResumeNext_1=__webpack_require__(52);exports.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext;var pairwise_1=__webpack_require__(114);exports.pairwise=pairwise_1.pairwise;var partition_1=__webpack_require__(115);exports.partition=partition_1.partition;var pluck_1=__webpack_require__(116);exports.pluck=pluck_1.pluck;var publish_1=__webpack_require__(117);exports.publish=publish_1.publish;var publishBehavior_1=__webpack_require__(118);exports.publishBehavior=publishBehavior_1.publishBehavior;var publishLast_1=__webpack_require__(119);exports.publishLast=publishLast_1.publishLast;var publishReplay_1=__webpack_require__(120);exports.publishReplay=publishReplay_1.publishReplay;var race_1=__webpack_require__(121);exports.race=race_1.race;var reduce_1=__webpack_require__(21);exports.reduce=reduce_1.reduce;var repeat_1=__webpack_require__(122);exports.repeat=repeat_1.repeat;var repeatWhen_1=__webpack_require__(123);exports.repeatWhen=repeatWhen_1.repeatWhen;var retry_1=__webpack_require__(124);exports.retry=retry_1.retry;var retryWhen_1=__webpack_require__(125);exports.retryWhen=retryWhen_1.retryWhen;var refCount_1=__webpack_require__(53);exports.refCount=refCount_1.refCount;var sample_1=__webpack_require__(126);exports.sample=sample_1.sample;var sampleTime_1=__webpack_require__(127);exports.sampleTime=sampleTime_1.sampleTime;var scan_1=__webpack_require__(54);exports.scan=scan_1.scan;var sequenceEqual_1=__webpack_require__(128);exports.sequenceEqual=sequenceEqual_1.sequenceEqual;var share_1=__webpack_require__(129);exports.share=share_1.share;var shareReplay_1=__webpack_require__(130);exports.shareReplay=shareReplay_1.shareReplay;var single_1=__webpack_require__(131);exports.single=single_1.single;var skip_1=__webpack_require__(132);exports.skip=skip_1.skip;var skipLast_1=__webpack_require__(133);exports.skipLast=skipLast_1.skipLast;var skipUntil_1=__webpack_require__(134);exports.skipUntil=skipUntil_1.skipUntil;var skipWhile_1=__webpack_require__(135);exports.skipWhile=skipWhile_1.skipWhile;var startWith_1=__webpack_require__(136);exports.startWith=startWith_1.startWith;var switchAll_1=__webpack_require__(137);exports.switchAll=switchAll_1.switchAll;var switchMap_1=__webpack_require__(55);exports.switchMap=switchMap_1.switchMap;var switchMapTo_1=__webpack_require__(138);exports.switchMapTo=switchMapTo_1.switchMapTo;var take_1=__webpack_require__(139);exports.take=take_1.take;var takeLast_1=__webpack_require__(56);exports.takeLast=takeLast_1.takeLast;var takeUntil_1=__webpack_require__(140);exports.takeUntil=takeUntil_1.takeUntil;var takeWhile_1=__webpack_require__(141);exports.takeWhile=takeWhile_1.takeWhile;var tap_1=__webpack_require__(142);exports.tap=tap_1.tap;var throttle_1=__webpack_require__(34);exports.throttle=throttle_1.throttle;var throttleTime_1=__webpack_require__(143);exports.throttleTime=throttleTime_1.throttleTime;var timeInterval_1=__webpack_require__(144);exports.timeInterval=timeInterval_1.timeInterval;var timeout_1=__webpack_require__(145);exports.timeout=timeout_1.timeout;var timeoutWith_1=__webpack_require__(146);exports.timeoutWith=timeoutWith_1.timeoutWith;var timestamp_1=__webpack_require__(57);exports.timestamp=timestamp_1.timestamp;var toArray_1=__webpack_require__(147);exports.toArray=toArray_1.toArray;var window_1=__webpack_require__(148);exports.window=window_1.window;var windowCount_1=__webpack_require__(149);exports.windowCount=windowCount_1.windowCount;var windowTime_1=__webpack_require__(150);exports.windowTime=windowTime_1.windowTime;var windowToggle_1=__webpack_require__(151);exports.windowToggle=windowToggle_1.windowToggle;var windowWhen_1=__webpack_require__(152);exports.windowWhen=windowWhen_1.windowWhen;var withLatestFrom_1=__webpack_require__(153);exports.withLatestFrom=withLatestFrom_1.withLatestFrom;var zip_1=__webpack_require__(35);exports.zip=zip_1.zip;var zipAll_1=__webpack_require__(154);exports.zipAll=zipAll_1.zipAll},function(module,exports,__webpack_require__){"use strict";function subscribeOn(scheduler,delay){return void 0===delay&&(delay=0),function(source){return source.lift(new SubscribeOnOperator(scheduler,delay))}}var SubscribeOnObservable_1=__webpack_require__(337);exports.subscribeOn=subscribeOn;var SubscribeOnOperator=function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler,this.delay=delay}return SubscribeOnOperator.prototype.call=function(subscriber,source){return new SubscribeOnObservable_1.SubscribeOnObservable(source,this.delay,this.scheduler).subscribe(subscriber)},SubscribeOnOperator}()},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subscription_1=__webpack_require__(5),Action=function(_super){function Action(scheduler,work){_super.call(this)}return __extends(Action,_super),Action.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),this},Action}(Subscription_1.Subscription);exports.Action=Action},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncAction_1=__webpack_require__(22),AnimationFrame_1=__webpack_require__(475),AnimationFrameAction=function(_super){function AnimationFrameAction(scheduler,work){_super.call(this,scheduler,work),this.scheduler=scheduler,this.work=work}return __extends(AnimationFrameAction,_super),AnimationFrameAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.actions.push(this),scheduler.scheduled||(scheduler.scheduled=AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler,null))))},AnimationFrameAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0)return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);0===scheduler.actions.length&&(AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id),scheduler.scheduled=void 0)},AnimationFrameAction}(AsyncAction_1.AsyncAction);exports.AnimationFrameAction=AnimationFrameAction},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncScheduler_1=__webpack_require__(23),AnimationFrameScheduler=function(_super){function AnimationFrameScheduler(){_super.apply(this,arguments)}return __extends(AnimationFrameScheduler,_super),AnimationFrameScheduler.prototype.flush=function(action){this.active=!0,this.scheduled=void 0;var error,actions=this.actions,index=-1,count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay))break}while(++index<count&&(action=actions.shift()));if(this.active=!1,error){for(;++index<count&&(action=actions.shift());)action.unsubscribe();throw error}},AnimationFrameScheduler}(AsyncScheduler_1.AsyncScheduler);exports.AnimationFrameScheduler=AnimationFrameScheduler},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Immediate_1=__webpack_require__(477),AsyncAction_1=__webpack_require__(22),AsapAction=function(_super){function AsapAction(scheduler,work){_super.call(this,scheduler,work),this.scheduler=scheduler,this.work=work}return __extends(AsapAction,_super),AsapAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.actions.push(this),scheduler.scheduled||(scheduler.scheduled=Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler,null))))},AsapAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0)return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);0===scheduler.actions.length&&(Immediate_1.Immediate.clearImmediate(id),scheduler.scheduled=void 0)},AsapAction}(AsyncAction_1.AsyncAction);exports.AsapAction=AsapAction},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncScheduler_1=__webpack_require__(23),AsapScheduler=function(_super){function AsapScheduler(){_super.apply(this,arguments)}return __extends(AsapScheduler,_super),AsapScheduler.prototype.flush=function(action){this.active=!0,this.scheduled=void 0;var error,actions=this.actions,index=-1,count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay))break}while(++index<count&&(action=actions.shift()));if(this.active=!1,error){for(;++index<count&&(action=actions.shift());)action.unsubscribe();throw error}},AsapScheduler}(AsyncScheduler_1.AsyncScheduler);exports.AsapScheduler=AsapScheduler},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncAction_1=__webpack_require__(22),QueueAction=function(_super){function QueueAction(scheduler,work){_super.call(this,scheduler,work),this.scheduler=scheduler,this.work=work}return __extends(QueueAction,_super),QueueAction.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),delay>0?_super.prototype.schedule.call(this,state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)},QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay)},QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):scheduler.flush(this)},QueueAction}(AsyncAction_1.AsyncAction);exports.QueueAction=QueueAction},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},AsyncScheduler_1=__webpack_require__(23),QueueScheduler=function(_super){function QueueScheduler(){_super.apply(this,arguments)}return __extends(QueueScheduler,_super),QueueScheduler}(AsyncScheduler_1.AsyncScheduler);exports.QueueScheduler=QueueScheduler},function(module,exports,__webpack_require__){"use strict";var AnimationFrameAction_1=__webpack_require__(465),AnimationFrameScheduler_1=__webpack_require__(466);exports.animationFrame=new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction)},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),Subscription_1=__webpack_require__(5),SubscriptionLoggable_1=__webpack_require__(159),applyMixins_1=__webpack_require__(162),ColdObservable=function(_super){function ColdObservable(messages,scheduler){_super.call(this,function(subscriber){var observable=this,index=observable.logSubscribedFrame();return subscriber.add(new Subscription_1.Subscription(function(){observable.logUnsubscribedFrame(index)})),observable.scheduleMessages(subscriber),subscriber}),this.messages=messages,this.subscriptions=[],this.scheduler=scheduler}return __extends(ColdObservable,_super),ColdObservable.prototype.scheduleMessages=function(subscriber){for(var messagesLength=this.messages.length,i=0;i<messagesLength;i++){var message=this.messages[i];subscriber.add(this.scheduler.schedule(function(_a){var message=_a.message,subscriber=_a.subscriber;message.notification.observe(subscriber)},message.frame,{message:message,subscriber:subscriber}))}},ColdObservable}(Observable_1.Observable);exports.ColdObservable=ColdObservable,applyMixins_1.applyMixins(ColdObservable,[SubscriptionLoggable_1.SubscriptionLoggable])},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Subject_1=__webpack_require__(6),Subscription_1=__webpack_require__(5),SubscriptionLoggable_1=__webpack_require__(159),applyMixins_1=__webpack_require__(162),HotObservable=function(_super){function HotObservable(messages,scheduler){_super.call(this),this.messages=messages,this.subscriptions=[],this.scheduler=scheduler}return __extends(HotObservable,_super),HotObservable.prototype._subscribe=function(subscriber){var subject=this,index=subject.logSubscribedFrame();return subscriber.add(new Subscription_1.Subscription(function(){subject.logUnsubscribedFrame(index)})),_super.prototype._subscribe.call(this,subscriber)},HotObservable.prototype.setup=function(){for(var subject=this,messagesLength=subject.messages.length,i=0;i<messagesLength;i++)!function(){var message=subject.messages[i];subject.scheduler.schedule(function(){message.notification.observe(subject)},message.frame)}()},HotObservable}(Subject_1.Subject);exports.HotObservable=HotObservable,applyMixins_1.applyMixins(HotObservable,[SubscriptionLoggable_1.SubscriptionLoggable])},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Observable_1=__webpack_require__(0),Notification_1=__webpack_require__(17),ColdObservable_1=__webpack_require__(472),HotObservable_1=__webpack_require__(473),SubscriptionLog_1=__webpack_require__(158),VirtualTimeScheduler_1=__webpack_require__(155),defaultMaxFrame=750,TestScheduler=function(_super){function TestScheduler(assertDeepEqual){_super.call(this,VirtualTimeScheduler_1.VirtualAction,defaultMaxFrame),this.assertDeepEqual=assertDeepEqual,this.hotObservables=[],this.coldObservables=[],this.flushTests=[]}return __extends(TestScheduler,_super),TestScheduler.prototype.createTime=function(marbles){var indexOf=marbles.indexOf("|");if(-1===indexOf)throw new Error('marble diagram for time should have a completion marker "|"');return indexOf*TestScheduler.frameTimeFactor},TestScheduler.prototype.createColdObservable=function(marbles,values,error){if(-1!==marbles.indexOf("^"))throw new Error('cold observable cannot have subscription offset "^"');if(-1!==marbles.indexOf("!"))throw new Error('cold observable cannot have unsubscription marker "!"');var messages=TestScheduler.parseMarbles(marbles,values,error),cold=new ColdObservable_1.ColdObservable(messages,this);return this.coldObservables.push(cold),cold},TestScheduler.prototype.createHotObservable=function(marbles,values,error){if(-1!==marbles.indexOf("!"))throw new Error('hot observable cannot have unsubscription marker "!"');var messages=TestScheduler.parseMarbles(marbles,values,error),subject=new HotObservable_1.HotObservable(messages,this);return this.hotObservables.push(subject),subject},TestScheduler.prototype.materializeInnerObservable=function(observable,outerFrame){var _this=this,messages=[];return observable.subscribe(function(value){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createNext(value)})},function(err){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createError(err)})},function(){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createComplete()})}),messages},TestScheduler.prototype.expectObservable=function(observable,unsubscriptionMarbles){var _this=this;void 0===unsubscriptionMarbles&&(unsubscriptionMarbles=null);var subscription,actual=[],flushTest={actual:actual,ready:!1},unsubscriptionFrame=TestScheduler.parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;return this.schedule(function(){subscription=observable.subscribe(function(x){var value=x;x instanceof Observable_1.Observable&&(value=_this.materializeInnerObservable(value,_this.frame)),actual.push({frame:_this.frame,notification:Notification_1.Notification.createNext(value)})},function(err){actual.push({frame:_this.frame,notification:Notification_1.Notification.createError(err)})},function(){actual.push({frame:_this.frame,notification:Notification_1.Notification.createComplete()})})},0),unsubscriptionFrame!==Number.POSITIVE_INFINITY&&this.schedule(function(){return subscription.unsubscribe()},unsubscriptionFrame),this.flushTests.push(flushTest),{toBe:function(marbles,values,errorValue){flushTest.ready=!0,flushTest.expected=TestScheduler.parseMarbles(marbles,values,errorValue,!0)}}},TestScheduler.prototype.expectSubscriptions=function(actualSubscriptionLogs){var flushTest={actual:actualSubscriptionLogs,ready:!1};return this.flushTests.push(flushTest),{toBe:function(marbles){var marblesArray="string"==typeof marbles?[marbles]:marbles;flushTest.ready=!0,flushTest.expected=marblesArray.map(function(marbles){return TestScheduler.parseMarblesAsSubscriptions(marbles)})}}},TestScheduler.prototype.flush=function(){for(var hotObservables=this.hotObservables;hotObservables.length>0;)hotObservables.shift().setup();_super.prototype.flush.call(this);for(var readyFlushTests=this.flushTests.filter(function(test){return test.ready});readyFlushTests.length>0;){var test=readyFlushTests.shift();this.assertDeepEqual(test.actual,test.expected)}},TestScheduler.parseMarblesAsSubscriptions=function(marbles){if("string"!=typeof marbles)return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);for(var len=marbles.length,groupStart=-1,subscriptionFrame=Number.POSITIVE_INFINITY,unsubscriptionFrame=Number.POSITIVE_INFINITY,i=0;i<len;i++){var frame=i*this.frameTimeFactor,c=marbles[i];switch(c){case"-":case" ":break;case"(":groupStart=frame;break;case")":groupStart=-1;break;case"^":if(subscriptionFrame!==Number.POSITIVE_INFINITY)throw new Error("found a second subscription point '^' in a subscription marble diagram. There can only be one.");subscriptionFrame=groupStart>-1?groupStart:frame;break;case"!":if(unsubscriptionFrame!==Number.POSITIVE_INFINITY)throw new Error("found a second subscription point '^' in a subscription marble diagram. There can only be one.");unsubscriptionFrame=groupStart>-1?groupStart:frame;break;default:throw new Error("there can only be '^' and '!' markers in a subscription marble diagram. Found instead '"+c+"'.")}}return unsubscriptionFrame<0?new SubscriptionLog_1.SubscriptionLog(subscriptionFrame):new SubscriptionLog_1.SubscriptionLog(subscriptionFrame,unsubscriptionFrame)},TestScheduler.parseMarbles=function(marbles,values,errorValue,materializeInnerObservables){if(void 0===materializeInnerObservables&&(materializeInnerObservables=!1),-1!==marbles.indexOf("!"))throw new Error('conventional marble diagrams cannot have the unsubscription marker "!"');for(var len=marbles.length,testMessages=[],subIndex=marbles.indexOf("^"),frameOffset=-1===subIndex?0:subIndex*-this.frameTimeFactor,getValue="object"!=typeof values?function(x){return x}:function(x){return materializeInnerObservables&&values[x]instanceof ColdObservable_1.ColdObservable?values[x].messages:values[x]},groupStart=-1,i=0;i<len;i++){var frame=i*this.frameTimeFactor+frameOffset,notification=void 0,c=marbles[i];switch(c){case"-":case" ":break;case"(":groupStart=frame;break;case")":groupStart=-1;break;case"|":notification=Notification_1.Notification.createComplete();break;case"^":break;case"#":notification=Notification_1.Notification.createError(errorValue||"error");break;default:notification=Notification_1.Notification.createNext(getValue(c))}notification&&testMessages.push({frame:groupStart>-1?groupStart:frame,notification:notification})}return testMessages},TestScheduler}(VirtualTimeScheduler_1.VirtualTimeScheduler);exports.TestScheduler=TestScheduler},function(module,exports,__webpack_require__){"use strict";var root_1=__webpack_require__(9),RequestAnimationFrameDefinition=function(){function RequestAnimationFrameDefinition(root){root.requestAnimationFrame?(this.cancelAnimationFrame=root.cancelAnimationFrame.bind(root),this.requestAnimationFrame=root.requestAnimationFrame.bind(root)):root.mozRequestAnimationFrame?(this.cancelAnimationFrame=root.mozCancelAnimationFrame.bind(root),this.requestAnimationFrame=root.mozRequestAnimationFrame.bind(root)):root.webkitRequestAnimationFrame?(this.cancelAnimationFrame=root.webkitCancelAnimationFrame.bind(root),this.requestAnimationFrame=root.webkitRequestAnimationFrame.bind(root)):root.msRequestAnimationFrame?(this.cancelAnimationFrame=root.msCancelAnimationFrame.bind(root),this.requestAnimationFrame=root.msRequestAnimationFrame.bind(root)):root.oRequestAnimationFrame?(this.cancelAnimationFrame=root.oCancelAnimationFrame.bind(root),this.requestAnimationFrame=root.oRequestAnimationFrame.bind(root)):(this.cancelAnimationFrame=root.clearTimeout.bind(root),this.requestAnimationFrame=function(cb){return root.setTimeout(cb,1e3/60)})}return RequestAnimationFrameDefinition}();exports.RequestAnimationFrameDefinition=RequestAnimationFrameDefinition,exports.AnimationFrame=new RequestAnimationFrameDefinition(root_1.root)},function(module,exports,__webpack_require__){"use strict";var FastMap=function(){function FastMap(){this.values={}}return FastMap.prototype.delete=function(key){return this.values[key]=null,!0},FastMap.prototype.set=function(key,value){return this.values[key]=value,this},FastMap.prototype.get=function(key){return this.values[key]},FastMap.prototype.forEach=function(cb,thisArg){var values=this.values;for(var key in values)values.hasOwnProperty(key)&&null!==values[key]&&cb.call(thisArg,values[key],key)},FastMap.prototype.clear=function(){this.values={}},FastMap}();exports.FastMap=FastMap},function(module,exports,__webpack_require__){"use strict";(function(clearImmediate,setImmediate){var root_1=__webpack_require__(9),ImmediateDefinition=function(){function ImmediateDefinition(root){if(this.root=root,root.setImmediate&&"function"==typeof root.setImmediate)this.setImmediate=root.setImmediate.bind(root),this.clearImmediate=root.clearImmediate.bind(root);else{this.nextHandle=1,this.tasksByHandle={},this.currentlyRunningATask=!1,this.canUseProcessNextTick()?this.setImmediate=this.createProcessNextTickSetImmediate():this.canUsePostMessage()?this.setImmediate=this.createPostMessageSetImmediate():this.canUseMessageChannel()?this.setImmediate=this.createMessageChannelSetImmediate():this.canUseReadyStateChange()?this.setImmediate=this.createReadyStateChangeSetImmediate():this.setImmediate=this.createSetTimeoutSetImmediate();var ci=function clearImmediate(handle){delete clearImmediate.instance.tasksByHandle[handle]};ci.instance=this,this.clearImmediate=ci}}return ImmediateDefinition.prototype.identify=function(o){return this.root.Object.prototype.toString.call(o)},ImmediateDefinition.prototype.canUseProcessNextTick=function(){return"[object process]"===this.identify(this.root.process)},ImmediateDefinition.prototype.canUseMessageChannel=function(){return Boolean(this.root.MessageChannel)},ImmediateDefinition.prototype.canUseReadyStateChange=function(){var document=this.root.document;return Boolean(document&&"onreadystatechange"in document.createElement("script"))},ImmediateDefinition.prototype.canUsePostMessage=function(){var root=this.root;if(root.postMessage&&!root.importScripts){var postMessageIsAsynchronous_1=!0,oldOnMessage=root.onmessage;return root.onmessage=function(){postMessageIsAsynchronous_1=!1},root.postMessage("","*"),root.onmessage=oldOnMessage,postMessageIsAsynchronous_1}return!1},ImmediateDefinition.prototype.partiallyApplied=function(handler){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];var fn=function result(){var _a=result,handler=_a.handler,args=_a.args;"function"==typeof handler?handler.apply(void 0,args):new Function(""+handler)()};return fn.handler=handler,fn.args=args,fn},ImmediateDefinition.prototype.addFromSetImmediateArguments=function(args){return this.tasksByHandle[this.nextHandle]=this.partiallyApplied.apply(void 0,args),this.nextHandle++},ImmediateDefinition.prototype.createProcessNextTickSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance,handle=instance.addFromSetImmediateArguments(arguments);return instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent,handle)),handle};return fn.instance=this,fn},ImmediateDefinition.prototype.createPostMessageSetImmediate=function(){var root=this.root,messagePrefix="setImmediate$"+root.Math.random()+"$",onGlobalMessage=function globalMessageHandler(event){var instance=globalMessageHandler.instance;event.source===root&&"string"==typeof event.data&&0===event.data.indexOf(messagePrefix)&&instance.runIfPresent(+event.data.slice(messagePrefix.length))};onGlobalMessage.instance=this,root.addEventListener("message",onGlobalMessage,!1);var fn=function setImmediate(){var _a=setImmediate,messagePrefix=_a.messagePrefix,instance=_a.instance,handle=instance.addFromSetImmediateArguments(arguments);return instance.root.postMessage(messagePrefix+handle,"*"),handle};return fn.instance=this,fn.messagePrefix=messagePrefix,fn},ImmediateDefinition.prototype.runIfPresent=function(handle){if(this.currentlyRunningATask)this.root.setTimeout(this.partiallyApplied(this.runIfPresent,handle),0);else{var task=this.tasksByHandle[handle];if(task){this.currentlyRunningATask=!0;try{task()}finally{this.clearImmediate(handle),this.currentlyRunningATask=!1}}}},ImmediateDefinition.prototype.createMessageChannelSetImmediate=function(){var _this=this,channel=new this.root.MessageChannel;channel.port1.onmessage=function(event){var handle=event.data;_this.runIfPresent(handle)};var fn=function setImmediate(){var _a=setImmediate,channel=_a.channel,instance=_a.instance,handle=instance.addFromSetImmediateArguments(arguments);return channel.port2.postMessage(handle),handle};return fn.channel=channel,fn.instance=this,fn},ImmediateDefinition.prototype.createReadyStateChangeSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance,root=instance.root,doc=root.document,html=doc.documentElement,handle=instance.addFromSetImmediateArguments(arguments),script=doc.createElement("script");return script.onreadystatechange=function(){instance.runIfPresent(handle),script.onreadystatechange=null,html.removeChild(script),script=null},html.appendChild(script),handle};return fn.instance=this,fn},ImmediateDefinition.prototype.createSetTimeoutSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance,handle=instance.addFromSetImmediateArguments(arguments);return instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent,handle),0),handle};return fn.instance=this,fn},ImmediateDefinition}();exports.ImmediateDefinition=ImmediateDefinition,exports.Immediate=new ImmediateDefinition(root_1.root)}).call(exports,__webpack_require__(63).clearImmediate,__webpack_require__(63).setImmediate)},function(module,exports,__webpack_require__){"use strict";var root_1=__webpack_require__(9),MapPolyfill_1=__webpack_require__(479);exports.Map=root_1.root.Map||function(){return MapPolyfill_1.MapPolyfill}()},function(module,exports,__webpack_require__){"use strict";var MapPolyfill=function(){function MapPolyfill(){this.size=0,this._values=[],this._keys=[]}return MapPolyfill.prototype.get=function(key){var i=this._keys.indexOf(key);return-1===i?void 0:this._values[i]},MapPolyfill.prototype.set=function(key,value){var i=this._keys.indexOf(key);return-1===i?(this._keys.push(key),this._values.push(value),this.size++):this._values[i]=value,this},MapPolyfill.prototype.delete=function(key){var i=this._keys.indexOf(key);return-1!==i&&(this._values.splice(i,1),this._keys.splice(i,1),this.size--,!0)},MapPolyfill.prototype.clear=function(){this._keys.length=0,this._values.length=0,this.size=0},MapPolyfill.prototype.forEach=function(cb,thisArg){for(var i=0;i<this.size;i++)cb.call(thisArg,this._values[i],this._keys[i])},MapPolyfill}();exports.MapPolyfill=MapPolyfill},function(module,exports,__webpack_require__){"use strict";function minimalSetImpl(){return function(){function MinimalSet(){this._values=[]}return MinimalSet.prototype.add=function(value){this.has(value)||this._values.push(value)},MinimalSet.prototype.has=function(value){return-1!==this._values.indexOf(value)},Object.defineProperty(MinimalSet.prototype,"size",{get:function(){return this._values.length},enumerable:!0,configurable:!0}),MinimalSet.prototype.clear=function(){this._values.length=0},MinimalSet}()}var root_1=__webpack_require__(9);exports.minimalSetImpl=minimalSetImpl,exports.Set=root_1.root.Set||minimalSetImpl()},function(module,exports,__webpack_require__){"use strict";function assignImpl(target){for(var sources=[],_i=1;_i<arguments.length;_i++)sources[_i-1]=arguments[_i];for(var len=sources.length,i=0;i<len;i++){var source=sources[i];for(var k in source)source.hasOwnProperty(k)&&(target[k]=source[k])}return target}function getAssign(root){return root.Object.assign||assignImpl}var root_1=__webpack_require__(9);exports.assignImpl=assignImpl,exports.getAssign=getAssign,exports.assign=getAssign(root_1.root)},function(module,exports,__webpack_require__){"use strict";function not(pred,thisArg){function notPred(){return!notPred.pred.apply(notPred.thisArg,arguments)}return notPred.pred=pred,notPred.thisArg=thisArg,notPred}exports.not=not},function(module,exports,__webpack_require__){"use strict";function toSubscriber(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber_1.Subscriber)return nextOrObserver;if(nextOrObserver[rxSubscriber_1.rxSubscriber])return nextOrObserver[rxSubscriber_1.rxSubscriber]()}return nextOrObserver||error||complete?new Subscriber_1.Subscriber(nextOrObserver,error,complete):new Subscriber_1.Subscriber(Observer_1.empty)}var Subscriber_1=__webpack_require__(1),rxSubscriber_1=__webpack_require__(37),Observer_1=__webpack_require__(67);exports.toSubscriber=toSubscriber},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var AlertController=function(){function AlertController($scope,alertService){$scope.$id="alertController",$scope.alerts=alertService.getAlerts()}return AlertController}();exports.AlertController=AlertController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Alert=function(){function Alert(msg,type,fade,dismissable){this.fade=!1,this.dismissable=!1,this.msg=msg,this.type=type,this.fade=fade,this.dismissable=dismissable}return Alert}();exports.Alert=Alert},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var alert_1=__webpack_require__(485),AlertService=function(){function AlertService($timeout,alerts){var _this=this;this.$timeout=$timeout,this.alerts=alerts,this.newAlert=function(){return new alert_1.Alert},this.get=function(){return _this.alerts||[]},this.addAlert=function(alert){_this.alerts.push(alert),_this.$timeout(function(){alert.dismissable||_this.removeAlert(alert)},3500)},this.addAlerts=function(alerts){angular.forEach(alerts,function(alert){_this.addAlert(alert)})},this.removeAlert=function(alert){var index=_this.alerts.indexOf(alert,0);void 0!=index&&_this.alerts.splice(index,1)},this.getAlerts=function(){return _this.alerts},this.formatMessagesToAlerts=function(messages){var alerts=[];if(messages&&messages.length)for(var message in messages){var alert=new alert_1.Alert(messages[message].message,messages[message].messageType);alerts.push(alert),"success"===alert.type||"error"===alert.type?(_this.$timeout(function(){alert.fade=!0},3500),alert.dismissable=!1):(alert.fade=!1,alert.dismissable=!0)}return alerts},this.removeOldestAlert=function(){_this.alerts.splice(0,1)},this.alerts=[]}return AlertService.$inject=["$timeout"],AlertService}();exports.AlertService=AlertService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core_module_1=__webpack_require__(16),md5=__webpack_require__(65),BaseBootStrapper=function(){function BaseBootStrapper(myApplication){var _this=this;return this._resourceBundle={},this.getInstantiationKey=function(baseURL){return _this.$q(function(resolve,reject){hibachiConfig.instantiationKey?resolve(hibachiConfig.instantiationKey):_this.$http.get(baseURL+"?"+hibachiConfig.action+"=api:main.getInstantiationKey").then(function(resp){return resolve(resp.data.data.instantiationKey)})})},this.getData=function(invalidCache){var promises={};for(var i in invalidCache){var invalidCacheName=invalidCache[i],functionName=invalidCacheName.charAt(0).toUpperCase()+invalidCacheName.slice(1);promises[invalidCacheName]=_this["get"+functionName+"Data"]()}return _this.$q.all(promises)},this.getAttributeCacheKeyData=function(){var urlString="";return hibachiConfig||(hibachiConfig={}),hibachiConfig.baseURL||(hibachiConfig.baseURL=""),urlString+=hibachiConfig.baseURL,urlString.length&&"/"!==urlString.slice(-1)&&(urlString+="/"),_this.$http.get(urlString+"?"+hibachiConfig.action+"=api:main.getAttributeModel").then(function(resp){core_module_1.coremodule.constant("attributeMetaData",resp.data.data);try{localStorage.setItem("attributeMetaData",JSON.stringify(resp.data.data)),localStorage.setItem("attributeChecksum",md5(JSON.stringify(resp.data.data)))}catch(e){}_this.attributeMetaData=resp.data.data})},this.getInstantiationKeyData=function(){if(!_this.instantiationKey){var d=new Date,n=d.getTime();_this.instantiationKey=n.toString()}var urlString="";return hibachiConfig||(hibachiConfig={}),hibachiConfig.baseURL||(hibachiConfig.baseURL=""),urlString+=hibachiConfig.baseURL,hibachiConfig.baseURL.length&&"/"!=hibachiConfig.baseURL.charAt(hibachiConfig.baseURL.length-1)&&(urlString+="/"),_this.$http.get(urlString+"/custom/config/config.json?instantiationKey="+_this.instantiationKey).then(function(resp){var appConfig=resp.data.data;hibachiConfig.baseURL.length&&(appConfig.baseURL=urlString),core_module_1.coremodule.constant("appConfig",resp.data.data);try{localStorage.setItem("appConfig",JSON.stringify(resp.data.data))}catch(e){}return _this.appConfig=appConfig,_this.getResourceBundles()})},this.getResourceBundle=function(locale){var deferred=_this.$q.defer(),locale=locale||_this.appConfig.rbLocale;if(_this._resourceBundle[locale])return _this._resourceBundle[locale];var urlString=_this.appConfig.baseURL+"/custom/config/resourceBundles/"+locale+".json?instantiationKey="+_this.appConfig.instantiationKey;return _this.$http({url:urlString,method:"GET"}).success(function(response,status,headersGetter){_this._resourceBundle[locale]=response,deferred.resolve(response)}).error(function(response,status){404===status?(_this._resourceBundle[locale]={},deferred.resolve(response)):deferred.reject(response)}),deferred.promise},this.getResourceBundles=function(){var rbPromise,localeListArray=_this.appConfig.rbLocale.split("_"),rbPromises=[];return rbPromise=_this.getResourceBundle(_this.appConfig.rbLocale),rbPromises.push(rbPromise),2===localeListArray.length&&(rbPromise=_this.getResourceBundle(localeListArray[0]),rbPromises.push(rbPromise)),"en"!==localeListArray[0]&&_this.getResourceBundle("en"),_this.$q.all(rbPromises).then(function(data){core_module_1.coremodule.constant("resourceBundles",_this._resourceBundle)},function(error){core_module_1.coremodule.constant("resourceBundles",_this._resourceBundle)})},this.myApplication=myApplication,angular.lazy(this.myApplication).resolve(["$http","$q",function($http,$q){_this.$http=$http,_this.$q=$q;var baseURL=hibachiConfig.baseURL;return baseURL||(baseURL=""),baseURL.length&&"/"!==baseURL.slice(-1)&&(baseURL+="/"),_this.getInstantiationKey(baseURL).then(function(instantiationKey){_this.instantiationKey=instantiationKey;var invalidCache=[];try{var hashedData=localStorage.getItem("attributeChecksum");null!==hashedData&&hibachiConfig.attributeCacheKey===hashedData.toUpperCase()?core_module_1.coremodule.constant("attributeMetaData",JSON.parse(localStorage.getItem("attributeMetaData"))):invalidCache.push("attributeCacheKey")}catch(e){invalidCache.push("attributeCacheKey")}try{if(_this.appConfig=JSON.parse(localStorage.getItem("appConfig")),hibachiConfig.instantiationKey===_this.appConfig.instantiationKey)return core_module_1.coremodule.constant("appConfig",_this.appConfig),_this.getResourceBundles();invalidCache.push("instantiationKey")}catch(e){invalidCache.push("instantiationKey")}return _this.getData(invalidCache)})}])}return BaseBootStrapper}();exports.BaseBootStrapper=BaseBootStrapper},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core_module_1=__webpack_require__(16),swcardlayout_1=__webpack_require__(492),swcardview_1=__webpack_require__(495),swcardheader_1=__webpack_require__(490),swcardbody_1=__webpack_require__(489),swcardicon_1=__webpack_require__(491),swcardprogressbar_1=__webpack_require__(494),swcardlistitem_1=__webpack_require__(493),cardmodule=angular.module("hibachi.card",[core_module_1.coremodule.name]).config([function(){}]).run([function(){}]).constant("cardPartialsPath","card/components/").directive("swCardLayout",swcardlayout_1.SWCardLayout.Factory()).directive("swCardView",swcardview_1.SWCardView.Factory()).directive("swCardHeader",swcardheader_1.SWCardHeader.Factory()).directive("swCardBody",swcardbody_1.SWCardBody.Factory()).directive("swCardIcon",swcardicon_1.SWCardIcon.Factory()).directive("swCardProgressBar",swcardprogressbar_1.SWCardProgressBar.Factory()).directive("swCardListItem",swcardlistitem_1.SWCardListItem.Factory());exports.cardmodule=cardmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardBodyController=function(){function SWCardBodyController($log){this.$log=$log,this.$onInit=function(){}}return SWCardBodyController}();exports.SWCardBodyController=SWCardBodyController;var SWCardBody=function(){function SWCardBody(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardBodyController,this.controllerAs="SwCardBodyController",this.scope={},this.bindToController={},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardbody.html")}return SWCardBody.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardBody(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardBody}();exports.SWCardBody=SWCardBody},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardHeaderController=function(){function SWCardHeaderController($log){this.$log=$log,this.$onInit=function(){}}return SWCardHeaderController}();exports.SWCardHeaderController=SWCardHeaderController;var SWCardHeader=function(){function SWCardHeader(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardHeaderController,this.controllerAs="SwCardHeaderController",this.scope={},this.bindToController={addBorder:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardheader.html")}return SWCardHeader.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardHeader(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardHeader}();exports.SWCardHeader=SWCardHeader},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardIconController=function(){function SWCardIconController($log){this.$log=$log,this.iconMultiplier="1x",this.$onInit=function(){}}return SWCardIconController}();exports.SWCardIconController=SWCardIconController;var SWCardIcon=function(){function SWCardIcon(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardIconController,this.controllerAs="SwCardIconController",this.scope={},this.bindToController={iconName:"@?",iconMultiplier:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardicon.html")}return SWCardIcon.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardIcon(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardIcon}();exports.SWCardIcon=SWCardIcon},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardLayoutController=function(){function SWCardLayoutController($log){this.$log=$log,this.$onInit=function(){}}return SWCardLayoutController}();exports.SWCardLayoutController=SWCardLayoutController;var SWCardLayout=function(){function SWCardLayout(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardLayoutController,this.controllerAs="SwCardLayoutController",this.scope={},this.bindToController={cardClass:"@?"},this.transclude={cardView:"?swCardView"},this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardlayout.html")}return SWCardLayout.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardLayout(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardLayout}();exports.SWCardLayout=SWCardLayout},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardListItemController=function(){function SWCardListItemController($log){this.$log=$log,this.strong="false",this.style="padding-top:5px;padding-bottom:5px",this.$onInit=function(){}}return SWCardListItemController}();exports.SWCardListItemController=SWCardListItemController;var SWCardListItem=function(){function SWCardListItem(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardListItemController,this.controllerAs="SwCardListItemController",this.scope={},this.bindToController={title:"@?",value:"@?",strong:"@?",style:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardlistitem.html")}return SWCardListItem.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardListItem(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardListItem}();exports.SWCardListItem=SWCardListItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardProgressBarController=function(){function SWCardProgressBarController($log){this.$log=$log,this.valueMin=0,this.valueMax=100,this.valueNow=0,this.$onInit=function(){}}return SWCardProgressBarController}();exports.SWCardProgressBarController=SWCardProgressBarController;var SWCardProgressBar=function(){function SWCardProgressBar(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardProgressBarController,this.scope={},this.controllerAs="SwCardProgressBarController",this.bindToController={valueMin:"@?",valueMax:"@?",valueNow:"@?"},this.transclude=!0,this.require="^SWCardView",this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardprogressbar.html")}return SWCardProgressBar.Factory=function(){var component=function(cardPartialsPath,hibachiPathBuilder){return new SWCardProgressBar(cardPartialsPath,hibachiPathBuilder)};return component.$inject=["cardPartialsPath","hibachiPathBuilder"],component},SWCardProgressBar}();exports.SWCardProgressBar=SWCardProgressBar},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCardViewController=function(){function SWCardViewController($log){this.$log=$log,this.cardSize="md"}return SWCardViewController}();exports.SWCardViewController=SWCardViewController;var SWCardView=function(){function SWCardView(cardPartialsPath,hibachiPathBuilder){this.controller=SWCardViewController,this.scope={},this.controllerAs="SwCardViewController",this.bindToController={cardTitle:"@?",cardBody:"@?",cardSize:"@?"},this.transclude={cardIcon:"?swCardIcon",cardHeader:"?swCardHeader",cardBody:"?swCardBody",listItem:"?swCardListItem",progressBar:"?swCardProgressBar"},this.templateUrl="",this.templateUrl=hibachiPathBuilder.buildPartialsPath(cardPartialsPath+"/cardview.html")}return SWCardView.Factory=function(){var directive=function(cardPartialsPath,hibachiPathBuilder){return new SWCardView(cardPartialsPath,hibachiPathBuilder)};return directive.$inject=["cardPartialsPath","hibachiPathBuilder"],directive},SWCardView}();exports.SWCardView=SWCardView},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWAddFilterButtons=function(){function SWAddFilterButtons(collectionService,collectionPartialsPath,hibachiPathBuilder){return{require:"^swFilterGroups",restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"addfilterbuttons.html",scope:{itemInUse:"=",readOnly:"="},link:function(scope,element,attrs,filterGroupsController){scope.filterGroupItem=filterGroupsController.getFilterGroupItem(),scope.addFilterItem=function(){collectionService.newFilterItem(filterGroupsController.getFilterGroupItem(),filterGroupsController.setItemInUse)},scope.addFilterGroupItem=function(){collectionService.newFilterItem(filterGroupsController.getFilterGroupItem(),filterGroupsController.setItemInUse,!0)}}}}return SWAddFilterButtons.Factory=function(){var directive=function(collectionService,collectionPartialsPath,hibachiPathBuilder){return new SWAddFilterButtons(collectionService,collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["collectionService","collectionPartialsPath","hibachiPathBuilder"],directive},SWAddFilterButtons}();exports.SWAddFilterButtons=SWAddFilterButtons},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollection=function(){function SWCollection(hibachiPathBuilder,collectionPartialsPath){return{restrict:"A",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"collection.html",link:function(scope,$element,$attrs){scope.tabsUniqueID=Math.floor(999*Math.random()),scope.toggleCogOpen=$attrs.toggleoption,scope.toggleFiltersAndOptions=function(){!1===scope.toggleCogOpen?scope.toggleCogOpen=!0:scope.toggleCogOpen=!1}}}}return SWCollection.Factory=function(){var directive=function(hibachiPathBuilder,collectionPartialsPath){return new SWCollection(hibachiPathBuilder,collectionPartialsPath)};return directive.$inject=["hibachiPathBuilder","collectionPartialsPath"],directive},SWCollection}();exports.SWCollection=SWCollection},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollectionTable=function(){function SWCollectionTable($log,hibachiPathBuilder,collectionPartialsPath,selectionService,$hibachi,$filter,$injector){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"collectiontable.html",scope:{collection:"=",collectionConfig:"=",isRadio:"=?",angularLinks:"=?"},link:function(scope,element,attrs){angular.isUndefined(scope.angularLinks)&&(scope.angularLinks=!1),scope.collection.collectionObject?scope.collectionObject=$hibachi["new"+scope.collection.collectionObject]():scope.collectionConfig.baseEntityName&&(scope.collectionObject=scope.collectionConfig.baseEntityName);var escapeRegExp=function(str){return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")};scope.replaceAll=function(str,find,replace){return str.replace(new RegExp(escapeRegExp(find),"g"),replace)},angular.forEach(scope.collectionConfig.columns,function(column){$log.debug("Config Key : "+column),column.key=column.propertyIdentifier.replace(/\./g,"_").replace(scope.collectionConfig.baseEntityAlias+"_","")}),scope.addSelection=function(selectionid,selection){selectionService.addSelection(selectionid,selection)},scope.getCellValue=function(pageRecord,column){var value="";value=angular.isDefined(column.aggregate)?pageRecord[column.aggregate.aggregateAlias]:"."==column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias,"").charAt(0)?pageRecord[column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias+".","")]:pageRecord[column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias+"_","").replace(/\./g,"_")];var type="none";return angular.isDefined(column.type)&&"none"!=column.type&&(type=column.type),"none"==type&&angular.isDefined(column.ormtype)&&"none"!=column.ormtype&&(type=column.ormtype),"none"!=type&&$injector.has(type+"Filter")?$filter(type)(value):value}}}}return SWCollectionTable.Factory=function(){var directive=function($log,hibachiPathBuilder,collectionPartialsPath,selectionService,$hibachi,$filter,$injector){return new SWCollectionTable($log,hibachiPathBuilder,collectionPartialsPath,selectionService,$hibachi,$filter,$injector)};return directive.$inject=["$log","hibachiPathBuilder","collectionPartialsPath","selectionService","$hibachi","$filter","$injector"],directive},SWCollectionTable}();exports.SWCollectionTable=SWCollectionTable},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWColumnItem=function(){function SWColumnItem($log,hibachiPathBuilder,collectionPartialsPath,observerService){return{restrict:"A",require:{swDisplayOptions:"?^swDisplayOptions",swListingControls:"?^swListingControls"},scope:{column:"=",columns:"=",columnIndex:"=",saveCollection:"&?",propertiesList:"<",orderBy:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"columnitem.html",link:function(scope,element,attrs,controller,observerService){!scope.saveCollection&&controller.swListingControls&&(scope.saveCollection=function(){controller.swListingControls.collectionConfig.columns=scope.columns,controller.swDisplayOptions.columns=scope.columns,controller.swListingControls.saveCollection()}),scope.editingDisplayTitle=!1,scope.editDisplayTitle=function(){!angular.isUndefined(scope.column.displayTitle)&&scope.column.displayTitle.length||(scope.column.displayTitle=scope.column.title),scope.previousDisplayTitle=scope.column.displayTitle,scope.editingDisplayTitle=!0},scope.saveDisplayTitle=function(){scope.saveCollection(),scope.editingDisplayTitle=!1},scope.cancelDisplayTitle=function(){scope.column.displayTitle=scope.previousDisplayTitle,scope.editingDisplayTitle=!1},angular.isUndefined(scope.column.sorting)&&(scope.column.sorting={active:!1,sortOrder:"asc",priority:0}),scope.toggleVisible=function(column){angular.isUndefined(column.isVisible)&&(column.isVisible=!1),column.isVisible=!column.isVisible,scope.saveCollection()},scope.toggleSearchable=function(column){angular.isUndefined(column.isSearchable)&&(column.isSearchable=!1),column.isSearchable=!column.isSearchable,scope.saveCollection()},scope.toggleExportable=function(column){$log.debug("toggle exporable"),angular.isUndefined(column.isExportable)&&(column.isExportable=!1),column.isExportable=!column.isExportable,scope.saveCollection()};var compareByPriority=function(a,b){if(a.sorting&&b.sorting&&angular.isDefined(a.sorting)&&angular.isDefined(a.sorting.priority)){if(a.sorting.priority<b.sorting.priority)return-1;if(a.sorting.priority>b.sorting.priority)return 1}return 0},updateOrderBy=function(){if(angular.isDefined(scope.columns)){var columnsCopy=angular.copy(scope.columns);columnsCopy.sort(compareByPriority),scope.orderBy=[],angular.forEach(columnsCopy,function(column){if(angular.isDefined(column.sorting)&&!0===column.sorting.active){var orderBy={propertyIdentifier:column.propertyIdentifier,direction:column.sorting.sortOrder};if(column.aggregate&&column.aggregate.aggregateFunction){var aggregateFunction=column.aggregate.aggregateFunction.toUpperCase();"AVERAGE"==aggregateFunction&&(aggregateFunction="AVG"),orderBy.propertyIdentifier=aggregateFunction+"("+column.propertyIdentifier+")"}scope.orderBy.push(orderBy)}})}};scope.toggleSortable=function(column){$log.debug("toggle sortable"),angular.isUndefined(column.sorting)&&(column.sorting={active:!0,sortOrder:"asc",priority:0}),!0===column.sorting.active?"asc"===column.sorting.sortOrder?column.sorting.sortOrder="desc":(removeSorting(column),column.sorting.active=!1):(column.sorting.active=!0,column.sorting.sortOrder="asc",column.sorting.priority=getActivelySorting().length),updateOrderBy(),scope.saveCollection()};var removeSorting=function(column,saving){if(!0===column.sorting.active){for(var i in scope.columns)!0===scope.columns[i].sorting.active&&scope.columns[i].sorting.priority>column.sorting.priority&&(scope.columns[i].sorting.priority=scope.columns[i].sorting.priority-1);column.sorting.priority=0}saving||(updateOrderBy(),scope.saveCollection())};scope.prioritize=function(column){if(1===column.sorting.priority){var activelySorting=getActivelySorting();for(var i in scope.columns)!0===scope.columns[i].sorting.active&&(scope.columns[i].sorting.priority=scope.columns[i].sorting.priority-1);column.sorting.priority=activelySorting.length}else{for(var i in scope.columns)!0===scope.columns[i].sorting.active&&scope.columns[i].sorting.priority===column.sorting.priority-1&&(scope.columns[i].sorting.priority=scope.columns[i].sorting.priority+1);column.sorting.priority-=1}updateOrderBy(),scope.saveCollection()};var getActivelySorting=function(){var activelySorting=[];for(var i in scope.columns)!0===scope.columns[i].sorting.active&&activelySorting.push(scope.columns[i]);return activelySorting};scope.removeColumn=function(columnIndex){scope.columns[columnIndex].isDeletable&&(removeSorting(scope.columns[columnIndex],!0),controller.swDisplayOptions.removeColumn(columnIndex),updateOrderBy(),scope.saveCollection())}}}}return SWColumnItem.Factory=function(){var directive=function($log,hibachiPathBuilder,collectionPartialsPath,observerService){return new SWColumnItem($log,hibachiPathBuilder,collectionPartialsPath,observerService)};return directive.$inject=["$log","hibachiPathBuilder","collectionPartialsPath","observerService"],directive},SWColumnItem}();exports.SWColumnItem=SWColumnItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWConditionCriteria=function(){function SWConditionCriteria($http,$compile,$templateCache,$log,$hibachi,$filter,collectionPartialsPath,metadataService,hibachiPathBuilder){var getTemplate=function(selectedFilterProperty){var templatePath="";if(angular.isUndefined(selectedFilterProperty.ormtype)&&angular.isUndefined(selectedFilterProperty.fieldtype))templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteria.html";else{var criteriaormtype=selectedFilterProperty.ormtype,criteriafieldtype=selectedFilterProperty.fieldtype;switch(criteriaormtype){case"boolean":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriaboolean.html";break;case"string":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriastring.html";break;case"timestamp":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriadate.html";break;case"big_decimal":case"integer":case"float":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criterianumber.html"}switch(criteriafieldtype){case"many-to-one":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriamanytoone.html";break;case"many-to-many":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriamanytomany.html";break;case"one-to-many":templatePath=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriaonetomany.html"}}return $http.get(templatePath,{cache:$templateCache})},getStringOptions=function(type){var stringOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"==type&&(stringOptions=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Contains",comparisonOperator:"like",pattern:"%w%"},{display:"Doesn't Contain",comparisonOperator:"not like",pattern:"%w%"},{display:"Starts With",comparisonOperator:"like",pattern:"w%"},{display:"Doesn't Start With",comparisonOperator:"not like",pattern:"w%"},{display:"Ends With",comparisonOperator:"like",pattern:"%w"},{display:"Doesn't End With",comparisonOperator:"not like",pattern:"%w"},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}],"condition"===type&&(stringOptions=[{display:"Equals",comparisonOperator:"="},{display:"In List",comparisonOperator:"in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}])),stringOptions},getBooleanOptions=function(type){var booleanOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"!==type&&"condition"!==type||(booleanOptions=[{display:"True",comparisonOperator:"=",value:"True"},{display:"False",comparisonOperator:"=",value:"False"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),booleanOptions},getDateOptions=function(type){var dateOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"===type&&(dateOptions=[{display:"Date",comparisonOperator:"between",dateInfo:{type:"exactDate"}},{display:"In Range",comparisonOperator:"between",dateInfo:{type:"range"}},{display:"Not In Range",comparisonOperator:"not between",dateInfo:{type:"range"}},{display:"Today",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:0,behavior:"toDate"}},{display:"Yesterday",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:-1,behavior:"toDate"}},{display:"This Week",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",behavior:"toDate"}},{display:"This Month",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",behavior:"toDate"}},{display:"This Quarter",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",behavior:"toDate"}},{display:"This Year",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",behavior:"toDate"}},{display:"Last N Hour(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"h",measureTypeDisplay:"Hours"}},{display:"Last N Day(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureTypeDisplay:"Days"}},{display:"Last N Week(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",measureTypeDisplay:"Weeks"}},{display:"Last N Month(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",measureTypeDisplay:"Months"}},{display:"Last N Quarter(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",measureTypeDisplay:"Quarters"}},{display:"Last N Year(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",measureTypeDisplay:"Years"}},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),"condition"===type&&(dateOptions=[{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),dateOptions},getNumberOptions=function(type){var numberOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"==type&&(numberOptions=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"In Range",comparisonOperator:"between",type:"range"},{display:"Not In Range",comparisonOperator:"not between",type:"range"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),"condition"===type&&(numberOptions=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]),numberOptions},getOneToManyOptions=function(type){var oneToManyOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"==type&&(oneToManyOptions=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"}]),"condition"===type&&(oneToManyOptions=[]),oneToManyOptions},getManyToManyOptions=function(type){var manyToManyOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"==type&&(manyToManyOptions=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"},{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]),"condition"===type&&(manyToManyOptions=[{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]),manyToManyOptions},getManyToOneOptions=function(type){var manyToOneOptions=[];return angular.isUndefined(type)&&(type="filter"),"filter"==type&&(manyToOneOptions={drillEntity:{},hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"}}),manyToOneOptions};return{restrict:"A",scope:{workflowCondition:"=",selectedFilterProperty:"=",filterPropertiesList:"=",selectedFilterPropertyChanged:"&"},link:function(scope,element,attrs){scope.$watch("selectedFilterProperty.criteriaValue",function(criteriaValue){angular.isDefined(criteriaValue)&&(scope.selectedFilterProperty.criteriaValue=$filter("likeFilter")(criteriaValue))}),scope.$watch("selectedFilterProperty",function(selectedFilterProperty){if(angular.isDefined(selectedFilterProperty)){if($log.debug("watchSelectedFilterProperty"),$log.debug(scope.selectedFilterProperty),null===selectedFilterProperty)return;if(angular.isDefined(selectedFilterProperty.ormtype))switch(scope.selectedFilterProperty.ormtype){case"boolean":scope.conditionOptions=getBooleanOptions();break;case"string":scope.conditionOptions=getStringOptions(),scope.selectedConditionChanged=function(selectedFilterProperty){angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)?selectedFilterProperty.showCriteriaValue=!1:selectedFilterProperty.showCriteriaValue=!0};break;case"timestamp":scope.conditionOptions=getDateOptions(),scope.today=function(){angular.isDefined(scope.selectedFilterProperty)&&(scope.selectedFilterProperty.criteriaRangeStart=(new Date).getTime(),scope.selectedFilterProperty.criteriaRangeEnd=(new Date).getTime())},scope.clear=function(){scope.selectedFilterProperty.criteriaRangeStart=null,scope.selectedFilterProperty.criteriaRangeEnd=null},scope.openCalendarStart=function($event){$event.preventDefault(),$event.stopPropagation(),scope.openedCalendarStart=!0},scope.openCalendarEnd=function($event){$event.preventDefault(),$event.stopPropagation(),scope.openedCalendarEnd=!0},scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],scope.format=scope.formats[1],scope.selectedConditionChanged=function(selectedFilterProperty){$log.debug("selectedConditionChanged Begin");var selectedCondition=selectedFilterProperty.selectedCriteriaType;if(angular.isDefined(selectedCondition.dateInfo)){if("calculation"===selectedCondition.dateInfo.type)if(selectedCondition.showCriteriaStart=!0,selectedCondition.showCriteriaEnd=!0,selectedCondition.disableCriteriaStart=!0,selectedCondition.disableCriteriaEnd=!0,angular.isUndefined(selectedCondition.dateInfo.behavior))$log.debug("Not toDate"),selectedCondition.showNumberOf=!0,selectedCondition.conditionDisplay="Number of "+selectedCondition.dateInfo.measureTypeDisplay+" :";else{$log.debug("toDate");var today=Date.parse("today"),todayEOD=today.setHours(23,59,59,999);switch(selectedFilterProperty.criteriaRangeEnd=todayEOD,selectedCondition.dateInfo.measureType){case"d":var dateBOD=Date.parse("today").add(selectedCondition.dateInfo.measureCount).days();dateBOD.setHours(0,0,0,0),selectedFilterProperty.criteriaRangeStart=dateBOD.getTime();break;case"w":var firstDayOfWeek=Date.today().last().monday();selectedFilterProperty.criteriaRangeStart=firstDayOfWeek.getTime();break;case"m":var firstDayOfMonth=Date.today().moveToFirstDayOfMonth();selectedFilterProperty.criteriaRangeStart=firstDayOfMonth.getTime();break;case"q":var month=Date.parse("today").toString("MM"),year=Date.parse("today").toString("yyyy"),quarterMonth=3*Math.floor(month/3),firstDayOfQuarter=new Date(year,quarterMonth,1);selectedFilterProperty.criteriaRangeStart=firstDayOfQuarter.getTime();break;case"y":var year=Date.parse("today").toString("yyyy"),firstDayOfYear=new Date(year,0,1);selectedFilterProperty.criteriaRangeStart=firstDayOfYear.getTime()}}"range"===selectedCondition.dateInfo.type&&(selectedCondition.showCriteriaStart=!0,selectedCondition.showCriteriaEnd=!0,selectedCondition.disableCriteriaStart=!1,selectedCondition.disableCriteriaEnd=!1,selectedCondition.showNumberOf=!1),"exactDate"===selectedCondition.dateInfo.type&&(selectedCondition.showCriteriaEnd=!1,selectedCondition.disableCriteriaStart=!1,selectedCondition.disableCriteriaEnd=!0,selectedCondition.dateInfo.measureType?(selectedCondition.conditionDisplay="How many "+selectedCondition.dateInfo.measureTypeDisplay+" ago?",selectedCondition.showCriteriaStart=!1,selectedCondition.showNumberOf=!0):(selectedCondition.conditionDisplay="",selectedCondition.showCriteriaStart=!0,selectedCondition.showNumberOf=!1,selectedFilterProperty.criteriaRangeStart=new Date(selectedFilterProperty.criteriaRangeStart).setHours(0,0,0,0),selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeStart).setHours(23,59,59,999)))}else selectedCondition.showCriteriaStart=!1,selectedCondition.showCriteriaEnd=!1,selectedCondition.showNumberOf=!1,selectedCondition.conditionDisplay="";$log.debug("selectedConditionChanged End"),$log.debug("selectedConditionChanged Result"),$log.debug(selectedCondition),$log.debug(selectedFilterProperty)},scope.criteriaRangeChanged=function(selectedFilterProperty){var selectedCondition=selectedFilterProperty.selectedCriteriaType;if("calculation"===selectedCondition.dateInfo.type){var measureCount=selectedFilterProperty.criteriaNumberOf;switch(selectedCondition.dateInfo.measureType){case"h":var today=Date.parse("today");selectedFilterProperty.criteriaRangeEnd=today.getTime();var todayXHoursAgo=Date.parse("today").add(-measureCount).hours();selectedFilterProperty.criteriaRangeStart=todayXHoursAgo.getTime();break;case"d":var lastFullDay=Date.parse("today").add(-1).days();lastFullDay.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullDay.getTime();var lastXDaysAgo=Date.parse("today").add(-measureCount).days();selectedFilterProperty.criteriaRangeStart=lastXDaysAgo.getTime();break;case"w":var lastFullWeekEnd=Date.today().last().sunday();lastFullWeekEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullWeekEnd.getTime();var lastXWeeksAgo=Date.today().last().sunday().add(-measureCount).weeks();selectedFilterProperty.criteriaRangeStart=lastXWeeksAgo.getTime();break;case"m":var lastFullMonthEnd=Date.today().add(-1).months().moveToLastDayOfMonth();lastFullMonthEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullMonthEnd.getTime();var lastXMonthsAgo=Date.today().add(-1).months().moveToLastDayOfMonth().add(-measureCount).months();selectedFilterProperty.criteriaRangeStart=lastXMonthsAgo.getTime();break;case"q":var currentQuarter=Math.floor(Date.parse("today").getMonth()/3),firstDayOfCurrentQuarter=new Date(Date.parse("today").getFullYear(),3*currentQuarter,1),lastDayOfPreviousQuarter=firstDayOfCurrentQuarter.add(-1).days();lastDayOfPreviousQuarter.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastDayOfPreviousQuarter.getTime();var lastXQuartersAgo=new Date(Date.parse("today").getFullYear(),3*currentQuarter,1);lastXQuartersAgo.add(-3*measureCount).months(),selectedFilterProperty.criteriaRangeStart=lastXQuartersAgo.getTime();break;case"y":var lastFullYearEnd=new Date((new Date).getFullYear(),11,31).add(-1).years();lastFullYearEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullYearEnd.getTime();var lastXYearsAgo=new Date((new Date).getFullYear(),11,31).add(-measureCount-1).years();selectedFilterProperty.criteriaRangeStart=lastXYearsAgo.getTime()}}"exactDate"===selectedCondition.dateInfo.type&&(selectedFilterProperty.criteriaRangeStart=selectedFilterProperty.criteriaRangeStart.setHours(0,0,0,0),selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeStart).setHours(23,59,59,999)),"range"===selectedCondition.dateInfo.type&&(angular.isDefined(selectedFilterProperty.criteriaRangeStart)&&(selectedFilterProperty.criteriaRangeStart=new Date(selectedFilterProperty.criteriaRangeStart).setHours(0,0,0,0)),angular.isDefined(selectedFilterProperty.criteriaRangeEnd)&&(selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeEnd).setHours(23,59,59,999))),$log.debug("criteriaRangeChanged"),$log.debug(selectedCondition),$log.debug(selectedFilterProperty)};break;case"big_decimal":case"integer":case"float":scope.conditionOptions=getNumberOptions(),scope.criteriaRangeChanged=function(selectedFilterProperty){selectedFilterProperty.selectedCriteriaType},scope.selectedConditionChanged=function(selectedFilterProperty){selectedFilterProperty.showCriteriaValue=!0,angular.isDefined(selectedFilterProperty.selectedCriteriaType.type)&&(selectedFilterProperty.showCriteriaValue=!1,selectedFilterProperty.selectedCriteriaType.showCriteriaStart=!0,selectedFilterProperty.selectedCriteriaType.showCriteriaEnd=!0),angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)&&(selectedFilterProperty.showCriteriaValue=!1)}}if(angular.isDefined(scope.selectedFilterProperty.fieldtype))switch(scope.selectedFilterProperty.fieldtype){case"many-to-one":if(scope.conditionOptions=getManyToOneOptions(scope.comparisonType),$log.debug("many-to-one"),$log.debug(scope.selectedFilterProperty),$log.debug(scope.filterPropertiesList),angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(scope.selectedFilterProperty.cfc).then(function(value){scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier]=value,metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier],scope.selectedFilterProperty.propertyIdentifier)},function(reason){})}break;case"many-to-many":case"one-to-many":scope.manyToManyOptions=getManyToManyOptions(),scope.oneToManyOptions=getOneToManyOptions();$hibachi.getExistingCollectionsByBaseEntity(selectedFilterProperty.cfc).then(function(value){if(scope.collectionOptions=value.data,angular.isDefined(scope.workflowCondition.collectionID)){for(var i in scope.collectionOptions)scope.collectionOptions[i].collectionID===scope.workflowCondition.collectionID&&(scope.selectedFilterProperty.selectedCollection=scope.collectionOptions[i]);for(var i in scope.oneToManyOptions)scope.oneToManyOptions[i].comparisonOperator===scope.workflowCondition.criteria&&(scope.selectedFilterProperty.selectedCriteriaType=scope.oneToManyOptions[i])}})}$log.debug("workflowCondition"),$log.debug(scope.workflowCondition),angular.forEach(scope.conditionOptions,function(conditionOption){if(conditionOption.display==scope.workflowCondition.conditionDisplay){if(scope.selectedFilterProperty.selectedCriteriaType=conditionOption,scope.selectedFilterProperty.criteriaValue=scope.workflowCondition.value,angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType.dateInfo)&&angular.isDefined(scope.workflowCondition.value)&&scope.workflowCondition.value.length){var dateRangeArray=scope.workflowCondition.value.split("-");scope.selectedFilterProperty.criteriaRangeStart=new Date(parseInt(dateRangeArray[0])),scope.selectedFilterProperty.criteriaRangeEnd=new Date(parseInt(dateRangeArray[1]))}angular.isDefined(scope.workflowCondition.criteriaNumberOf)&&(scope.selectedFilterProperty.criteriaNumberOf=scope.workflowCondition.criteriaNumberOf),angular.isDefined(scope.selectedConditionChanged)&&scope.selectedConditionChanged(scope.selectedFilterProperty)}}),$log.debug("templateLoader"),$log.debug(selectedFilterProperty);var templateLoader=getTemplate(selectedFilterProperty);templateLoader.success(function(html){element.html(html),$compile(element.contents())(scope)})}}),scope.selectedCriteriaChanged=function(selectedCriteria){$log.debug(selectedCriteria),$log.debug(scope.selectedFilterProperty);var breadCrumb={entityAlias:scope.selectedFilterProperty.name,cfc:scope.selectedFilterProperty.cfc,propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier};scope.workflowCondition.breadCrumbs.push(breadCrumb),scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType})}}}}return SWConditionCriteria.Factory=function(){var directive=function($http,$compile,$templateCache,$log,$hibachi,$filter,collectionPartialsPath,metadataService,hibachiPathBuilder){return new SWConditionCriteria($http,$compile,$templateCache,$log,$hibachi,$filter,collectionPartialsPath,metadataService,hibachiPathBuilder)};return directive.$inject=["$http","$compile","$templateCache","$log","$hibachi","$filter","collectionPartialsPath","metadataService","hibachiPathBuilder"],directive},SWConditionCriteria}();exports.SWConditionCriteria=SWConditionCriteria},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteria=function(){function SWCriteria(collectionPartialsPath,hibachiPathBuilder){return{restrict:"E",scope:{filterItem:"=",selectedFilterProperty:"=",filterPropertiesList:"=",selectedFilterPropertyChanged:"&",comparisonType:"=",collectionConfig:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteria.html",link:function(scope,element,attrs){}}}return SWCriteria.Factory=function(){var directive=function(collectionPartialsPath,hibachiPathBuilder){return new SWCriteria(collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["collectionPartialsPath","hibachiPathBuilder"],directive},SWCriteria}();exports.SWCriteria=SWCriteria},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaBoolean=function(){function SWCriteriaBoolean(collectionPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriaboolean.html",link:function(scope,element,attrs){scope.conditionOptions=function(type){angular.isUndefined(type)&&(type="filter");var booleanOptions=[];return"filter"===type?booleanOptions=[{display:"True",comparisonOperator:"=",value:"True"},{display:"False",comparisonOperator:"=",value:"False"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===type&&(booleanOptions=[{display:"True",comparisonOperator:"eq",value:"True"},{display:"False",comparisonOperator:"eq",value:"False"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),booleanOptions}(scope.comparisonType),angular.forEach(scope.conditionOptions,function(conditionOption){conditionOption.display==scope.filterItem.conditionDisplay&&(scope.selectedFilterProperty.selectedCriteriaType=conditionOption,scope.selectedFilterProperty.criteriaValue=scope.filterItem.value,angular.isDefined(scope.selectedConditionChanged)&&scope.selectedConditionChanged(scope.selectedFilterProperty))})}}}return SWCriteriaBoolean.Factory=function(){var directive=function(collectionPartialsPath,hibachiPathBuilder){return new SWCriteriaBoolean(collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["collectionPartialsPath","hibachiPathBuilder"],directive},SWCriteriaBoolean}();exports.SWCriteriaBoolean=SWCriteriaBoolean},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaDate=function(){function SWCriteriaDate($log,collectionPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriadate.html",link:function(scope,element,attrs){scope.conditionOptions=function(type){angular.isUndefined(type)&&(type="filter");var dateOptions=[];return"filter"===type?dateOptions=[{display:"Date",comparisonOperator:"between",dateInfo:{type:"exactDate"}},{display:"In Range",comparisonOperator:"between",dateInfo:{type:"range"}},{display:"Not In Range",comparisonOperator:"not between",dateInfo:{type:"range"}},{display:"Today",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:0,behavior:"toDate"}},{display:"Yesterday",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureCount:-1,behavior:"toDate"}},{display:"This Week",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",behavior:"toDate"}},{display:"This Month",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",behavior:"toDate"}},{display:"This Quarter",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",behavior:"toDate"}},{display:"This Year",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",behavior:"toDate"}},{display:"Last N Hour(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"h",measureTypeDisplay:"Hours"}},{display:"Last N Day(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"d",measureTypeDisplay:"Days"}},{display:"Last N Week(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"w",measureTypeDisplay:"Weeks"}},{display:"Last N Month(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"m",measureTypeDisplay:"Months"}},{display:"Last N Quarter(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"q",measureTypeDisplay:"Quarters"}},{display:"Last N Year(s)",comparisonOperator:"between",dateInfo:{type:"calculation",measureType:"y",measureTypeDisplay:"Years"}},{display:"Exact N Day(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"d",measureTypeDisplay:"Days"}},{display:"Exact N Month(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"m",measureTypeDisplay:"Months"}},{display:"Exact N Year(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"y",measureTypeDisplay:"Years"}},{display:"Exact N Day(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"d",measureTypeDisplay:"Days"}},{display:"Exact N Month(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"m",measureTypeDisplay:"Months"}},{display:"Exact N Year(s) Ago",comparisonOperator:"between",dateInfo:{type:"exactDate",measureType:"y",measureTypeDisplay:"Years"}},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===type&&(dateOptions=[{display:"Equals",comparisonOperator:"eq"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),dateOptions}(scope.comparisonType),scope.today=function(){angular.isDefined(scope.selectedFilterProperty)&&(scope.selectedFilterProperty.criteriaRangeStart=(new Date).getTime(),scope.selectedFilterProperty.criteriaRangeEnd=(new Date).getTime())},scope.clear=function(){scope.selectedFilterProperty.criteriaRangeStart=null,scope.selectedFilterProperty.criteriaRangeEnd=null},scope.openCalendarStart=function($event){$event.preventDefault(),$event.stopPropagation(),scope.openedCalendarStart=!0},scope.openCalendarEnd=function($event){$event.preventDefault(),$event.stopPropagation(),scope.openedCalendarEnd=!0},scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],scope.format=scope.formats[1],scope.selectedConditionChanged=function(selectedFilterProperty){$log.debug("selectedConditionChanged Begin");var selectedCondition=selectedFilterProperty.selectedCriteriaType;if(angular.isDefined(selectedCondition.dateInfo)){if("calculation"===selectedCondition.dateInfo.type)if(selectedCondition.showCriteriaStart=!0,selectedCondition.showCriteriaEnd=!0,selectedCondition.disableCriteriaStart=!0,selectedCondition.disableCriteriaEnd=!0,angular.isUndefined(selectedCondition.dateInfo.behavior))$log.debug("Not toDate"),selectedCondition.showNumberOf=!0,selectedCondition.conditionDisplay="Number of "+selectedCondition.dateInfo.measureTypeDisplay+" :";else{$log.debug("toDate");var today=Date.parse("today"),todayEOD=today.setHours(23,59,59,999);switch(selectedFilterProperty.criteriaRangeEnd=todayEOD,selectedCondition.dateInfo.measureType){case"d":var dateBOD=Date.parse("today").add(selectedCondition.dateInfo.measureCount).days();dateBOD.setHours(0,0,0,0),selectedFilterProperty.criteriaRangeStart=dateBOD.getTime();break;case"w":var firstDayOfWeek=Date.today().last().monday();selectedFilterProperty.criteriaRangeStart=firstDayOfWeek.getTime();break;case"m":var firstDayOfMonth=Date.today().moveToFirstDayOfMonth();selectedFilterProperty.criteriaRangeStart=firstDayOfMonth.getTime();break;case"q":var month=Date.parse("today").toString("MM"),year=Date.parse("today").toString("yyyy"),quarterMonth=3*Math.floor(month/3),firstDayOfQuarter=new Date(year,quarterMonth,1);selectedFilterProperty.criteriaRangeStart=firstDayOfQuarter.getTime();break;case"y":var year=Date.parse("today").toString("yyyy"),firstDayOfYear=new Date(year,0,1);selectedFilterProperty.criteriaRangeStart=firstDayOfYear.getTime()}}"range"===selectedCondition.dateInfo.type&&(selectedCondition.showCriteriaStart=!0,selectedCondition.showCriteriaEnd=!0,selectedCondition.disableCriteriaStart=!1,selectedCondition.disableCriteriaEnd=!1,selectedCondition.showNumberOf=!1),"exactDate"===selectedCondition.dateInfo.type&&(selectedCondition.showCriteriaStart=!0,selectedCondition.showCriteriaEnd=!1,selectedCondition.disableCriteriaStart=!1,selectedCondition.disableCriteriaEnd=!0,selectedCondition.dateInfo.measureType?(selectedCondition.conditionDisplay="How many "+selectedCondition.dateInfo.measureTypeDisplay+" ago?",selectedCondition.showCriteriaStart=!1,selectedCondition.showNumberOf=!0):(selectedCondition.conditionDisplay="",selectedCondition.showCriteriaStart=!0,selectedCondition.showNumberOf=!1,selectedFilterProperty.criteriaRangeStart=new Date(selectedFilterProperty.criteriaRangeStart).setHours(0,0,0,0),selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeStart).setHours(23,59,59,999)))}else selectedCondition.showCriteriaStart=!1,selectedCondition.showCriteriaEnd=!1,selectedCondition.showNumberOf=!1,selectedCondition.conditionDisplay="";$log.debug("selectedConditionChanged End"),$log.debug("selectedConditionChanged Result"),$log.debug(selectedCondition),$log.debug(selectedFilterProperty)},scope.criteriaRangeChanged=function(selectedFilterProperty){$log.debug("criteriaRangeChanged"),$log.debug(selectedFilterProperty);var selectedCondition=selectedFilterProperty.selectedCriteriaType;if("calculation"===selectedCondition.dateInfo.type){var measureCount=selectedFilterProperty.criteriaNumberOf;switch(selectedCondition.dateInfo.measureType){case"h":var today=Date.parse("today");selectedFilterProperty.criteriaRangeEnd=today.getTime();var todayXHoursAgo=Date.parse("today").add(-measureCount).hours();selectedFilterProperty.criteriaRangeStart=todayXHoursAgo.getTime();break;case"d":var lastFullDay=Date.parse("today").add(-1).days();lastFullDay.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullDay.getTime();var lastXDaysAgo=Date.parse("today").add(-measureCount).days();selectedFilterProperty.criteriaRangeStart=lastXDaysAgo.getTime();break;case"w":var lastFullWeekEnd=Date.today().last().sunday();lastFullWeekEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullWeekEnd.getTime();var lastXWeeksAgo=Date.today().last().sunday().add(-measureCount).weeks();selectedFilterProperty.criteriaRangeStart=lastXWeeksAgo.getTime();break;case"m":var lastFullMonthEnd=Date.today().add(-1).months().moveToLastDayOfMonth();lastFullMonthEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullMonthEnd.getTime();var lastXMonthsAgo=Date.today().add(-1).months().moveToLastDayOfMonth().add(-measureCount).months();selectedFilterProperty.criteriaRangeStart=lastXMonthsAgo.getTime();break;case"q":var currentQuarter=Math.floor(Date.parse("today").getMonth()/3),firstDayOfCurrentQuarter=new Date(Date.parse("today").getFullYear(),3*currentQuarter,1),lastDayOfPreviousQuarter=firstDayOfCurrentQuarter.add(-1).days();lastDayOfPreviousQuarter.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastDayOfPreviousQuarter.getTime();var lastXQuartersAgo=new Date(Date.parse("today").getFullYear(),3*currentQuarter,1);lastXQuartersAgo.add(-3*measureCount).months(),selectedFilterProperty.criteriaRangeStart=lastXQuartersAgo.getTime();break;case"y":var lastFullYearEnd=new Date((new Date).getFullYear(),11,31).add(-1).years();lastFullYearEnd.setHours(23,59,59,999),selectedFilterProperty.criteriaRangeEnd=lastFullYearEnd.getTime();var lastXYearsAgo=new Date((new Date).getFullYear(),11,31).add(-measureCount-1).years();selectedFilterProperty.criteriaRangeStart=lastXYearsAgo.getTime()}}"exactDate"===selectedCondition.dateInfo.type&&angular.isDefined(selectedFilterProperty.criteriaRangeStart)&&angular.isDefined(selectedFilterProperty.criteriaRangeStart.setHours)&&(selectedFilterProperty.criteriaRangeStart=selectedFilterProperty.criteriaRangeStart.setHours(0,0,0,0),selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeStart).setHours(23,59,59,999)),"range"===selectedCondition.dateInfo.type&&(angular.isDefined(selectedFilterProperty.criteriaRangeStart)&&angular.isDefined(selectedFilterProperty.criteriaRangeStart)&&(selectedFilterProperty.criteriaRangeStart=new Date(selectedFilterProperty.criteriaRangeStart).setHours(0,0,0,0)),angular.isDefined(selectedFilterProperty.criteriaRangeEnd)&&angular.isDefined(selectedFilterProperty.criteriaRangeStart)&&(selectedFilterProperty.criteriaRangeEnd=new Date(selectedFilterProperty.criteriaRangeEnd).setHours(23,59,59,999))),$log.debug("criteriaRangeChanged"),$log.debug(selectedCondition),$log.debug(selectedFilterProperty)},angular.isUndefined(scope.filterItem.$$isNew)||!1===scope.filterItem.$$isNew?angular.forEach(scope.conditionOptions,function(conditionOption){if(conditionOption.display==scope.filterItem.conditionDisplay){if(scope.selectedFilterProperty.selectedCriteriaType=conditionOption,scope.selectedFilterProperty.criteriaValue=scope.filterItem.value,angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType.dateInfo)&&angular.isDefined(scope.filterItem.value)&&scope.filterItem.value.length){var dateRangeArray=scope.filterItem.value.split("-"),rangeStart=new Date(parseInt(dateRangeArray[0])).toUTCString();rangeStart=rangeStart.split(" ").slice(0,5).join(" ");var rangeEnd=new Date(parseInt(dateRangeArray[1])).toUTCString();rangeEnd=rangeEnd.split(" ").slice(0,5).join(" "),scope.selectedFilterProperty.criteriaRangeStart=rangeStart,scope.selectedFilterProperty.criteriaRangeEnd=rangeEnd}angular.isDefined(scope.selectedConditionChanged)&&scope.selectedConditionChanged(scope.selectedFilterProperty)}}):(scope.selectedFilterProperty.criteriaValue="",scope.selectedFilterProperty.criteriaRangeStart="",scope.selectedFilterProperty.criteriaRangeEnd="")}}}return SWCriteriaDate.Factory=function(){var directive=function($log,collectionPartialsPath,hibachiPathBuilder){return new SWCriteriaDate($log,collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","collectionPartialsPath","hibachiPathBuilder"],directive},SWCriteriaDate}();exports.SWCriteriaDate=SWCriteriaDate},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaManyToMany=function(){function SWCriteriaManyToMany($log,$hibachi,collectionPartialsPath,dialogService,observerService,hibachiPathBuilder,rbkeyService){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriamanytomany.html",link:function(scope,element,attrs){function populateUI(collection){scope.collectionOptions.push(collection),scope.selectedFilterProperty.selectedCollection=collection,scope.selectedFilterProperty.selectedCriteriaType=scope.manyToManyOptions[2]}scope.data={},scope.collectionOptionsOpen=!1,scope.toggleCollectionOptions=function(flag){scope.collectionOptionsOpen=angular.isUndefined(flag)?!scope.collectionOptionsOpen:flag},scope.selectCollection=function(collection){scope.toggleCollectionOptions(),scope.selectedFilterProperty.selectedCollection=collection,scope.selectedFilterProperty.selectedCriteriaType=scope.manyToManyOptions[2]},scope.cleanSelection=function(){scope.toggleCollectionOptions(!1),scope.data.collectionName="",scope.selectedFilterProperty.selectedCollection=null};scope.manyToManyOptions=function(type){angular.isUndefined(type)&&(type="filter"),$log.debug("type",type);var manyToManyOptions=[];return"filter"==type?manyToManyOptions=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"},{display:"Empty",comparisonOperator:"is",value:"null"},{display:"Not Empty",comparisonOperator:"is not",value:"null"}]:"condition"===type&&(manyToManyOptions=[]),manyToManyOptions}(scope.comparisonType),$hibachi.getExistingCollectionsByBaseEntity(scope.selectedFilterProperty.cfc).then(function(value){if(scope.collectionOptions=value.data,angular.isDefined(scope.filterItem.collectionID)){for(var i in scope.collectionOptions)scope.collectionOptions[i].collectionID===scope.filterItem.collectionID&&(scope.selectedFilterProperty.selectedCollection=scope.collectionOptions[i]);for(var i in scope.manyToManyOptions)scope.manyToManyOptions[i].comparisonOperator===scope.filterItem.criteria&&(scope.selectedFilterProperty.selectedCriteriaType=scope.manyToManyOptions[i])}}),observerService.attach(populateUI,"addCollection","addCollection"),scope.selectedCriteriaChanged=function(selectedCriteria){$log.debug(selectedCriteria),$log.debug(scope.selectedFilterProperty);var breadCrumb={entityAlias:scope.selectedFilterProperty.name,cfc:scope.selectedFilterProperty.cfc,propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,rbKey:rbkeyService.getRBKey("entity."+scope.selectedFilterProperty.cfc.replace("_",""))};scope.filterItem.breadCrumbs.push(breadCrumb),scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType})},scope.addNewCollection=function(){dialogService.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:scope.selectedFilterProperty.cfc,collectionName:scope.data.collectionName,parentEntity:scope.collectionConfig.baseEntityName}),scope.cleanSelection()},scope.viewSelectedCollection=function(){dialogService.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"collection",entityId:scope.selectedFilterProperty.selectedCollection.collectionID,parentEntity:scope.collectionConfig.baseEntityName})}}}}return SWCriteriaManyToMany.Factory=function(){var directive=function($log,$hibachi,$filter,collectionPartialsPath,collectionService,metadataService,dialogService,observerService,hibachiPathBuilder,rbkeyService){return new SWCriteriaManyToMany($log,$hibachi,collectionPartialsPath,dialogService,observerService,hibachiPathBuilder,rbkeyService)};return directive.$inject=["$log","$hibachi","collectionPartialsPath","dialogService","observerService","hibachiPathBuilder","rbkeyService"],directive},SWCriteriaManyToMany}();exports.SWCriteriaManyToMany=SWCriteriaManyToMany},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaManyToOne=function(){function SWCriteriaManyToOne($log,$hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder,rbkeyService){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriamanytoone.html",link:function(scope,element,attrs){var getManyToOneOptions=function(){return{drillEntity:{},hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"}}};scope.manyToOneOptions=getManyToOneOptions(),scope.conditionOptions=getManyToOneOptions(),$log.debug("many-to-one"),$log.debug(scope.selectedFilterProperty),$log.debug(scope.filterPropertiesList),scope.$watch("selectedFilterProperty",function(selectedFilterProperty){if(angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(selectedFilterProperty.cfc).then(function(value){scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier]=value,metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier],scope.selectedFilterProperty.propertyIdentifier)},function(reason){})}scope.selectedCriteriaChanged=function(selectedCriteria){$log.debug(selectedCriteria),$log.debug("changed"),$log.debug(scope.selectedFilterProperty);var breadCrumb={entityAlias:scope.selectedFilterProperty.name,cfc:scope.selectedFilterProperty.cfc,propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,rbKey:rbkeyService.getRBKey("entity."+scope.selectedFilterProperty.cfc.replace("_",""))};$log.debug("breadcrumb"),$log.debug(breadCrumb),$log.debug(scope.filterItem.breadCrumbs),scope.filterItem.breadCrumbs.push(breadCrumb),scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType}),$log.debug(scope.selectedFilterProperty)}})}}}return SWCriteriaManyToOne.Factory=function(){var directive=function($log,$hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder,rbkeyService){return new SWCriteriaManyToOne($log,$hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder,rbkeyService)};return directive.$inject=["$log","$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder","rbkeyService"],directive},SWCriteriaManyToOne}();exports.SWCriteriaManyToOne=SWCriteriaManyToOne},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaNumber=function(){function SWCriteriaNumber($log,collectionPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criterianumber.html",link:function(scope,element,attrs){scope.$watch("selectedFilterProperty.criteriaValue",function(criteriaValue){angular.isDefined(criteriaValue)&&(scope.selectedFilterProperty.criteriaValue=criteriaValue,$log.debug(scope.selectedFilterProperty))}),scope.conditionOptions=function(type){angular.isUndefined(type)&&(type="filter");var numberOptions=[];return"filter"===type?numberOptions=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"In Range",comparisonOperator:"between",type:"range"},{display:"Not In Range",comparisonOperator:"not between",type:"range"},{display:"Greater Than",comparisonOperator:">"},{display:"Greater Than Or Equal",comparisonOperator:">="},{display:"Less Than",comparisonOperator:"<"},{display:"Less Than Or Equal",comparisonOperator:"<="},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===type&&(numberOptions=[{display:"Equals",comparisonOperator:"eq"},{display:"Greater Than",comparisonOperator:"gt"},{display:"Greater Than Or Equal",comparisonOperator:"gte"},{display:"Less Than",comparisonOperator:"lt"},{display:"Less Than Or Equal",comparisonOperator:"lte"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),numberOptions}(scope.comparisonType),scope.criteriaRangeChanged=function(selectedFilterProperty){selectedFilterProperty.selectedCriteriaType},scope.selectedConditionChanged=function(selectedFilterProperty){selectedFilterProperty.showCriteriaValue=!0,angular.isDefined(selectedFilterProperty.selectedCriteriaType.type)&&(selectedFilterProperty.showCriteriaValue=!1,selectedFilterProperty.selectedCriteriaType.showCriteriaStart=!0,selectedFilterProperty.selectedCriteriaType.showCriteriaEnd=!0),angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)&&(selectedFilterProperty.showCriteriaValue=!1)},angular.forEach(scope.conditionOptions,function(conditionOption){if($log.debug("populate"),conditionOption.display==scope.filterItem.conditionDisplay){if(scope.selectedFilterProperty.selectedCriteriaType=conditionOption,$log.debug(scope.filterItem),"between"===scope.filterItem.comparisonOperator||"not between"===scope.filterItem.comparisonOperator){var criteriaRangeArray=scope.filterItem.value.split("-");$log.debug(criteriaRangeArray),scope.selectedFilterProperty.criteriaRangeStart=parseInt(criteriaRangeArray[0]),scope.selectedFilterProperty.criteriaRangeEnd=parseInt(criteriaRangeArray[1])}else scope.selectedFilterProperty.criteriaValue=scope.filterItem.value;angular.isDefined(scope.filterItem.criteriaNumberOf)&&(scope.selectedFilterProperty.criteriaNumberOf=scope.filterItem.criteriaNumberOf),angular.isDefined(scope.selectedConditionChanged)&&scope.selectedConditionChanged(scope.selectedFilterProperty)}})}}}return SWCriteriaNumber.Factory=function(){var directive=function($log,collectionPartialsPath,hibachiPathBuilder){return new SWCriteriaNumber($log,collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","collectionPartialsPath","hibachiPathBuilder"],directive},SWCriteriaNumber}();exports.SWCriteriaNumber=SWCriteriaNumber},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaOneToMany=function(){function SWCriteriaOneToMany($log,$hibachi,collectionPartialsPath,dialogService,observerService,hibachiPathBuilder,rbkeyService){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriaonetomany.html",link:function(scope,element,attrs){function populateUI(collection){scope.collectionOptions.push(collection),scope.selectedFilterProperty.selectedCollection=collection,scope.selectedFilterProperty.selectedCriteriaType=scope.oneToManyOptions[2]}scope.data={},scope.collectionOptionsOpen=!1,scope.toggleCollectionOptions=function(flag){scope.collectionOptionsOpen=angular.isUndefined(flag)?!scope.collectionOptionsOpen:flag},scope.selectCollection=function(collection){scope.toggleCollectionOptions(),scope.selectedFilterProperty.selectedCollection=collection,scope.selectedFilterProperty.selectedCriteriaType=scope.oneToManyOptions[2]},scope.cleanSelection=function(){scope.toggleCollectionOptions(!1),scope.data.collectionName="",scope.selectedFilterProperty.selectedCollection=null};$log.debug("onetomany"),$log.debug(scope.selectedFilterProperty),scope.oneToManyOptions=function(type){angular.isUndefined(type)&&(type="filter");var oneToManyOptions=[];return"filter"==type?oneToManyOptions=[{display:"All Exist In Collection",comparisonOperator:"All"},{display:"None Exist In Collection",comparisonOperator:"None"},{display:"Some Exist In Collection",comparisonOperator:"One"}]:"condition"===type&&(oneToManyOptions=[]),oneToManyOptions}(scope.comparisonType),$hibachi.getExistingCollectionsByBaseEntity(scope.selectedFilterProperty.cfc).then(function(value){if(scope.collectionOptions=value.data,angular.isDefined(scope.filterItem.collectionID)){for(var i in scope.collectionOptions)scope.collectionOptions[i].collectionID===scope.filterItem.collectionID&&(scope.selectedFilterProperty.selectedCollection=scope.collectionOptions[i]);for(var i in scope.oneToManyOptions)scope.oneToManyOptions[i].comparisonOperator===scope.filterItem.criteria&&(scope.selectedFilterProperty.selectedCriteriaType=scope.oneToManyOptions[i])}}),observerService.attach(populateUI,"addCollection","addCollection"),scope.selectedCriteriaChanged=function(selectedCriteria){$log.debug(selectedCriteria),$log.debug(scope.selectedFilterProperty);var breadCrumb={entityAlias:scope.selectedFilterProperty.name,cfc:scope.selectedFilterProperty.cfc,propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,rbKey:rbkeyService.getRBKey("entity."+scope.selectedFilterProperty.cfc.replace("_","")),filterProperty:scope.selectedFilterProperty};scope.filterItem.breadCrumbs.push(breadCrumb),$log.debug("criteriaChanged"),$log.debug(scope.selectedFilterProperty),scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType})},scope.addNewCollection=function(){dialogService.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:scope.selectedFilterProperty.cfc,collectionName:scope.data.collectionName,parentEntity:scope.collectionConfig.baseEntityName}),scope.cleanSelection()},scope.viewSelectedCollection=function(){scope.toggleCollectionOptions(),dialogService.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"collection",entityId:scope.selectedFilterProperty.selectedCollection.collectionID,parentEntity:scope.collectionConfig.baseEntityName})}}}}return SWCriteriaOneToMany.Factory=function(){var directive=function($log,$hibachi,collectionPartialsPath,dialogService,observerService,hibachiPathBuilder,rbkeyService){return new SWCriteriaOneToMany($log,$hibachi,collectionPartialsPath,dialogService,observerService,hibachiPathBuilder,rbkeyService)};return directive.$inject=["$log","$hibachi","collectionPartialsPath","dialogService","observerService","hibachiPathBuilder","rbkeyService"],directive},SWCriteriaOneToMany}();exports.SWCriteriaOneToMany=SWCriteriaOneToMany},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaRelatedObject=function(){function SWCriteriaRelatedObject($log,$hibachi,$filter,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriarelatedobject.html",link:function(scope,element,attrs){var getRelatedObjectOptions=function(){return{drillEntity:null,hasEntity:{display:"Defined",comparisonOperator:"is not",value:"null"},notHasEntity:{display:"Not Defined",comparisonOperator:"is",value:"null"},aggregate:{aggregate:""}}};scope.aggegate={},scope.aggegate.selectedAggregate="",scope.aggregateOptions=["Average","Count","Sum"],scope.selectAggregate=function(aggregate){scope.selectedFilterProperty.selectedCriteriaType.aggregate=aggregate},scope.relatedObjectOptions=getRelatedObjectOptions(),scope.conditionOptions=getRelatedObjectOptions(),$log.debug("many-to-one"),$log.debug(scope.selectedFilterProperty),$log.debug(scope.filterPropertiesList),scope.$watch("selectedFilterProperty",function(selectedFilterProperty){if(angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(selectedFilterProperty.cfc).then(function(value){scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier]=value,metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier],scope.selectedFilterProperty.propertyIdentifier)},function(reason){})}scope.selectedCriteriaChanged=function(selectedCriteria,selectedAggregate){var breadCrumb={entityAlias:scope.selectedFilterProperty.name,cfc:scope.selectedFilterProperty.cfc,propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,rbKey:rbkeyService.getRBKey("entity."+scope.selectedFilterProperty.cfc.replace("_",""))};$log.debug("breadcrumb"),$log.debug(breadCrumb),$log.debug(scope.filterItem.breadCrumbs),scope.filterItem.breadCrumbs.push(breadCrumb),selectedAggregate&&(scope.selectedFilterProperty.selectedCriteriaType.ormtype="integer",scope.selectedFilterProperty.selectedCriteriaType.aggregate=selectedAggregate),scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType}),$log.debug(scope.selectedFilterProperty)}})}}}return SWCriteriaRelatedObject.Factory=function(){var directive=function($log,$hibachi,$filter,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService){return new SWCriteriaRelatedObject($log,$hibachi,$filter,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService)};return directive.$inject=["$log","$hibachi","$filter","collectionPartialsPath","collectionService","metadataService","hibachiPathBuilder","rbkeyService"],directive},SWCriteriaRelatedObject}();exports.SWCriteriaRelatedObject=SWCriteriaRelatedObject},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCriteriaString=function(){function SWCriteriaString(collectionPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"criteriastring.html",link:function(scope,element,attrs){scope.conditionOptions=function(type){angular.isUndefined(type)&&(type="filter");var stringOptions=[];return"filter"===type?stringOptions=[{display:"Equals",comparisonOperator:"="},{display:"Doesn't Equal",comparisonOperator:"<>"},{display:"Contains",comparisonOperator:"like",pattern:"%w%"},{display:"Doesn't Contain",comparisonOperator:"not like",pattern:"%w%"},{display:"Starts With",comparisonOperator:"like",pattern:"w%"},{display:"Doesn't Start With",comparisonOperator:"not like",pattern:"w%"},{display:"Ends With",comparisonOperator:"like",pattern:"%w"},{display:"Doesn't End With",comparisonOperator:"not like",pattern:"%w"},{display:"In List",comparisonOperator:"in"},{display:"Not In List",comparisonOperator:"not in"},{display:"Defined",comparisonOperator:"is not",value:"null"},{display:"Not Defined",comparisonOperator:"is",value:"null"}]:"condition"===type&&(stringOptions=[{display:"Equals",comparisonOperator:"eq"},{display:"Doesn't Equal",comparisonOperator:"neq"},{display:"Defined",comparisonOperator:"null",value:"False"},{display:"Not Defined",comparisonOperator:"null",value:"True"}]),stringOptions}(scope.comparisonType),scope.inListArray=[],angular.isDefined(scope.filterItem.value)&&(scope.inListArray=scope.filterItem.value.split(",")),scope.newListItem="",scope.addToValueInListFormat=function(inListItem){scope.inListArray.push(inListItem),scope.filterItem.value=scope.inListArray.toString(),scope.filterItem.displayValue=scope.inListArray.toString().replace(/,/g,", "),scope.newListItem=""},scope.removelistItem=function(argListIndex){scope.inListArray.splice(argListIndex,1),scope.filterItem.value=scope.inListArray.toString(),scope.filterItem.displayValue=scope.inListArray.toString().replace(/,/g,", ")},scope.clearField=function(){scope.newListItem=""},scope.selectedConditionChanged=function(selectedFilterProperty){angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)?selectedFilterProperty.showCriteriaValue=!1:"in"===selectedFilterProperty.selectedCriteriaType.comparisonOperator||"not in"===selectedFilterProperty.selectedCriteriaType.comparisonOperator?(selectedFilterProperty.showCriteriaValue=!1,scope.comparisonOperatorInAndNotInFlag=!0):selectedFilterProperty.showCriteriaValue=!0},scope.$watch("filterItem.value",function(criteriaValue){angular.isDefined(scope.filterItem)&&angular.isDefined(scope.filterItem.value)&&(scope.filterItem.value=scope.filterItem.value.replace("%",""))}),scope.$watch("selectedFilterProperty",function(selectedFilterProperty){angular.isDefined(selectedFilterProperty)&&angular.forEach(scope.conditionOptions,function(conditionOption){conditionOption.display==scope.filterItem.conditionDisplay&&(scope.selectedFilterProperty.selectedCriteriaType=conditionOption,scope.selectedFilterProperty.criteriaValue=scope.filterItem.value,angular.isDefined(scope.selectedConditionChanged)&&scope.selectedConditionChanged(scope.selectedFilterProperty))})})}}}return SWCriteriaString.Factory=function(){var directive=function(collectionPartialsPath,hibachiPathBuilder){return new SWCriteriaString(collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["collectionPartialsPath","hibachiPathBuilder"],directive},SWCriteriaString}();exports.SWCriteriaString=SWCriteriaString},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDisplayItem=function(){function SWDisplayItem($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder){return{require:"?^swDisplayOptions",restrict:"A",scope:{selectedProperty:"=",propertiesList:"=",breadCrumbs:"=",selectedPropertyChanged:"&"},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"displayitem.html",link:function(scope,element,attrs,displayOptionsController){scope.showDisplayItem=!1,scope.selectedDisplayOptionChanged=function(selectedDisplayOption){var breadCrumb={entityAlias:scope.selectedProperty.name,cfc:scope.selectedProperty.cfc,propertyIdentifier:scope.selectedProperty.propertyIdentifier};scope.breadCrumbs.push(breadCrumb),scope.selectedPropertyChanged({selectedProperty:selectedDisplayOption})},scope.$watch("selectedProperty",function(selectedProperty){if(angular.isDefined(selectedProperty)&&angular.isUndefined(scope.propertiesList[selectedProperty.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(selectedProperty.cfc).then(function(value){metadataService.setPropertiesList(value,selectedProperty.propertyIdentifier),scope.propertiesList[selectedProperty.propertyIdentifier]=metadataService.getPropertiesListByBaseEntityAlias(selectedProperty.propertyIdentifier),metadataService.formatPropertiesList(scope.propertiesList[selectedProperty.propertyIdentifier],selectedProperty.propertyIdentifier)},function(reason){})}})}}}return SWDisplayItem.Factory=function(){var directive=function($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder){return new SWDisplayItem($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder)};return directive.$inject=["$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder"],directive},SWDisplayItem}();exports.SWDisplayItem=SWDisplayItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDisplayItemAggregate=function(){function SWDisplayItemAggregate($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder){return{require:"^swDisplayOptions",restrict:"A",scope:{selectedProperty:"=",propertiesList:"=",breadCrumbs:"=",selectedPropertyChanged:"&"},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"displayitemaggregate.html",link:function(scope,element,attrs,displayOptionsController){scope.showDisplayItem=!1,scope.aggegate={},scope.aggegate.selectedAggregate="",scope.aggregateOptions=[{id:"average",value:"Average"},{id:"count",value:"Count"},{id:"sum",value:"Sum"}],scope.selectAggregate=function(aggregate){"count"==aggregate?(scope.selectedProperty.aggregate=aggregate,scope.selectedPropertyChanged({selectedProperty:scope.selectedProperty})):scope.aggegate.currentObject=scope.selectedProperty.cfc},scope.selectedDisplayOptionChanged=function(selectedDisplayOption){selectedDisplayOption.aggregate=scope.aggegate.selectedAggregate,selectedDisplayOption.aggregateObject=scope.aggegate.currentObject,scope.selectedPropertyChanged({selectedProperty:selectedDisplayOption})},scope.$watch("selectedProperty",function(selectedProperty){if(angular.isDefined(selectedProperty)){if(angular.isUndefined(scope.propertiesList[selectedProperty.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(selectedProperty.cfc).then(function(value){metadataService.setPropertiesList(value,selectedProperty.propertyIdentifier),scope.propertiesList[selectedProperty.propertyIdentifier]=metadataService.getPropertiesListByBaseEntityAlias(selectedProperty.propertyIdentifier),metadataService.formatPropertiesList(scope.propertiesList[selectedProperty.propertyIdentifier],selectedProperty.propertyIdentifier)},function(reason){})}scope.showDisplayItem=!0}})}}}return SWDisplayItemAggregate.Factory=function(){var directive=function($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder){return new SWDisplayItemAggregate($hibachi,collectionPartialsPath,metadataService,hibachiPathBuilder)};return directive.$inject=["$hibachi","collectionPartialsPath","metadataService","hibachiPathBuilder"],directive},SWDisplayItemAggregate}();exports.SWDisplayItemAggregate=SWDisplayItemAggregate},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDisplayOptions=function(){function SWDisplayOptions($log,$hibachi,hibachiPathBuilder,collectionPartialsPath,rbkeyService){return{restrict:"E",require:{swListingDisplay:"?^swListingDisplay",swListingControls:"?^swListingControls"},transclude:!0,scope:{orderBy:"<",columns:"=",joins:"<",groupBys:"<",propertiesList:"<",saveCollection:"&?",baseEntityAlias:"<?",baseEntityName:"<?",listingName:"@?"},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"displayoptions.html",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){this.removeColumn=function(columnIndex){$scope.columns.length&&$scope.columns.splice(columnIndex,1)}}],link:function(scope,element,$attrs,controllers,observerService){scope.breadCrumbs=[{entityAlias:scope.baseEntityAlias,cfc:scope.baseEntityAlias,propertyIdentifier:scope.baseEntityAlias}],scope.getPropertiesList=function(){return scope.propertiesList},scope.addDisplayDialog={isOpen:!1,toggleDisplayDialog:function(){scope.addDisplayDialog.isOpen=!scope.addDisplayDialog.isOpen}};var getTitleFromProperty=function(selectedProperty){var currentEntity,baseEntityCfcName=scope.baseEntityName.replace("Slatwall","").charAt(0).toLowerCase()+scope.baseEntityName.replace("Slatwall","").slice(1),propertyIdentifier=selectedProperty.propertyIdentifier,title="",propertyIdentifierArray=propertyIdentifier.replace(/^_/,"").split(/[._]+/);return"attribute"==selectedProperty.$$group?selectedProperty.displayPropertyIdentifier:(angular.forEach(propertyIdentifierArray,function(propertyIdentifierItem,key){if(0!==key){if(1===key)currentEntityInstance=$hibachi["new"+scope.baseEntityName.replace("Slatwall","")](),currentEntity=currentEntityInstance.metaData[propertyIdentifierArray[key]],title+=rbkeyService.getRBKey("entity."+baseEntityCfcName+"."+propertyIdentifierItem);else{var currentEntityInstance=$hibachi["new"+currentEntity.cfc.charAt(0).toUpperCase()+currentEntity.cfc.slice(1)]();currentEntity=currentEntityInstance.metaData[propertyIdentifierArray[key]],title+=rbkeyService.getRBKey("entity."+currentEntityInstance.metaData.className+"."+currentEntity.name)}key<propertyIdentifierArray.length-1&&(title+=" | ")}}),title)};scope.addColumn=function(closeDialog){var selectedProperty=scope.selectedProperty;if(angular.isDefined(scope.selectedAggregate)&&(selectedProperty=scope.selectedAggregate),selectedProperty.$$group,$log.debug(scope.columns),angular.isDefined(selectedProperty)){var column={title:getTitleFromProperty(selectedProperty),propertyIdentifier:selectedProperty.propertyIdentifier,isVisible:!0,isDeletable:!0,isSearchable:!0,isExportable:!0};if(angular.isDefined(selectedProperty.attributeID)&&(column.attributeID=selectedProperty.attributeID,column.attributeSetObject=selectedProperty.attributeSetObject),angular.isDefined(selectedProperty.ormtype)&&(column.ormtype=selectedProperty.ormtype),column.type&&"none"!=column.type||!selectedProperty.hb_formattype?column.type="none":column.type=selectedProperty.hb_formattype,angular.isDefined(selectedProperty.aggregate)&&(column.ormtype="string",column.aggregate={aggregateFunction:selectedProperty.aggregate.toUpperCase(),aggregateAlias:selectedProperty.propertyIdentifier.split(/[._]+/).pop()+selectedProperty.aggregate.charAt(0).toUpperCase()+selectedProperty.aggregate.slice(1)},column.title+=" "+rbkeyService.getRBKey("define."+column.aggregate.aggregateFunction)),scope.columns.push(column),(selectedProperty.propertyIdentifier.match(/_/g)||[]).length>1){var PIlimit=selectedProperty.propertyIdentifier.length;-1!=selectedProperty.propertyIdentifier.indexOf(".")&&(PIlimit=selectedProperty.propertyIdentifier.indexOf("."));var propertyIdentifierJoins=selectedProperty.propertyIdentifier.substring(1,PIlimit),propertyIdentifierParts=propertyIdentifierJoins.split("_"),current_collection=$hibachi.getEntityExample(scope.baseEntityName),_propertyIdentifier="",joins=[];angular.isDefined(scope.joins)&&(joins=scope.joins);for(var i=1;i<propertyIdentifierParts.length;i++)if(angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]])&&"cfc"in current_collection.metaData[propertyIdentifierParts[i]]){current_collection=$hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc),_propertyIdentifier+="_"+propertyIdentifierParts[i];for(var newJoin={associationName:_propertyIdentifier.replace(/_([^_]+)$/,".$1").substring(1),alias:"_"+propertyIdentifierParts[0]+_propertyIdentifier},joinFound=!1,j=0;j<joins.length;j++)if(joins[j].alias===newJoin.alias){joinFound=!0;break}joinFound||joins.push(newJoin)}if(scope.joins=joins,angular.isUndefined(scope.groupBys)||scope.groupBys.split(",").length!=scope.columns.length){for(var groupbyArray=angular.isUndefined(scope.groupBys)?[]:scope.groupBys.split(","),col=0;col<scope.columns.length;col++)"attributeID"in scope.columns[col]||-1==groupbyArray.indexOf(scope.columns[col].propertyIdentifier)&&groupbyArray.push(scope.columns[col].propertyIdentifier);scope.groupBys=groupbyArray.join(",")}}controllers.swListingControls&&(controllers.swListingControls.columnIsControllableMap[column.propertyIdentifier]=!0),scope.saveCollection(),angular.isDefined(closeDialog)&&!0===closeDialog&&(scope.addDisplayDialog.toggleDisplayDialog(),scope.selectBreadCrumb(0))}},scope.selectBreadCrumb=function(breadCrumbIndex){var removeCount=scope.breadCrumbs.length-1-breadCrumbIndex;scope.breadCrumbs.splice(breadCrumbIndex+1,removeCount),scope.selectedPropertyChanged(null)};var unbindBaseEntityAlias=scope.$watch("baseEntityAlias",function(newValue,oldValue){newValue!==oldValue&&(scope.breadCrumbs=[{entityAlias:scope.baseEntityAlias,cfc:scope.baseEntityAlias,propertyIdentifier:scope.baseEntityAlias}],unbindBaseEntityAlias())});scope.selectedPropertyChanged=function(selectedProperty,aggregate){aggregate?scope.selectedAggregate=selectedProperty:(scope.selectedProperty=selectedProperty,scope.selectedAggregate=void 0)},jQuery(function($){var panelList=angular.element(element).children("ul");panelList.sortable({handle:".s-pannel-name",update:function(event,ui){var tempColumnsArray=[];$(".s-pannel-name",panelList).each(function(index,elem){var newIndex=$(elem).attr("j-column-index"),columnItem=scope.columns[newIndex];tempColumnsArray.push(columnItem)}),scope.columns=tempColumnsArray,scope.saveCollection()}})}),!scope.saveCollection&&controllers.swListingControls&&(scope.saveCollection=function(){controllers.swListingControls.collectionConfig.columns=scope.columns,controllers.swListingDisplay&&(controllers.swListingDisplay.columns=scope.columns),controllers.swListingControls.saveCollection()}),controllers.swListingDisplay&&(scope.getCollection=controllers.swListingDisplay.getCollection)}}}return SWDisplayOptions.Factory=function(){var directive=function($log,$hibachi,hibachiPathBuilder,collectionPartialsPath,rbkeyService){return new SWDisplayOptions($log,$hibachi,hibachiPathBuilder,collectionPartialsPath,rbkeyService)};return directive.$inject=["$log","$hibachi","hibachiPathBuilder","collectionPartialsPath","rbkeyService"],directive},SWDisplayOptions}();exports.SWDisplayOptions=SWDisplayOptions},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWEditFilterItem=function(){function SWEditFilterItem($log,$filter,$timeout,$hibachi,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService,observerService,utilityService){return{require:{swFilterGroups:"^swFilterGroups",swListingControls:"?^swListingControls"},restrict:"E",scope:{collectionConfig:"=",filterItem:"=",filterPropertiesList:"=",saveCollection:"&?",removeFilterItem:"&",filterItemIndex:"=",comparisonType:"=",simple:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"editfilteritem.html",link:function(scope,element,attrs,filterGroupsController){function daysBetween(first,second){var one=new Date(first.getFullYear(),first.getMonth(),first.getDate()),two=new Date(second.getFullYear(),second.getMonth(),second.getDate()),millisBetween=two.getTime()-one.getTime(),days=millisBetween/864e5;return Math.floor(days)}if(!scope.saveCollection&&filterGroupsController.swListingControls&&(scope.saveCollection=function(){filterGroupsController.swListingControls.collectionConfig=scope.collectionConfig,filterGroupsController.swListingControls.saveCollection()}),angular.isUndefined(scope.filterItem.breadCrumbs))if(scope.filterItem.breadCrumbs=[],""===scope.filterItem.propertyIdentifier)scope.filterItem.breadCrumbs=[{rbKey:rbkeyService.getRBKey("entity."+scope.collectionConfig.baseEntityAlias.replace("_","")),entityAlias:scope.collectionConfig.baseEntityAlias,cfc:scope.collectionConfig.baseEntityAlias,propertyIdentifier:scope.collectionConfig.baseEntityAlias}];else{var entityAliasArrayFromString=scope.filterItem.propertyIdentifier.split(".");entityAliasArrayFromString.pop();for(var i in entityAliasArrayFromString){var breadCrumb={rbKey:rbkeyService.getRBKey("entity."+scope.collectionConfig.baseEntityAlias.replace("_","")),entityAlias:entityAliasArrayFromString[i],cfc:entityAliasArrayFromString[i],propertyIdentifier:entityAliasArrayFromString[i]};scope.filterItem.breadCrumbs.push(breadCrumb)}}else angular.forEach(scope.filterItem.breadCrumbs,function(breadCrumb,key){if(angular.isUndefined(scope.filterPropertiesList[breadCrumb.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(breadCrumb.cfc).then(function(value){metadataService.setPropertiesList(value,breadCrumb.propertyIdentifier),scope.filterPropertiesList[breadCrumb.propertyIdentifier]=metadataService.getPropertiesListByBaseEntityAlias(breadCrumb.propertyIdentifier),metadataService.formatPropertiesList(scope.filterPropertiesList[breadCrumb.propertyIdentifier],breadCrumb.propertyIdentifier);var entityAliasArrayFromString=scope.filterItem.propertyIdentifier.split(".");if(entityAliasArrayFromString.pop(),entityAliasArrayFromString=entityAliasArrayFromString.join(".").trim(),angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString]))for(var i in scope.filterPropertiesList[entityAliasArrayFromString].data){var filterProperty=scope.filterPropertiesList[entityAliasArrayFromString].data[i];filterProperty.propertyIdentifier===scope.filterItem.propertyIdentifier&&(scope.selectedFilterProperty=filterProperty,scope.selectedFilterProperty.value=scope.filterItem.value,scope.selectedFilterProperty.comparisonOperator=scope.filterItem.comparisonOperator)}})}else{var entityAliasArrayFromString=scope.filterItem.propertyIdentifier.split(".");if(entityAliasArrayFromString.pop(),entityAliasArrayFromString=entityAliasArrayFromString.join(".").trim(),angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString]))for(var i in scope.filterPropertiesList[entityAliasArrayFromString].data){var filterProperty=scope.filterPropertiesList[entityAliasArrayFromString].data[i];filterProperty.propertyIdentifier===scope.filterItem.propertyIdentifier&&(scope.selectedFilterProperty=filterProperty,scope.selectedFilterProperty.value=scope.filterItem.value,scope.selectedFilterProperty.comparisonOperator=scope.filterItem.comparisonOperator)}}});angular.isUndefined(scope.filterItem.$$isClosed)&&(scope.filterItem.$$isClosed=!0),scope.filterGroupItem=filterGroupsController.swFilterGroups.getFilterGroupItem(),scope.togglePrepareForFilterGroup=function(){scope.filterItem.$$prepareForFilterGroup=!scope.filterItem.$$prepareForFilterGroup},scope.selectBreadCrumb=function(breadCrumbIndex){var removeCount=scope.filterItem.breadCrumbs.length-1-breadCrumbIndex;scope.filterItem.breadCrumbs.splice(breadCrumbIndex+1,removeCount),$log.debug("selectBreadCrumb"),$log.debug(scope.selectedFilterProperty),scope.selectedFilterPropertyChanged(null)},scope.selectedFilterPropertyChanged=function(selectedFilterProperty){$log.debug("selectedFilterProperty"),$log.debug(selectedFilterProperty),angular.isDefined(scope.selectedFilterProperty)&&null===scope.selectedFilterProperty&&(scope.selectedFilterProperty={}),angular.isDefined(scope.selectedFilterProperty)&&angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType)&&delete scope.selectedFilterProperty.selectedCriteriaType,angular.isDefined(scope.filterItem.value)&&delete scope.filterItem.value,scope.selectedFilterProperty.showCriteriaValue=!1,scope.selectedFilterProperty=selectedFilterProperty},scope.addFilterItem=function(){collectionService.newFilterItem(filterGroupsController.swFilterGroups.getFilterGroupItem(),filterGroupsController.swFilterGroups.setItemInUse),this.observerService.notify("collectionConfigUpdated",{collectionConfig:collectionService})},scope.cancelFilterItem=function(){$log.debug("cancelFilterItem"),$log.debug(scope.filterItemIndex),scope.filterItem.setItemInUse(!1),scope.filterItem.$$isClosed=!0;for(var siblingIndex in scope.filterItem.$$siblingItems)scope.filterItem.$$siblingItems[siblingIndex].$$disabled=!1;!0===scope.filterItem.$$isNew?(observerService.notify("filterItemAction",{action:"remove",filterItemIndex:scope.filterItemIndex}),scope.removeFilterItem({filterItemIndex:scope.filterItemIndex})):observerService.notify("filterItemAction",{action:"close",filterItemIndex:scope.filterItemIndex})},scope.saveFilter=function(selectedFilterProperty,filterItem,callback){var _this=this;if($log.debug("saveFilter begin"),!angular.isDefined(selectedFilterProperty.selectedCriteriaType)||!angular.equals({},selectedFilterProperty.selectedCriteriaType)){if((selectedFilterProperty.propertyIdentifier.match(/_/g)||[]).length>1){var propertyIdentifierStart="_"==selectedFilterProperty.propertyIdentifier.charAt(0)?1:0,propertyIdentifierEnd=-1==selectedFilterProperty.propertyIdentifier.indexOf(".")?selectedFilterProperty.propertyIdentifier.length:selectedFilterProperty.propertyIdentifier.indexOf("."),propertyIdentifierJoins=selectedFilterProperty.propertyIdentifier.substring(propertyIdentifierStart,propertyIdentifierEnd),propertyIdentifierParts=propertyIdentifierJoins.split("_"),current_collection=$hibachi.getEntityExample(scope.collectionConfig.baseEntityName),_propertyIdentifier="",joins=[];angular.isDefined(scope.collectionConfig.joins)&&(joins=scope.collectionConfig.joins);for(var i=1;i<propertyIdentifierParts.length;i++)if(angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]])&&"cfc"in current_collection.metaData[propertyIdentifierParts[i]]){current_collection=$hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc),_propertyIdentifier+="_"+propertyIdentifierParts[i];for(var newJoin={associationName:_propertyIdentifier.replace(/_([^_]+)$/,".$1").substring(1),alias:"_"+propertyIdentifierParts[0]+_propertyIdentifier},joinFound=!1,j=0;j<joins.length;j++)if(joins[j].alias===newJoin.alias){joinFound=!0;break}joinFound||joins.push(newJoin)}if(scope.collectionConfig.joins=joins,angular.isDefined(scope.collectionConfig.columns)&&(angular.isUndefined(scope.collectionConfig.groupBys)||scope.collectionConfig.groupBys.split(",").length!=scope.collectionConfig.columns.length)){for(var groupbyArray=angular.isUndefined(scope.collectionConfig.groupBys)?[]:scope.collectionConfig.groupBys.split(","),column=0;column<scope.collectionConfig.columns.length;column++)-1==groupbyArray.indexOf(scope.collectionConfig.columns[column].propertyIdentifier)&&groupbyArray.push(scope.collectionConfig.columns[column].propertyIdentifier);scope.collectionConfig.groupBys=groupbyArray.join(",")}}if(angular.isDefined(selectedFilterProperty)&&angular.isDefined(selectedFilterProperty.selectedCriteriaType)){switch(filterItem.$$isNew=!1,filterItem.propertyIdentifier=selectedFilterProperty.propertyIdentifier,filterItem.displayPropertyIdentifier=selectedFilterProperty.displayPropertyIdentifier,selectedFilterProperty.ormtype){case"boolean":filterItem.comparisonOperator=selectedFilterProperty.selectedCriteriaType.comparisonOperator,filterItem.value=selectedFilterProperty.selectedCriteriaType.value,filterItem.displayValue=filterItem.value;break;case"string":angular.isDefined(selectedFilterProperty.attributeID)&&(filterItem.attributeID=selectedFilterProperty.attributeID,filterItem.attributeSetObject=selectedFilterProperty.attributeSetObject),filterItem.comparisonOperator=selectedFilterProperty.selectedCriteriaType.comparisonOperator,angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)?filterItem.value=selectedFilterProperty.selectedCriteriaType.value.toString():angular.isDefined(selectedFilterProperty.selectedCriteriaType.pattern)&&(filterItem.pattern=selectedFilterProperty.selectedCriteriaType.pattern),filterItem.displayValue=filterItem.value;break;case"timestamp":if(filterItem.comparisonOperator=selectedFilterProperty.selectedCriteriaType.comparisonOperator,angular.isDefined(selectedFilterProperty.selectedCriteriaType.value))filterItem.value=selectedFilterProperty.selectedCriteriaType.value,filterItem.displayValue=filterItem.value;else if(angular.isDefined(selectedFilterProperty.selectedCriteriaType.dateInfo.type)&&"calculation"===selectedFilterProperty.selectedCriteriaType.dateInfo.type){var _daysBetween=daysBetween(new Date(selectedFilterProperty.criteriaRangeStart),new Date(selectedFilterProperty.criteriaRangeEnd));filterItem.value=_daysBetween,filterItem.displayValue=selectedFilterProperty.selectedCriteriaType.display,angular.isDefined(selectedFilterProperty.criteriaNumberOf)&&(filterItem.criteriaNumberOf=selectedFilterProperty.criteriaNumberOf)}else if(angular.isDefined(selectedFilterProperty.selectedCriteriaType.dateInfo.type)&&"exactDate"===selectedFilterProperty.selectedCriteriaType.dateInfo.type)if(angular.isUndefined(selectedFilterProperty.selectedCriteriaType.dateInfo.measureType))filterItem.value=selectedFilterProperty.criteriaRangeStart+"-"+selectedFilterProperty.criteriaRangeEnd,filterItem.displayValue=$filter("date")(angular.copy(selectedFilterProperty.criteriaRangeStart),"MM/dd/yyyy @ h:mma")+"-"+$filter("date")(angular.copy(selectedFilterProperty.criteriaRangeEnd),"MM/dd/yyyy @ h:mma");else{switch(filterItem.measureType=selectedFilterProperty.selectedCriteriaType.dateInfo.measureType,filterItem.measureCriteria=selectedFilterProperty.selectedCriteriaType.dateInfo.type,filterItem.criteriaNumberOf="0",angular.isDefined(selectedFilterProperty.criteriaNumberOf)&&(filterItem.criteriaNumberOf=selectedFilterProperty.criteriaNumberOf),filterItem.value=filterItem.criteriaNumberOf,filterItem.displayValue=filterItem.criteriaNumberOf,filterItem.measureType){case"d":filterItem.displayValue+=" Day";break;case"m":filterItem.displayValue+=" Month";break;case"y":filterItem.displayValue+=" Year"}filterItem.displayValue+=(filterItem.criteriaNumberOf>1?"s":"")+" Ago"}else{var dateValueString=utilityService.removeTimeOffset(selectedFilterProperty.criteriaRangeStart)+"-"+utilityService.removeTimeOffset(selectedFilterProperty.criteriaRangeEnd);filterItem.value=dateValueString;var formattedDateValueString=$filter("date")(angular.copy(selectedFilterProperty.criteriaRangeStart),"MM/dd/yyyy @ h:mma")+"-"+$filter("date")(angular.copy(selectedFilterProperty.criteriaRangeEnd),"MM/dd/yyyy @ h:mma");filterItem.displayValue=formattedDateValueString,angular.isDefined(selectedFilterProperty.criteriaNumberOf)&&(filterItem.criteriaNumberOf=selectedFilterProperty.criteriaNumberOf)}break;case"big_decimal":case"integer":case"float":if(filterItem.comparisonOperator=selectedFilterProperty.selectedCriteriaType.comparisonOperator,angular.isDefined(selectedFilterProperty.selectedCriteriaType.value))filterItem.value=selectedFilterProperty.selectedCriteriaType.value;else if(angular.isUndefined(selectedFilterProperty.selectedCriteriaType.type))filterItem.value=selectedFilterProperty.criteriaValue;else{var decimalValueString=selectedFilterProperty.criteriaRangeStart+"-"+selectedFilterProperty.criteriaRangeEnd;filterItem.value=decimalValueString}angular.isDefined(selectedFilterProperty.aggregate)&&(filterItem.aggregate=selectedFilterProperty.aggregate),filterItem.displayValue=filterItem.value}switch(selectedFilterProperty.fieldtype){case"one-to-many":case"many-to-many":case"many-to-one":filterItem.comparisonOperator=selectedFilterProperty.selectedCriteriaType.comparisonOperator,angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)&&(filterItem.value=selectedFilterProperty.selectedCriteriaType.value),filterItem.displayValue=filterItem.value}angular.isUndefined(filterItem.displayValue)&&(filterItem.displayValue=filterItem.value),angular.isDefined(selectedFilterProperty.ormtype)&&(filterItem.ormtype=selectedFilterProperty.ormtype),angular.isDefined(selectedFilterProperty.fieldtype)&&(filterItem.fieldtype=selectedFilterProperty.fieldtype);for(var siblingIndex in filterItem.$$siblingItems)filterItem.$$siblingItems[siblingIndex].$$disabled=!1;filterItem.conditionDisplay=selectedFilterProperty.selectedCriteriaType.display,!0===filterItem.$$prepareForFilterGroup&&collectionService.transplantFilterItemIntoFilterGroup(filterGroupsController.swFilterGroups.getFilterGroupItem(),filterItem),scope.saveCollection(),$log.debug(selectedFilterProperty),$log.debug(filterItem);$timeout(function(){callback()}).then(function(){observerService.notify("filterItemAction",{action:"add",filterItemIndex:scope.filterItemIndex,collectionConfig:_this.collectionConfig})}),$log.debug("saveFilter end")}}}}}}return SWEditFilterItem.Factory=function(){var directive=function($log,$filter,$timeout,$hibachi,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService,observerService,utilityService){return new SWEditFilterItem($log,$filter,$timeout,$hibachi,collectionPartialsPath,collectionService,metadataService,hibachiPathBuilder,rbkeyService,observerService,utilityService)};return directive.$inject=["$log","$filter","$timeout","$hibachi","collectionPartialsPath","collectionService","metadataService","hibachiPathBuilder","rbkeyService","observerService","utilityService"],directive},SWEditFilterItem}();exports.SWEditFilterItem=SWEditFilterItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFilterGroupItem=function(){function SWFilterGroupItem($http,$compile,$templateCache,$log,collectionService,collectionPartialsPath,hibachiPathBuilder){return{restrict:"A",require:"^swFilterGroups",scope:{collectionConfig:"=",filterGroupItem:"=",siblingItems:"=",filterPropertiesList:"=",filterGroupItemIndex:"=",saveCollection:"&",comparisonType:"="},link:function(scope,element,attrs,filterGroupsController){var Partial=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"filtergroupitem.html",templateLoader=$http.get(Partial,{cache:$templateCache});templateLoader.success(function(html){element.html(html)}).then(function(response){element.replaceWith($compile(element.html())(scope))});scope.filterGroupItem.setItemInUse=filterGroupsController.setItemInUse,scope.filterGroupItem.$$index=scope.filterGroupItemIndex,scope.removeFilterGroupItem=function(){filterGroupsController.removeFilterGroupItem(scope.filterGroupItemIndex)},scope.filterGroupItem.removeFilterGroupItem=scope.removeFilterGroupItem,scope.filterGroupItem.$$disabled=!1,angular.isUndefined(scope.filterGroupItem.$$isClosed)&&(scope.filterGroupItem.$$isClosed=!0),scope.filterGroupItem.$$siblingItems=scope.siblingItems,scope.selectFilterGroupItem=function(filterGroupItem){collectionService.selectFilterGroupItem(filterGroupItem)},scope.logicalOperatorChanged=function(logicalOperatorValue){$log.debug("logicalOperatorChanged"),$log.debug(logicalOperatorValue),scope.filterGroupItem.logicalOperator=logicalOperatorValue,filterGroupsController.saveCollection()}}}}return SWFilterGroupItem.Factory=function(){var directive=function($http,$compile,$templateCache,$log,collectionService,collectionPartialsPath,hibachiPathBuilder){return new SWFilterGroupItem($http,$compile,$templateCache,$log,collectionService,collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["$http","$compile","$templateCache","$log","collectionService","collectionPartialsPath","hibachiPathBuilder"],directive},SWFilterGroupItem}();exports.SWFilterGroupItem=SWFilterGroupItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFilterGroups=function(){function SWFilterGroups($log,collectionPartialsPath,hibachiPathBuilder,observerService){return{restrict:"EA",scope:{collectionConfig:"=?",filterGroupItem:"=?",filterPropertiesList:"=?",saveCollection:"&",filterGroup:"=?",comparisonType:"=?",simple:"=",readOnly:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"filtergroups.html",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){angular.isDefined($scope.comparisonType)||($scope.comparisonType="filter"),$scope.itemInUse=!1,$log.debug("collectionConfig"),$log.debug($scope.collectionConfig),this.getFilterGroup=function(){return $scope.filterGroup},this.getFilterGroupItem=function(){return $scope.filterGroupItem},this.setItemInUse=function(booleanValue){$scope.itemInUse=booleanValue},this.getItemInUse=function(){return $scope.itemInUse},this.saveCollection=function(){$scope.saveCollection()},$scope.deselectItems=function(filterItem){for(var i in filterItem.$$siblingItems)filterItem.$$siblingItems[i].$$disabled=!1},this.removeFilterItem=function(filterItemIndex){angular.isDefined(filterItemIndex)&&($scope.deselectItems($scope.filterGroupItem[filterItemIndex]),$scope.filterGroupItem[filterItemIndex].setItemInUse(!1),$log.debug("removeFilterItem"),$log.debug(filterItemIndex),$scope.filterGroupItem.splice(filterItemIndex,1),$scope.filterGroupItem.length&&delete $scope.filterGroupItem[0].logicalOperator,$log.debug("removeFilterItem"),$log.debug(filterItemIndex),$scope.saveCollection())},this.removeFilterGroupItem=function(filterGroupItemIndex){$scope.deselectItems($scope.filterGroupItem[filterGroupItemIndex]),$scope.filterGroupItem[filterGroupItemIndex].setItemInUse(!1),$scope.filterGroupItem.splice(filterGroupItemIndex,1),$scope.filterGroupItem.length&&delete $scope.filterGroupItem[0].logicalOperator,$log.debug("removeFilterGroupItem"),$log.debug(filterGroupItemIndex),$scope.saveCollection()}}]}}return SWFilterGroups.Factory=function(){var directive=function($log,collectionPartialsPath,hibachiPathBuilder,observerService){return new SWFilterGroups($log,collectionPartialsPath,hibachiPathBuilder,observerService)};return directive.$inject=["$log","collectionPartialsPath","hibachiPathBuilder","observerService"],directive},SWFilterGroups}();exports.SWFilterGroups=SWFilterGroups},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFilterItem=function(){function SWFilterItem($log,collectionService,collectionPartialsPath,hibachiPathBuilder){return{restrict:"A",require:"^swFilterGroups",scope:{collectionConfig:"=",filterItem:"=",siblingItems:"=",filterPropertiesList:"=",filterItemIndex:"=",saveCollection:"&",comparisonType:"=",simple:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"filteritem.html",link:function(scope,element,attrs,filterGroupsController){scope.baseEntityAlias=scope.collectionConfig.baseEntityAlias,angular.isUndefined(scope.filterItem.$$isClosed)&&(scope.filterItem.$$isClosed=!0),angular.isUndefined(scope.filterItem.$$disabled)&&(scope.filterItem.$$disabled=!1),angular.isUndefined(scope.filterItem.siblingItems)&&(scope.filterItem.$$siblingItems=scope.siblingItems),scope.filterItem.setItemInUse=filterGroupsController.setItemInUse,scope.selectFilterItem=function(filterItem){collectionService.selectFilterItem(filterItem)},scope.removeFilterItem=function(){filterGroupsController.removeFilterItem(scope.filterItemIndex,filterGroupsController.getFilterGroupItem())},scope.filterGroupItem=filterGroupsController.getFilterGroupItem(),scope.logicalOperatorChanged=function(logicalOperatorValue){$log.debug("logicalOperatorChanged"),$log.debug(logicalOperatorValue),scope.filterItem.logicalOperator=logicalOperatorValue,filterGroupsController.saveCollection()}}}}return SWFilterItem.Factory=function(){var directive=function($log,collectionService,collectionPartialsPath,hibachiPathBuilder){return new SWFilterItem($log,collectionService,collectionPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","collectionService","collectionPartialsPath","hibachiPathBuilder"],directive},SWFilterItem}();exports.SWFilterItem=SWFilterItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWRestrictionConfigController=function(){function SWRestrictionConfigController($timeout,collectionConfigService,$hibachi,observerService){var _this=this;this.$timeout=$timeout,this.collectionConfigService=collectionConfigService,this.$hibachi=$hibachi,this.observerService=observerService,this.$onDestroy=function(){_this.observerService.detachByEvent("saveCollection")},this.setCollectionConfig=function(payload){_this.permissionRecordRestriction.data.collectionConfig=angular.toJson(payload.collectionConfig.getCollectionConfig()),_this.permissionRecordRestriction.forms.permissionRecordRestrictionForm.collectionConfig.$setViewValue(payload.collectionConfig.getCollectionConfig()),_this.permissionRecordRestriction.forms.permissionRecordRestrictionForm.$setDirty(!0),_this.permissionRecordRestriction.$$save()};var permissionRecordRestrictionRequest=this.$hibachi.getPermissionRecordRestriction(this.permissionRecordRestrictionId);permissionRecordRestrictionRequest.promise.then(function(){var collectionConfig=_this.collectionConfigService.newCollectionConfig();_this.permissionRecordRestriction=permissionRecordRestrictionRequest.value,collectionConfig.loadJson(_this.permissionRecordRestriction.collectionConfig),_this.collectionConfig=collectionConfig}),observerService.attach(this.setCollectionConfig,"saveCollection")}return SWRestrictionConfigController}(),SWRestrictionConfig=function(){function SWRestrictionConfig(hibachiPathBuilder,collectionPartialsPath){this.restrict="E",this.scope={},this.bindToController={permissionRecordRestrictionId:"@?"},this.controller=SWRestrictionConfigController,this.controllerAs="swRestrictionConfig",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(collectionPartialsPath)+"restrictionconfig.html"}return SWRestrictionConfig.Factory=function(){var directive=function(hibachiPathBuilder,collectionPartialsPath){return new SWRestrictionConfig(hibachiPathBuilder,collectionPartialsPath)};return directive.$inject=["hibachiPathBuilder","collectionPartialsPath"],directive},SWRestrictionConfig}();exports.SWRestrictionConfig=SWRestrictionConfig},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var CollectionController=function(){function CollectionController($scope,$attrs,$log,$timeout,$hibachi,collectionService,metadataService,selectionService,paginationService,collectionConfigService,appConfig,observerService){$scope.saveCollection=function(collectionData){var data={collectionID:$attrs.collectionId,collectionConfig:collectionData.collectionConfig};$hibachi.saveEntity("Collection",$attrs.collectionId,data,"save").then(function(value){},function(reason){})},observerService.attach($scope.saveCollection,"swPaginationUpdate",$attrs.tableId)}return CollectionController}();exports.CollectionController=CollectionController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ConfirmationController=function(){function ConfirmationController($scope,$log,$modalInstance){$scope.deleteEntity=function(entity){$log.debug("Deleting an entity."),$log.debug($scope.entity),this.close()},$scope.fireCallback=function(callbackFunction){callbackFunction(),this.close()},$scope.close=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}return ConfirmationController}();exports.ConfirmationController=ConfirmationController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var CreateCollection=function(){function CreateCollection($scope,$log,$timeout,$hibachi,collectionService,metadataService,paginationService,dialogService,observerService,selectionService,collectionConfigService,rbkeyService,$window){$window.scrollTo(0,0),$scope.params=dialogService.getCurrentDialog().params,$scope.readOnly=angular.isDefined($scope.params.readOnly)&&1==$scope.params.readOnly,$scope.myCollection=collectionConfigService.newCollectionConfig($scope.params.entityName);var hibachiConfig=$hibachi.getConfig();if("Type"==$scope.params.entityName&&angular.isUndefined($scope.params.entityId)&&angular.isDefined($scope.params.parentEntity)){$scope.params.parentEntity=$scope.params.parentEntity.replace(new RegExp("^"+hibachiConfig.applicationKey,"i"),"");var systemCode=$scope.params.parentEntity.charAt(0).toLowerCase()+$scope.params.parentEntity.slice(1)+"Type";$scope.myCollection.addFilter("parentType.systemCode",systemCode)}$scope.keywords="",$scope.paginator=paginationService.createPagination(),$scope.hideEditView=!0,$scope.hasSelection=selectionService.getSelectionCount,$scope.idsSelected=selectionService.getSelections,$scope.unselectAll=function(){selectionService.clearSelections("collectionSelection"),$scope.getCollection()},$scope.newCollection=$hibachi.newCollection(),$scope.newCollection.data.collectionCode=$scope.params.entityName+"-"+(new Date).valueOf(),$scope.newCollection.data.collectionObject=$scope.params.entityName,angular.isDefined($scope.params.entityId)&&($scope.newCollection.data.collectionID=$scope.params.entityId,$timeout(function(){$scope.newCollection.forms["form.createCollection"].$setDirty()})),angular.isDefined($scope.params.collectionName)&&($scope.newCollection.data.collectionName=$scope.params.collectionName,$timeout(function(){$scope.newCollection.forms["form.createCollection"].$setDirty()})),$scope.saveCollection=function(){$scope.myCollection.loadJson($scope.collectionConfig),$scope.getCollection()},$scope.getCollection=function(){$scope.closeSaving=!0,$scope.myCollection.setPageShow($scope.paginator.getPageShow()),$scope.myCollection.setCurrentPage($scope.paginator.getCurrentPage()),$scope.myCollection.setKeywords($scope.keywords);var collectionOptions;collectionOptions=angular.isDefined($scope.params.entityId)?{id:$scope.params.entityId,currentPage:$scope.paginator.getCurrentPage(),pageShow:$scope.paginator.getPageShow(),keywords:$scope.keywords}:$scope.myCollection.getOptions(),$log.debug($scope.myCollection.getOptions());var collectionListingPromise=$hibachi.getEntity($scope.myCollection.getEntityName(),collectionOptions);return collectionListingPromise.then(function(value){if(angular.isDefined($scope.params.entityId)&&($scope.newCollection.data.collectionName=value.collectionName),$scope.collection=value,$scope.collection.collectionObject=$scope.myCollection.baseEntityName,$scope.collectionInitial=angular.copy($scope.collection),$scope.paginator.setRecordsCount($scope.collection.recordsCount),$scope.paginator.setPageRecordsInfo($scope.collection),angular.isUndefined($scope.myCollection.columns)){var colConfig=angular.fromJson(value.collectionConfig);colConfig.baseEntityName=colConfig.baseEntityName.replace(new RegExp("^"+hibachiConfig.applicationKey,"i"),""),$scope.myCollection.loadJson(colConfig)}if(angular.isUndefined($scope.collectionConfig)){var tempCollectionConfig=collectionConfigService.newCollectionConfig();tempCollectionConfig.loadJson(value.collectionConfig),$scope.collectionConfig=tempCollectionConfig.getCollectionConfig()}!angular.isUndefined($scope.collectionConfig.filterGroups)&&$scope.collectionConfig.filterGroups.length||($scope.collectionConfig.filterGroups=[{filterGroup:[]}]),collectionService.setFilterCount(filterItemCounter()),$scope.loadingCollection=!1,$scope.closeSaving=!1},function(reason){}),collectionListingPromise},$scope.paginator.collection=$scope.newCollection,$scope.paginator.getCollection=$scope.getCollection;var unbindCollectionObserver=$scope.$watch("collection",function(newValue,oldValue){if(newValue!==oldValue){if(angular.isUndefined($scope.filterPropertiesList)){$scope.filterPropertiesList={};$hibachi.getFilterPropertiesByBaseEntityName($scope.collectionConfig.baseEntityAlias).then(function(value){metadataService.setPropertiesList(value,$scope.collectionConfig.baseEntityAlias),$scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias]=metadataService.getPropertiesListByBaseEntityAlias($scope.collectionConfig.baseEntityAlias),metadataService.formatPropertiesList($scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias],$scope.collectionConfig.baseEntityAlias)})}unbindCollectionObserver()}}),filterItemCounter=function(filterGroupArray){var filterItemCount=0;angular.isDefined(filterGroupArray)||(filterGroupArray=$scope.collectionConfig.filterGroups[0].filterGroup);for(var index in filterGroupArray)if(filterGroupArray[index].$$isNew||angular.isDefined(filterGroupArray[index].filterGroup)){if(!angular.isDefined(filterGroupArray[index].filterGroup))break;filterItemCount+=filterItemCounter(filterGroupArray[index].filterGroup)}else filterItemCount++;return filterItemCount};$scope.getCollection(),$scope.copyExistingCollection=function(){$scope.collection.collectionConfig=$scope.selectedExistingCollection},$scope.setSelectedExistingCollection=function(selectedExistingCollection){$scope.selectedExistingCollection=selectedExistingCollection},$scope.setSelectedFilterProperty=function(selectedFilterProperty){$scope.selectedFilterProperty=selectedFilterProperty},$scope.loadingCollection=!1;var searchPromise;$scope.searchCollection=function(){searchPromise&&$timeout.cancel(searchPromise),searchPromise=$timeout(function(){$scope.paginator.setCurrentPage(1),$scope.loadingCollection=!0},500)},$scope.filterCount=collectionService.getFilterCount,$scope.hideExport=!0,$scope.saveNewCollection=function($index){$scope.closeSaving||($scope.closeSaving=!0,!angular.isUndefined(selectionService.getSelections("collectionSelection"))&&selectionService.getSelections("collectionSelection").length>0&&($scope.collectionConfig.filterGroups[0].filterGroup=[{displayPropertyIdentifier:rbkeyService.getRBKey("entity."+$scope.myCollection.baseEntityName.toLowerCase()+"."+$scope.myCollection.collection.$$getIDName().toLowerCase()),propertyIdentifier:$scope.myCollection.baseEntityAlias+"."+$scope.myCollection.collection.$$getIDName(),comparisonOperator:"in",value:selectionService.getSelections("collectionSelection").join(),displayValue:selectionService.getSelections("collectionSelection").join(),ormtype:"string",fieldtype:"id",conditionDisplay:"In List"}]),$scope.newCollection.data.collectionConfig=$scope.collectionConfig,0!==$scope.newCollection.data.collectionConfig.baseEntityName.lastIndexOf(hibachiConfig.applicationKey,0)&&($scope.newCollection.data.collectionConfig.baseEntityName=hibachiConfig.applicationKey+$scope.newCollection.data.collectionConfig.baseEntityName),$scope.newCollection.$$save().then(function(){observerService.notify("addCollection",$scope.newCollection.data),selectionService.clearSelection("collectionSelection"),dialogService.removePageDialog($index),$scope.closeSaving=!1},function(){$scope.closeSaving=!1}))}}return CreateCollection}();exports.CreateCollection=CreateCollection},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var CollectionCreateController=function(){function CollectionCreateController($scope,collectionConfigService){var _this=this;this.$scope=$scope,this.collectionConfigService=collectionConfigService,this.$scope.entity_createcollectionCtrl={},this.$scope.entity_createcollectionCtrl.baseCollections=[],this.collection=this.collectionConfigService.newCollectionConfig("Collection"),this.collection.setDisplayProperties("collectionID,collectionName"),this.getBaseCollections("Access"),this.$scope.entity_createcollectionCtrl.collectionObjectChanged=function(){_this.getBaseCollections(_this.$scope.entity_createcollectionCtrl.selectedOption)}}return CollectionCreateController.prototype.getBaseCollections=function(baseCollectionObject){var _this=this;this.collection.clearFilters(),this.collection.addFilter("collectionObject",baseCollectionObject),this.collection.setPageShow(50),this.collection.getEntity().then(function(res){_this.$scope.entity_createcollectionCtrl.baseCollections=res.pageRecords})},CollectionCreateController}();exports.CollectionCreateController=CollectionCreateController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var AggregateFilter=function(){function AggregateFilter(){}return AggregateFilter.Factory=function($filter){return function(property){return property.filter(function(item){return(!item.fieldtype||"id"===item.fieldtype)&&!(item.ormtype&&["big_decimal","double","float","integer"].indexOf(item.ormtype)<0)})}},AggregateFilter}();exports.AggregateFilter=AggregateFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Column=function(){function Column(propertyIdentifier,title,isVisible,isDeletable,isSearchable,isExportable,persistent,ormtype,attributeID,attributeSetObject,type){void 0===isVisible&&(isVisible=!0),void 0===isDeletable&&(isDeletable=!0),void 0===isSearchable&&(isSearchable=!0),void 0===isExportable&&(isExportable=!0),this.propertyIdentifier=propertyIdentifier,this.title=title,this.isVisible=isVisible,this.isDeletable=isDeletable,this.isSearchable=isSearchable,this.isExportable=isExportable,this.persistent=persistent,this.ormtype=ormtype,this.attributeID=attributeID,this.attributeSetObject=attributeSetObject,this.type=type}return Column}();exports.Column=Column;var Filter=function(){function Filter(propertyIdentifier,value,comparisonOperator,logicalOperator,displayPropertyIdentifier,displayValue,hidden,pattern){void 0===hidden&&(hidden=!1),this.propertyIdentifier=propertyIdentifier,this.value=value,this.comparisonOperator=comparisonOperator,this.logicalOperator=logicalOperator,this.displayPropertyIdentifier=displayPropertyIdentifier,this.displayValue=displayValue,this.hidden=hidden,this.pattern=pattern}return Filter}();exports.Filter=Filter;var CollectionFilter=function(){function CollectionFilter(propertyIdentifier,displayPropertyIdentifier,displayValue,collectionID,criteria,fieldtype,readOnly){void 0===readOnly&&(readOnly=!1),this.propertyIdentifier=propertyIdentifier,this.displayPropertyIdentifier=displayPropertyIdentifier,this.displayValue=displayValue,this.collectionID=collectionID,this.criteria=criteria,this.fieldtype=fieldtype,this.readOnly=readOnly}return CollectionFilter}();exports.CollectionFilter=CollectionFilter;var Join=function(){function Join(associationName,alias){this.associationName=associationName,this.alias=alias}return Join}();exports.Join=Join;var OrderBy=function(){function OrderBy(propertyIdentifier,direction){this.propertyIdentifier=propertyIdentifier,this.direction=direction}return OrderBy}();exports.OrderBy=OrderBy;var CollectionConfig=function(){function CollectionConfig(rbkeyService,$hibachi,utilityService,observerService,baseEntityName,baseEntityAlias,columns,keywordColumns,filterGroups,keywordFilterGroups,joins,orderBy,groupBys,id,currentPage,pageShow,keywords,allRecords,dirtyRead,isDistinct){void 0===keywordColumns&&(keywordColumns=[]),void 0===filterGroups&&(filterGroups=[{filterGroup:[]}]),void 0===keywordFilterGroups&&(keywordFilterGroups=[{filterGroup:[]}]),void 0===currentPage&&(currentPage=1),void 0===pageShow&&(pageShow=10),void 0===keywords&&(keywords=""),void 0===allRecords&&(allRecords=!1),void 0===dirtyRead&&(dirtyRead=!1),void 0===isDistinct&&(isDistinct=!1);var _this=this;this.rbkeyService=rbkeyService,this.$hibachi=$hibachi,this.utilityService=utilityService,this.observerService=observerService,this.baseEntityName=baseEntityName,this.baseEntityAlias=baseEntityAlias,this.columns=columns,this.keywordColumns=keywordColumns,this.filterGroups=filterGroups,this.keywordFilterGroups=keywordFilterGroups,this.joins=joins,this.orderBy=orderBy,this.groupBys=groupBys,this.id=id,this.currentPage=currentPage,this.pageShow=pageShow,this.keywords=keywords,this.allRecords=allRecords,this.dirtyRead=dirtyRead,this.isDistinct=isDistinct,this.clearFilterGroups=function(){return _this.filterGroups=[{filterGroup:[]}],_this.keywordFilterGroups=[{filterGroup:[]}],_this},this.newCollectionConfig=function(baseEntityName,baseEntityAlias){return new CollectionConfig(_this.rbkeyService,_this.$hibachi,_this.utilityService,_this.observerService,baseEntityName,baseEntityAlias)},this.loadJson=function(jsonCollection){for(;angular.isString(jsonCollection);)jsonCollection=angular.fromJson(jsonCollection);return _this.baseEntityAlias=jsonCollection.baseEntityAlias,_this.baseEntityName=jsonCollection.baseEntityName,angular.isDefined(jsonCollection.filterGroups)&&(_this.validateFilter(jsonCollection.filterGroups),_this.filterGroups=jsonCollection.filterGroups),_this.columns=jsonCollection.columns,_this.joins=jsonCollection.joins,_this.keywords=jsonCollection.keywords,_this.orderBy=jsonCollection.orderBy,_this.groupBys=jsonCollection.groupBys,_this.pageShow=jsonCollection.pageShow,_this.allRecords=jsonCollection.allRecords,jsonCollection.dirtyRead&&(_this.dirtyRead=jsonCollection.dirtyRead),_this.isDistinct=jsonCollection.isDistinct,_this.currentPage=jsonCollection.currentPage||1,_this.pageShow=jsonCollection.pageShow||10,_this.keywords=jsonCollection.keywords,_this},this.clone=function(){return _this.newCollectionConfig(_this.baseEntityName,_this.baseEntityAlias).loadJson(JSON.parse(JSON.stringify(_this.getCollectionConfig())))},this.loadFilterGroups=function(filterGroupsConfig){return void 0===filterGroupsConfig&&(filterGroupsConfig=[{filterGroup:[]}]),_this.filterGroups=filterGroupsConfig,_this},this.loadColumns=function(columns){return _this.columns=columns,_this},this.getCollectionConfig=function(validate){return void 0===validate&&(validate=!0),validate&&_this.validateFilter(_this.filterGroups),{baseEntityAlias:_this.baseEntityAlias,baseEntityName:_this.baseEntityName,columns:_this.columns,keywordColumns:_this.keywordColumns,filterGroups:_this.filterGroups,joins:_this.joins,groupBys:_this.groupBys,currentPage:_this.currentPage,pageShow:_this.pageShow,keywords:_this.keywords,defaultColumns:!_this.columns||!_this.columns.length,allRecords:_this.allRecords,dirtyRead:_this.dirtyRead,isDistinct:_this.isDistinct,orderBy:_this.orderBy}},this.getEntityName=function(){return _this.baseEntityName.charAt(0).toUpperCase()+_this.baseEntityName.slice(1)},this.getOptions=function(){_this.validateFilter(_this.filterGroups);var columns=_this.columns;if(_this.keywords&&_this.keywords.length&&_this.keywordFilterGroups[0].filterGroup.length>0)var filters=_this.keywordFilterGroups;else var filters=_this.filterGroups;var options={columnsConfig:angular.toJson(columns),filterGroupsConfig:angular.toJson(filters),joinsConfig:angular.toJson(_this.joins),orderByConfig:angular.toJson(_this.orderBy),groupBysConfig:angular.toJson(_this.groupBys),currentPage:_this.currentPage,pageShow:_this.pageShow,keywords:_this.keywords,defaultColumns:!_this.columns||!_this.columns.length,allRecords:_this.allRecords,dirtyRead:_this.dirtyRead,isDistinct:_this.isDistinct};return angular.isDefined(_this.id)&&(options.id=_this.id),options},this.debug=function(){return _this},this.formatPropertyIdentifier=function(propertyIdentifier,addJoin){void 0===addJoin&&(addJoin=!1),0===propertyIdentifier.lastIndexOf(_this.baseEntityAlias,0)&&(propertyIdentifier=propertyIdentifier.slice(_this.baseEntityAlias.length+1));var _propertyIdentifier=_this.baseEntityAlias;return _propertyIdentifier+=!0===addJoin?_this.processJoin(propertyIdentifier):"."+propertyIdentifier},this.processJoin=function(propertyIdentifier){for(var _propertyIdentifier="",propertyIdentifierParts=propertyIdentifier.split("."),current_collection=_this.collection,i=0;i<propertyIdentifierParts.length;i++)angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]])&&"cfc"in current_collection.metaData[propertyIdentifierParts[i]]?(current_collection=_this.$hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc),_propertyIdentifier+="_"+propertyIdentifierParts[i],_this.addJoin(new Join(_propertyIdentifier.replace(/_([^_]+)$/,".$1").substring(1),_this.baseEntityAlias+_propertyIdentifier))):_propertyIdentifier+="."+propertyIdentifierParts[i];return _propertyIdentifier},this.addJoin=function(join){_this.joins||(_this.joins=[]);var joinFound=!1;return angular.forEach(_this.joins,function(configJoin){configJoin.alias===join.alias&&(joinFound=!0)}),joinFound||_this.joins.push(join),_this},this.addAlias=function(propertyIdentifier){var parts=propertyIdentifier.split(".");return parts.length>1&&parts[0]!==_this.baseEntityAlias?_this.baseEntityAlias+"."+propertyIdentifier:propertyIdentifier},this.addColumn=function(column,title,options){if(void 0===title&&(title=""),void 0===options&&(options={}),!_this.columns||null!=options.aggregate||-1===_this.utilityService.ArrayFindByPropertyValue(_this.columns,"propertyIdentifier",column)){var persistent,isVisible=!0,isDeletable=!0,isSearchable=!0,isExportable=!0,type="none",ormtype="string",lastProperty=column.split(".").pop(),isKeywordColumn=!0,isOnlyKeywordColumn=!1,lastEntity=_this.$hibachi.getEntityExample(_this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName,column));if(angular.isUndefined(lastEntity))throw"You have passed an incorrect entity name to a collection config";angular.isUndefined(_this.columns)&&(_this.columns=[]),angular.isDefined(options.isVisible)&&(isVisible=options.isVisible),angular.isUndefined(options.isVisible)&&"ID"===column.substring(column.length-2)&&(isVisible=!1),angular.isDefined(options.isDeletable)&&(isDeletable=options.isDeletable),angular.isDefined(options.isSearchable)&&(isSearchable=options.isSearchable),angular.isDefined(options.isExportable)&&(isExportable=options.isExportable),angular.isUndefined(options.isExportable)&&!isVisible&&(isExportable=!1),angular.isDefined(options.ormtype)?ormtype=options.ormtype:lastEntity.metaData[lastProperty]&&lastEntity.metaData[lastProperty].ormtype&&(ormtype=lastEntity.metaData[lastProperty].ormtype),angular.isDefined(options.type)&&"none"!=options.type?type=options.type:lastEntity.metaData[lastProperty]&&lastEntity.metaData[lastProperty].hb_formattype&&(type=lastEntity.metaData[lastProperty].hb_formattype),angular.isDefined(options.isKeywordColumn)&&(isKeywordColumn=options.isKeywordColumn),angular.isDefined(options.isOnlyKeywordColumn)&&(isOnlyKeywordColumn=options.isOnlyKeywordColumn),angular.isDefined(lastEntity.metaData[lastProperty])&&(persistent=lastEntity.metaData[lastProperty].persistent);var columnObject=new Column(column,title,isVisible,isDeletable,isSearchable,isExportable,persistent,ormtype,options.attributeID,options.attributeSetObject,type);options.aggregate&&(columnObject.aggregate=options.aggregate,columnObject.aggregateAlias=title);for(var key in options)columnObject[key]||(columnObject[key]=options[key]);isOnlyKeywordColumn||_this.columns.push(columnObject),isKeywordColumn&&_this.keywordColumns.push(columnObject)}return _this},this.setDisplayProperties=function(propertyIdentifier,title,options){return void 0===title&&(title=""),void 0===options&&(options={}),_this.addDisplayProperty(propertyIdentifier,title,options),_this},this.addDisplayAggregate=function(propertyIdentifier,aggregateFunction,aggregateAlias,options){angular.isUndefined(aggregateAlias)&&(aggregateAlias=propertyIdentifier.replace(/\./g,"_")+aggregateFunction);var column={propertyIdentifier:_this.formatPropertyIdentifier(propertyIdentifier,!0),title:_this.rbkeyService.getRBKey("entity."+_this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName,propertyIdentifier)+"."+_this.utilityService.listLast(propertyIdentifier)),aggregate:{aggregateFunction:aggregateFunction,aggregateAlias:aggregateAlias}};return angular.extend(column,options),_this.addColumn(column.propertyIdentifier,void 0,column),_this},this.addGroupBy=function(groupByAlias){return _this.groupBys||(_this.groupBys=""),_this.groupBys=_this.utilityService.listAppendUnique(_this.groupBys,groupByAlias),_this},this.addDisplayProperty=function(propertyIdentifier,title,options){void 0===title&&(title=""),void 0===options&&(options={});var _DividedColumns=propertyIdentifier.trim().split(","),_DividedTitles=title.trim().split(","),join=propertyIdentifier.split(".").length>1;return _DividedColumns.forEach(function(column,index){column=column.trim(),title=angular.isDefined(_DividedTitles[index])&&""!=_DividedTitles[index].trim()?_DividedTitles[index].trim():_this.rbkeyService.getRBKey("entity."+_this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName,column)+"."+_this.utilityService.listLast(column,".")),_this.addColumn(_this.formatPropertyIdentifier(column,join),title,options)}),_this},this.addFilter=function(propertyIdentifier,value,comparisonOperator,logicalOperator,hidden,isKeywordFilter,isOnlyKeywordFilter){void 0===comparisonOperator&&(comparisonOperator="="),void 0===hidden&&(hidden=!1),void 0===isKeywordFilter&&(isKeywordFilter=!0),void 0===isOnlyKeywordFilter&&(isOnlyKeywordFilter=!1),_this.filterGroups[0].filterGroup.length||(logicalOperator=void 0),propertyIdentifier.split(".").length>1&&_this.processJoin(propertyIdentifier);var filter=_this.createFilter(propertyIdentifier,value,comparisonOperator,logicalOperator,hidden);return isOnlyKeywordFilter||_this.filterGroups[0].filterGroup.push(filter),isKeywordFilter&&_this.keywordFilterGroups[0].filterGroup.push(filter),_this.notify("collectionConfigUpdated",{collectionConfig:_this}),_this},this.addLikeFilter=function(propertyIdentifier,value,pattern,logicalOperator,displayPropertyIdentifier,hidden){void 0===pattern&&(pattern="%w%"),void 0===hidden&&(hidden=!1),_this.filterGroups||(_this.filterGroups=[{filterGroup:[]}]),_this.filterGroups[0].filterGroup.length&&!logicalOperator&&(logicalOperator="AND");var join=propertyIdentifier.split(".").length>1;angular.isUndefined(displayPropertyIdentifier)&&(displayPropertyIdentifier=_this.rbkeyService.getRBKey("entity."+_this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName,propertyIdentifier)+"."+_this.utilityService.listLast(propertyIdentifier)));var filter=new Filter(_this.formatPropertyIdentifier(propertyIdentifier,join),value,"like",logicalOperator,displayPropertyIdentifier,value,hidden,pattern);return _this.filterGroups[0].filterGroup.push(filter),_this.notify("collectionConfigUpdated",{collectionConfig:_this}),_this},this.createFilter=function(propertyIdentifier,value,comparisonOperator,logicalOperator,hidden){void 0===comparisonOperator&&(comparisonOperator="="),void 0===hidden&&(hidden=!1),_this.filterGroups||(_this.filterGroups=[{filterGroup:[]}]),_this.filterGroups[0].filterGroup.length&&!logicalOperator&&(logicalOperator="AND");var join=propertyIdentifier.split(".").length>1;return new Filter(_this.formatPropertyIdentifier(propertyIdentifier,join),value,comparisonOperator,logicalOperator,propertyIdentifier.split(".").pop(),value,hidden)},this.addFilterGroup=function(filterGroup){for(var group={filterGroup:[],logicalOperator:"AND"},i=0;i<filterGroup.length;i++){var filter=_this.createFilter(filterGroup[i].propertyIdentifier,filterGroup[i].comparisonValue,filterGroup[i].comparisonOperator,filterGroup[i].logicalOperator,filterGroup[i].hidden);group.filterGroup.push(filter)}return _this.filterGroups[0].filterGroup.push(group),_this.notify("collectionConfigUpdated",{collectionConfig:_this}),_this},this.removeFilter=function(propertyIdentifier,value,comparisonOperator){return void 0===comparisonOperator&&(comparisonOperator="="),_this.removeFilterHelper(_this.filterGroups,propertyIdentifier,value,comparisonOperator),_this.notify("collectionConfigUpdated",{collectionConfig:_this}),_this},this.removeFilterByDisplayPropertyIdentifier=function(displayPropertyIdentifier){_this.removeFromFilterGroupsByPropertyIdentifier(_this.filterGroups,displayPropertyIdentifier),_this.removeFromFilterGroupsByPropertyIdentifier(_this.keywordFilterGroups,displayPropertyIdentifier)},this.removeFromFilterGroupsByPropertyIdentifier=function(filterGroups,displayPropertyIdentifier){for(var j=0;j<filterGroups.length;j++)for(var filterGroup=filterGroups[j].filterGroup,i=0;i<filterGroup.length;i++){var filter=filterGroup[i];filter.displayPropertyIdentifier==displayPropertyIdentifier&&(filterGroup.splice(i,1),i--)}},this.removeFilterHelper=function(filter,propertyIdentifier,value,comparisonOperator,currentGroup){angular.isUndefined(currentGroup)&&(currentGroup=filter),angular.isArray(filter)?angular.forEach(filter,function(key){_this.removeFilterHelper(key,propertyIdentifier,value,comparisonOperator,filter)}):angular.isArray(filter.filterGroup)?_this.removeFilterHelper(filter.filterGroup,propertyIdentifier,value,comparisonOperator,filter.filterGroup):filter.propertyIdentifier==propertyIdentifier&&filter.value==value&&filter.comparisonOperator==comparisonOperator&&currentGroup.splice(currentGroup.indexOf(filter),1)},this.addCollectionFilter=function(propertyIdentifier,displayPropertyIdentifier,displayValue,collectionID,criteria,fieldtype,readOnly){return void 0===criteria&&(criteria="One"),void 0===readOnly&&(readOnly=!1),_this.filterGroups[0].filterGroup.push(new CollectionFilter(_this.formatPropertyIdentifier(propertyIdentifier),displayPropertyIdentifier,displayValue,collectionID,criteria,fieldtype,readOnly)),_this.notify("collectionConfigUpdated",{collectionConfig:_this}),_this},this.setOrderBy=function(orderByList){var orderBys=orderByList.split(",");return angular.forEach(orderBys,function(orderBy){_this.addOrderBy(orderBy)}),_this},this.clearOrderBy=function(){_this.orderBy=[]},this.addOrderBy=function(orderByString,formatPropertyIdentifier){void 0===formatPropertyIdentifier&&(formatPropertyIdentifier=!0),_this.orderBy||(_this.orderBy=[]);var propertyIdentifier=_this.utilityService.listFirst(orderByString,"|");formatPropertyIdentifier&&(propertyIdentifier=_this.formatPropertyIdentifier(propertyIdentifier));var direction=_this.utilityService.listLast(orderByString,"|"),orderBy={propertyIdentifier:propertyIdentifier,direction:direction};_this.orderBy.push(orderBy)},this.toggleOrderBy=function(formattedPropertyIdentifier,singleColumn){void 0===singleColumn&&(singleColumn=!1),_this.orderBy||(_this.orderBy=[]);for(var i=_this.orderBy.length-1;i>=0;i--)if(_this.orderBy[i].propertyIdentifier==formattedPropertyIdentifier){!0,"DESC"==_this.orderBy[i].direction.toUpperCase()?_this.orderBy[i].direction="ASC":"ASC"==_this.orderBy[i].direction.toUpperCase()&&_this.orderBy.splice(i,1);break}var direction="desc";if(singleColumn){_this.orderBy=[];for(var i=0;i<_this.columns.length;i++)_this.columns[i].sorting||(_this.columns[i].sorting={}),angular.isUndefined(_this.columns[i].sorting.active)&&(_this.columns[i].sorting.active=!1),_this.columns[i].propertyIdentifier==formattedPropertyIdentifier?(_this.columns[i].sorting.active=!0,_this.columns[i].sorting.priority=1,_this.columns[i].sorting.sortOrder&&"desc"!==_this.columns[i].sorting.sortOrder?(_this.columns[i].sorting.sortOrder="desc",direction="desc"):(_this.columns[i].sorting.sortOrder="asc",direction="asc")):_this.columns[i].sorting&&_this.columns[i].sorting.active&&(_this.columns[i].sorting.active=!1,_this.columns[i].sorting.sortOrder="asc")}_this.addOrderBy(formattedPropertyIdentifier+"|"+direction,!1),_this.notify("swPaginationAction",{type:"setCurrentPage",payload:1})},this.removeOrderBy=function(formattedPropertyIdentifier){return angular.forEach(_this.orderBy,function(orderBy,index){if(orderBy.propertyIdentifier==formattedPropertyIdentifier)return _this.orderBy.splice(index,1),!0}),!1},this.setCurrentPage=function(pageNumber){return _this.currentPage=pageNumber,_this},this.getCurrentPage=function(){return _this.currentPage},this.setPageShow=function(NumberOfPages){return _this.pageShow=NumberOfPages,_this},this.getPageShow=function(){return _this.pageShow},this.setAllRecords=function(allFlag){return void 0===allFlag&&(allFlag=!1),_this.allRecords=allFlag,_this},this.setDistinct=function(flag){return void 0===flag&&(flag=!0),_this.isDistinct=flag,_this},this.setDirtyRead=function(flag){return void 0===flag&&(flag=!1),_this.dirtyRead=flag,_this},this.setKeywords=function(keyword){return _this.keywords=keyword,_this},this.setId=function(id){return _this.id=id,_this},this.setEventID=function(eventID){return _this.eventID=eventID,_this},this.hasFilters=function(){return _this.filterGroups.length&&_this.filterGroups[0].filterGroup.length},this.hasColumns=function(){return null!=_this.columns&&_this.columns.length>0},this.clearFilters=function(){return _this.filterGroups=[{filterGroup:[]}],_this},this.getEntity=function(id){return angular.isDefined(id)&&_this.setId(id),_this.$hibachi.getEntity(_this.baseEntityName,_this.getOptions())},this.validateFilter=function(filter,currentGroup){if(angular.isUndefined(currentGroup)&&(currentGroup=filter),angular.isArray(filter))angular.forEach(filter,function(key){_this.validateFilter(key,filter)});else if(angular.isArray(filter.filterGroup))_this.validateFilter(filter.filterGroup,filter.filterGroup);else if(!(filter.comparisonOperator&&filter.comparisonOperator.length||filter.propertyIdentifier&&filter.propertyIdentifier.length)){var index=currentGroup.indexOf(filter);index>-1&&(_this.notify("filterItemAction",{action:"remove",filterItemIndex:index}),currentGroup.splice(index,1))}},this.getColumns=function(){return _this.columns||(_this.columns=[]),_this.columns},this.setColumns=function(columns){return _this.columns=columns,_this},this.$hibachi=$hibachi,this.rbkeyService=rbkeyService,angular.isDefined(this.baseEntityName)&&(this.collection=this.$hibachi.getEntityExample(this.baseEntityName),angular.isUndefined(this.baseEntityAlias)&&(this.baseEntityAlias="_"+this.baseEntityName.toLowerCase()))}return Object.defineProperty(CollectionConfig.prototype,"collectionConfigString",{get:function(){return angular.toJson(this.getCollectionConfig(!1))},enumerable:!0,configurable:!0}),CollectionConfig.prototype.notify=function(name,data){angular.isDefined(this.eventID)?this.observerService.notifyById(name,this.eventID,data):this.observerService.notify(name,data)},CollectionConfig}();exports.CollectionConfig=CollectionConfig},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),CollectionService=function(_super){function CollectionService($injector,$hibachi,utilityService,$filter,$log){var _this=_super.call(this,$injector,$hibachi,utilityService,"Collection")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this.$filter=$filter,_this.$log=$log,_this.get=function(){return _this._pageDialogs||[]},_this.setFilterCount=function(count){_this.$log.debug("incrementFilterCount"),_this._filterCount=count},_this.getFilterCount=function(){return _this._filterCount},_this.getColumns=function(){return _this._collection.collectionConfig.columns},_this.getFilterPropertiesList=function(){return _this._filterPropertiesList},_this.getFilterPropertiesListByBaseEntityAlias=function(baseEntityAlias){return _this._filterPropertiesList[baseEntityAlias]},_this.setFilterPropertiesList=function(value,key){angular.isUndefined(_this._filterPropertiesList[key])&&(_this._filterPropertiesList[key]=value)},_this.stringifyJSON=function(jsonObject){return angular.toJson(jsonObject)},_this.removeFilterItem=function(filterItem,filterGroup){filterGroup.pop(filterGroup.indexOf(filterItem))},_this.selectFilterItem=function(filterItem){if(filterItem.$$isClosed){for(var i in filterItem.$$siblingItems)filterItem.$$siblingItems[i].$$isClosed=!0,filterItem.$$siblingItems[i].$$disabled=!0;filterItem.$$isClosed=!1,filterItem.$$disabled=!1,filterItem.setItemInUse(!0)}else{for(var i in filterItem.$$siblingItems)filterItem.$$siblingItems[i].$$disabled=!1;filterItem.$$isClosed=!0,filterItem.setItemInUse(!1)}},_this.selectFilterGroupItem=function(filterGroupItem){if(filterGroupItem.$$isClosed){for(var i in filterGroupItem.$$siblingItems)filterGroupItem.$$siblingItems[i].$$disabled=!0;filterGroupItem.$$isClosed=!1,filterGroupItem.$$disabled=!1}else{for(var i in filterGroupItem.$$siblingItems)filterGroupItem.$$siblingItems[i].$$disabled=!1;filterGroupItem.$$isClosed=!0}filterGroupItem.setItemInUse(!filterGroupItem.$$isClosed)},_this.newFilterItem=function(filterItemGroup,setItemInUse,prepareForFilterGroup){angular.isUndefined(prepareForFilterGroup)&&(prepareForFilterGroup=!1);var filterItem={displayPropertyIdentifier:"",propertyIdentifier:"",comparisonOperator:"",value:"",$$disabled:!1,$$isClosed:!0,$$isNew:!0,$$siblingItems:filterItemGroup,setItemInUse:setItemInUse};return 0!==filterItemGroup.length&&(filterItem.logicalOperator="AND"),!0===prepareForFilterGroup&&(filterItem.$$prepareForFilterGroup=!0),filterItemGroup.push(filterItem),_this.selectFilterItem(filterItem),filterItemGroup.length-1},_this.newFilterGroupItem=function(filterItemGroup,setItemInUse){var filterGroupItem={filterGroup:[],$$disabled:"false",$$isClosed:"true",$$siblingItems:filterItemGroup,$$isNew:"true",setItemInUse:setItemInUse};0!==filterItemGroup.length&&(filterGroupItem.logicalOperator="AND"),filterItemGroup.push(filterGroupItem),_this.selectFilterGroupItem(filterGroupItem),_this.newFilterItem(filterGroupItem.filterGroup,setItemInUse,void 0)},_this.transplantFilterItemIntoFilterGroup=function(filterGroup,filterItem){var filterGroupItem={filterGroup:[],$$disabled:"false",$$isClosed:"true",$$isNew:"true"};angular.isDefined(filterItem.logicalOperator)&&(filterGroupItem.logicalOperator=filterItem.logicalOperator,delete filterItem.logicalOperator),filterGroupItem.setItemInUse=filterItem.setItemInUse,filterGroupItem.$$siblingItems=filterItem.$$siblingItems,filterItem.$$siblingItems=[],filterGroup.pop(filterGroup.indexOf(filterItem)),filterItem.$$prepareForFilterGroup=!1,filterGroupItem.filterGroup.push(filterItem),filterGroup.push(filterGroupItem)},_this.formatFilterPropertiesList=function(filterPropertiesList,propertyIdentifier){_this.$log.debug("format Filter Properties List arguments 2"),_this.$log.debug(filterPropertiesList),_this.$log.debug(propertyIdentifier);var simpleGroup={$$group:"simple",displayPropertyIdentifier:"-----------------"};filterPropertiesList.data.push(simpleGroup);var drillDownGroup={$$group:"drilldown",displayPropertyIdentifier:"-----------------"};filterPropertiesList.data.push(drillDownGroup);var compareCollections={$$group:"compareCollections",displayPropertyIdentifier:"-----------------"};filterPropertiesList.data.push(compareCollections);var attributeCollections={$$group:"attribute",displayPropertyIdentifier:"-----------------"};filterPropertiesList.data.push(attributeCollections);for(var i in filterPropertiesList.data)angular.isDefined(filterPropertiesList.data[i].ormtype)&&(angular.isDefined(filterPropertiesList.data[i].attributeID)?filterPropertiesList.data[i].$$group="attribute":filterPropertiesList.data[i].$$group="simple"),angular.isDefined(filterPropertiesList.data[i].fieldtype)&&("id"===filterPropertiesList.data[i].fieldtype&&(filterPropertiesList.data[i].$$group="simple"),"many-to-one"===filterPropertiesList.data[i].fieldtype&&(filterPropertiesList.data[i].$$group="drilldown"),"many-to-many"!==filterPropertiesList.data[i].fieldtype&&"one-to-many"!==filterPropertiesList.data[i].fieldtype||(filterPropertiesList.data[i].$$group="compareCollections")),filterPropertiesList.data[i].propertyIdentifier=propertyIdentifier+"."+filterPropertiesList.data[i].name;filterPropertiesList.data=_this._orderBy(filterPropertiesList.data,["-$$group","propertyIdentifier"],!1)},_this.orderBy=function(propertiesList,predicate,reverse){return _this._orderBy(propertiesList,predicate,reverse)},_this.$filter=$filter,_this.$log=$log,_this._collection=null,_this._collectionConfig=null,_this._filterPropertiesList={},_this._filterCount=0,_this._orderBy=$filter("orderBy"),_this}return __extends(CollectionService,_super),CollectionService}(baseentityservice_1.BaseEntityService);exports.CollectionService=CollectionService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWActionCallerController=function(){function SWActionCallerController($scope,$element,$templateRequest,$compile,$timeout,corePartialsPath,utilityService,observerService,$hibachi,rbkeyService,hibachiPathBuilder){var _this=this;this.$scope=$scope,this.$element=$element,this.$templateRequest=$templateRequest,this.$compile=$compile,this.$timeout=$timeout,this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.observerService=observerService,this.$hibachi=$hibachi,this.rbkeyService=rbkeyService,this.$onInit=function(){if(angular.isUndefined(_this.isAngularRoute)&&(_this.isAngularRoute=_this.utilityService.isAngularRoute()),_this.isAngularRoute?_this.actionUrl="#!/entity/"+_this.action+"/"+_this.queryString.split("=")[1]:_this.actionUrl=_this.$hibachi.buildUrl(_this.action,_this.queryString),_this.type=_this.type||"link",angular.isDefined(_this.titleRbKey)&&(_this.title=_this.rbkeyService.getRBKey(_this.titleRbKey)),angular.isUndefined(_this.text)&&(_this.text=_this.title),"button"==_this.type)var unbindWatcher=_this.$scope.$watch(function(){return _this.formController},function(newValue,oldValue){void 0!==newValue&&(_this.formController=newValue),unbindWatcher()});if(_this.eventListeners)for(var key in _this.eventListeners)_this.observerService.attach(_this.eventListeners[key],key)},this.submit=function(){_this.$timeout(function(){_this.form?_this.form.$valid&&_this.formController.submit(_this.action):_this.$scope.$root.slatwall.doAction(_this.action)})},this.getAction=function(){return _this.action||""},this.getActionItem=function(){return _this.utilityService.listLast(_this.getAction(),".")},this.getActionItemEntityName=function(){var firstFourLetters=_this.utilityService.left(_this.actionItem,4),firstSixLetters=_this.utilityService.left(_this.actionItem,6),minus4letters=_this.utilityService.right(_this.actionItem,4),minus6letters=_this.utilityService.right(_this.actionItem,6),actionItemEntityName="";return"list"===firstFourLetters&&_this.actionItem.length>4?actionItemEntityName=minus4letters:"edit"===firstFourLetters&&_this.actionItem.length>4?actionItemEntityName=minus4letters:"save"===firstFourLetters&&_this.actionItem.length>4?actionItemEntityName=minus4letters:"create"===firstSixLetters&&_this.actionItem.length>6?actionItemEntityName=minus6letters:"detail"===firstSixLetters&&_this.actionItem.length>6?actionItemEntityName=minus6letters:"delete"===firstSixLetters&&_this.actionItem.length>6&&(actionItemEntityName=minus6letters),actionItemEntityName},this.getTitle=function(){return!angular.isUndefined(_this.title)&&_this.title.length||(_this.title=_this.getText()),_this.title},this.getTextByRBKeyByAction=function(actionItemType,plural){void 0===plural&&(plural=!1);var navRBKey=_this.rbkeyService.getRBKey("admin.define."+actionItemType+"_nav"),entityRBKey="",replaceKey="";return plural?(entityRBKey=_this.rbkeyService.getRBKey("entity."+_this.actionItemEntityName+"_plural"),replaceKey="${itemEntityNamePlural}"):(entityRBKey=_this.rbkeyService.getRBKey("entity."+_this.actionItemEntityName),replaceKey="${itemEntityName}"),_this.utilityService.replaceAll(navRBKey,replaceKey,entityRBKey)},this.getText=function(){if(angular.isUndefined(_this.text)||angular.isDefined(_this.text)&&!_this.text.length){_this.text=_this.rbkeyService.getRBKey(_this.utilityService.replaceAll(_this.getAction(),":",".")+"_nav");if("_missing"===_this.utilityService.right(_this.text,8)){var firstFourLetters=_this.utilityService.left(_this.actionItem,4),firstSixLetters=_this.utilityService.left(_this.actionItem,6);_this.utilityService.right(_this.actionItem,4),_this.utilityService.right(_this.actionItem,6);"list"===firstFourLetters&&_this.actionItem.length>4?_this.text=_this.getTextByRBKeyByAction("list",!0):"edit"===firstFourLetters&&_this.actionItem.length>4?_this.text=_this.getTextByRBKeyByAction("edit",!1):"save"===firstFourLetters&&_this.actionItem.length>4?_this.text=_this.getTextByRBKeyByAction("save",!1):"create"===firstSixLetters&&_this.actionItem.length>6?_this.text=_this.getTextByRBKeyByAction("create",!1):"detail"===firstSixLetters&&_this.actionItem.length>6?_this.text=_this.getTextByRBKeyByAction("detail",!1):"delete"===firstSixLetters&&_this.actionItem.length>6&&(_this.text=_this.getTextByRBKeyByAction("delete",!1))}_this.utilityService.right(_this.text,8)&&(_this.text=_this.rbkeyService.getRBKey(_this.utilityService.replaceAll(_this.getAction(),":",".")))}return(!_this.title||_this.title&&!_this.title.length)&&(_this.title=_this.text),_this.text},this.getDisabled=function(){return!(!angular.isDefined(_this.disabled)||!_this.disabled)},this.getDisabledText=function(){if(_this.getDisabled()){if(angular.isUndefined(_this.disabledtext)||!_this.disabledtext.length){var disabledrbkey=_this.utilityService.replaceAll(_this.action,":",".")+"_disabled";_this.disabledtext=_this.rbkeyService.getRBKey(disabledrbkey)}return _this.class+=" btn-disabled",_this.confirm=!1,_this.disabledtext}return""},this.getConfirm=function(){return!(!angular.isDefined(_this.confirm)||!_this.confirm)},this.getConfirmText=function(){if(_this.getConfirm()){if(angular.isUndefined(_this.confirmtext)&&_this.confirmtext.length){var confirmrbkey=_this.utilityService.replaceAll(_this.action,":",".")+"_confirm";_this.confirmtext=_this.rbkeyService.getRBKey(confirmrbkey)}return _this.class+=" alert-confirm",_this.confirm}return""},this.$scope=$scope,this.$element=$element,this.$timeout=$timeout,this.$templateRequest=$templateRequest,this.$compile=$compile,this.rbkeyService=rbkeyService,this.$hibachi=$hibachi,this.utilityService=utilityService,this.hibachiPathBuilder=hibachiPathBuilder,this.$templateRequest(this.hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"actioncaller.html").then(function(html){var template=angular.element(html);_this.$element.parent().append(template),$compile(template)($scope)})}return SWActionCallerController}();exports.SWActionCallerController=SWActionCallerController;var SWActionCaller=function(){function SWActionCaller(partialsPath,utiltiyService,$hibachi){this.partialsPath=partialsPath,this.utiltiyService=utiltiyService,this.$hibachi=$hibachi,this.restrict="EA",this.scope={},this.bindToController={action:"@",text:"@",type:"@",queryString:"@",title:"@?",titleRbKey:"@?",class:"@",icon:"@",iconOnly:"=",name:"@",confirm:"=",confirmtext:"@",disabled:"=",disabledtext:"@",modal:"=",modalFullWidth:"=",id:"@",isAngularRoute:"=?",eventListeners:"=?"},this.require={formController:"^?swForm",form:"^?form"},this.controller=SWActionCallerController,this.controllerAs="swActionCaller",this.link=function(scope,element,attrs){angular.isDefined(scope.swActionCaller.formController)&&(scope.formController=scope.swActionCaller.formController)}}return SWActionCaller.Factory=function(){var directive=function(partialsPath,utiltiyService,$hibachi){return new SWActionCaller(partialsPath,utiltiyService,$hibachi)};return directive.$inject=["partialsPath","utilityService","$hibachi"],directive},SWActionCaller}();exports.SWActionCaller=SWActionCaller},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWActionCallerDropdownController=function(){function SWActionCallerDropdownController(){this.title=this.title||"",this.icon=this.icon||"plus",this.type=this.type||"button",this.dropdownClass=this.dropdownClass||"",this.dropdownId=this.dropdownId||"",this.buttonClass=this.buttonClass||"btn-primary"}return SWActionCallerDropdownController}();exports.SWActionCallerDropdownController=SWActionCallerDropdownController;var SWActionCallerDropdown=function(){function SWActionCallerDropdown(corePartialsPath,hibachiPathBuilder){this.corePartialsPath=corePartialsPath,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={title:"@",icon:"@",type:"=",dropdownClass:"@",dropdownId:"@",buttonClass:"@"},this.controller=SWActionCallerDropdownController,this.controllerAs="swActionCallerDropdown",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"actioncallerdropdown.html"}return SWActionCallerDropdown.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWActionCallerDropdown(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWActionCallerDropdown}();exports.SWActionCallerDropdown=SWActionCallerDropdown},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWClickOutside=function(){function SWClickOutside($document,$timeout,utilityService){var _this=this;this.$document=$document,this.$timeout=$timeout,this.utilityService=utilityService,this.restrict="A",this.scope={swClickOutside:"&"},this.link=function(scope,elem,attr){_this.$document.on("click",function(e){e&&e.target&&(angular.element(elem).hasClass("ng-hide")||e.target!==elem&&elem&&elem[0]&&!_this.utilityService.isDescendantElement(elem[0],e.target)&&_this.$timeout(function(){scope.swClickOutside()}))})},this.$document=$document,this.$timeout=$timeout,this.utilityService=utilityService}return SWClickOutside.Factory=function(){var directive=function($document,$timeout,utilityService){return new SWClickOutside($document,$timeout,utilityService)};return directive.$inject=["$document","$timeout","utilityService"],directive},SWClickOutside}();exports.SWClickOutside=SWClickOutside},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollectionColumnController=function(){function SWCollectionColumnController(){}return SWCollectionColumnController}();exports.SWCollectionColumnController=SWCollectionColumnController;var SWCollectionColumn=function(){function SWCollectionColumn(scopeService,utilityService){var _this=this;this.scopeService=scopeService,this.utilityService=utilityService,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",fallbackPropertyIdentifiers:"@?",isVisible:"=?",isSearchable:"=?",isDeletable:"=?",isExportable:"=?",isKeywordColumn:"=?",isOnlyKeywordColumn:"=?",tdclass:"@?",hidden:"=?"},this.controller=SWCollectionColumn,this.controllerAs="swCollectionColumn",this.template="",this.link=function(scope,element,attrs){angular.isUndefined(scope.swCollectionColumn.isKeywordColumn)&&(scope.swCollectionColumn.isKeywordColumn=!1),angular.isUndefined(scope.swCollectionColumn.isOnlyKeywordColumn)&&(scope.swCollectionColumn.isOnlyKeywordColumn=scope.swCollectionColumn.isKeywordColumn),angular.isUndefined(scope.swCollectionColumn.isVisible)&&(scope.swCollectionColumn.isVisible=!0),angular.isUndefined(scope.swCollectionColumn.isSearchable)&&(scope.swCollectionColumn.isSearchable=!1),angular.isUndefined(scope.swCollectionColumn.isDeletable)&&(scope.swCollectionColumn.isDeletable=!1),angular.isUndefined(scope.swCollectionColumn.isExportable)&&(scope.swCollectionColumn.isExportable=!0);var column={propertyIdentifier:scope.swCollectionColumn.propertyIdentifier,fallbackPropertyIdentifiers:scope.swCollectionColumn.fallbackPropertyIdentifiers,isVisible:scope.swCollectionColumn.isVisible,isSearchable:scope.swCollectionColumn.isSearchable,isDeletable:scope.swCollectionColumn.isDeletable,isExportable:scope.swCollectionColumn.isExportable,hidden:scope.swCollectionColumn.hidden,tdclass:scope.swCollectionColumn.tdclass,isKeywordColumn:scope.swCollectionColumn.isKeywordColumn,isOnlyKeywordColumn:scope.swCollectionColumn.isOnlyKeywordColumn},currentScope=_this.scopeService.getRootParentScope(scope,"swCollectionConfig");if(!angular.isDefined(currentScope.swCollectionConfig))throw"Could not find swCollectionConfig in the parent scope from swcollectioncolumn";currentScope.swCollectionConfig.columns.push(column),currentScope.swCollectionConfig.columnsDeferred.resolve()}}return SWCollectionColumn.Factory=function(){var directive=function(scopeService,utilityService){return new SWCollectionColumn(scopeService,utilityService)};return directive.$inject=["scopeService","utilityService"],directive},SWCollectionColumn}();exports.SWCollectionColumn=SWCollectionColumn},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollectionConfigController=function(){function SWCollectionConfigController($transclude,$q,collectionConfigService){this.$transclude=$transclude,this.$q=$q,this.collectionConfigService=collectionConfigService,this.filters=[],this.columns=[],this.orderBys=[],this.keywordColumns=[],this.columnsDeferred=this.$q.defer(),this.columnsPromise=this.columnsDeferred.promise,this.filtersDeferred=this.$q.defer(),this.filtersPromise=this.filtersDeferred.promise,this.orderBysDeferred=this.$q.defer(),this.orderBysPromise=this.columnsDeferred.promise}return SWCollectionConfigController}();exports.SWCollectionConfigController=SWCollectionConfigController;var SWCollectionConfig=function(){function SWCollectionConfig(collectionConfigService,listingService,scopeService,$q){var _this=this;this.collectionConfigService=collectionConfigService,this.listingService=listingService,this.scopeService=scopeService,this.$q=$q,this.restrict="EA",this.scope=!0,this.transclude={columns:"?swCollectionColumns",filters:"?swCollectionFilters",orderBys:"?swCollectionOrderBys"},this.bindToController={allRecords:"=?",collectionConfigProperty:"@?",distinct:"=?",entityName:"@",filterFlag:"=?",inListingDisplay:"=?",multiCollectionConfigProperty:"@?",pageShow:"@?",parentDirectiveControllerAsName:"@?",parentDeferredProperty:"@?"},this.controller=SWCollectionConfigController,this.controllerAs="swCollectionConfig",this.template=' \n        <div ng-transclude="columns"></div>\n        <div ng-transclude="filters"></div>\n        <div ng-transclude="orderBys"></div>\n    ',this.link=function(scope,element,attrs){if(angular.isUndefined(scope.swCollectionConfig.inListingDisplay)&&(scope.swCollectionConfig.inListingDisplay=!1),scope.swCollectionConfig.inListingDisplay&&(scope.swCollectionConfig.parentDirectiveControllerAsName="swListingDisplay",scope.swCollectionConfig.parentDeferredProperty="singleCollectionDeferred"),angular.isUndefined(scope.swCollectionConfig.entityName))throw"You must provide an entityname to swCollectionConfig";if(angular.isUndefined(scope.swCollectionConfig.parentDirectiveControllerAsName)&&!scope.swCollectionConfig.inListingDisplay)throw"You must provide the parent directives Controller-As Name to swCollectionConfig";angular.isUndefined(scope.swCollectionConfig.collectionConfigProperty)&&(scope.swCollectionConfig.collectionConfigProperty="collectionConfig"),angular.isUndefined(scope.swCollectionConfig.allRecords)&&(scope.swCollectionConfig.allRecords=!1),angular.isUndefined(scope.swCollectionConfig.pageShow)&&(scope.swCollectionConfig.pageShow=10),angular.isUndefined(scope.swCollectionConfig.distinct)&&(scope.swCollectionConfig.distinct=!1),angular.isUndefined(scope.swCollectionConfig.filterFlag)&&(scope.swCollectionConfig.filterFlag=!0);for(var allCollectionConfigPromises=[],currentScope=scope;angular.isDefined(currentScope)&&(angular.isDefined(currentScope.swCollectionConfig)&&(allCollectionConfigPromises.push(currentScope.swCollectionConfig.columnsPromise),scope.swCollectionConfig.filterFlag&&allCollectionConfigPromises.push(currentScope.swCollectionConfig.filtersPromise)),null!=(currentScope=currentScope.$$nextSibling)););var newCollectionConfig=_this.collectionConfigService.newCollectionConfig(scope.swCollectionConfig.entityName);newCollectionConfig.setAllRecords(scope.swCollectionConfig.allRecords),newCollectionConfig.setDistinct(scope.swCollectionConfig.distinct),newCollectionConfig.setPageShow(scope.swCollectionConfig.pageShow);var currentScope=_this.scopeService.getRootParentScope(scope,scope.swCollectionConfig.parentDirectiveControllerAsName);if(!currentScope[scope.swCollectionConfig.parentDirectiveControllerAsName])throw"swCollectionConfig was unable to find a parent scope";var parentDirective=currentScope[scope.swCollectionConfig.parentDirectiveControllerAsName];scope.swCollectionConfig.columnsPromise.then(function(){angular.forEach(scope.swCollectionConfig.columns,function(column){newCollectionConfig.addDisplayProperty(column.propertyIdentifier,"",column)})}),scope.swCollectionConfig.filtersPromise.then(function(){angular.forEach(scope.swCollectionConfig.filters,function(filter){newCollectionConfig.addFilter(filter.propertyIdentifier,filter.comparisonValue,filter.comparisonOperator,filter.logicalOperator,filter.hidden)})}),scope.swCollectionConfig.orderBysPromise.then(function(){angular.forEach(scope.swCollectionConfig.orderBys,function(orderBy){newCollectionConfig.addOrderBy(orderBy)})}),_this.$q.all(allCollectionConfigPromises).then(function(){if(angular.isDefined(parentDirective)){if(angular.isDefined(scope.swCollectionConfig.multiCollectionConfigProperty)&&angular.isDefined(parentDirective[scope.swCollectionConfig.multiCollectionConfigProperty]))parentDirective[scope.swCollectionConfig.multiCollectionConfigProperty].push(newCollectionConfig);else{if(!angular.isDefined(parentDirective[scope.swCollectionConfig.collectionConfigProperty]))throw"swCollectionConfig could not locate a collection config property to bind it's collection to";parentDirective[scope.swCollectionConfig.collectionConfigProperty]=newCollectionConfig}angular.isDefined(parentDirective[scope.swCollectionConfig.parentDeferredProperty])&&parentDirective[scope.swCollectionConfig.parentDeferredProperty].resolve()}},function(reason){throw"SWCollectionConfig is having some issues."})}}return SWCollectionConfig.Factory=function(){var directive=function(collectionConfigService,listingService,scopeService,$q){return new SWCollectionConfig(collectionConfigService,listingService,scopeService,$q)};return directive.$inject=["collectionConfigService","listingService","scopeService","$q"],directive},SWCollectionConfig}();exports.SWCollectionConfig=SWCollectionConfig},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollectionFilterController=function(){function SWCollectionFilterController(){}return SWCollectionFilterController}();exports.SWCollectionFilterController=SWCollectionFilterController;var SWCollectionFilter=function(){function SWCollectionFilter(scopeService,utilityService){var _this=this;this.scopeService=scopeService,this.utilityService=utilityService,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",comparisonOperator:"@?",comparisonValue:"@?",logicalOperator:"@?",hidden:"@?"},this.controller=SWCollectionFilterController,this.controllerAs="SWCollectionFilter",this.template="",this.link=function(scope,element,attrs){var filter={propertyIdentifier:scope.SWCollectionFilter.propertyIdentifier,comparisonOperator:scope.SWCollectionFilter.comparisonOperator,comparisonValue:scope.SWCollectionFilter.comparisonValue,logicalOperator:scope.SWCollectionFilter.logicalOperator,hidden:scope.SWCollectionFilter.hidden},currentScope=_this.scopeService.getRootParentScope(scope,"swCollectionConfig");if(!angular.isDefined(currentScope.swCollectionConfig))throw"could not find swCollectionConfig in the parent scope from swcollectionfilter";currentScope.swCollectionConfig.filters.push(filter),currentScope.swCollectionConfig.filtersDeferred.resolve()}}return SWCollectionFilter.Factory=function(){var directive=function(scopeService,utilityService){return new SWCollectionFilter(scopeService,utilityService)};return directive.$inject=["scopeService","utilityService"],directive},SWCollectionFilter}();exports.SWCollectionFilter=SWCollectionFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWCollectionOrderByController=function(){function SWCollectionOrderByController(){}return SWCollectionOrderByController}();exports.SWCollectionOrderByController=SWCollectionOrderByController;var SWCollectionOrderBy=function(){function SWCollectionOrderBy(scopeService){var _this=this;this.scopeService=scopeService,this.restrict="EA",this.scope=!0,this.bindToController={orderBy:"@"},this.controller=SWCollectionOrderByController,this.controllerAs="SWCollectionOrderBy",this.template="",this.link=function(scope,element,attrs){var orderBy=scope.SWCollectionOrderBy.orderBy,currentScope=_this.scopeService.getRootParentScope(scope,"swCollectionConfig");if(!angular.isDefined(currentScope.swCollectionConfig))throw"could not find swCollectionConfig in the parent scope from swcollectionorderby";currentScope.swCollectionConfig.orderBys.push(orderBy),currentScope.swCollectionConfig.orderBysDeferred.resolve()}}return SWCollectionOrderBy.Factory=function(){var directive=function(scopeService){return new SWCollectionOrderBy(scopeService)};return directive.$inject=["scopeService"],directive},SWCollectionOrderBy}();exports.SWCollectionOrderBy=SWCollectionOrderBy},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWColumnSorter=function(){function SWColumnSorter(observerService,corePartialsPath,hibachiPathBuilder){return{restrict:"AE",scope:{column:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"columnsorter.html",link:function(scope,element,attrs){var orderBy={propertyIdentifier:scope.column.propertyIdentifier};scope.sortAsc=function(){orderBy.direction="Asc",this.observerService.notify("sortByColumn",orderBy)},scope.sortDesc=function(){orderBy.direction="Desc",observerService.notify("sortByColumn",orderBy)}}}}return SWColumnSorter.Factory=function(){var directive=function(observerService,corePartialsPath,hibachiPathBuilder){return new SWColumnSorter(observerService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["observerService","corePartialsPath","hibachiPathBuilder"],directive},SWColumnSorter}();exports.SWColumnSorter=SWColumnSorter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWConfirm=function(){function SWConfirm($log,$modal){var buildConfirmationModal=function(simple,useRbKey,confirmText,messageText,noText,yesText){var parsedKeyString="",finishedString="",templateString="<div><div class='modal-header'><a class='close' data-dismiss='modal' ng-click='cancel()'>×</a><h3 [confirm]><confirm></h3></div><div class='modal-body' [message]><message></div><div class='modal-footer'><button class='btn btn-sm btn-default btn-inverse' ng-click='cancel()' [no]><no></button><button class='btn btn-sm btn-default btn-primary' ng-click='fireCallback(callback)' [yes]><yes></button></div></div></div>";return"true"===useRbKey?($log.debug("Using RbKey? "+useRbKey),confirmText="sw-rbkey=\"'"+confirmText+"'\"",messageText="sw-rbkey=\"'"+messageText+"'\"",yesText="sw-rbkey=\"'"+yesText+"'\"",noText="sw-rbkey=\"'"+noText+"'\"",parsedKeyString=templateString.replace("[confirm]",confirmText).replace(messageText,messageText).replace("[no]",noText).replace("[yes]",yesText),$log.debug(finishedString),finishedString=parsedKeyString.replace("[confirm]","").replace("<message>","").replace("<no>","").replace("<yes>",""),$log.debug(finishedString),finishedString):($log.debug("Using RbKey? "+useRbKey),parsedKeyString=templateString.replace("<confirm>",confirmText).replace("<message>",messageText).replace("<no>",noText).replace("<yes>",yesText),finishedString=parsedKeyString.replace("[confirm]","").replace("[message]","").replace("[no]","").replace("[yes]",""),$log.debug(finishedString),finishedString)};return{restrict:"EA",scope:{callback:"&",entity:"="},link:function(scope,element,attr){$log.debug("Modal is: "),$log.debug($modal),element.bind("click",function(){var useRbKey=attr.useRbKey||"false",yesText=(attr.simple,attr.yesText||"define.yes"),noText=attr.noText||"define.no",confirmText=attr.confirmText||"define.delete",messageText=attr.messageText||"define.delete_message",templateString=buildConfirmationModal(0,useRbKey,confirmText,messageText,noText,yesText);$modal.open({template:templateString,controller:"confirmationController",scope:scope}).result.then(function(result){return $log.debug("Result:"+result),!0},function(){})})}}}return SWConfirm.Factory=function(){var directive=function($log,$modal){return new SWConfirm($log,$modal)};return directive.$inject=["$log","$modal"],directive},SWConfirm}();exports.SWConfirm=SWConfirm},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDirective=function(){function SWDirective($compile,utilityService){return{restrict:"AE",scope:{variables:"=",directiveTemplate:"="},controllerAs:"swDirective",link:function(scope,element,attrs){var tempVariables={};angular.forEach(scope.variables,function(value,key){"$"!=key.toString().charAt(0)&&" "!==value&&(tempVariables[utilityService.keyToAttributeString(key)]=value)}),scope.variables=tempVariables;var template="<"+scope.directiveTemplate+" ";angular.isDefined(scope.variables)&&angular.forEach(scope.variables,function(value,key){angular.isString(value)||angular.isNumber(value)?template+=" "+key+'="'+value+'" ':template+=" "+key+'="swDirective.variables.'+key+'" '}),template+=">",template+="</"+scope.directiveTemplate+">",element.html($compile(template)(scope))}}}return SWDirective.Factory=function(){var directive=function($compile,utilityService){return new SWDirective($compile,utilityService)};return directive.$inject=["$compile","utilityService"],directive},SWDirective}();exports.SWDirective=SWDirective},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDraggableController=function(){function SWDraggableController(){angular.isUndefined(this.draggable)&&(this.draggable=!1)}return SWDraggableController}(),SWDraggable=function(){function SWDraggable(corePartialsPath,utilityService,draggableService,hibachiPathBuilder){var _this=this;this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.draggableService=draggableService,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="EA",this.scope={},this.bindToController={draggable:"=",draggableRecord:"=",draggableKey:"="},this.controller=SWDraggableController,this.controllerAs="swDraggable",this.link=function(scope,element,attrs){scope.$watch("swDraggable.draggable",function(newValue,oldValue){angular.element(element).attr("draggable",newValue);var id=angular.element(element).attr("id");id||(id=_this.utilityService.createID(32)),newValue?(element.bind("dragstart",function(e){if(e=e.originalEvent||e,e.stopPropagation(),!scope.swDraggable.draggable)return!1;element.addClass("s-dragging"),scope.swDraggable.draggableRecord.draggableStartKey=scope.swDraggable.draggableKey,e.dataTransfer.setData("application/json",angular.toJson(scope.swDraggable.draggableRecord)),e.dataTransfer.effectAllowed="move",e.dataTransfer.setDragImage(element[0],0,0)}),element.bind("dragend",function(e){e=e.originalEvent||e,e.stopPropagation(),element.removeClass("s-dragging")})):(element.unbind("dragstart"),element.unbind("dragged"))})}}return SWDraggable.Factory=function(){var directive=function(corePartialsPath,utilityService,draggableService,hibachiPathBuilder){return new SWDraggable(corePartialsPath,utilityService,draggableService,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","utilityService","draggableService","hibachiPathBuilder"],directive},SWDraggable}();exports.SWDraggable=SWDraggable},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDraggableContainerController=function(){function SWDraggableContainerController(draggableService){this.draggableService=draggableService,angular.isUndefined(this.draggable)&&(this.draggable=!1)}return SWDraggableContainerController}(),SWDraggableContainer=function(){function SWDraggableContainer($timeout,corePartialsPath,utilityService,listingService,observerService,draggableService,hibachiPathBuilder){var _this=this;this.$timeout=$timeout,this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.listingService=listingService,this.observerService=observerService,this.draggableService=draggableService,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="EA",this.scope={},this.bindToController={draggable:"=?",draggableRecords:"=?",dropEventName:"@?",listingId:"@?"},this.controller=SWDraggableContainerController,this.controllerAs="swDraggableContainer",this.link=function(scope,element,attrs){scope.$watch("swDraggableContainer.draggable",function(newValue,oldValue){angular.element(element).attr("draggable",newValue);var placeholderElement=angular.element("<tr class='s-placeholder'><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td></td></tr>"),id=angular.element(element).attr("id");id||(id=_this.utilityService.createID(32));var listNode=element[0],placeholderNode=placeholderElement[0];placeholderElement.remove(),newValue&&(element.on("drop",function(e){if(e=e.originalEvent||e,e.preventDefault(),!_this.draggableService.isDropAllowed(e))return!0;var record=e.dataTransfer.getData("application/json")||e.dataTransfer.getData("text/plain"),parsedRecord=JSON.parse(record),index=Array.prototype.indexOf.call(listNode.children,placeholderNode);return index<parsedRecord.draggableStartKey&&parsedRecord.draggableStartKey++,_this.$timeout(function(){scope.swDraggableContainer.draggableRecords.splice(index,0,parsedRecord),scope.swDraggableContainer.draggableRecords.splice(parsedRecord.draggableStartKey,1)},0),angular.isDefined(scope.swDraggableContainer.listingId)?_this.listingService.notifyListingPageRecordsUpdate(scope.swDraggableContainer.listingId):angular.isDefined(scope.swDraggableContainer.dropEventName)&&_this.observerService.notify(scope.swDraggableContainer.dropEventName),placeholderElement.remove(),e.stopPropagation(),!1}),element.on("dragenter",function(e){if(e=e.originalEvent||e,!_this.draggableService.isDropAllowed(e))return!0;e.preventDefault()}),element.on("dragleave",function(e){return e=e.originalEvent||e,0!=e.pageX||e.pageY,!1}),element.on("dragover",function(e){if(e=e.originalEvent||e,e.stopPropagation(),placeholderNode.parentNode!=listNode&&element.append(placeholderElement),e.target!==listNode){for(var listItemNode=e.target;listItemNode.parentNode!==listNode&&listItemNode.parentNode;)listItemNode=listItemNode.parentNode;listItemNode.parentNode===listNode&&listItemNode!==placeholderNode&&(_this.draggableService.isMouseInFirstHalf(e,listItemNode)?listNode.insertBefore(placeholderNode,listItemNode):listNode.insertBefore(placeholderNode,listItemNode.nextSibling))}return element.addClass("s-dragged-over"),!1}))})}}return SWDraggableContainer.Factory=function(){var directive=function($timeout,corePartialsPath,utilityService,listingService,observerService,draggableService,hibachiPathBuilder){return new SWDraggableContainer($timeout,corePartialsPath,utilityService,listingService,observerService,draggableService,hibachiPathBuilder)};return directive.$inject=["$timeout","corePartialsPath","utilityService","listingService","observerService","draggableService","hibachiPathBuilder"],directive},SWDraggableContainer}();exports.SWDraggableContainer=SWDraggableContainer},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWEntityActionBarController=function(){function SWEntityActionBarController(rbkeyService){var _this=this;this.rbkeyService=rbkeyService,this.init=function(){angular.isDefined(_this.pageTitleRbKey)&&(_this.pageTitle=_this.rbkeyService.getRBKey(_this.pageTitleRbKey))},this.init()}return SWEntityActionBarController}(),SWEntityActionBar=function(){function SWEntityActionBar(corePartialsPath,hibachiPathBuilder){this.corePartialsPath=corePartialsPath,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={type:"@",object:"=",pageTitle:"@?",pageTitleRbKey:"@?",edit:"=",showcancel:"=",showcreate:"=",showedit:"=",showdelete:"=",createModal:"=",createAction:"=",createQueryString:"=",backAction:"=",backQueryString:"=",cancelAction:"=",cancelQueryString:"=",deleteAction:"=",deleteQueryString:"=",processAction:"=",processContext:"="},this.controller=SWEntityActionBarController,this.controllerAs="swEntityActionBar",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"entityactionbar.html"}return SWEntityActionBar.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWEntityActionBar(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWEntityActionBar}();exports.SWEntityActionBar=SWEntityActionBar},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWEntityActionBarButtonGroupController=function(){function SWEntityActionBarButtonGroupController(){}return SWEntityActionBarButtonGroupController}(),SWEntityActionBarButtonGroup=function(){function SWEntityActionBarButtonGroup(corePartialsPath,hibachiPathBuilder){this.corePartialsPath=corePartialsPath,this.restrict="E",this.scope={},this.transclude=!0,this.bindToController={},this.controller=SWEntityActionBarButtonGroupController,this.controllerAs="swEntityActionBarButtonGroup",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"entityactionbarbuttongroup.html"}return SWEntityActionBarButtonGroup.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWEntityActionBarButtonGroup(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWEntityActionBarButtonGroup}();exports.SWEntityActionBarButtonGroup=SWEntityActionBarButtonGroup},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWExpandableRecordController=function(){function SWExpandableRecordController($timeout,$hibachi,utilityService,collectionConfigService,expandableService,listingService,observerService){var _this=this;this.$timeout=$timeout,this.$hibachi=$hibachi,this.utilityService=utilityService,this.collectionConfigService=collectionConfigService,this.expandableService=expandableService,this.listingService=listingService,this.observerService=observerService,this.childrenLoaded=!1,this.childrenOpen=!1,this.children=[],this.refreshChildren=function(){_this.getEntity()},this.setupChildCollectionConfig=function(){_this.childCollectionConfig=_this.collectionConfigService.newCollectionConfig(_this.entity.metaData.className);var parentName=_this.entity.metaData.hb_parentPropertyName,parentCFC=_this.entity.metaData[parentName].cfc;_this.parentIDName=_this.$hibachi.getEntityExample(parentCFC).$$getIDName();var childName=_this.entity.metaData.hb_childPropertyName,childCFC=_this.entity.metaData[childName].cfc;_this.$hibachi.getEntityExample(childCFC).$$getIDName();_this.childCollectionConfig.clearFilterGroups(),_this.childCollectionConfig.collection=_this.entity,_this.childCollectionConfig.addFilter(parentName+"."+_this.parentIDName,_this.parentId),_this.childCollectionConfig.setAllRecords(!0),angular.forEach(_this.collectionConfig.columns,function(column){_this.childCollectionConfig.addColumn(column.propertyIdentifier,column.title,column)}),angular.forEach(_this.collectionConfig.joins,function(join){_this.childCollectionConfig.addJoin(join)}),_this.childCollectionConfig.groupBys=_this.collectionConfig.groupBys},this.getEntity=function(){_this.collectionPromise.then(function(data){_this.collectionData=data,_this.collectionData.pageRecords=_this.collectionData.pageRecords||_this.collectionData.records,_this.collectionData.pageRecords.length&&angular.forEach(_this.collectionData.pageRecords,function(pageRecord){_this.expandableService.addRecord(pageRecord[_this.parentIDName],!0),pageRecord.dataparentID=_this.recordID,pageRecord.depth=_this.recordDepth||0,pageRecord.depth++,_this.children.push(pageRecord),_this.records.splice(_this.recordIndex+1,0,pageRecord)}),_this.childrenLoaded=!0})},this.toggleChild=function(){_this.$timeout(function(){_this.childrenOpen=!_this.childrenOpen,_this.expandableService.updateState(_this.recordID,{isOpen:_this.childrenOpen}),_this.childrenLoaded||(null==_this.childCollectionConfig&&_this.setupChildCollectionConfig(),angular.isFunction(_this.childCollectionConfig.getEntity)&&(_this.collectionPromise=_this.childCollectionConfig.getEntity()),_this.getEntity()),angular.forEach(_this.children,function(child){child.dataIsVisible=_this.childrenOpen;var entityPrimaryIDName=_this.entity.$$getIDName(),idsToCheck=[];idsToCheck.push(child[entityPrimaryIDName]),_this.expandableService.updateState(child[entityPrimaryIDName],{isOpen:_this.childrenOpen});for(var childrenTraversed=!1,recordLength=_this.records.length;!childrenTraversed&&idsToCheck.length>0;){for(var found=!1,idToCheck=idsToCheck.pop(),i=0;i<recordLength;i++){var record=_this.records[i];record.dataparentID==idToCheck&&(idsToCheck.push(record[entityPrimaryIDName]),_this.expandableService.updateState(record[entityPrimaryIDName],{isOpen:_this.childrenOpen}),record.dataIsVisible=_this.childrenOpen,found=!0)}found||(childrenTraversed=!0)}})})},this.recordID=this.parentId,expandableService.addRecord(this.recordID),angular.isDefined(this.refreshChildrenEvent)&&this.refreshChildrenEvent.length&&this.observerService.attach(this.refreshChildren,this.refreshChildrenEvent)}return SWExpandableRecordController}(),SWExpandableRecord=function(){function SWExpandableRecord($compile,$templateRequest,$timeout,corePartialsPath,utilityService,expandableService,hibachiPathBuilder){var _this=this;this.$compile=$compile,this.$templateRequest=$templateRequest,this.$timeout=$timeout,this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.expandableService=expandableService,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="EA",this.scope={},this.bindToController={recordValue:"=",link:"@",expandable:"=?",parentId:"=",entity:"=",collectionConfig:"=?",childCollectionConfig:"=?",refreshChildrenEvent:"=?",listingId:"@?",records:"=",pageRecord:"=",recordIndex:"=",recordDepth:"=",childCount:"=",autoOpen:"=",multiselectIdPaths:"=",expandableRules:"="},this.controller=SWExpandableRecordController,this.controllerAs="swExpandableRecord",this.link=function(scope,element,attrs){if(scope.swExpandableRecord.expandable&&scope.swExpandableRecord.childCount){if(scope.swExpandableRecord.recordValue){var id=scope.swExpandableRecord.records[scope.swExpandableRecord.recordIndex][scope.swExpandableRecord.entity.$$getIDName()];if(scope.swExpandableRecord.multiselectIdPaths&&scope.swExpandableRecord.multiselectIdPaths.length){var multiselectIdPathsArray=scope.swExpandableRecord.multiselectIdPaths.split(",");scope.swExpandableRecord.childrenLoaded||angular.forEach(multiselectIdPathsArray,function(multiselectIdPath){var position=_this.utilityService.listFind(multiselectIdPath,id,"/"),multiSelectIDs=multiselectIdPath.split("/"),multiselectPathLength=multiSelectIDs.length;-1!==position&&position<multiselectPathLength-1&&!_this.expandableService.getState(id,"isOpen")&&(_this.expandableService.updateState(id,{isOpen:!0}),scope.swExpandableRecord.toggleChild())})}}_this.$templateRequest(_this.hibachiPathBuilder.buildPartialsPath(_this.corePartialsPath)+"expandablerecord.html").then(function(html){var template=angular.element(html),autoOpen=angular.copy(scope.swExpandableRecord.autoOpen);scope.swExpandableRecord.autoOpen=!1,template=_this.$compile(template)(scope),element.html(template),element.on("click",scope.swExpandableRecord.toggleChild),autoOpen&&scope.swExpandableRecord.toggleChild()})}},this.$compile=$compile,this.$templateRequest=$templateRequest,this.corePartialsPath=corePartialsPath,this.$timeout=$timeout,this.utilityService=utilityService,this.expandableService=expandableService,this.hibachiPathBuilder=hibachiPathBuilder}return SWExpandableRecord.Factory=function(){var directive=function($compile,$templateRequest,$timeout,corePartialsPath,utilityService,expandableService,hibachiPathBuilder){return new SWExpandableRecord($compile,$templateRequest,$timeout,corePartialsPath,utilityService,expandableService,hibachiPathBuilder)};return directive.$inject=["$compile","$templateRequest","$timeout","corePartialsPath","utilityService","expandableService","hibachiPathBuilder"],directive},SWExpandableRecord}();exports.SWExpandableRecord=SWExpandableRecord},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWExpiringSessionNotifierController=function(){function SWExpiringSessionNotifierController($timeout,$http,$hibachi,localStorageService){var _this=this;this.$timeout=$timeout,this.$http=$http,this.$hibachi=$hibachi,this.localStorageService=localStorageService,this.startTimeout=function(){_this.$timeout(function(){confirm(_this.confirmText);_this.$http.get(_this.$hibachi.buildUrl("api:main.login")).then(function(response){200===response.status?(_this.localStorageService.setItem("token",response.data.token),_this.startTimeout()):(alert("Unable To Login"),location.reload())},function(rejection){throw"Login Failed"})},72e4)},angular.isUndefined(this.confirmText)&&(this.confirmText="Are you still there? You are about to be logged out."),this.startTimeout()}return SWExpiringSessionNotifierController}(),SWExpiringSessionNotifier=function(){function SWExpiringSessionNotifier(corePartialsPath,hibachiPathBuilder){this.corePartialsPath=corePartialsPath,this.restrict="E",this.scope={},this.transclude=!1,this.bindToController={confirmText:"@?"},this.controller=SWExpiringSessionNotifierController,this.controllerAs="swExpiringSessionNotifier",this.link=function(scope,element,attrs){},this.template=""}return SWExpiringSessionNotifier.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWExpiringSessionNotifier(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWExpiringSessionNotifier}();exports.SWExpiringSessionNotifier=SWExpiringSessionNotifier},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWExportAction=function(){function SWExportAction($log,corePartialsPath,hibachiPathBuilder){return{restrict:"A",templateUrl:hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"exportaction.html",scope:{},link:function(scope,element,attrs){}}}return SWExportAction.Factory=function(){var directive=function($log,corePartialsPath,hibachiPathBuilder){return new SWExportAction($log,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","corePartialsPath","hibachiPathBuilder"],directive},SWExportAction}();exports.SWExportAction=SWExportAction},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var md5=__webpack_require__(65),SWGravatarController=function(){function SWGravatarController(){this.gravatarURL="http://www.gravatar.com/avatar/"+md5(this.emailAddress.toLowerCase().trim())}return SWGravatarController}();exports.SWGravatarController=SWGravatarController;var SWGravatar=function(){function SWGravatar(){this.template="<img src='{{swGravatar.gravatarURL}}' />",this.transclude=!1,this.restrict="E",this.scope={},this.bindToController={emailAddress:"@"},this.controller=SWGravatarController,this.controllerAs="swGravatar",this.link=function(scope,element,attrs,controller,transclude){}}return SWGravatar.Factory=function(){var directive=function(){return new SWGravatar};return directive.$inject=[],directive},SWGravatar.$inject=["$hibachi","$timeout","collectionConfigService","corePartialsPath","hibachiPathBuilder"],SWGravatar}();exports.SWGravatar=SWGravatar},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWHref=function(){function SWHref(){return{restrict:"A",scope:{swHref:"@"},link:function(scope,element,attrs){var hrefValue=attrs.swHref;hrefValue="?ng#!"+hrefValue,element.attr("href",hrefValue)}}}return SWHref.Factory=function(){var directive=function(){return new SWHref};return directive.$inject=[],directive},SWHref}();exports.SWHref=SWHref},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWLoading=function(){function SWLoading($log,corePartialsPath,hibachiPathBuilder){return{restrict:"A",transclude:!0,templateUrl:hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"loading.html",scope:{swLoading:"="},link:function(scope,attrs,element){}}}return SWLoading.Factory=function(){var directive=function($log,corePartialsPath,hibachiPathBuilder){return new SWLoading($log,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","corePartialsPath","hibachiPathBuilder"],directive},SWLoading}();exports.SWLoading=SWLoading},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWLoginController=function(){function SWLoginController($route,$log,$window,corePartialsPath,$hibachi,dialogService,hibachiScope){var _this=this;this.$route=$route,this.$log=$log,this.$window=$window,this.corePartialsPath=corePartialsPath,this.$hibachi=$hibachi,this.dialogService=dialogService,this.hibachiScope=hibachiScope,this.login=function(){_this.$hibachi.login(_this.account_login.data.emailAddress,_this.account_login.data.password).then(function(loginResponse){loginResponse&&loginResponse.data&&loginResponse.data.token&&(_this.$window.localStorage.setItem("token",loginResponse.data.token),_this.hibachiScope.loginDisplayed=!1,_this.$route.reload(),_this.dialogService.removeCurrentDialog())},function(rejection){})},this.$hibachi=$hibachi,this.$window=$window,this.$route=$route,this.hibachiScope=hibachiScope,this.account_login=$hibachi.newEntity("Account_Login")}return SWLoginController}(),SWLogin=function(){function SWLogin($route,$log,$window,corePartialsPath,$hibachi,dialogService,hibachiPathBuilder){this.$route=$route,this.$log=$log,this.$window=$window,this.corePartialsPath=corePartialsPath,this.$hibachi=$hibachi,this.dialogService=dialogService,this.restrict="E",this.scope={},this.bindToController={},this.controller=SWLoginController,this.controllerAs="SwLogin",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(this.corePartialsPath+"/login.html")}return SWLogin.Factory=function(){var directive=function($route,$log,$window,corePartialsPath,$hibachi,dialogService,hibachiPathBuilder){return new SWLogin($route,$log,$window,corePartialsPath,$hibachi,dialogService,hibachiPathBuilder)};return directive.$inject=["$route","$log","$window","corePartialsPath","$hibachi","dialogService","hibachiPathBuilder"],directive},SWLogin}();exports.SWLogin=SWLogin},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWModalLauncherController=function(){function SWModalLauncherController(){var _this=this;this.hasSaveAction=!1,this.hasCancelAction=!1,this.hasDeleteAction=!1,this.launchModal=function(){_this.showModal=!0},this.saveCallback=function(){if(_this.hasSaveAction)var savePromise=_this.saveAction()();savePromise.then(function(response){$("#"+_this.modalName).modal("hide")},function(reason){})},this.deleteCallback=function(){if(_this.hasDeleteAction)var deletePromise=_this.saveAction()();deletePromise.then(function(response){$("#"+_this.modalName).modal("hide")},function(reason){})},this.cancelCallback=function(){_this.hasCancelAction&&_this.cancelAction()()},angular.isUndefined(this.showModal)&&(this.showModal=!1),angular.isUndefined(this.saveActionText)&&(this.saveActionText="Save"),angular.isUndefined(this.cancelActionText)&&(this.cancelActionText="Cancel")}return SWModalLauncherController}();exports.SWModalLauncherController=SWModalLauncherController;var SWModalLauncher=function(){function SWModalLauncher($compile,corePartialsPath,hibachiPathBuilder){this.$compile=$compile,this.corePartialsPath=corePartialsPath,this.transclude={button:"?swModalButton",staticButton:"?swModalStaticButton",content:"?swModalContent"},this.restrict="EA",this.scope={},this.bindToController={showModal:"=?",modalName:"@",title:"@",saveAction:"&?",deleteAction:"&?",cancelAction:"&?",saveActionText:"@?",cancelActionText:"@?"},this.controller=SWModalLauncherController,this.controllerAs="swModalLauncher",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){angular.isDefined(attrs.saveAction)&&($scope.swModalLauncher.hasSaveAction=!0),angular.isDefined(attrs.deleteAction)&&($scope.swModalLauncher.hasDeleteAction=!0),angular.isDefined(attrs.cancelAction)&&($scope.swModalLauncher.hasCancelAction=!0)},post:function($scope,element,attrs){}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"modallauncher.html"}return SWModalLauncher.Factory=function(){var directive=function($compile,corePartialsPath,hibachiPathBuilder){return new SWModalLauncher($compile,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],directive},SWModalLauncher}();exports.SWModalLauncher=SWModalLauncher},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWModalWindowController=function(){function SWModalWindowController(){angular.isUndefined(this.modalName)&&(this.modalName="")}return SWModalWindowController}();exports.SWModalWindowController=SWModalWindowController;var SWModalWindow=function(){function SWModalWindow($compile,corePartialsPath,hibachiPathBuilder){this.$compile=$compile,this.corePartialsPath=corePartialsPath,this.transclude={modalBody:"?swModalBody"},this.restrict="EA",this.scope={},this.bindToController={modalName:"@",title:"@",hasSaveAction:"=?",saveAction:"&?",hasDeleteAction:"=?",deleteAction:"&?",hasCancelAction:"=?",cancelAction:"&?",saveActionText:"@",cancelActionText:"@"},this.controller=SWModalWindowController,this.controllerAs="swModalWindow",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){},post:function($scope,element,attrs){}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"modalwindow.html"}return SWModalWindow.Factory=function(){var directive=function($compile,corePartialsPath,hibachiPathBuilder){return new SWModalWindow($compile,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],directive},SWModalWindow}();exports.SWModalWindow=SWModalWindow},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWNumbersOnly=function(){function SWNumbersOnly(){this.restrict="A",this.require="ngModel",this.scope={ngModel:"=",minNumber:"=?",maxNumber:"=?"},this.link=function($scope,element,attrs,modelCtrl){modelCtrl.$parsers.unshift(function(inputValue){var modelValue=modelCtrl.$modelValue;return""==inputValue||isNaN(Number(inputValue))||(angular.isDefined($scope.minNumber)&&(Number(inputValue)>=$scope.minNumber||!angular.isDefined($scope.minNumber)?modelCtrl.$setValidity("minNumber",!0):angular.isDefined($scope.minNumber)&&modelCtrl.$setValidity("minNumber",!1)),angular.isDefined($scope.maxNumber)&&(Number(inputValue)<=$scope.maxNumber||!angular.isDefined($scope.maxNumber)?modelCtrl.$setValidity("maxNumber",!0):angular.isDefined($scope.maxNumber)&&modelCtrl.$setValidity("maxNumber",!1)),modelValue=modelCtrl.$valid?Number(inputValue):$scope.minNumber),modelValue})}}return SWNumbersOnly.Factory=function(){var directive=function(){return new SWNumbersOnly};return directive.$inject=[],directive},SWNumbersOnly}();exports.SWNumbersOnly=SWNumbersOnly},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWOptions=function(){function SWOptions($log,$hibachi,observerService,corePartialsPath,hibachiPathBuilder){return{restrict:"AE",scope:{objectName:"@"},templateUrl:hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"options.html",link:function(scope,element,attrs){scope.swOptions={},scope.swOptions.objectName=scope.objectName,scope.getOptions=function(){scope.swOptions.object=$hibachi["new"+scope.swOptions.objectName]();var columnsConfig=[{propertyIdentifier:scope.swOptions.objectName.charAt(0).toLowerCase()+scope.swOptions.objectName.slice(1)+"Name"},{propertyIdentifier:scope.swOptions.object.$$getIDName()}];$hibachi.getEntity(scope.swOptions.objectName,{allRecords:!0,columnsConfig:angular.toJson(columnsConfig)}).then(function(value){scope.swOptions.options=value.records,observerService.notify("optionsLoaded")})},scope.getOptions();var selectOption=function(option){option?scope.swOptions.selectOption(option):scope.swOptions.selectOption(scope.swOptions.options[0])};observerService.attach(selectOption,"selectOption","selectOption"),scope.swOptions.selectOption=function(selectedOption){scope.swOptions.selectedOption=selectedOption,observerService.notify("optionsChanged",selectedOption)}}}}return SWOptions.Factory=function(){var directive=function($log,$hibachi,observerService,corePartialsPath,hibachiPathBuilder){return new SWOptions($log,$hibachi,observerService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","$hibachi","observerService","corePartialsPath","hibachiPathBuilder"],directive},SWOptions}();exports.SWOptions=SWOptions},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWOrderByControlsController=function(){function SWOrderByControlsController(listingService,observerService,utilityService){var _this=this;this.listingService=listingService,this.observerService=observerService,this.utilityService=utilityService,this.sortCode="ASC",this.updateSortOrderProperty=function(){angular.isDefined(_this.selectedPropertyIdentifier)?_this.propertyNotChosen=!1:_this.propertyNotChosen=!0,_this.updateOrderBy()},this.updateOrderBy=function(){if(angular.isDefined(_this.selectedPropertyIdentifier)&&_this.selectedPropertyIdentifier.length>0)var propertyIdentifier=_this.selectedPropertyIdentifier;switch(_this.sortCode){case"ASC":_this.disabled=!1,null!=propertyIdentifier&&(angular.isDefined(_this.collectionConfig)&&_this.collectionConfig.toggleOrderBy(propertyIdentifier,!0),_this.inListingDisplay&&_this.listingService.setSingleColumnOrderBy(_this.listingId,propertyIdentifier,"ASC")),_this.inListingDisplay&&_this.listingService.setManualSort(_this.listingId,!1);break;case"DESC":_this.disabled=!1,null!=propertyIdentifier&&(angular.isDefined(_this.collectionConfig)&&_this.collectionConfig.toggleOrderBy(propertyIdentifier,!0),_this.inListingDisplay&&_this.listingService.setSingleColumnOrderBy(_this.listingId,propertyIdentifier,"DESC"),_this.inListingDisplay&&_this.listingService.setManualSort(_this.listingId,!1));break;case"MANUAL":_this.disabled=!0,_this.inListingDisplay&&_this.listingService.setManualSort(_this.listingId,!0)}},this.sortAscending=function(){_this.sortCode="ASC",_this.updateOrderBy()},this.sortDescending=function(){_this.sortCode="DESC",_this.updateOrderBy()},this.manualSort=function(){_this.sortCode="MANUAL",_this.updateOrderBy()},angular.isUndefined(this.edit)&&(this.edit=!0),angular.isDefined(this.collectionConfig)&&(this.columns=this.collectionConfig.columns),angular.isDefined(this.initialSortDefaultDirection)&&this.initialSortDefaultDirection.length>0&&(this.sortCode=this.initialSortDefaultDirection),angular.isDefined(this.initialSortProperty)&&this.initialSortProperty.length>0&&(this.selectedPropertyIdentifier=this.initialSortProperty),this.id=this.utilityService.createID(32)}return SWOrderByControlsController}();exports.SWOrderByControlsController=SWOrderByControlsController;var SWOrderByControls=function(){function SWOrderByControls($compile,scopeService,listingService,corePartialsPath,hibachiPathBuilder){var _this=this;this.$compile=$compile,this.scopeService=scopeService,this.listingService=listingService,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={collectionConfig:"=?",selectedOrderByColumn:"=?",inListingDisplay:"=?",toggleCollectionConfig:"=?",initialSortProperty:"@?",initialSortDefaultDirection:"@?",sortPropertyFieldName:"@?",sortDefaultDirectionFieldName:"@?",edit:"=?"},this.require={swListingDisplay:"?^swListingDisplay"},this.controller=SWOrderByControlsController,this.controllerAs="swOrderByControls",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){if($scope.swOrderByControls.inListingDisplay&&_this.scopeService.hasParentScope($scope,"swListingDisplay")){var listingDisplayScope=_this.scopeService.getRootParentScope($scope,"swListingDisplay").swListingDisplay;$scope.swOrderByControls.listingId=listingDisplayScope.tableID,_this.listingService.attachToListingInitiated($scope.swOrderByControls.listingId,$scope.swOrderByControls.updateOrderBy),null==$scope.swOrderByControls.collectionConfig&&null!=listingDisplayScope.collectionConfig&&($scope.swOrderByControls.collectionConfig=listingDisplayScope.collectionConfig)}},post:function($scope,element,attrs){}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"orderbycontrols.html"}return SWOrderByControls.Factory=function(){var directive=function($compile,scopeService,listingService,corePartialsPath,hibachiPathBuilder){return new SWOrderByControls($compile,scopeService,listingService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","scopeService","listingService","corePartialsPath","hibachiPathBuilder"],directive},SWOrderByControls}();exports.SWOrderByControls=SWOrderByControls},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWProcessCallerController=function(){function SWProcessCallerController(rbkeyService,$templateRequest,$compile,corePartialsPath,$scope,$element,$transclude,utilityService,hibachiPathBuilder){var _this=this;this.rbkeyService=rbkeyService,this.$templateRequest=$templateRequest,this.$compile=$compile,this.corePartialsPath=corePartialsPath,this.$scope=$scope,this.$element=$element,this.$transclude=$transclude,this.$templateRequest=$templateRequest,this.$compile=$compile,this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.type=this.type||"link",this.queryString=this.queryString||"",this.$scope=$scope,this.$element=$element,this.$transclude=this.$transclude,this.$templateRequest(hibachiPathBuilder.buildPartialsPath(this.corePartialsPath)+"processcaller.html").then(function(html){var template=angular.element(html);_this.$element.parent().append(template),$compile(template)(_this.$scope)}),angular.isDefined(this.titleRbKey)&&(this.title=this.rbkeyService.getRBKey(this.titleRbKey)),angular.isUndefined(this.text)&&(this.text=this.title)}return SWProcessCallerController}(),SWProcessCaller=function(){function SWProcessCaller(corePartialsPath,utilityService){this.corePartialsPath=corePartialsPath,this.utilityService=utilityService,this.restrict="E",this.scope={},this.bindToController={action:"@",entity:"@",processContext:"@",hideDisabled:"=",type:"@",queryString:"@",text:"@",title:"@?",titleRbKey:"@?",class:"@",icon:"=",iconOnly:"=",submit:"=",confirm:"=",disabled:"=",disabledText:"@",modal:"="},this.controller=SWProcessCallerController,this.controllerAs="swProcessCaller",this.link=function(scope,element,attrs){},this.corePartialsPath=corePartialsPath,this.utilityService=utilityService}return SWProcessCaller.Factory=function(){var directive=function(corePartialsPath,utilityService){return new SWProcessCaller(corePartialsPath,utilityService)};return directive.$inject=["corePartialsPath","utilityService"],directive},SWProcessCaller.$inject=["corePartialsPath","utilityService"],SWProcessCaller}();exports.SWProcessCaller=SWProcessCaller},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWRbKey=function(){function SWRbKey($hibachi,observerService,utilityService,$rootScope,$log,rbkeyService){return{restrict:"A",scope:{swRbkey:"="},link:function(scope,element,attrs){var rbKeyValue=scope.swRbkey;!function(){angular.isDefined(rbKeyValue)&&angular.isString(rbKeyValue)&&element.text(rbkeyService.getRBKey(rbKeyValue))}()}}}return SWRbKey.Factory=function(){var directive=function($hibachi,observerService,utilityService,$rootScope,$log,rbkeyService){return new SWRbKey($hibachi,observerService,utilityService,$rootScope,$log,rbkeyService)};return directive.$inject=["$hibachi","observerService","utilityService","$rootScope","$log","rbkeyService"],directive},SWRbKey}();exports.SWRbKey=SWRbKey},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWScrollTrigger=function(){function SWScrollTrigger($rootScope,$window,$timeout){return{link:function(scope,elem,attrs){var checkWhenEnabled,handler,scrollDistance,scrollEnabled;return $window=angular.element($window),scrollDistance=0,null!=attrs.infiniteScrollDistance&&scope.$watch(attrs.infiniteScrollDistance,function(value){return scrollDistance=parseInt(value,10)}),scrollEnabled=!0,checkWhenEnabled=!1,null!=attrs.infiniteScrollDisabled&&scope.$watch(attrs.infiniteScrollDisabled,function(value){if((scrollEnabled=!value)&&checkWhenEnabled)return checkWhenEnabled=!1,handler()}),handler=function(){var elementBottom,remaining,shouldScroll,windowBottom;return windowBottom=$window.height()+$window.scrollTop(),elementBottom=elem.offset().top+elem.height(),remaining=elementBottom-windowBottom,shouldScroll=remaining<=$window.height()*scrollDistance,shouldScroll&&scrollEnabled?$rootScope.$$phase?scope.$eval(attrs.infiniteScroll):scope.$apply(attrs.infiniteScroll):shouldScroll?checkWhenEnabled=!0:void 0},$window.on("scroll",handler),scope.$on("$destroy",function(){return $window.off("scroll",handler)}),$timeout(function(){return attrs.infiniteScrollImmediateCheck?scope.$eval(attrs.infiniteScrollImmediateCheck)?handler():void 0:handler()},0)}}}return SWScrollTrigger.Factory=function(){var directive=function($rootScope,$window,$timeout){return new SWScrollTrigger($rootScope,$window,$timeout)};return directive.$inject=["$rootScope","$window","$timeout"],directive},SWScrollTrigger}();exports.SWScrollTrigger=SWScrollTrigger},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWSelectionController=function(){function SWSelectionController(selectionService,observerService){var _this=this;this.selectionService=selectionService,this.observerService=observerService,this.updateSelectValue=function(res){_this.isRadio&&"check"==res.action?(_this.toggleValue,_this.selection):"clear"==res.action?_this.toggleValue=!1:"selectAll"==res.action?_this.toggleValue=!0:res.selection==_this.selection&&(_this.toggleValue="check"==res.action)},this.toggleSelection=function(toggleValue,selectionid,selection){_this.isRadio?(_this.selectionService.radioSelection(selectionid,selection),_this.toggleValue=selection):toggleValue?_this.selectionService.addSelection(selectionid,selection):_this.selectionService.removeSelection(selectionid,selection)},angular.isUndefined(this.name)&&(this.name="selection"),selectionService.isAllSelected(this.selectionid)?this.toggleValue=!selectionService.hasSelection(this.selectionid,this.selection):this.toggleValue=selectionService.hasSelection(this.selectionid,this.selection),this.isRadio&&this.toggleValue&&(this.toggleValue=this.selection),this.isRadio&&this.toggleValue&&(this.toggleValue=this.selection),observerService.attach(this.updateSelectValue,"swSelectionToggleSelection"+this.selectionid),angular.isDefined(this.initSelected)&&this.initSelected&&(this.toggleValue=this.selection,this.toggleSelection(this.toggleValue,this.selectionid,this.selection))}return SWSelectionController}(),SWSelection=function(){function SWSelection(collectionPartialsPath,hibachiPathBuilder){this.collectionPartialsPath=collectionPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="E",this.scope={},this.bindToController={selection:"=",selectionid:"@",id:"=",isRadio:"=",name:"@",disabled:"=",initSelected:"="},this.controller=SWSelectionController,this.controllerAs="swSelection",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"selection.html"}return SWSelection.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWSelection(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWSelection.$inject=["corePartialsPath","hibachiPathBuilder"],SWSelection}();exports.SWSelection=SWSelection},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWSortable=function(){function SWSortable(expression,compiledElement){return function(linkElement){var scope=this;linkElement.sortable({placeholder:"placeholder",opacity:.8,axis:"y",update:function(event,ui){var model=scope.$apply(expression),modelLength=model.length,items=[];linkElement.children().each(function(index){var item=$(this),oldIndex=parseInt(item.attr("sw:sortable-index"),10);model.push(model[oldIndex]),item.attr("sw:sortable-index")&&(items[oldIndex]=item,item.detach())}),model.splice(0,modelLength),linkElement.append.apply(linkElement,items),scope.$digest()}})}}return SWSortable.Factory=function(){var directive=function(expression,compiledElement){return new SWSortable(expression,compiledElement)};return directive.$inject=["expression","compiledElement"],directive},SWSortable}();exports.SWSortable=SWSortable},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTabContentController=function(){function SWTabContentController($scope,$q,$transclude,$hibachi,$timeout,utilityService,rbkeyService,collectionConfigService){this.$scope=$scope,this.$q=$q,this.$transclude=$transclude,this.$hibachi=$hibachi,this.$timeout=$timeout,this.utilityService=utilityService,this.rbkeyService=rbkeyService,this.collectionConfigService=collectionConfigService,angular.isUndefined(this.active)&&(this.active=!1),angular.isUndefined(this.loaded)&&(this.loaded=!1),angular.isUndefined(this.hide)&&(this.hide=!1),angular.isUndefined(this.id)&&(this.id=utilityService.createID(16)),angular.isUndefined(this.name)&&(this.name=this.id)}return SWTabContentController}();exports.SWTabContentController=SWTabContentController;var SWTabContent=function(){function SWTabContent($compile,scopeService,observerService,corePartialsPath,hibachiPathBuilder){var _this=this;this.$compile=$compile,this.scopeService=scopeService,this.observerService=observerService,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={active:"=?",loaded:"=?",hide:"=?",name:"@?"},this.controller=SWTabContentController,this.controllerAs="swTabContent",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){},post:function($scope,element,attrs){var parentDirective=_this.scopeService.getRootParentScope($scope,"swTabGroup").swTabGroup;angular.isDefined(parentDirective)&&angular.isDefined(parentDirective.tabs)&&(parentDirective.tabs.push($scope.swTabContent),_this.observerService.notify(parentDirective.initTabEventName))}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"tabcontent.html"}return SWTabContent.Factory=function(){var directive=function($compile,scopeService,observerService,corePartialsPath,hibachiPathBuilder){return new SWTabContent($compile,scopeService,observerService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","scopeService","observerService","corePartialsPath","hibachiPathBuilder"],directive},SWTabContent}();exports.SWTabContent=SWTabContent},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTabGroupController=function(){function SWTabGroupController(utilityService,rbkeyService,observerService){var _this=this;this.utilityService=utilityService,this.rbkeyService=rbkeyService,this.observerService=observerService,this.hasActiveTab=!1,this.initTab=function(){for(var i=0;i<_this.tabs.length;i++)if(!_this.tabs[i].hide){_this.tabs[i].active=!0,_this.tabs[i].loaded=!0;break}},this.switchTab=function(tabToActivate){_this.observerService.notify(_this.switchTabGroupEventName);for(var i=0;i<_this.tabs.length;i++)_this.tabs[i].active=!1;tabToActivate.active=!0,tabToActivate.loaded=!0},this.getTabByName=function(name){for(var i=0;i<_this.tabs.length;i++)if(_this.tabs[i].name==name)return _this.tabs[i]},angular.isUndefined(this.tabs)&&(this.tabs=[]),this.tabGroupID="TG"+this.utilityService.createID(30),this.switchTabGroupEventName="SwitchTabGroup"+this.tabGroupID,this.initTabEventName="InitTabForTabGroup"+this.tabGroupID,this.observerService.attach(this.initTab,this.initTabEventName),angular.isUndefined(this.switchTabEventName)&&(this.switchTabEventName=this.tabGroupID+"SwitchTabTo"),this.observerService.attach(this.switchTab,this.switchTabEventName)}return SWTabGroupController}();exports.SWTabGroupController=SWTabGroupController;var SWTabGroup=function(){function SWTabGroup($compile,corePartialsPath,hibachiPathBuilder){this.$compile=$compile,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={switchTabEventName:"@?"},this.controller=SWTabGroupController,this.controllerAs="swTabGroup",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){},post:function($scope,element,attrs){}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"tabgroup.html"}return SWTabGroup.Factory=function(){var directive=function($compile,corePartialsPath,hibachiPathBuilder){return new SWTabGroup($compile,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","corePartialsPath","hibachiPathBuilder"],directive},SWTabGroup}();exports.SWTabGroup=SWTabGroup},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTooltipController=function(){function SWTooltipController(rbkeyService){var _this=this;this.rbkeyService=rbkeyService,this.showTooltip=!1,this.show=function(){_this.showTooltip=!0},this.hide=function(){_this.showTooltip=!1},angular.isDefined(this.rbKey)&&(this.text=rbkeyService.getRBKey(this.rbKey)),angular.isUndefined(this.position)&&(this.position="top")}return SWTooltipController}();exports.SWTooltipController=SWTooltipController;var SWTooltip=function(){function SWTooltip($document,corePartialsPath,hibachiPathBuilder){this.$document=$document,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={rbKey:"@?",text:"@?",position:"@?",showTooltip:"=?"},this.controller=SWTooltipController,this.controllerAs="swTooltip",this.link=function(scope,element,attrs,controller,transclude){var tooltip=element.find(".tooltip"),elementPosition=element.position(),tooltipStyle=tooltip[0].style;if(attrs&&attrs.position)switch(attrs.position.toLowerCase()){case"top":tooltipStyle.top="0px",tooltipStyle.left="0px";break;case"bottom":break;case"left":tooltipStyle.top=elementPosition.top+element[0].offsetHeight-5+"px",tooltipStyle.left=-1*(elementPosition.left+element[0].offsetLeft-5)+"px",element.find(".tooltip-inner")[0].style.maxWidth="none";break;default:tooltipStyle.top=elementPosition.top+element[0].offsetHeight-5+"px",tooltipStyle.left=elementPosition.left+element[0].offsetWidth-5+"px"}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"tooltip.html"}return SWTooltip.Factory=function(){var directive=function($document,corePartialsPath,hibachiPathBuilder){return new SWTooltip($document,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$document","corePartialsPath","hibachiPathBuilder"],directive},SWTooltip}();exports.SWTooltip=SWTooltip},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTypeaheadInputFieldController=function(){function SWTypeaheadInputFieldController($scope,$transclude,collectionConfigService,typeaheadService,$rootScope,observerService){var _this=this;if(this.$scope=$scope,this.$transclude=$transclude,this.collectionConfigService=collectionConfigService,this.typeaheadService=typeaheadService,this.$rootScope=$rootScope,this.observerService=observerService,this.columns=[],this.filters=[],this.addFunction=function(value){if(_this.typeaheadService.typeaheadStore.dispatch({type:"TYPEAHEAD_USER_SELECTION",payload:{name:_this.fieldName||"",data:value[_this.propertyToSave]||""}}),_this.modelValue=value[_this.propertyToSave],_this.action){var data={};_this.variables&&(data=_this.variables()),data.value=_this.modelValue,_this.$root.slatwall.doAction(_this.action,data)}},this.$root=$rootScope,angular.isUndefined(this.typeaheadCollectionConfig)){if(!angular.isDefined(this.entityName))throw"You did not pass the correct collection config data to swTypeaheadInputField";this.typeaheadCollectionConfig=collectionConfigService.newCollectionConfig(this.entityName)}if(angular.isUndefined(this.validateRequired)&&(this.validateRequired=!1),this.$transclude($scope,function(){}),angular.isUndefined(this.propertyToSave))throw"You must select a property to save for the input field directive";if(angular.isDefined(this.propertiesToLoad)&&this.typeaheadCollectionConfig.addDisplayProperty(this.propertiesToLoad),angular.forEach(this.columns,function(column){_this.typeaheadCollectionConfig.addDisplayProperty(column.propertyIdentifier,"",column)}),angular.forEach(this.filters,function(filter){_this.typeaheadCollectionConfig.addFilter(filter.propertyIdentifier,filter.comparisonValue,filter.comparisonOperator,filter.logicalOperator,filter.hidden)}),angular.isDefined(this.initialEntityId)&&this.initialEntityId.length&&(this.modelValue=this.initialEntityId),this.eventListeners)for(var key in this.eventListeners)observerService.attach(this.eventListeners[key],key)}return SWTypeaheadInputFieldController}();exports.SWTypeaheadInputFieldController=SWTypeaheadInputFieldController;var SWTypeaheadInputField=function(){function SWTypeaheadInputField(corePartialsPath,hibachiPathBuilder){this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={fieldName:"@",entityName:"@",typeaheadCollectionConfig:"=?",propertiesToLoad:"@?",placeholderRbKey:"@?",propertyToShow:"@",propertyToSave:"@",initialEntityId:"@",allRecords:"=?",validateRequired:"=?",maxRecords:"@",action:"@",variables:"&?",eventListeners:"=?",placeholderText:"@?",searchEndpoint:"@?",titleText:"@?"},this.controller=SWTypeaheadInputFieldController,this.controllerAs="swTypeaheadInputField",this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"typeaheadinputfield.html"}return SWTypeaheadInputField.Factory=function(){var directive=function(corePartialsPath,hibachiPathBuilder){return new SWTypeaheadInputField(corePartialsPath,hibachiPathBuilder)};return directive.$inject=["corePartialsPath","hibachiPathBuilder"],directive},SWTypeaheadInputField}();exports.SWTypeaheadInputField=SWTypeaheadInputField},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTypeaheadMultiselectController=function(){function SWTypeaheadMultiselectController($scope,$transclude,$hibachi,listingService,typeaheadService,utilityService,collectionConfigService){var _this=this;this.$scope=$scope,this.$transclude=$transclude,this.$hibachi=$hibachi,this.listingService=listingService,this.typeaheadService=typeaheadService,this.utilityService=utilityService,this.collectionConfigService=collectionConfigService,this.addSelection=function(item){_this.typeaheadService.addSelection(_this.typeaheadDataKey,item),_this.inListingDisplay&&_this.listingService.insertListingPageRecord(_this.listingId,item)},this.removeSelection=function(index){var itemRemoved=_this.typeaheadService.removeSelection(_this.typeaheadDataKey,index);_this.inListingDisplay&&_this.listingService.removeListingPageRecord(_this.listingId,itemRemoved)},this.getSelections=function(){return _this.typeaheadService.getData(_this.typeaheadDataKey)},this.updateSelectionList=function(){_this.selectionList=_this.typeaheadService.updateSelectionList(_this.typeaheadDataKey)},angular.isUndefined(this.typeaheadDataKey)&&(this.typeaheadDataKey=this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1),angular.isUndefined(this.showSelections)&&(this.showSelections=!1),angular.isUndefined(this.multiselectMode)&&(this.multiselectMode=!0),angular.isUndefined(this.hasAddButtonFunction)&&(this.hasAddButtonFunction=!1),angular.isUndefined(this.hasViewFunction)&&(this.hasViewFunction=!1),angular.isDefined(this.selectedCollectionConfig)&&this.typeaheadService.initializeSelections(this.typeaheadDataKey,this.selectedCollectionConfig),this.typeaheadService.attachTypeaheadSelectionUpdateEvent(this.typeaheadDataKey,this.updateSelectionList)}return SWTypeaheadMultiselectController}();exports.SWTypeaheadMultiselectController=SWTypeaheadMultiselectController;var SWTypeaheadMultiselect=function(){function SWTypeaheadMultiselect($compile,scopeService,typeaheadService,corePartialsPath,hibachiPathBuilder){var _this=this;this.$compile=$compile,this.scopeService=scopeService,this.typeaheadService=typeaheadService,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={placeholderRbKey:"@",collectionConfig:"=?",selectedCollectionConfig:"=?",typeaheadDataKey:"@?",multiselectModeOn:"=?multiselectMode",showSelections:"=?",dataTarget:"=?",dataTargetIndex:"=?",addButtonFunction:"&?",viewFunction:"&?",inListingDisplay:"=?",listingId:"@?",propertyToCompare:"@?",fallbackPropertiesToCompare:"@?",rightContentPropertyIdentifier:"@?",selectionFieldName:"@?",disabled:"=?"},this.controller=SWTypeaheadMultiselectController,this.controllerAs="swTypeaheadMultiselect",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){if(angular.isDefined(attrs.addButtonFunction)?$scope.swTypeaheadMultiselect.hasAddButtonFunction=!0:$scope.swTypeaheadMultiselect.hasAddButtonFunction=!1,angular.isDefined(attrs.viewFunction)?$scope.swTypeaheadMultiselect.viewFunction=!0:$scope.swTypeaheadMultiselect.viewFunction=!1,angular.isUndefined($scope.swTypeaheadMultiselect.inListingDisplay)&&($scope.swTypeaheadMultiselect.inListingDisplay=!1),$scope.swTypeaheadMultiselect.inListingDisplay&&_this.scopeService.hasParentScope($scope,"swListingDisplay")){var listingDisplayScope=_this.scopeService.getRootParentScope($scope,"swListingDisplay").swListingDisplay;$scope.swTypeaheadMultiselect.listingId=listingDisplayScope.tableID,listingDisplayScope.typeaheadDataKey=$scope.swTypeaheadMultiselect.typeaheadDataKey}},post:function($scope,element,attrs){var target=element.find(".s-selected-list"),selectedItemTemplate=angular.element('<div class="alert s-selected-item" ng-repeat="item in swTypeaheadMultiselect.getSelections() track by $index">'),closeButton=angular.element('<button ng-click="swTypeaheadMultiselect.removeSelection($index)" type="button" class="close"><span>×</span><span class="sr-only" sw-rbkey="&apos;define.close&apos;"></span></button>');selectedItemTemplate.append(closeButton),selectedItemTemplate.append(_this.typeaheadService.stripTranscludedContent(transclude($scope,function(){}))),target.append(_this.$compile(selectedItemTemplate)($scope))}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"typeaheadmultiselect.html"}return SWTypeaheadMultiselect.Factory=function(){var directive=function($compile,scopeService,typeaheadService,corePartialsPath,hibachiPathBuilder){return new SWTypeaheadMultiselect($compile,scopeService,typeaheadService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","scopeService","typeaheadService","corePartialsPath","hibachiPathBuilder"],directive},SWTypeaheadMultiselect}();exports.SWTypeaheadMultiselect=SWTypeaheadMultiselect},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTypeaheadRemoveSelectionController=function(){function SWTypeaheadRemoveSelectionController($scope,listingService,scopeService,typeaheadService,utilityService){var _this=this;this.$scope=$scope,this.listingService=listingService,this.scopeService=scopeService,this.typeaheadService=typeaheadService,this.utilityService=utilityService,this.updatePageRecord=function(){if(_this.scopeService.hasParentScope(_this.$scope,"pageRecord")){var pageRecordScope=_this.scopeService.getRootParentScope(_this.$scope,"pageRecord").pageRecord;_this.pageRecord=pageRecordScope}},this.removeSelection=function(){_this.disabled||(_this.typeaheadService.removeSelection(_this.typeaheadDataKey,void 0,_this.pageRecord),_this.listingService.removeListingPageRecord(_this.listingId,_this.pageRecord))},this.listingService.attachToListingPageRecordsUpdate(this.listingId,this.updatePageRecord,this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1)}return SWTypeaheadRemoveSelectionController}();exports.SWTypeaheadRemoveSelectionController=SWTypeaheadRemoveSelectionController;var SWTypeaheadRemoveSelection=function(){function SWTypeaheadRemoveSelection(scopeService,corePartialsPath,hibachiPathBuilder){var _this=this;this.scopeService=scopeService,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={typeaheadDataKey:"@?",index:"@?",disabled:"=?"},this.controller=SWTypeaheadRemoveSelectionController,this.controllerAs="swTypeaheadRemoveSelection",this.link=function(scope,element,attrs){if(_this.scopeService.hasParentScope(scope,"swListingDisplay")){var listingDisplayScope=_this.scopeService.getRootParentScope(scope,"swListingDisplay").swListingDisplay;scope.swTypeaheadRemoveSelection.typeaheadDataKey=listingDisplayScope.typeaheadDataKey,scope.swTypeaheadRemoveSelection.listingId=listingDisplayScope.tableID}if(_this.scopeService.hasParentScope(scope,"pageRecord")){var pageRecordScope=_this.scopeService.getRootParentScope(scope,"pageRecord").pageRecord;scope.swTypeaheadRemoveSelection.pageRecord=pageRecordScope}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"typeaheadremoveselection.html"}return SWTypeaheadRemoveSelection.Factory=function(){var directive=function(scopeService,corePartialsPath,hibachiPathBuilder){return new SWTypeaheadRemoveSelection(scopeService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["scopeService","corePartialsPath","hibachiPathBuilder"],directive},SWTypeaheadRemoveSelection}();exports.SWTypeaheadRemoveSelection=SWTypeaheadRemoveSelection},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTypeaheadSearchController=function(){function SWTypeaheadSearchController($scope,$q,$transclude,$hibachi,$timeout,utilityService,observerService,rbkeyService,collectionConfigService,typeaheadService,$http,requestService){var _this=this;if(this.$scope=$scope,this.$q=$q,this.$transclude=$transclude,this.$hibachi=$hibachi,this.$timeout=$timeout,this.utilityService=utilityService,this.observerService=observerService,this.rbkeyService=rbkeyService,this.collectionConfigService=collectionConfigService,this.typeaheadService=typeaheadService,this.$http=$http,this.requestService=requestService,this.results=[],this.columns=[],this.filters=[],this.searchableColumns=[],this.initialSearchableColumnsState=[],this.searchableColumnSelection="All",this.fallbackPropertyArray=[],this.clearSearch=function(){_this.searchText="",_this.hideSearch=!0,angular.isDefined(_this.addFunction)&&_this.addFunction()(void 0)},this.toggleDropdown=function(){_this.dropdownOpen=!_this.dropdownOpen},this.toggleOptions=function(){!_this.hideSearch||_this.searchText&&_this.searchText.length||_this.search(_this.searchText),_this.hideSearch=!_this.hideSearch},this.rSearch=function(search){_this.typeaheadService.typeaheadStore.dispatch({type:"TYPEAHEAD_QUERY",payload:{searchText:search}})},this.search=function(search){if(!search.length)return void _this.closeThis();if(_this.rSearch(search),_this._timeoutPromise&&_this.$timeout.cancel(_this._timeoutPromise),_this.collectionConfig.setKeywords(search),angular.isDefined(_this.filterGroupsConfig)){var filterConfig=_this.filterGroupsConfig.replace("replaceWithSearchString",search);filterConfig=filterConfig.trim(),_this.collectionConfig.loadFilterGroups(JSON.parse(filterConfig))}_this._timeoutPromise=_this.$timeout(function(){var promise;promise=_this.searchEndpoint?_this.requestService.newPublicRequest("/"+_this.searchEndpoint,{search:search,options:_this.collectionConfig.getOptions(),entityName:_this.collectionConfig.baseEntityName},"post",{"Content-Type":"application/json"}).promise:_this.collectionConfig.getEntity(),promise.then(function(response){_this.results=response.pageRecords||response.records,_this.updateSelections()}).finally(function(){_this.resultsDeferred.resolve(),_this.hideSearch=0==_this.results.length})},500)},this.updateSelections=function(){_this.typeaheadService.updateSelections(_this.typeaheadDataKey)},this.updateSearchableProperties=function(column){angular.isString(column)&&"all"==column?(angular.copy(_this.initialSearchableColumnsState,_this.searchableColumns),_this.searchableColumnSelection="All"):(angular.forEach(_this.searchableColumns,function(value,key){value.isSearchable=!1}),column.isSearchable=!0,_this.searchableColumnSelection=column.title)},this.addOrRemoveItem=function(item){var remove=item.selected||!1;_this.hideSearch||_this.multiselectMode||(_this.hideSearch=!0),_this.multiselectMode||(angular.isDefined(_this.propertyToShow)?_this.searchText=item[_this.propertyToShow]:angular.isDefined(_this.columns)&&_this.columns.length&&angular.isDefined(_this.columns[0].propertyIdentifier)&&(_this.searchText=item[_this.columns[0].propertyIdentifier])),!remove&&angular.isDefined(_this.addFunction)&&_this.addFunction()(item),remove&&angular.isDefined(_this.removeFunction)&&(_this.removeFunction()(item.selectedIndex),item.selected=!1,item.selectedIndex=void 0),_this.updateSelections()},this.addButtonItem=function(){_this.hideSearch||(_this.hideSearch=!0),angular.isDefined(_this.addButtonFunction)&&_this.addButtonFunction()(_this.searchText)},this.viewButtonClick=function(){_this.viewFunction()()},this.closeThis=function(clickOutsideArgs){if(_this.hideSearch=!0,angular.isDefined(clickOutsideArgs))for(var callBackAction in clickOutsideArgs.callBackActions)clickOutsideArgs.callBackActions[callBackAction]()},this.getSelections=function(){return _this.typeaheadService.getData(_this.typeaheadDataKey)},this.dropdownOpen=!1,this.requestService=requestService,this.$transclude($scope,function(){}),this.resultsDeferred=$q.defer(),this.resultsPromise=this.resultsDeferred.promise,angular.isUndefined(this.typeaheadDataKey)&&(this.typeaheadDataKey=this.utilityService.createID(32)),angular.isUndefined(this.disabled)&&(this.disabled=!1),angular.isUndefined(this.multiselectMode)&&(this.multiselectMode=!1),angular.isUndefined(this.searchText)||null==this.searchText?this.searchText="":this.search(this.searchText),angular.isUndefined(this.validateRequired)&&(this.validateRequired=!1),angular.isUndefined(this.hideSearch)&&(this.hideSearch=!0),angular.isUndefined(this.collectionConfig)){if(!angular.isDefined(this.entity))throw"You did not pass the correct collection config data to swTypeaheadSearch";this.collectionConfig=collectionConfigService.newCollectionConfig(this.entity)}if(angular.isDefined(this.collectionConfig)&&(this.primaryIDPropertyName=$hibachi.getPrimaryIDPropertyNameByEntityName(this.collectionConfig.baseEntityName)),angular.isDefined(this.fallbackPropertiesToCompare)&&this.fallbackPropertiesToCompare.length&&(this.fallbackPropertyArray=this.fallbackPropertiesToCompare.split(",")),angular.isDefined(this.placeholderRbKey)?this.placeholderText=this.rbkeyService.getRBKey(this.placeholderRbKey):angular.isUndefined(this.placeholderText)&&(this.placeholderText=this.rbkeyService.getRBKey("define.search")),this._timeoutPromise=this.$timeout(function(){},500),angular.isDefined(this.propertiesToDisplay)&&this.collectionConfig.addDisplayProperty(this.propertiesToDisplay.split(",")),angular.forEach(this.columns,function(column){_this.collectionConfig.addDisplayProperty(column.propertyIdentifier,"",column)}),angular.forEach(this.filters,function(filter){_this.collectionConfig.addFilter(filter.propertyIdentifier,filter.comparisonValue,filter.comparisonOperator,filter.logicalOperator,filter.hidden)}),angular.isUndefined(this.allRecords)&&(this.allRecords=this.collectionConfig.allRecords),this.collectionConfig.setAllRecords(this.allRecords),angular.isUndefined(this.maxRecords)&&(this.maxRecords=10),this.collectionConfig.setPageShow(this.maxRecords),angular.isDefined(this.initialEntityId)&&this.initialEntityId.length){this.initialEntityCollectionConfig=collectionConfigService.newCollectionConfig(this.collectionConfig.baseEntityName),this.initialEntityCollectionConfig.loadColumns(this.collectionConfig.columns);var primaryIDProperty=$hibachi.getPrimaryIDPropertyNameByEntityName(this.initialEntityCollectionConfig.baseEntityName);this.initialEntityCollectionConfig.addFilter(primaryIDProperty,this.initialEntityId,"=");this.initialEntityCollectionConfig.getEntity().then(function(response){_this.results=response.pageRecords,_this.results.length&&_this.addOrRemoveItem(_this.results[0])})}angular.forEach(this.collectionConfig.columns,function(value,key){value.isSearchable&&_this.searchableColumns.push(value)}),angular.copy(this.searchableColumns,this.initialSearchableColumnsState),this.typeaheadService.setTypeaheadState(this.typeaheadDataKey,this),this.observerService.attach(this.clearSearch,this.typeaheadDataKey+"clearSearch"),this.$http=$http}return SWTypeaheadSearchController}();exports.SWTypeaheadSearchController=SWTypeaheadSearchController;var SWTypeaheadSearch=function(){function SWTypeaheadSearch($compile,typeaheadService,corePartialsPath,hibachiPathBuilder){var _this=this;this.$compile=$compile,this.typeaheadService=typeaheadService,this.corePartialsPath=corePartialsPath,this.transclude=!0,this.restrict="EA",this.scope={},this.bindToController={collectionConfig:"=?",entity:"@?",properties:"@?",propertiesToDisplay:"@?",filterGroupsConfig:"@?",placeholderText:"@?",placeholderRbKey:"@?",propertyToCompare:"@?",fallbackPropertiesToCompare:"@?",searchText:"=?",results:"=?",addFunction:"&?",removeFunction:"&?",addButtonFunction:"&?",viewFunction:"&?",showAddButton:"=?",showViewButton:"=?",validateRequired:"=?",uniqueResults:"<?",clickOutsideArguments:"=?",propertyToShow:"=?",hideSearch:"=?",allRecords:"=?",maxRecords:"=?",disabled:"=?",initialEntityId:"@",multiselectMode:"=?",typeaheadDataKey:"@?",rightContentPropertyIdentifier:"@?",searchEndpoint:"@?",allResultsEndpoint:"@?",titleText:"@?",urlBase:"@?",urlProperty:"@?"},this.controller=SWTypeaheadSearchController,this.controllerAs="swTypeaheadSearch",this.compile=function(element,attrs,transclude){return{pre:function($scope,element,attrs){angular.isDefined(attrs.addButtonFunction)&&angular.isUndefined(attrs.showAddButton)?$scope.swTypeaheadSearch.showAddButton=!0:angular.isUndefined(attrs.showAddButton)&&($scope.swTypeaheadSearch.showAddButton=!1),angular.isDefined(attrs.viewFunction)&&angular.isUndefined(attrs.showViewButton)?$scope.swTypeaheadSearch.showViewButton=!0:angular.isUndefined(attrs.showViewButton)&&($scope.swTypeaheadSearch.showViewButton=!1)},post:function($scope,element,attrs){var target=element.find(".dropdown-menu"),uniqueFilter="";$scope.swTypeaheadSearch.uniqueResults&&(uniqueFilter=" | unique:'"+_this.typeaheadService.getTypeaheadPrimaryIDPropertyName($scope.swTypeaheadSearch.typeaheadDataKey)+"'");var listItemTemplateString='\n                    <li ng-repeat="item in swTypeaheadSearch.results'+uniqueFilter+'" class="dropdown-item" ng-class="{\'s-selected\':item.selected}"></li>\n                ',anchorTemplateString="\n                    <a \n                ";if(angular.isDefined($scope.swTypeaheadSearch.urlBase)&&angular.isDefined($scope.swTypeaheadSearch.urlProperty)?anchorTemplateString+='href="'+$scope.swTypeaheadSearch.urlBase+"{{item."+$scope.swTypeaheadSearch.urlProperty+'}}">':anchorTemplateString+='ng-click="swTypeaheadSearch.addOrRemoveItem(item)">',angular.isDefined($scope.swTypeaheadSearch.rightContentPropertyIdentifier))var rightContentTemplateString='\n                        <span class="s-right-content" ng-bind="item[swTypeaheadSearch.rightContentPropertyIdentifier]"></span></a>\n                    ';else var rightContentTemplateString="</a>";if(angular.isDefined($scope.swTypeaheadSearch.allResultsEndpoint))var searchAllListItemTemplate='\n                        <li class="dropdown-item see-all-results" ng-if="swTypeaheadSearch.results.length == swTypeaheadSearch.maxRecords"><a href="{{swTypeaheadSearch.allResultsEndpoint}}?keywords={{swTypeaheadSearch.searchText}}">See All Results</a></li>\n                    ';anchorTemplateString+=rightContentTemplateString;var listItemTemplate=angular.element(listItemTemplateString),anchorTemplate=angular.element(anchorTemplateString);anchorTemplate.append(_this.typeaheadService.stripTranscludedContent(transclude($scope,function(){}))),listItemTemplate.append(anchorTemplate),$scope.swTypeaheadSearch.resultsPromise.then(function(){target.append(_this.$compile(listItemTemplate)($scope)),null!=searchAllListItemTemplate&&target.append(_this.$compile(searchAllListItemTemplate)($scope))})}}},this.templateUrl=hibachiPathBuilder.buildPartialsPath(corePartialsPath)+"typeaheadsearch.html"}return SWTypeaheadSearch.Factory=function(){var directive=function($compile,typeaheadService,corePartialsPath,hibachiPathBuilder){return new SWTypeaheadSearch($compile,typeaheadService,corePartialsPath,hibachiPathBuilder)};return directive.$inject=["$compile","typeaheadService","corePartialsPath","hibachiPathBuilder"],directive},SWTypeaheadSearch}();exports.SWTypeaheadSearch=SWTypeaheadSearch},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTypeaheadSearchLineItemController=function(){function SWTypeaheadSearchLineItemController(){}return SWTypeaheadSearchLineItemController}();exports.SWTypeaheadSearchLineItemController=SWTypeaheadSearchLineItemController;var SWTypeaheadSearchLineItem=function(){function SWTypeaheadSearchLineItem($compile){this.$compile=$compile,this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",isSearchable:"@?"},this.controller=SWTypeaheadSearchLineItemController,this.controllerAs="swTypeaheadSearchLineItem",this.compile=function(element,attrs,transclude){return{pre:function(scope,element,attrs){var innerHTML=element[0].innerHTML;element[0].innerHTML="";var span='<span ng-if="item.'+scope.swTypeaheadSearchLineItem.propertyIdentifier+'.toString().trim().length"> '+innerHTML+'</span> <span ng-bind="item.'+scope.swTypeaheadSearchLineItem.propertyIdentifier+'"></span>';element.append(span)},post:function(scope,element,attrs){}}}}return SWTypeaheadSearchLineItem.Factory=function(){var directive=function($compile){return new SWTypeaheadSearchLineItem($compile)};return directive.$inject=["$compile"],directive},SWTypeaheadSearchLineItem}();exports.SWTypeaheadSearchLineItem=SWTypeaheadSearchLineItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var GlobalSearchController=function(){function GlobalSearchController($scope,$log,$window,$timeout,$hibachi,rbkeyService){$scope.keywords="",$scope.searchResultsOpen=!1,$scope.sidebarClass="sidebar",$scope.loading=!1,$scope.resultsFound=!0,$scope.searchResults={product:{title:"Products",resultNameFilter:function(data){return data.productName},results:[],id:function(data){return data.productID}},order:{title:rbkeyService.getRBKey("entity.order_plural"),resultNameFilter:function(data){return data.orderNumber},results:[],id:function(data){return data.orderID}},brand:{title:rbkeyService.getRBKey("entity.brand_plural"),resultNameFilter:function(data){return data.brandName},results:[],id:function(data){return data.brandID}},account:{title:"Accounts",resultNameFilter:function(data){return data.firstName+" "+data.lastName},results:[],id:function(data){return data.accountID}},vendor:{title:"Vendors",resultNameFilter:function(data){return data.vendorName},results:[],id:function(data){return data.vendorID}}};var _timeoutPromise,_loadingCount=0;$scope.updateSearchResults=function(){$scope.loading=!0,$scope.showResults(),_timeoutPromise&&$timeout.cancel(_timeoutPromise),_timeoutPromise=$timeout(function(){if(""===$scope.keywords)$scope.hideResults();else{$scope.showResults(),_loadingCount=Object.keys($scope.searchResults).length;for(var entityName in $scope.searchResults)!function(entityName){$hibachi.getEntity(entityName,{keywords:$scope.keywords,pageShow:4,deferkey:"global-search-"+entityName}).then(function(data){$scope.searchResults[entityName].results=[],$scope.searchResults[entityName].title=rbkeyService.getRBKey("entity."+entityName.toLowerCase()+"_plural");for(var i in data.pageRecords)$scope.searchResults[entityName].results.push({name:$scope.searchResults[entityName].resultNameFilter(data.pageRecords[i]),link:$hibachi.buildUrl("entity.detail"+entityName)+"&"+entityName+"ID="+$scope.searchResults[entityName].id(data.pageRecords[i])});if(0==--_loadingCount){$scope.loading=!1;var _foundResults=!1;for(var _thisEntityName in $scope.searchResults)if($scope.searchResults[_thisEntityName].results.length){_foundResults=!0;break}$scope.resultsFound=_foundResults}})}(entityName)}},500)},$scope.showResults=function(){$scope.searchResultsOpen=!0,$scope.sidebarClass="sidebar s-search-width",$window.onclick=function(event){event.target.parentElement.offsetParent.classList.contains("sidebar")||($scope.hideResults(),$scope.$apply())}},$scope.hideResults=function(){$scope.searchResultsOpen=!1,$scope.sidebarClass="sidebar",$scope.search.$setPristine(),$scope.keywords="",$window.onclick=null,$scope.loading=!1,$scope.resultsFound=!0;for(var entityName in $scope.searchResults)$scope.searchResults[entityName].results=[]}}return GlobalSearchController}();exports.GlobalSearchController=GlobalSearchController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var DateFilter=function(){function DateFilter(){}return DateFilter.Factory=function($filter){return function(date,dateString){return 0===date.trim().length?"":$filter("date")(new Date(date),dateString)}},DateFilter}();exports.DateFilter=DateFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var EntityRBKey=function(){function EntityRBKey(){}return EntityRBKey.Factory=function(rbkeyService){return function(text){return angular.isDefined(text)&&angular.isString(text)&&(text=text.replace("_","").toLowerCase(),text=rbkeyService.getRBKey("entity."+text)),text}},EntityRBKey}();exports.EntityRBKey=EntityRBKey},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var PercentageFilter=function(){function PercentageFilter(){}return PercentageFilter.Factory=function(){return function(input,decimals,suffix){return decimals=angular.isNumber(decimals)?decimals:3,suffix=suffix||"%",isNaN(input)?"":Math.round(input*Math.pow(10,decimals+2))/Math.pow(10,decimals)+suffix}},PercentageFilter}();exports.PercentageFilter=PercentageFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWTrim=function(){function SWTrim(){}return SWTrim.Factory=function(rbkeyService){return function(text,max,wordwise,tail){if(void 0===wordwise&&(wordwise=!0),void 0===tail&&(tail="..."),angular.isDefined(text)&&angular.isString(text)){if(!text)return"";if(!(max=parseInt(max,10)))return text;if(text.length<=max)return text;if(text=text.substr(0,max),wordwise){var lastSpace=text.lastIndexOf(" ");-1!=lastSpace&&(text=text.substr(0,lastSpace))}return text+tail}return text}},SWTrim}();exports.SWTrim=SWTrim},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWUnique=function(){function SWUnique(){}return SWUnique.Factory=function(){return function(items,filterOn){if(!1===filterOn)return items;if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var newItems=[],extractValueToCompare=function(item){return angular.isDefined(item)&&null!=item[filterOn]?item[filterOn]:item};angular.forEach(items,function(item){for(var isDuplicate=!1,i=0;i<newItems.length;i++)if(extractValueToCompare(newItems[i])==extractValueToCompare(item)){isDuplicate=!0;break}isDuplicate||newItems.push(item)})}return newItems}},SWUnique}();exports.SWUnique=SWUnique},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentity_1=__webpack_require__(27),Account=function(_super){function Account($injector){var _this=_super.call(this,$injector)||this;return _this.giftCards=[],_this.userIsLoggedIn=function(){return""!==_this.accountID},_this}return __extends(Account,_super),Account}(baseentity_1.BaseEntity);exports.Account=Account},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentity_1=__webpack_require__(27),Address=function(_super){function Address($injector){return _super.call(this,$injector)||this}return __extends(Address,_super),Address}(baseentity_1.BaseEntity);exports.Address=Address},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentity_1=__webpack_require__(27),Cart=function(_super){function Cart($injector){var _this=_super.call(this,$injector)||this;return _this.orderRequirementsList="",_this.orderPayments=[],_this.orderItems=[],_this.orderFulfillments=[],_this.hasShippingAddressAndMethod=function(){return-1==_this.orderRequirementsList.indexOf("fulfillment")},_this.orderRequiresAccount=function(){return-1!=_this.orderRequirementsList.indexOf("account")||!_this.account.accountID},_this.getOrderItemQuantitySum=function(){var totalQuantity=0;if(angular.isDefined(_this.orderItems)){for(var orderItem in _this.orderItems)totalQuantity+=_this.orderItems[orderItem].quantity;return totalQuantity}return totalQuantity},_this}return __extends(Cart,_super),Cart}(baseentity_1.BaseEntity);exports.Cart=Cart},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var account_1=__webpack_require__(570);exports.Account=account_1.Account;var address_1=__webpack_require__(571);exports.Address=address_1.Address;var cart_1=__webpack_require__(572);exports.Cart=cart_1.Cart;var orderitem_1=__webpack_require__(574);exports.OrderItem=orderitem_1.OrderItem;var orderpayment_1=__webpack_require__(575);exports.OrderPayment=orderpayment_1.OrderPayment;var sku_1=__webpack_require__(576);exports.Sku=sku_1.Sku},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentity_1=__webpack_require__(27),OrderItem=function(_super){function OrderItem($injector){return _super.call(this,$injector)||this}return __extends(OrderItem,_super),OrderItem}(baseentity_1.BaseEntity);exports.OrderItem=OrderItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var OrderPayment=function(){function OrderPayment(){}return OrderPayment}();exports.OrderPayment=OrderPayment},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentity_1=__webpack_require__(27),Sku=function(_super){function Sku($injector){var _this=_super.call(this,$injector)||this;return _this.setNewQOH=function(value){_this.newQOH=value},_this.getNewQOH=function(){return _this.newQOH},_this}return __extends(Sku,_super),Sku}(baseentity_1.BaseEntity);exports.Sku=Sku},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var basetransient_1=__webpack_require__(61),BaseProcess=function(_super){function BaseProcess($injector){return _super.call(this,$injector)||this}return __extends(BaseProcess,_super),BaseProcess}(basetransient_1.BaseTransient);exports.BaseProcess=BaseProcess},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseprocess_1=__webpack_require__(577),Order_AddOrderPayment=function(_super){function Order_AddOrderPayment($injector){var _this=_super.call(this,$injector)||this;return _this.$injector=$injector,_this}return __extends(Order_AddOrderPayment,_super),Order_AddOrderPayment}(baseprocess_1.BaseProcess);exports.Order_AddOrderPayment=Order_AddOrderPayment},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var order_addorderpayment_1=__webpack_require__(578);exports.Order_AddOrderPayment=order_addorderpayment_1.Order_AddOrderPayment},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var request_1=__webpack_require__(169),AdminRequest=function(_super){function AdminRequest(url,data,method,headers,$injector,observerService){void 0===method&&(method="post"),void 0===headers&&(headers={"Content-Type":"application/json"});var _this=_super.call(this,url,data,method,headers,$injector)||this;return _this.observerService=observerService,_this.observerService=observerService,_this.promise.then(function(result){if(-1!=url.indexOf("api:main.post")&&data.entityName){var eventNameBase=data.entityName+data.context.charAt(0).toUpperCase()+data.context.slice(0);result.errors?_this.observerService.notify(eventNameBase+"Failure",result.data):_this.observerService.notify(eventNameBase+"Success",result.data)}_this.messages=result.messages}).catch(function(response){}),_this}return __extends(AdminRequest,_super),AdminRequest}(request_1.Request);exports.AdminRequest=AdminRequest},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var request_1=__webpack_require__(169),PublicRequest=function(_super){function PublicRequest(url,data,method,headers,$injector,observerService){void 0===headers&&(headers={"Content-Type":"application/x-www-form-urlencoded"});var _this=_super.call(this,url,data,method,headers,$injector)||this;return _this.observerService=observerService,_this.failureActions=[],_this.successfulActions=[],_this.messages=[],_this.hasSuccessfulAction=function(){return _this.successfulActions.length>0},_this.hasFailureAction=function(){return _this.failureActions.length>0},_this.observerService=observerService,_this.promise.then(function(result){_this.successfulActions=result.successfulActions;for(var i in _this.successfulActions){var successfulAction=_this.successfulActions[i];_this.observerService.notify(successfulAction.split(".")[1]+"Success",result.data)}_this.failureActions=result.failureActions;for(var i in _this.failureActions){var failureAction=_this.failureActions[i];_this.observerService.notify(failureAction.split(".")[1]+"Failure",result.data)}_this.messages=result.messages}).catch(function(response){}),_this}return __extends(PublicRequest,_super),PublicRequest}(request_1.Request);exports.PublicRequest=PublicRequest},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),AccountService=function(_super){function AccountService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"Account")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this}return __extends(AccountService,_super),AccountService}(baseentityservice_1.BaseEntityService);exports.AccountService=AccountService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var CacheService=function(){function CacheService(localStorageService){var _this=this;this.localStorageService=localStorageService,this.cacheData={},this.saveCacheData=function(){_this.localStorageService.setItem("cacheData",_this.cacheData)},this.hasKey=function(key){return!!angular.isDefined(_this.cacheData[key])},this.dateExpired=function(key){return"forever"!=_this.cacheData[key].expiresTime&&_this.cacheData[key].expiresTime<Date.now()},this.put=function(key,dataPromise,dataTarget,expiresTime){return void 0===expiresTime&&(expiresTime="forever"),_this.cacheData[key]={},_this.cacheData[key].expiresTime=expiresTime,_this.cacheData[key].dataPromise=dataPromise,_this.cacheData[key].dataTarget=dataTarget,dataPromise.then(function(response){_this.localStorageService.setItem(key,response[dataTarget])},function(reason){delete _this.cacheData[key]}),_this.saveCacheData(),dataPromise},this.reload=function(key,expiresTime){return void 0===expiresTime&&(expiresTime="forever"),_this.cacheData[key].expiresTime=expiresTime,_this.cacheData[key].dataPromise.then(function(response){_this.localStorageService.setItem(key,response[_this.cacheData[key].dataTarget])},function(reason){delete _this.cacheData[key]}),_this.saveCacheData(),_this.cacheData[key].dataPromise},this.fetch=function(key){if(_this.hasKey(key)&&!_this.dateExpired(key)){if(_this.localStorageService.hasItem(key))return _this.localStorageService.getItem(key);_this.put(key,_this.cacheData[key].dataPromise,_this.cacheData[key].dataTarget,_this.cacheData[key].expiresTime).finally(function(){return _this.localStorageService.getItem(key)})}},this.fetchOrReload=function(key,expiresTime){if(angular.isDefined(_this.fetch(key)))return _this.fetch(key);_this.reload(key,expiresTime).then(function(response){return _this.fetch(key)},function(reason){})},localStorageService.hasItem("cacheData")&&(this.cacheData=localStorageService.getItem("cacheData"))}return CacheService}();exports.CacheService=CacheService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),CartService=function(_super){function CartService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"Order","Cart")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this}return __extends(CartService,_super),CartService}(baseentityservice_1.BaseEntityService);exports.CartService=CartService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var DraggableService=function(){function DraggableService(){this.isDropAllowed=function(event){return!0},this.isMouseInFirstHalf=function(event,targetNode,relativeToParent,horizontal){var mousePointer=horizontal?event.offsetX||event.layerX:event.offsetY||event.layerY,targetSize=horizontal?targetNode.offsetWidth:targetNode.offsetHeight,targetPosition=horizontal?targetNode.offsetLeft:targetNode.offsetTop;return targetPosition=relativeToParent?targetPosition:0,mousePointer<targetPosition+targetSize/2}}return DraggableService}();exports.DraggableService=DraggableService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),EntityService=function(_super){function EntityService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService)||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this}return __extends(EntityService,_super),EntityService}(baseentityservice_1.BaseEntityService);exports.EntityService=EntityService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ExpandableService=function(){function ExpandableService(){var _this=this;this.recordStates={},this.addRecord=function(recordID,state){angular.isUndefined(state)&&(state={isLoaded:!0}),_this.recordStates[recordID]=state},this.updateState=function(recordID,state){angular.isUndefined(_this.recordStates[recordID])&&(_this.recordStates[recordID]={});for(var key in state)_this.recordStates[recordID][key]=state[key]},this.getState=function(recordID,key){if(angular.isDefined(_this.recordStates[recordID])&&angular.isDefined(key))var dataToReturn=_this.recordStates[recordID][key];else var dataToReturn=_this.recordStates[recordID];return!!angular.isDefined(dataToReturn)&&dataToReturn}}return ExpandableService}();exports.ExpandableService=ExpandableService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var FilterService=function(){function FilterService(){this.filterMatch=function(valueToCompareAgainst,comparisonOperator,comparisonValue){switch(comparisonOperator){case"!=":if(valueToCompareAgainst!=comparisonValue)return!0;break;case">":if(valueToCompareAgainst>comparisonValue)return!0;break;case">=":if(valueToCompareAgainst>=comparisonValue)return!0;break;case"<":if(valueToCompareAgainst<comparisonValue)return!0;break;case"<=":if(valueToCompareAgainst<=comparisonValue)return!0;break;case"is":if(valueToCompareAgainst==comparisonValue)return!0;break;case"is not":if(valueToCompareAgainst!=comparisonValue)return!0;break;default:if(valueToCompareAgainst==comparisonValue)return!0}return!1}}return FilterService}();exports.FilterService=FilterService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Form=function(){function Form(name,object,editing){this.$addControl=function(control){},this.$removeControl=function(control){},this.$setValidity=function(validationErrorKey,isValid,control){},this.$setDirty=function(){},this.$setPristine=function(){},this.$commitViewValue=function(){},this.$rollbackViewValue=function(){},this.$setSubmitted=function(){},this.$setUntouched=function(){},this.name=name,this.object=object,this.editing=editing}return Form}(),FormService=function(){function FormService($log){var _this=this;this.$log=$log,this.setPristinePropertyValue=function(property,value){_this._pristinePropertyValue[property]=value},this.getPristinePropertyValue=function(property){return _this._pristinePropertyValue[property]},this.setForm=function(form){_this._forms[form.name]=form},this.getForm=function(formName){return _this._forms[formName]},this.getForms=function(){return _this._forms},this.getFormsByObjectName=function(objectName){var forms=[];for(var f in _this._forms)angular.isDefined(_this._forms[f].$$swFormInfo.object)&&_this._forms[f].$$swFormInfo.object.metaData.className===objectName&&forms.push(_this._forms[f]);return forms},this.createForm=function(name,object,editing){var _form=new Form(name,object,editing);return _this.setForm(_form),_form},this.resetForm=function(form){_this.$log.debug("resetting form"),_this.$log.debug(form);for(var key in form)angular.isDefined(form[key])&&"function"==typeof form[key].$setViewValue&&angular.isDefined(form[key].$viewValue)&&(_this.$log.debug(form[key]),angular.isDefined(_this.getPristinePropertyValue(key))?form[key].$setViewValue(_this.getPristinePropertyValue(key)):form[key].$setViewValue(""),form[key].$setUntouched(!0),form[key].$render(),_this.$log.debug(form[key]));form.$submitted=!1,form.$setPristine(),form.$setUntouched()},this.$log=$log,this._forms={},this._pristinePropertyValue={}}return FormService.$inject=["$log"],FormService}();exports.FormService=FormService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiInterceptor=function(){function HibachiInterceptor($location,$q,$log,$rootScope,$window,$injector,localStorageService,alertService,appConfig,dialogService,utilityService,hibachiPathBuilder,observerService){var _this=this;this.$location=$location,this.$q=$q,this.$log=$log,this.$rootScope=$rootScope,this.$window=$window,this.$injector=$injector,this.localStorageService=localStorageService,this.alertService=alertService,this.appConfig=appConfig,this.dialogService=dialogService,this.utilityService=utilityService,this.hibachiPathBuilder=hibachiPathBuilder,this.observerService=observerService,this.urlParam=null,this.authHeader="Authorization",this.authPrefix="Bearer ",this.getJWTDataFromToken=function(str){str=str.split(".")[1];var decodedString=decodeURIComponent(_this.$window.atob(str).split("").map(function(c){return"%"+("00"+c.charCodeAt(0).toString(16)).slice(-2)}).join("")),jwtData=angular.fromJson(decodedString),now=+new Date;now=+now.toString().substr(0,jwtData.exp.toString().length),jwtData.issuer&&jwtData.issuer==_this.$window.location.hostname&&jwtData.exp>now&&(_this.$rootScope.slatwall.account||(_this.$rootScope.slatwall.account={}),_this.$rootScope.slatwall.account.accountID=jwtData.accountid)},this.request=function(config){if(_this.$log.debug("request"),"/"!==config.url.charAt(0))return config;if("GET"==config.method&&config.url.indexOf(".html")>=0&&config.url.indexOf("/")>=0)return config.url=config.url+"?instantiationKey="+_this.appConfig.instantiationKey,config;config.cache=!0,config.headers=config.headers||{},_this.localStorageService.hasItem("token")&&(config.headers["Auth-Token"]="Bearer "+_this.localStorageService.getItem("token"),_this.getJWTDataFromToken(_this.localStorageService.getItem("token")));var queryParams=_this.utilityService.getQueryParamsFromUrl(config.url);if("GET"==config.method&&queryParams[_this.appConfig.action]&&"api:main.get"===queryParams[_this.appConfig.action]){_this.$log.debug(config),config.method="POST",config.data={};var data={};angular.isDefined(config.params)&&(data=config.params);var params={};params.serializedJsonData=angular.toJson(data),params.context="GET",config.data=$.param(params),delete config.params,config.headers["Content-Type"]="application/x-www-form-urlencoded"}return config},this.requestError=function(rejection){return _this.$q.reject(rejection)},this.response=function(response){if(response.data.messages){var alerts=_this.alertService.formatMessagesToAlerts(response.data.messages);_this.alertService.addAlerts(alerts)}return response.data.hasOwnProperty("token")&&_this.localStorageService.setItem("token",response.data.token),response},this.responseError=function(rejection){if(angular.isDefined(rejection.status)&&404!==rejection.status&&403!==rejection.status&&499!==rejection.status)if(rejection.data&&rejection.data.messages){var alerts=_this.alertService.formatMessagesToAlerts(rejection.data.messages);_this.alertService.addAlerts(alerts)}else{var message={msg:"there was error retrieving data",type:"error"};_this.alertService.addAlert(message)}if(403!==rejection.status&&401!=rejection.status||_this.observerService.notify("Unauthorized"),499===rejection.status&&rejection.data&&rejection.data.messages){var $http=_this.$injector.get("$http");if("timeout"===rejection.data.messages[0].message)_this.dialogService.addPageDialog(_this.hibachiPathBuilder.buildPartialsPath("preprocesslogin"),{});else if("invalid_token"===rejection.data.messages[0].message)return $http.get(_this.baseUrl+"?"+_this.appConfig.action+"=api:main.login").then(function(loginResponse){if(200===loginResponse.status)return _this.localStorageService.setItem("token",loginResponse.data.token),rejection.config.headers=rejection.config.headers||{},rejection.config.headers["Auth-Token"]="Bearer "+loginResponse.data.token,_this.getJWTDataFromToken(loginResponse.data.token),$http(rejection.config).then(function(response){return response})},function(rejection){return rejection})}return rejection},this.$location=$location,this.$q=$q,this.$log=$log,this.$rootScope=$rootScope,this.$window=$window,this.$injector=$injector,this.localStorageService=localStorageService,this.alertService=alertService,this.appConfig=appConfig,this.dialogService=dialogService,this.utilityService=utilityService,this.hibachiPathBuilder=hibachiPathBuilder,this.baseUrl=appConfig.baseURL}return HibachiInterceptor.Factory=function(){var eventHandler=function($location,$q,$log,$rootScope,$window,$injector,localStorageService,alertService,appConfig,dialogService,utilityService,hibachiPathBuilder,observerService){return new HibachiInterceptor($location,$q,$log,$rootScope,$window,$injector,localStorageService,alertService,appConfig,dialogService,utilityService,hibachiPathBuilder,observerService)};return eventHandler.$inject=["$location","$q","$log","$rootScope","$window","$injector","localStorageService","alertService","appConfig","dialogService","utilityService","hibachiPathBuilder","observerService"],eventHandler},HibachiInterceptor}();exports.HibachiInterceptor=HibachiInterceptor},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiPathBuilder=function(){function HibachiPathBuilder(){var _this=this;this.setBaseURL=function(baseURL){_this.baseURL=baseURL},this.setBasePartialsPath=function(basePartialsPath){_this.basePartialsPath=basePartialsPath},this.setApiSubsystemName=function(apiSubsystemName){_this.apiSubsystemName=apiSubsystemName},this.buildPartialsPath=function(componentsPath){if(angular.isDefined(_this.baseURL)&&angular.isDefined(_this.basePartialsPath))return(_this.baseURL+_this.basePartialsPath+componentsPath).replace("//","/");throw"need to define baseURL and basePartialsPath in hibachiPathBuilder. Inject hibachiPathBuilder into module and configure it there"}}return HibachiPathBuilder}();exports.HibachiPathBuilder=HibachiPathBuilder},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiScope=function(){function HibachiScope(appConfig){var _this=this;this.loginDisplayed=!1,this.isValidToken=!0,this.setToken=function(token){_this.token=token;var stringArray=token.split(".");try{_this.jwtInfo=angular.fromJson(window.atob(stringArray[0]).trim()),_this.session=angular.fromJson(window.atob(stringArray[1]).trim())}catch(err){_this.isValidToken=!1}},this.config=appConfig}return HibachiScope}();exports.HibachiScope=HibachiScope},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiService=function(){function HibachiService($window,$q,$http,$timeout,$log,$rootScope,$location,$anchorScroll,requestService,utilityService,formService,rbkeyService,appConfig,_config,_jsEntities,_jsEntityInstances){var _this=this;this.$window=$window,this.$q=$q,this.$http=$http,this.$timeout=$timeout,this.$log=$log,this.$rootScope=$rootScope,this.$location=$location,this.$anchorScroll=$anchorScroll,this.requestService=requestService,this.utilityService=utilityService,this.formService=formService,this.rbkeyService=rbkeyService,this.appConfig=appConfig,this._config=_config,this._jsEntities=_jsEntities,this._jsEntityInstances=_jsEntityInstances,this._deferred={},this._resourceBundle={},this.usePublicRoutes=!1,this.buildUrl=function(action,queryString){var actionName=_this.appConfig.action,baseUrl=_this.appConfig.baseURL;return queryString=queryString||"",angular.isDefined(queryString)&&queryString.length&&0!==queryString.indexOf("&")&&(queryString="&"+queryString),baseUrl+"?"+actionName+"="+action+queryString},this.getUrlWithActionPrefix=function(){return _this.appConfig.baseURL+"/index.cfm/?"+_this.appConfig.action+"="},this.getJsEntities=function(){return _this._jsEntities},this.setJsEntities=function(jsEntities){_this._jsEntities=jsEntities},this.getJsEntityInstances=function(){return _this._jsEntityInstances},this.setJsEntityInstances=function(jsEntityInstances){_this._jsEntityInstances=jsEntityInstances},this.getEntityExample=function(entityName){return _this._jsEntityInstances[entityName]},this.getEntityMetaData=function(entityName){return _this._jsEntityInstances[entityName].metaData},this.getPropertyByEntityNameAndPropertyName=function(entityName,propertyName){return _this.getEntityMetaData(entityName)[propertyName]},this.getPrimaryIDPropertyNameByEntityName=function(entityName){return _this.getEntityExample(entityName).$$getIDName()},this.getEntityHasPropertyByEntityName=function(entityName,propertyName){return angular.isDefined(_this.getEntityMetaData(entityName)[propertyName])},this.getBaseEntityAliasFromName=function(entityName){return"_"+entityName},this.getPropertyIsObjectByEntityNameAndPropertyIdentifier=function(entityName,propertyIdentifier){var lastEntity=_this.getLastEntityNameInPropertyIdentifier(entityName,propertyIdentifier),entityMetaData=_this.getEntityMetaData(lastEntity);return angular.isDefined(entityMetaData[_this.utilityService.listLast(propertyIdentifier,".")].cfc)},this.getLastEntityNameInPropertyIdentifier=function(entityName,propertyIdentifier){if(!entityName)throw"No entity name was supplied to getLastEntityNameInPropertyIdentifier in hibachi service.";"_"===propertyIdentifier.charAt(0)&&(propertyIdentifier=_this.utilityService.listRest(propertyIdentifier.replace(/_/g,"."),"."));var propertyIdentifierArray=propertyIdentifier.split(".");if(propertyIdentifierArray[0]===entityName.toLowerCase()&&propertyIdentifierArray.shift(),propertyIdentifierArray.length>1){var propertiesStruct=_this.getEntityMetaData(entityName),currentProperty=propertyIdentifierArray.shift();if(!propertiesStruct[currentProperty]||!propertiesStruct[currentProperty].cfc)throw"The Property Identifier "+propertyIdentifier+" is invalid for the entity "+entityName;var currentEntityName=propertiesStruct[currentProperty].cfc,currentPropertyIdentifier=propertyIdentifierArray.join(".");return _this.getLastEntityNameInPropertyIdentifier(currentEntityName,currentPropertyIdentifier)}return entityName},this.populateEntity=function(entityName,data){var newEntity=_this.newEntity(entityName);return angular.extend(newEntity.data,data),newEntity},this.populateCollection=function(collectionData,collectionConfig){var entities=[],hibachiService=_this;return angular.forEach(collectionData,function(collectionItemData,key){var entity=hibachiService["new"+collectionConfig.baseEntityName.replace(_this.appConfig.applicationKey,"")]();angular.forEach(collectionConfig.columns,function(column,key){var propertyIdentifier=column.propertyIdentifier.replace(collectionConfig.baseEntityAlias.toLowerCase(),"");propertyIdentifier=_this.utilityService.replaceAll(propertyIdentifier,"_","."),"."===propertyIdentifier.charAt(0)&&(propertyIdentifier=propertyIdentifier.slice(1));var propertyIdentifierArray=propertyIdentifier.split("."),propertyIdentifierKey=propertyIdentifier.replace(/\./g,"_"),currentEntity=entity;angular.forEach(propertyIdentifierArray,function(property,key){if(key===propertyIdentifierArray.length-1)if(angular.isObject(collectionItemData[propertyIdentifierKey])&&"many-to-one"===currentEntity.metaData[property].fieldtype){var relatedEntity=hibachiService["new"+currentEntity.metaData[property].cfc]();relatedEntity.$$init(collectionItemData[propertyIdentifierKey][0]),currentEntity["$$set"+currentEntity.metaData[property].name.charAt(0).toUpperCase()+currentEntity.metaData[property].name.slice(1)](relatedEntity)}else angular.isArray(collectionItemData[propertyIdentifierKey])&&"one-to-many"===currentEntity.metaData[property].fieldtype?angular.forEach(collectionItemData[propertyIdentifierKey],function(arrayItem,key){var relatedEntity=hibachiService["new"+currentEntity.metaData[property].cfc]();relatedEntity.$$init(arrayItem),currentEntity["$$add"+currentEntity.metaData[property].singularname.charAt(0).toUpperCase()+currentEntity.metaData[property].singularname.slice(1)](relatedEntity)}):currentEntity.data[property]=collectionItemData[propertyIdentifierKey];else{var propertyMetaData=currentEntity.metaData[property];relatedEntity=angular.isUndefined(currentEntity.data[property])?"one-to-many"===propertyMetaData.fieldtype?[]:hibachiService["new"+propertyMetaData.cfc]():currentEntity.data[property],currentEntity["$$set"+propertyMetaData.name.charAt(0).toUpperCase()+propertyMetaData.name.slice(1)](relatedEntity),currentEntity=relatedEntity}})}),entities.push(entity)}),entities},this.getDefer=function(deferKey){return _this._deferred[deferKey]},this.cancelPromise=function(deferKey){var deferred=_this.getDefer(deferKey);angular.isDefined(deferred)&&deferred.resolve({messages:[{messageType:"error",message:"User Cancelled"}]})},this.newEntity=function(entityName){if(void 0!=entityName){var entityServiceName=entityName.charAt(0).toLowerCase()+entityName.slice(1)+"Service";if(angular.element(document.body).injector().has(entityServiceName)){var entityService=angular.element(document.body).injector().get(entityServiceName),functionObj=entityService["new"+entityName];if(void 0!=entityService["new"+entityName]&&functionObj&&functionObj.constructor&&functionObj.call&&functionObj.apply)return entityService["new"+entityName]()}return new _this._jsEntities[entityName]}},this.getEntityDefinition=function(entityName){return _this._jsEntities[entityName]},this.getEntity=function(entityName,options){var apiSubsystemName=_this.appConfig.apiSubsystemName||"api";angular.isUndefined(options)&&(options={}),angular.isDefined(options.deferKey)&&_this.cancelPromise(options.deferKey);var params={};if("string"==typeof options)var urlString=_this.getUrlWithActionPrefix()+apiSubsystemName+":main.get&entityName="+entityName+"&entityID="+options;else{params["P:Current"]=options.currentPage||1,params["P:Show"]=options.pageShow||10,params.keywords=options.keywords||"",params.columnsConfig=options.columnsConfig||"",params.filterGroupsConfig=options.filterGroupsConfig||"",params.joinsConfig=options.joinsConfig||"",params.orderByConfig=options.orderByConfig||"",params.groupBysConfig=options.groupBysConfig||"",params.isDistinct=options.isDistinct||!1,params.propertyIdentifiersList=options.propertyIdentifiersList||"",params.allRecords=options.allRecords||!1,params.defaultColumns=options.defaultColumns||!0,params.processContext=options.processContext||"";var urlString=_this.getUrlWithActionPrefix()+apiSubsystemName+":main.get&entityName="+entityName}angular.isDefined(options.id)&&(urlString+="&entityId="+options.id);angular.isDefined(options.transformResponse);var request=_this.requestService.newAdminRequest(urlString,params);return options.deferKey&&(_this._deferred[options.deferKey]=request),request.promise},this.getResizedImageByProfileName=function(profileName,skuIDs){var urlString=_this.getUrlWithActionPrefix()+"api:main.getResizedImageByProfileName&context=getResizedImageByProfileName&profileName="+profileName+"&skuIDs="+skuIDs;return _this.requestService.newPublicRequest(urlString).promise},this.getEventOptions=function(entityName){var urlString=_this.getUrlWithActionPrefix()+"api:main.getEventOptionsByEntityName&entityName="+entityName;return _this.requestService.newAdminRequest(urlString).promise},this.getProcessOptions=function(entityName){var urlString=_this.getUrlWithActionPrefix()+"api:main.getProcessMethodOptionsByEntityName&entityName="+entityName;return _this.requestService.newAdminRequest(urlString).promise},this.checkUniqueOrNullValue=function(object,property,value){var objectName=object.metaData.className,objectID=object.$$getID();return _this.$http.get(_this.getUrlWithActionPrefix()+"api:main.getValidationPropertyStatus&object="+objectName+"&objectID="+objectID+"&propertyidentifier="+property+"&value="+escape(value)).then(function(results){return results.data.uniqueStatus})},this.checkUniqueValue=function(object,property,value){var objectName=object.metaData.className,objectID=object.$$getID();return _this.$http.get(_this.getUrlWithActionPrefix()+"api:main.getValidationPropertyStatus&object="+objectName+"&objectID="+objectID+"&propertyidentifier="+property+"&value="+escape(value)).then(function(results){return results.data.uniqueStatus})},this.getPropertyDisplayData=function(entityName,options){var urlString=_this.getUrlWithActionPrefix()+"api:main.getPropertyDisplayData&entityName="+entityName,params={};return params.propertyIdentifiersList=options.propertyIdentifiersList||"",_this.requestService.newAdminRequest(urlString,params).promise},this.getPropertyDisplayOptions=function(entityName,options){var urlString=_this.getUrlWithActionPrefix()+"api:main.getPropertyDisplayOptions&entityName="+entityName,params={};return params.property=options.property||options.propertyIdentifier||"",angular.isDefined(options.argument1)&&(params.argument1=options.argument1),_this.requestService.newAdminRequest(urlString,params).promise},this.getPropertyTitle=function(propertyName,metaData){var propertyMetaData=metaData[propertyName];return angular.isDefined(propertyMetaData.hb_rbkey)?metaData.$$getRBKey(propertyMetaData.hb_rbkey):angular.isUndefined(propertyMetaData.persistent)?angular.isDefined(propertyMetaData.fieldtype)&&angular.isDefined(propertyMetaData.cfc)&&["one-to-many","many-to-many"].indexOf(propertyMetaData.fieldtype)>-1?metaData.$$getRBKey("entity."+metaData.className.toLowerCase()+"."+propertyName+",entity."+propertyMetaData.cfc+"_plural"):angular.isDefined(propertyMetaData.fieldtype)&&angular.isDefined(propertyMetaData.cfc)&&["many-to-one"].indexOf(propertyMetaData.fieldtype)>-1?metaData.$$getRBKey("entity."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()+",entity."+propertyMetaData.cfc):metaData.$$getRBKey("entity."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()):metaData.isProcessObject?angular.isDefined(propertyMetaData.fieldtype)&&angular.isDefined(propertyMetaData.cfc)&&["one-to-many","many-to-many"].indexOf(propertyMetaData.fieldtype)>-1?metaData.$$getRBKey("processObject."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()+",entity."+propertyMetaData.cfc.toLowerCase()+"_plural"):angular.isDefined(propertyMetaData.fieldtype)&&angular.isDefined(propertyMetaData.cfc)?metaData.$$getRBKey("processObject."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()+",entity."+propertyMetaData.cfc.toLowerCase()):metaData.$$getRBKey("processObject."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()):metaData.$$getRBKey("object."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase())},this.saveEntity=function(entityName,id,params,context){var urlString=_this.getUrlWithActionPrefix()+"api:main.post";return angular.isDefined(entityName)&&(params.entityName=entityName),angular.isDefined(id)&&(params.entityID=id),angular.isDefined(context)&&(params.context=context),_this.requestService.newAdminRequest(urlString,params).promise},this.getExistingCollectionsByBaseEntity=function(entityName){var urlString=_this.getUrlWithActionPrefix()+"api:main.getExistingCollectionsByBaseEntity&entityName="+entityName;return _this.requestService.newAdminRequest(urlString).promise},this.getFilterPropertiesByBaseEntityName=function(entityName,includeNonPersistent){void 0===includeNonPersistent&&(includeNonPersistent=!1);var urlString=_this.getUrlWithActionPrefix()+"api:main.getFilterPropertiesByBaseEntityName&EntityName="+entityName+"&includeNonPersistent="+includeNonPersistent;return _this.requestService.newAdminRequest(urlString).promise},this.login=function(emailAddress,password){var urlString=_this.appConfig.baseURL+"/index.cfm/api/auth/login",params={emailAddress:emailAddress,password:password};return _this.requestService.newAdminRequest(urlString,params).promise},this.getResourceBundle=function(locale){var locale=locale||_this.appConfig.rbLocale;if(_this._resourceBundle[locale])return _this._resourceBundle[locale];var urlString=_this.getUrlWithActionPrefix()+"api:main.getResourceBundle&instantiationKey="+_this.appConfig.instantiationKey+"&locale="+locale;return _this.requestService.newAdminRequest(urlString).promise},this.getCurrencies=function(){var urlString=_this.getUrlWithActionPrefix()+"api:main.getCurrencies&instantiationKey="+_this.appConfig.instantiationKey;return _this.requestService.newAdminRequest(urlString).promise},this.getConfig=function(){return _this._config},this.getConfigValue=function(key){return _this._config[key]},this.setConfigValue=function(key,value){_this._config[key]=value},this.setConfig=function(config){_this._config=config},this.$window=$window,this.$q=$q,this.$http=$http,this.$timeout=$timeout,this.$log=$log,this.$rootScope=$rootScope,this.$location=$location,this.$anchorScroll=$anchorScroll,this.requestService=requestService,this.utilityService=utilityService,this.formService=formService,this.rbkeyService=rbkeyService,this.appConfig=appConfig,this._config=_config,this._jsEntities=_jsEntities,this._jsEntityInstances=_jsEntityInstances}return HibachiService}();exports.HibachiService=HibachiService;var $Hibachi=function(){function $Hibachi(appConfig){var _this=this;this._config={},this.angular=angular,this.setJsEntities=function(jsEntities){_this._jsEntities=jsEntities},this.getConfig=function(){return _this._config},this.getConfigValue=function(key){return _this._config[key]},this.setConfigValue=function(key,value){_this._config[key]=value},this.setConfig=function(config){_this._config=config},this._config=appConfig,this.$get.$inject=["$window","$q","$http","$timeout","$log","$rootScope","$location","$anchorScroll","requestService","utilityService","formService","rbkeyService","appConfig"]}return $Hibachi.prototype.$get=function($window,$q,$http,$timeout,$log,$rootScope,$location,$anchorScroll,requestService,utilityService,formService,rbkeyService,appConfig){return new HibachiService($window,$q,$http,$timeout,$log,$rootScope,$location,$anchorScroll,requestService,utilityService,formService,rbkeyService,appConfig,this._config,this._jsEntities,this._jsEntityInstances)},$Hibachi}();exports.$Hibachi=$Hibachi},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiServiceDecorator=function(){function HibachiServiceDecorator($delegate,$http,$timeout,$log,$rootScope,$location,$anchorScroll,$q,utilityService,formService,rbkeyService,appConfig,observerService,hibachiValidationService,attributeMetaData){var _config=appConfig,_jsEntities={},_jsEntityInstances={},entities=appConfig.modelConfig.entities,validations=appConfig.modelConfig.validations,defaultValues=appConfig.modelConfig.defaultValues;angular.forEach(entities,function(entity){if(attributeMetaData&&attributeMetaData[entity.className]){var relatedAttributes=attributeMetaData[entity.className];for(var attributeSetCode in relatedAttributes){var attributeSet=relatedAttributes[attributeSetCode];for(var attributeCode in attributeSet.attributes){var attribute=attributeSet.attributes[attributeCode];attribute.attributeSet=attributeSet,attribute.isAttribute=!0,$.extend(entity[attributeCode],attribute)}}}$delegate["get"+entity.className]=function(options){var entityInstance=$delegate.newEntity(entity.className),entityDataPromise=$delegate.getEntity(entity.className,options);return entityDataPromise.then(function(response){if(angular.isDefined(response.processData)){entityInstance.$$init(response.data);var processObjectInstance=$delegate["new"+entity.className+"_"+options.processContext.charAt(0).toUpperCase()+options.processContext.slice(1)]();processObjectInstance.$$init(response.processData),processObjectInstance.data[entity.className.charAt(0).toLowerCase()+entity.className.slice(1)]=entityInstance,entityInstance.processObject=processObjectInstance}else entityInstance.populate?entityInstance.populate(response):entityInstance.$$init(response)}),{promise:entityDataPromise,value:entityInstance}},$delegate["new"+entity.className]=function(){var entityName=entity.className,serviceName=entityName.charAt(0).toLowerCase()+entityName.slice(1)+"Service";if(angular.element(document.body).injector().has(serviceName)){var entityService=angular.element(document.body).injector().get(serviceName);if(entityService["new"+entity.className])return entityService["new"+entity.className]()}return $delegate.newEntity(entity.className)},entity.isProcessObject=entity.className.indexOf("_")>=0,_jsEntities[entity.className]=function(){this.validations=validations[entity.className],this.metaData=entity,this.metaData.className=entity.className,relatedAttributes&&(this.attributeMetaData=relatedAttributes),entity.hb_parentPropertyName&&(this.metaData.hb_parentPropertyName=entity.hb_parentPropertyName),entity.hb_childPropertyName&&(this.metaData.hb_childPropertyName=entity.hb_childPropertyName),this.metaData.$$getRBKey=function(rbKey,replaceStringData){return rbkeyService.rbKey(rbKey,replaceStringData)},this.metaData.$$getPropertyTitle=function(propertyName){return _getPropertyTitle(propertyName,this)},this.metaData.$$getPropertyHint=function(propertyName){return _getPropertyHint(propertyName,this)},this.metaData.$$getManyToManyName=function(singularname){var metaData=this;for(var i in metaData)if(metaData[i].singularname===singularname)return metaData[i].name},this.metaData.$$getPropertyFieldType=function(propertyName){return _getPropertyFieldType(propertyName,this)},this.metaData.$$getPropertyFormatType=function(propertyName){if(this[propertyName])return _getPropertyFormatType(propertyName,this)},this.metaData.$$getDetailTabs=function(){var deferred=$q.defer(),urlString=_config.baseURL+"/index.cfm/?"+appConfig.action+"=api:main.getDetailTabs&entityName="+this.className;return $http.get(urlString).success(function(data){deferred.resolve(data)}).error(function(reason){deferred.reject(reason)}),deferred.promise},this.$$getFormattedValue=function(propertyName,formatType){return _getFormattedValue(propertyName,formatType,this)},this.data={},this.modifiedData={};var jsEntity=this;entity.isProcessObject&&function(entity){_jsEntities[entity.className].prototype={$$getID:function(){return""},$$getIDName:function(){return""}}}(entity),angular.forEach(entity,function(property){angular.isObject(property)&&angular.isDefined(property.name)&&(defaultValues&&defaultValues[entity.className]&&null!=defaultValues[entity.className][property.name]?jsEntity.data[property.name]=angular.copy(defaultValues[entity.className][property.name]):jsEntity.data[property.name]=void 0)})},_jsEntities[entity.className].prototype={$$getPropertyByName:function(propertyName){return this["$$get"+propertyName.charAt(0).toUpperCase()+propertyName.slice(1)]()},$$isPersisted:function(){return""!==this.$$getID()},$$init:function(data){_init(this,data)},$$save:function(){return _save(this)},$$delete:function(){return _delete(this)},$$getValidationsByProperty:function(property){return _getValidationsByProperty(this,property)},$$getValidationByPropertyAndContext:function(property,context){return _getValidationByPropertyAndContext(this,property,context)},$$getTitleByPropertyIdentifier:function(propertyIdentifier){if(propertyIdentifier.split(".").length>1){var listFirst=utilityService.listFirst(propertyIdentifier,"."),relatedEntityName=this.metaData[listFirst].cfc;return $delegate.newEntity(relatedEntityName).$$getTitleByPropertyIdentifier(propertyIdentifier.replace(listFirst,""))}return this.metaData.$$getPropertyTitle(propertyIdentifier)},$$getMetaData:function(propertyName){return void 0===propertyName?this.metaData:(angular.isDefined(this.metaData[propertyName].name)&&angular.isUndefined(this.metaData[propertyName].nameCapitalCase)&&(this.metaData[propertyName].nameCapitalCase=this.metaData[propertyName].name.charAt(0).toUpperCase()+this.metaData[propertyName].name.slice(1)),angular.isDefined(this.metaData[propertyName].cfc)&&angular.isUndefined(this.metaData[propertyName].cfcProperCase)&&(this.metaData[propertyName].cfcProperCase=this.metaData[propertyName].cfc.charAt(0).toLowerCase()+this.metaData[propertyName].cfc.slice(1)),this.metaData[propertyName])}},angular.forEach(relatedAttributes,function(attributeSet){angular.forEach(attributeSet.attributes,function(attribute){attribute&&attribute.attributeCode&&Object.defineProperty(_jsEntities[entity.className].prototype,attribute.attributeCode,{configurable:!0,enumerable:!1,get:function(){if(null==attribute||null!=this.data[attribute.attributeCode])return this.data[attribute.attributeCode]},set:function(value){this.data[attribute.attributeCode]=value}})})}),angular.forEach(entity,function(property){if(angular.isObject(property)&&angular.isDefined(property.name))if(angular.isDefined(property.fieldtype))if(["many-to-one"].indexOf(property.fieldtype)>=0)_jsEntities[entity.className].prototype["$$get"+property.name.charAt(0).toUpperCase()+property.name.slice(1)]=function(){var thisEntityInstance=this;if(angular.isDefined(this["$$get"+this.$$getIDName().charAt(0).toUpperCase()+this.$$getIDName().slice(1)]())){var options={columnsConfig:angular.toJson([{propertyIdentifier:"_"+this.metaData.className.toLowerCase()+"_"+property.name}]),joinsConfig:angular.toJson([{associationName:property.name,alias:"_"+this.metaData.className.toLowerCase()+"_"+property.name}]),filterGroupsConfig:angular.toJson([{filterGroup:[{propertyIdentifier:"_"+this.metaData.className.toLowerCase()+"."+this.$$getIDName(),comparisonOperator:"=",value:this.$$getID()}]}]),allRecords:!0},collectionPromise=$delegate.getEntity(entity.className,options);return collectionPromise.then(function(response){for(var i in response.records){var entityInstance=$delegate.newEntity(thisEntityInstance.metaData[property.name].cfc);angular.isArray(response.records[i][property.name])?entityInstance.$$init(response.records[i][property.name][0]):entityInstance.$$init(response.records[i][property.name]),thisEntityInstance["$$set"+property.name.charAt(0).toUpperCase()+property.name.slice(1)](entityInstance)}}),collectionPromise}return null},_jsEntities[entity.className].prototype["$$set"+property.name.charAt(0).toUpperCase()+property.name.slice(1)]=function(entityInstance){var thisEntityInstance=this,metaData=this.metaData,manyToManyName="";if(angular.isUndefined(entityInstance)){if(angular.isDefined(thisEntityInstance.data[property.name])&&delete thisEntityInstance.data[property.name],!thisEntityInstance.parents)return;for(var i=0;i<=thisEntityInstance.parents.length;i++)angular.isDefined(thisEntityInstance.parents[i])&&thisEntityInstance.parents[i].name==property.name.charAt(0).toLowerCase()+property.name.slice(1)&&thisEntityInstance.parents.splice(i,1)}else{if(property.name==="parent"+this.metaData.className){var childName="child"+this.metaData.className;manyToManyName=entityInstance.metaData.$$getManyToManyName(childName)}else entityInstance.metaData&&(manyToManyName=entityInstance.metaData.$$getManyToManyName(metaData.className.charAt(0).toLowerCase()+metaData.className.slice(1)));if(angular.isUndefined(thisEntityInstance.parents)&&(thisEntityInstance.parents=[]),thisEntityInstance.parents.push(thisEntityInstance.metaData[property.name]),angular.isDefined(manyToManyName)&&manyToManyName.length){angular.isUndefined(entityInstance.children)&&(entityInstance.children=[]);var child=entityInstance.metaData[manyToManyName];-1===entityInstance.children.indexOf(child)&&entityInstance.children.push(child),angular.isUndefined(entityInstance.data[manyToManyName])&&(entityInstance.data[manyToManyName]=[]),entityInstance.data[manyToManyName].push(thisEntityInstance)}thisEntityInstance.data[property.name]=entityInstance}},"data"!==property.name&&"validations"!==property.name&&Object.defineProperty(_jsEntities[entity.className].prototype,property.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[property.name])return this.data[property.name]},set:function(value){this["$$set"+property.name.charAt(0).toUpperCase()+property.name.slice(1)](value)}});else if(["one-to-many","many-to-many"].indexOf(property.fieldtype)>=0){if(!property.singularname)throw"need to define a singularname for "+property.fieldtype;_jsEntities[entity.className].prototype["$$add"+property.singularname.charAt(0).toUpperCase()+property.singularname.slice(1)]=function(entityInstance){if(angular.isUndefined(entityInstance))var entityInstance=$delegate.newEntity(this.metaData[property.name].cfc);var metaData=this.metaData;if("one-to-many"===metaData[property.name].fieldtype)entityInstance.data[metaData[property.name].fkcolumn.slice(0,-2)]=this;else if("many-to-many"===metaData[property.name].fieldtype){var manyToManyName=entityInstance.metaData.$$getManyToManyName(metaData.className.charAt(0).toLowerCase()+this.metaData.className.slice(1));angular.isUndefined(entityInstance.data[manyToManyName])&&(entityInstance.data[manyToManyName]=[]),entityInstance.data[manyToManyName].push(this)}if(angular.isDefined(metaData[property.name])){angular.isDefined(entityInstance.metaData[metaData[property.name].fkcolumn.slice(0,-2)])&&(angular.isUndefined(entityInstance.parents)&&(entityInstance.parents=[]),entityInstance.parents.push(entityInstance.metaData[metaData[property.name].fkcolumn.slice(0,-2)])),angular.isUndefined(this.children)&&(this.children=[]);var child=metaData[property.name];-1===this.children.indexOf(child)&&this.children.push(child)}return angular.isUndefined(this.data[property.name])&&(this.data[property.name]=[]),this.data[property.name].push(entityInstance),entityInstance},_jsEntities[entity.className].prototype["$$get"+property.name.charAt(0).toUpperCase()+property.name.slice(1)]=function(){var thisEntityInstance=this;if(angular.isDefined(this["$$get"+this.$$getIDName().charAt(0).toUpperCase()+this.$$getIDName().slice(1)])){var options={filterGroupsConfig:angular.toJson([{filterGroup:[{propertyIdentifier:"_"+property.cfc.toLowerCase()+"."+property.fkcolumn.replace("ID","")+"."+this.$$getIDName(),comparisonOperator:"=",value:this.$$getID()}]}]),allRecords:!0},collectionPromise=$delegate.getEntity(property.cfc,options);return collectionPromise.then(function(response){var entityInstances=[];for(var i in response.records){var entityInstance=thisEntityInstance["$$add"+property.singularname.charAt(0).toUpperCase()+property.singularname.slice(1)]();entityInstance.$$init(response.records[i]),angular.isUndefined(thisEntityInstance[property.name])&&(thisEntityInstance[property.name]=[]),entityInstances.push(entityInstance)}thisEntityInstance.data[property.name]=entityInstances}),collectionPromise}},Object.defineProperty(_jsEntities[entity.className].prototype,property.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[property.name])return this.data[property.name]},set:function(value){if(this.data[property.name]=[],angular.isArray(value))for(var i=0;i<value.length;i++){var item=value[i],entityInstance=$delegate.newEntity(this.metaData[property.name].cfc);entityInstance.$$init(item),this["$$add"+property.singularname.charAt(0).toUpperCase()+property.singularname.slice(1)](entityInstance)}else{var entityInstance=$delegate.newEntity(this.metaData[property.name].cfc);entityInstance.$$init(value),this["$$add"+property.singularname.charAt(0).toUpperCase()+property.singularname.slice(1)](entityInstance)}}})}else["id"].indexOf(property.fieldtype)>=0&&(_jsEntities[entity.className].prototype.$$getID=function(){return this.data[this.$$getIDName()]},_jsEntities[entity.className].prototype.$$getIDName=function(){return property.name}),"data"!==property.name&&"validations"!==property.name&&Object.defineProperty(_jsEntities[entity.className].prototype,property.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[property.name])return this.data[property.name]},set:function(value){this.data[property.name]=value}}),_jsEntities[entity.className].prototype["$$get"+property.name.charAt(0).toUpperCase()+property.name.slice(1)]=function(){return this.data[property.name]};else"data"!==property.name&&"validations"!==property.name&&Object.defineProperty(_jsEntities[entity.className].prototype,property.name,{configurable:!0,enumerable:!1,get:function(){if(null!=this.data[property.name])return this.data[property.name]},set:function(value){this.data[property.name]=value}}),_jsEntities[entity.className].prototype["$$get"+property.name.charAt(0).toUpperCase()+property.name.slice(1)]=function(){return this.data[property.name]}})}),$delegate.setJsEntities(_jsEntities),angular.forEach(_jsEntities,function(jsEntity){var jsEntityInstance=new jsEntity;_jsEntityInstances[jsEntityInstance.metaData.className]=jsEntityInstance}),$delegate.setJsEntityInstances(_jsEntityInstances);var _init=function(entityInstance,data){hibachiValidationService.init(entityInstance,data)},_getPropertyTitle=function(propertyName,metaData){return $delegate.getPropertyTitle(propertyName,metaData)},_getPropertyHint=function(propertyName,metaData){var propertyMetaData=metaData[propertyName],keyValue="";return keyValue=angular.isDefined(propertyMetaData.hb_rbkey)?metaData.$$getRBKey(propertyMetaData.hb_rbkey+"_hint"):angular.isUndefined(propertyMetaData.persistent)||angular.isDefined(propertyMetaData.persistent)&&!0===propertyMetaData.persistent?metaData.$$getRBKey("entity."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()+"_hint"):metaData.$$getRBKey("object."+metaData.className.toLowerCase()+"."+propertyName.toLowerCase()),"_missing"!==keyValue.slice(-8)?keyValue:""},_getPropertyFieldType=function(propertyName,metaData){var propertyMetaData=metaData[propertyName];if(angular.isDefined(propertyMetaData.hb_formfieldtype))return propertyMetaData.hb_formfieldtype;if(angular.isUndefined(propertyMetaData.fieldtype)||"column"===propertyMetaData.fieldtype){var dataType="";if(angular.isDefined(propertyMetaData.ormtype)?dataType=propertyMetaData.ormtype:angular.isDefined(propertyMetaData.type)&&(dataType=propertyMetaData.type),["boolean","yes_no","true_false"].indexOf(dataType)>-1)return"yesno";if(["date","timestamp"].indexOf(dataType)>-1)return"dateTime";if("array"===dataType)return"select";if("struct"===dataType)return"checkboxgroup";if(propertyName.indexOf("password")>-1)return"password"}else{if(angular.isDefined(propertyMetaData.fieldtype)&&"many-to-one"===propertyMetaData.fieldtype)return"select";if(angular.isDefined(propertyMetaData.fieldtype)&&"one-to-many"===propertyMetaData.fieldtype)return"There is no property field type for one-to-many relationship properties, which means that you cannot get a fieldtype for "+propertyName;if(angular.isDefined(propertyMetaData.fieldtype)&&"many-to-many"===propertyMetaData.fieldtype)return"listingMultiselect"}return"text"},_getPropertyFormatType=function(propertyName,metaData){if(!propertyName||!metaData)return"none";var propertyMetaData=metaData[propertyName];if(propertyMetaData.hb_formattype)return propertyMetaData.hb_formattype;if(angular.isUndefined(propertyMetaData.fieldtype)||"column"===propertyMetaData.fieldtype){var dataType="";if(angular.isDefined(propertyMetaData.ormtype)?dataType=propertyMetaData.ormtype:angular.isDefined(propertyMetaData.type)&&(dataType=propertyMetaData.type),["boolean","yes_no","true_false"].indexOf(dataType)>-1)return"yesno";if(["date","timestamp"].indexOf(dataType)>-1)return"dateTime";if(["big_decimal"].indexOf(dataType)>-1&&"weight"===propertyName.slice(-6))return"weight";if(["big_decimal"].indexOf(dataType)>-1)return"currency"}return"none"},_isSimpleValue=function(value){return!!(angular.isString(value)||angular.isNumber(value)||angular.isDate(value)||!1===value||!0===value)},_getFormattedValue=function(propertyName,formatType,entityInstance){var value=entityInstance.$$getPropertyByName(propertyName);if(angular.isUndefined(formatType)&&(formatType=entityInstance.metaData.$$getPropertyFormatType(propertyName)),"custom"===formatType);else if("rbkey"===formatType)return angular.isDefined(value)?entityInstance.$$getRBKey("entity."+entityInstance.metaData.className.toLowerCase()+"."+propertyName.toLowerCase()+"."+value):"";if(angular.isUndefined(value)){var propertyMeta=entityInstance.metaData[propertyName];return angular.isDefined(propertyMeta.hb_nullRBKey)?entityInstance.$$getRbKey(propertyMeta.hb_nullRBKey):""}if(_isSimpleValue(value)){var formatDetails={};return angular.isDefined(entityInstance.data.currencyCode)&&(formatDetails.currencyCode=entityInstance.$$getCurrencyCode()),utilityService.formatValue(value,formatType,formatDetails,entityInstance)}},_delete=function(entityInstance){var entityName=entityInstance.metaData.className,entityID=entityInstance.$$getID();return $delegate.saveEntity(entityName,entityID,{},"delete")},_addReturnedIDs=function(returnedIDs,entityInstance){for(var key in returnedIDs)if(angular.isArray(returnedIDs[key])){var arrayItems=returnedIDs[key];entityInstance.data[key];for(var i in arrayItems){var arrayItem=arrayItems[i],entityInstanceArrayItem=entityInstance.data[key][i];_addReturnedIDs(arrayItem,entityInstanceArrayItem)}}else if(angular.isObject(returnedIDs[key]))for(var k in returnedIDs[key])_addReturnedIDs(returnedIDs[key][k],entityInstance.data[key][k]);else entityInstance.data[key]=returnedIDs[key]},_save=function(entityInstance){var deferred=$q.defer();return $timeout(function(){var entityID=entityInstance.$$getID(),modifiedData=_getModifiedData(entityInstance);if(modifiedData.valid){var params={};params.serializedJsonData=utilityService.toJson(modifiedData.value);var entityName="",context="save";if(1===entityInstance.metaData.isProcessObject){var processStruct=modifiedData.objectLevel.metaData.className.split("_");entityName=processStruct[0],context=processStruct[1]}else entityName=modifiedData.objectLevel.metaData.className;$delegate.saveEntity(entityName,entityID,params,context).then(function(response){var returnedIDs=response.data;angular.isDefined(response.SUCCESS)&&!0===response.SUCCESS||angular.isDefined(response.success)&&!0===response.success?($location.url()=="/entity/"+entityName+"/create"&&response.data[modifiedData.objectLevel.$$getIDName()]&&$location.path("/entity/"+entityName+"/"+response.data[modifiedData.objectLevel.$$getIDName()],!1),_addReturnedIDs(returnedIDs,modifiedData.objectLevel),deferred.resolve(returnedIDs),observerService.notify("saveSuccess",returnedIDs),observerService.notify("saveSuccess"+entityName,returnedIDs)):(deferred.reject(angular.isDefined(response.messages)?response.messages:response),observerService.notify("saveFailed",response),observerService.notify("saveFailed"+entityName,response))},function(reason){deferred.reject(reason),observerService.notify("saveFailed",reason),observerService.notify("saveFailed"+entityName,reason)})}else{var target=$("input.ng-invalid:first:visible:enabled");if(angular.isDefined(target)){target.focus();target.attr("id");$anchorScroll()}deferred.reject("Input is invalid."),observerService.notify("validationFailed"),observerService.notify("validationFailed"+entityName)}}),deferred.promise},_getModifiedData=function(entityInstance){return getModifiedDataByInstance(entityInstance)},getModifiedDataByInstance=function(entityInstance){return hibachiValidationService.getModifiedDataByInstance(entityInstance)},_getValidationsByProperty=function(entityInstance,property){return hibachiValidationService.getValidationsByProperty(entityInstance,property)},_getValidationByPropertyAndContext=function(entityInstance,property,context){return hibachiValidationService.getValidationByPropertyAndContext(entityInstance,property,context)};return $delegate}return HibachiServiceDecorator}();exports.HibachiServiceDecorator=HibachiServiceDecorator},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HibachiValidationService=function(){function HibachiValidationService($log){var _this=this;this.$log=$log,this.getObjectSaveLevel=function(entityInstance){var objectLevel=entityInstance,entityID=entityInstance.$$getID();return angular.forEach(entityInstance.parents,function(parentObject){if(angular.isDefined(entityInstance.data[parentObject.name])&&""===entityInstance.data[parentObject.name].$$getID()&&(angular.isUndefined(entityID)||!entityID.trim().length)){var parentEntityInstance=entityInstance.data[parentObject.name];""===parentEntityInstance.$$getID()&&parentEntityInstance.forms&&(objectLevel=_this.getObjectSaveLevel(parentEntityInstance))}}),objectLevel},this.getModifiedDataByInstance=function(entityInstance){var objectSaveLevel=_this.getObjectSaveLevel(entityInstance);_this.$log.debug("objectSaveLevel : "+objectSaveLevel);var valueStruct=_this.validateObject(objectSaveLevel);return _this.$log.debug("validateObject data"),_this.$log.debug(valueStruct.value),{objectLevel:objectSaveLevel,value:valueStruct.value,valid:valueStruct.valid}},this.getValidationByPropertyAndContext=function(entityInstance,property,context){var validations=_this.getValidationsByProperty(entityInstance,property);for(var i in validations){var contexts=validations[i].contexts.split(",");for(var j in contexts)if(contexts[j]===context)return validations[i]}},this.getValidationsByProperty=function(entityInstance,property){return entityInstance.validations.properties[property]},this.validateObject=function(entityInstance){var modifiedData={},valid=!0,forms=entityInstance.forms;_this.$log.debug("process base level data");for(var f in forms){var form=forms[f];if(form.$setSubmitted(),form.$dirty&&form.$valid){for(var key in form)if(_this.$log.debug("key:"+key),"$"!==key.charAt(0)&&angular.isObject(form[key])){var inputField=form[key];void 0!==inputField.$modelValue&&""!==inputField.$modelValue&&(inputField.$dirty=!0),angular.isDefined(inputField.$valid)&&!0===inputField.$valid&&(!0===inputField.$dirty||form.autoDirty&&1==form.autoDirty)&&(angular.isDefined(entityInstance.metaData[key])&&angular.isDefined(entityInstance.metaData[key].hb_formfieldtype)&&"json"===entityInstance.metaData[key].hb_formfieldtype?modifiedData[key]=angular.toJson(inputField.$modelValue):modifiedData[key]=inputField.$modelValue)}}else form.$valid||(valid=!1)}if(modifiedData[entityInstance.$$getIDName()]=entityInstance.$$getID(),_this.$log.debug(modifiedData),_this.$log.debug("process parent data"),angular.isDefined(entityInstance.parents))for(var p in entityInstance.parents){var parentObject=entityInstance.parents[p],parentInstance=entityInstance.data[parentObject.name];angular.isUndefined(modifiedData[parentObject.name])&&(modifiedData[parentObject.name]={});var forms=parentInstance.forms;for(var f in forms){var form=forms[f];if(form.$setSubmitted(),form.$dirty&&form.$valid){for(var key in form)if("$"!==key.charAt(0)&&angular.isObject(form[key])){var inputField=form[key];void 0!==inputField.$modelValue&&""!==inputField.$modelValue&&(inputField.$dirty=!0),angular.isDefined(inputField)&&angular.isDefined(inputField.$valid)&&!0===inputField.$valid&&(!0===inputField.$dirty||form.autoDirty&&1==form.autoDirty)&&(angular.isDefined(parentInstance.metaData[key])&&angular.isDefined(parentInstance.metaData[key].hb_formfieldtype)&&"json"===parentInstance.metaData[key].hb_formfieldtype?modifiedData[parentObject.name][key]=angular.toJson(inputField.$modelValue):modifiedData[parentObject.name][key]=inputField.$modelValue)}}else form.$valid||(valid=!1)}modifiedData[parentObject.name][parentInstance.$$getIDName()]=parentInstance.$$getID()}_this.$log.debug(modifiedData),_this.$log.debug("begin child data");var childrenData=_this.validateChildren(entityInstance);return _this.$log.debug("child Data"),_this.$log.debug(childrenData),angular.extend(modifiedData,childrenData),{valid:valid,value:modifiedData}},this.validateChildren=function(entityInstance){var data={};return angular.isDefined(entityInstance.children)&&entityInstance.children.length&&(data=_this.getDataFromChildren(entityInstance)),data},this.init=function(entityInstance,data){for(var key in data)if("$"!==key.charAt(0)&&angular.isDefined(entityInstance.metaData[key])){var propertyMetaData=entityInstance.metaData[key];angular.isDefined(propertyMetaData)&&angular.isDefined(propertyMetaData.hb_formfieldtype)&&"json"===propertyMetaData.hb_formfieldtype?""!==data[key].trim()&&(entityInstance.data[key]=angular.fromJson(data[key])):entityInstance.data[key]=data[key]}},this.processForm=function(form,entityInstance){_this.$log.debug("begin process form");var data={};form.$setSubmitted();for(var key in form)if("$"!==key.charAt(0)&&angular.isObject(form[key])){var inputField=form[key];inputField.$modelValue&&(inputField.$dirty=!0),angular.isDefined(inputField)&&angular.isDefined(inputField)&&!0===inputField.$valid&&(!0===inputField.$dirty||form.autoDirty&&1==form.autoDirty)&&(angular.isDefined(entityInstance.metaData[key])&&angular.isDefined(entityInstance.metaData[key].hb_formfieldtype)&&"json"===entityInstance.metaData[key].hb_formfieldtype?data[key]=angular.toJson(inputField.$modelValue):data[key]=inputField.$modelValue)}return data[entityInstance.$$getIDName()]=entityInstance.$$getID(),_this.$log.debug("process form data"),_this.$log.debug(data),data},this.processParent=function(entityInstance){var data={};""!==entityInstance.$$getID()&&(data[entityInstance.$$getIDName()]=entityInstance.$$getID()),_this.$log.debug("processParent"),_this.$log.debug(entityInstance);var forms=entityInstance.forms;for(var f in forms){var form=forms[f];data=angular.extend(data,_this.processForm(form,entityInstance))}return data},this.processChild=function(entityInstance,entityInstanceParent){var data={},forms=entityInstance.forms;for(var f in forms){var form=forms[f];angular.extend(data,_this.processForm(form,entityInstance))}if(angular.isDefined(entityInstance.children)&&entityInstance.children.length){var childData=_this.getDataFromChildren(entityInstance);angular.extend(data,childData)}if(angular.isDefined(entityInstance.parents)&&entityInstance.parents.length){var parentData=_this.getDataFromParents(entityInstance,entityInstanceParent);angular.extend(data,parentData)}return data},this.getDataFromParents=function(entityInstance,entityInstanceParent){var data={};for(var c in entityInstance.parents){var parentMetaData=entityInstance.parents[c];if(angular.isDefined(parentMetaData)){var parent=entityInstance.data[parentMetaData.name];if(angular.isObject(parent)&&entityInstanceParent!==parent&&""!==parent.$$getID()){angular.isUndefined(data[parentMetaData.name])&&(data[parentMetaData.name]={});var parentData=_this.processParent(parent);_this.$log.debug("parentData:"+parentMetaData.name),_this.$log.debug(parentData),angular.extend(data[parentMetaData.name],parentData)}}}return data},this.getDataFromChildren=function(entityInstance){var data={};_this.$log.debug("childrenFound"),_this.$log.debug(entityInstance.children);for(var c in entityInstance.children){var childMetaData=entityInstance.children[c],children=entityInstance.data[childMetaData.name];if(_this.$log.debug(childMetaData),_this.$log.debug(children),angular.isArray(entityInstance.data[childMetaData.name]))angular.isUndefined(data[childMetaData.name])&&(data[childMetaData.name]=[]),angular.forEach(entityInstance.data[childMetaData.name],function(child,key){_this.$log.debug("process child array item");var childData=_this.processChild(child,entityInstance);_this.$log.debug("process child return"),_this.$log.debug(childData),data[childMetaData.name].push(childData)});else{angular.isUndefined(data[childMetaData.name])&&(data[childMetaData.name]={});var child=entityInstance.data[childMetaData.name];_this.$log.debug("begin process child");var childData=_this.processChild(child,entityInstance);_this.$log.debug("process child return"),_this.$log.debug(childData),angular.extend(data,childData)}}return _this.$log.debug("returning child data"),_this.$log.debug(data),data},this.$log=$log}return HibachiValidationService}();exports.HibachiValidationService=HibachiValidationService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HistoryService=function(){function HistoryService(){var _this=this;this.histories={},this.recordHistory=function(key,data,overwrite){void 0===overwrite&&(overwrite=!1),(angular.isUndefined(_this.histories[key])||overwrite)&&(_this.histories[key]=[]),_this.histories[key].push(data)},this.hasHistory=function(key){return angular.isDefined(_this.histories[key])},this.getHistory=function(key){if(angular.isDefined(_this.histories[key]))return _this.histories[key]},this.deleteHistory=function(key){_this.histories[key]=[]}}return HistoryService}();exports.HistoryService=HistoryService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var LocalStorageService=function(){function LocalStorageService($window){var _this=this;this.$window=$window,this.hasItem=function(key){try{return _this.$window.localStorage.getItem(key)&&null!==_this.$window.localStorage.getItem(key)&&"undefined"!==_this.$window.localStorage.getItem(key)}catch(e){return!1}},this.getItem=function(key){var value=_this.$window.localStorage.getItem(key);return"{"!==value.charAt(0)&&"["!==value.charAt(0)||(value=angular.fromJson(value)),value},this.setItem=function(key,data){try{(angular.isObject(data)||angular.isArray(data))&&(data=angular.toJson(data)),_this.$window.localStorage.setItem(key,data)}catch(e){}},this.$window=$window}return LocalStorageService}();exports.LocalStorageService=LocalStorageService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var MetaDataService=function(){function MetaDataService($filter,$log){var _this=this;this.$filter=$filter,this.$log=$log,this.getPropertyHintByObjectAndPropertyIdentifier=function(object,propertyIdentifier){var hint="";return _this.hasPropertyByEntityNameAndPropertyIdentifier(object,propertyIdentifier)&&(hint=_this.isAttributePropertyByEntityAndPropertyIdentifier(object,propertyIdentifier)?object.metaData&&object.metaData[propertyIdentifier].attributeHint:object.metaData.$$getPropertyHint(propertyIdentifier)),hint},this.getPropertyTitle=function(object,propertyIdentifier){var title="";return _this.hasPropertyByEntityNameAndPropertyIdentifier(object,propertyIdentifier)&&(title=_this.isAttributePropertyByEntityAndPropertyIdentifier(object,propertyIdentifier)?object.metaData&&object.metaData[propertyIdentifier].attributeName:object.metaData.$$getPropertyTitle(propertyIdentifier)),title},this.getPropertyFieldType=function(object,propertyIdentifier){var fieldType="";return _this.hasPropertyByEntityNameAndPropertyIdentifier(object,propertyIdentifier)&&(fieldType=_this.isAttributePropertyByEntityAndPropertyIdentifier(object,propertyIdentifier)?object.metaData&&object.metaData[propertyIdentifier].attributeInputType:object.metaData.$$getPropertyFieldType(propertyIdentifier)),fieldType},this.isAttributePropertyByEntityAndPropertyIdentifier=function(object,propertyIdentifier){return object.metaData&&object.metaData[propertyIdentifier]&&object.metaData[propertyIdentifier].attributeCode==propertyIdentifier},this.hasPropertyByEntityNameAndPropertyIdentifier=function(object,propertyIdentifier){return object.metaData&&object.metaData[propertyIdentifier]},this.getPropertiesList=function(){return _this._propertiesList},this.getPropertiesListByBaseEntityAlias=function(baseEntityAlias){return _this._propertiesList[baseEntityAlias]},this.setPropertiesList=function(value,key){_this._propertiesList[key]=value},this.formatPropertiesList=function(propertiesList,propertyIdentifier){propertiesList||(propertiesList={}),propertiesList.data||(propertiesList.data=[]);var simpleGroup={$$group:"simple"};propertiesList.data.push(simpleGroup);var drillDownGroup={$$group:"drilldown"};propertiesList.data.push(drillDownGroup);var compareCollections={$$group:"compareCollections"};propertiesList.data.push(compareCollections);var attributeCollections={$$group:"attribute"};propertiesList.data.push(attributeCollections);for(var i in propertiesList.data){angular.isDefined(propertiesList.data[i].ormtype)&&(angular.isDefined(propertiesList.data[i].attributeID)?propertiesList.data[i].$$group="attribute":propertiesList.data[i].$$group="simple"),angular.isDefined(propertiesList.data[i].fieldtype)&&("id"===propertiesList.data[i].fieldtype&&(propertiesList.data[i].$$group="simple"),"many-to-one"===propertiesList.data[i].fieldtype&&(propertiesList.data[i].$$group="drilldown"),"many-to-many"!==propertiesList.data[i].fieldtype&&"one-to-many"!==propertiesList.data[i].fieldtype||(propertiesList.data[i].$$group="compareCollections"));var divider="_";"simple"!=propertiesList.data[i].$$group&&"attribute"!=propertiesList.data[i].$$group||(divider="."),propertiesList.data[i].propertyIdentifier=propertyIdentifier+divider+propertiesList.data[i].name}for(var temp=[],i_1=0;i_1<=propertiesList.data.length-1;i_1++)-1!=propertiesList.data[i_1].propertyIdentifier.indexOf(".undefined")||-1!=propertiesList.data[i_1].propertyIdentifier.indexOf("_undefined")?(_this.$log.debug("removing: "+propertiesList.data[i_1].displayPropertyIdentifier),propertiesList.data[i_1].displayPropertyIdentifier="hide"):(temp.push(propertiesList.data[i_1]),_this.$log.debug(propertiesList.data[i_1]));temp.sort,propertiesList.data=temp,_this.$log.debug("----------------------PropertyList\n\n\n\n\n"),propertiesList.data=_this._orderBy(propertiesList.data,["propertyIdentifier"],!1)},this.orderBy=function(propertiesList,predicate,reverse){return _this._orderBy(propertiesList,predicate,reverse)},this.$filter=$filter,this.$log=$log,this._propertiesList={},this._orderBy=$filter("orderBy")}return MetaDataService.$inject=["$filter","$log"],MetaDataService}();exports.MetaDataService=MetaDataService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseservice_1=__webpack_require__(62),ObserverService=function(_super){function ObserverService($timeout,historyService,utilityService){var _this=_super.call(this)||this;return _this.$timeout=$timeout,_this.historyService=historyService,_this.utilityService=utilityService,_this.attach=function(callback,event,id){id||(id=_this.utilityService.createID()),event=event.toLowerCase(),id=id.toLowerCase(),_this.observers[event]||(_this.observers[event]={}),_this.observers[event][id]||(_this.observers[event][id]=[]),_this.observers[event][id].push(callback)},_this.detachById=function(id){id=id.toLowerCase();for(var event in _this.observers)_this.detachByEventAndId(event,id)},_this.detachByEvent=function(event){(event=event.toLowerCase())in _this.observers&&delete _this.observers[event]},_this.detachByEventAndId=function(event,id){event=event.toLowerCase(),id=id.toLowerCase(),event in _this.observers&&id in _this.observers[event]&&delete _this.observers[event][id]},_this.notify=function(event,parameters){return event=event.toLowerCase(),_this.$timeout(function(){for(var id in _this.observers[event])for(var _i=0,_a=_this.observers[event][id];_i<_a.length;_i++){var callback=_a[_i];callback(parameters)}})},_this.notifyById=function(event,eventId,parameters){return event=event.toLowerCase(),eventId=eventId.toLowerCase(),_this.$timeout(function(){for(var id in _this.observers[event])id==eventId&&angular.forEach(_this.observers[event][id],function(callback){callback(parameters)})})},_this.notifyAndRecord=function(event,parameters){return _this.notify(event,parameters).then(function(){_this.historyService.recordHistory(event,parameters,!0)})},_this.observers={},_this}return __extends(ObserverService,_super),ObserverService}(baseservice_1.BaseService);exports.ObserverService=ObserverService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),OrderPaymentService=function(_super){function OrderPaymentService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"OrderPayment")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this}return __extends(OrderPaymentService,_super),OrderPaymentService}(baseentityservice_1.BaseEntityService);exports.OrderPaymentService=OrderPaymentService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),OrderService=function(_super){function OrderService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"Order")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this.newOrder_AddOrderPayment=function(){return _this.newProcessObject("Order_AddOrderPayment")},_this}return __extends(OrderService,_super),OrderService}(baseentityservice_1.BaseEntityService);exports.OrderService=OrderService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var PublicService=function(){function PublicService($http,$q,$window,$location,$hibachi,$injector,requestService,accountService,cartService,orderService,observerService,appConfig,$timeout){var _this=this;this.$http=$http,this.$q=$q,this.$window=$window,this.$location=$location,this.$hibachi=$hibachi,this.$injector=$injector,this.requestService=requestService,this.accountService=accountService,this.cartService=cartService,this.orderService=orderService,this.observerService=observerService,this.appConfig=appConfig,this.$timeout=$timeout,this.requests={},this.errors={},this.baseActionPath="",this.months=[{name:"01 - JAN",value:1},{name:"02 - FEB",value:2},{name:"03 - MAR",value:3},{name:"04 - APR",value:4},{name:"05 - MAY",value:5},{name:"06 - JUN",value:6},{name:"07 - JUL",value:7},{name:"08 - AUG",value:8},{name:"09 - SEP",value:9},{name:"10 - OCT",value:10},{name:"11 - NOV",value:11},{name:"12 - DEC",value:12}],this.years=[],this.shippingAddress="",this.accountAddressEditFormIndex=[],this.showStoreSelector=[],this.showEmailSelector=[],this.imagePath={},this.successfulActions=[],this.failureActions=[],this.getErrors=function(){_this.errors={};for(var key in _this.requests){var request=_this.requests[key];Object.keys(request.errors).length&&(_this.errors[key]=request.errors)}return _this.errors},this.getExpirationYears=function(){for(var baseDate=new Date,today=baseDate.getFullYear(),start=today,i=0;i<=15;i++)_this.years.push({name:start+i,value:start+i})},this.getAccount=function(refresh){void 0===refresh&&(refresh=!1);var urlBase=_this.baseActionPath+"getAccount/";return _this.accountDataPromise&&!refresh||(_this.accountDataPromise=_this.getData(urlBase,"account","")),_this.accountDataPromise},this.getCart=function(refresh){void 0===refresh&&(refresh=!1);var urlBase=_this.baseActionPath+"getCart/";return _this.cartDataPromise&&!refresh||(_this.cartDataPromise=_this.getData(urlBase,"cart","")),_this.cartDataPromise},this.getCountries=function(refresh){void 0===refresh&&(refresh=!1);var urlBase=_this.baseActionPath+"getCountries/";return _this.countryDataPromise&&!refresh||(_this.countryDataPromise=_this.getData(urlBase,"countries","")),_this.countryDataPromise},this.getStates=function(countryCode,address,refresh){void 0===refresh&&(refresh=!1),address&&address.data&&(countryCode=address.data.countrycode||address.countrycode),"boolean"!=typeof address||angular.isDefined(refresh)||(refresh=address),angular.isDefined(countryCode)||(countryCode="US");var urlBase=_this.baseActionPath+"getStateCodeOptionsByCountryCode/";return _this.getRequestByAction("getStateCodeOptionsByCountryCode")&&_this.getRequestByAction("getStateCodeOptionsByCountryCode").loading&&!refresh?_this.stateDataPromise:(_this.stateDataPromise=_this.getData(urlBase,"states","?countryCode="+countryCode),_this.stateDataPromise)},this.refreshAddressOptions=function(address){_this.getStates(null,address),_this.getAddressOptions(null,address)},this.getStateByStateCode=function(stateCode){if(angular.isDefined(_this.states)&&angular.isDefined(_this.states.stateCodeOptions)&&angular.isDefined(stateCode))for(var state in _this.states.stateCodeOptions)if(_this.states.stateCodeOptions[state].value==stateCode)return _this.states.stateCodeOptions[state]},this.getCountryByCountryCode=function(countryCode){if(angular.isDefined(_this.countries)&&angular.isDefined(_this.countries.countryCodeOptions)){countryCode||(countryCode="US");for(var country in _this.countries.countryCodeOptions)if(_this.countries.countryCodeOptions[country].value==countryCode)return _this.countries.countryCodeOptions[country]}},this.getAddressOptions=function(countryCode,address,refresh){void 0===refresh&&(refresh=!1),address&&address.data&&(countryCode=address.data.countrycode||address.countrycode),angular.isDefined(countryCode)||(countryCode="US"),"boolean"!=typeof address||angular.isDefined(refresh)||(refresh=address);var urlBase=_this.baseActionPath+"getAddressOptionsByCountryCode/";return _this.getRequestByAction("getAddressOptionsByCountryCode")&&_this.getRequestByAction("getAddressOptionsByCountryCode").loading&&!refresh?_this.addressOptionData:(_this.addressOptionData=_this.getData(urlBase,"addressOptions","?countryCode="+countryCode),_this.addressOptionData)},this.getData=function(url,setter,param){var urlBase=url+param,request=_this.requestService.newPublicRequest(urlBase);return request.promise.then(function(result){-1!=setter.indexOf("account")&&-1!=setter.indexOf("cart")||(result.account&&delete result.account,result.cart&&delete result.cart),"cart"==setter||"account"==setter&&_this[setter]&&_this[setter].populate?_this[setter].populate(result):"states"==setter?(_this[setter]={},_this.$timeout(function(){_this[setter]=result})):_this[setter]=result}).catch(function(reason){}),_this.requests[request.getAction()]=request,request.promise},this.setShippingAddress=function(shippingAddress){_this.shippingAddress=shippingAddress},this.setBillingAddress=function(billingAddress){_this.billingAddress=billingAddress},this.selectBillingAddress=function(key){if(_this.orderPaymentObject&&_this.orderPaymentObject.forms){var address=_this.account.accountAddresses[key].address;address.accountAddressID=_this.account.accountAddresses[key].accountAddressID;for(var property in address)for(var form in _this.orderPaymentObject.forms)form=_this.orderPaymentObject.forms[form],void 0!=form["newOrderPayment.billingAddress."+property]&&form["newOrderPayment.billingAddress."+property].$setViewValue(address[property]);_this.orderPaymentObject.newOrderPayment.billingAddress=address}},this.doAction=function(action,data,method){if(_this.getRequestByAction(action)&&_this.loadingThisRequest(action,data,!1))return _this.$q.when();if(!action)throw"Action is required exception";var urlBase=_this.appConfig.baseURL;if(-1!==action.indexOf(":")?urlBase+=action:urlBase=_this.baseActionPath+action,data?(method="post",data.returnJsonObjects="cart,account"):(urlBase+=-1==urlBase.indexOf("?")?"?":"&",urlBase+="returnJsonObject=cart,account"),"post"==method){data.returnJsonObjects="cart,account";var request_1=_this.requestService.newPublicRequest(urlBase,data,method);return request_1.promise.then(function(result){_this.processAction(result,request_1)}).catch(function(response){}),_this.requests[request_1.getAction()]=request_1,request_1.promise}var url=urlBase,request_2=_this.requestService.newPublicRequest(url,data,method);return request_2.promise.then(function(result){_this.processAction(result,request_2)}).catch(function(reason){}),_this.requests[request_2.getAction()]=request_2,request_2.promise},this.uploadFile=function(action,data){_this.$timeout(function(){_this.uploadingFile=!0});var url=_this.appConfig.baseURL+action,formData=new FormData;formData.append("fileName",data.fileName),formData.append("uploadFile",data.uploadFile);var xhr=new XMLHttpRequest;xhr.open("POST",url,!0),xhr.onload=function(result){var response=JSON.parse(xhr.response);200===xhr.status&&(_this.processAction(response,null),_this.successfulActions=response.successfulActions,_this.failureActions=response.failureActions),_this.$timeout(function(){_this.uploadingFile=!1})},xhr.send(formData)},this.processAction=function(response,request){if(_this.runCheckoutAdjustments(response),request&&request.hasSuccessfulAction()){_this.successfulActions=[];for(var action in request.successfulActions){if(-1!==request.successfulActions[action].indexOf("public:cart.placeOrder"))return void(_this.$window.location.href=_this.confirmationUrl);if(-1!==request.successfulActions[action].indexOf("public:cart.finalizeCart"))return void(_this.$window.location.href=_this.checkoutUrl);-1!==request.successfulActions[action].indexOf("public:account.logout")&&(_this.account=_this.$hibachi.newAccount()),_this.successfulActions.push(request.successfulActions[action].split(".")[1])}}if(request&&request.hasFailureAction()){_this.failureActions=[];for(var action in request.failureActions)_this.failureActions.push(request.failureActions[action].split(".")[1])}response.account&&(_this.account.populate(response.account),_this.account.request=request),response.cart&&(_this.cart.populate(response.cart),_this.cart.request=request),_this.errors=response.errors},this.runCheckoutAdjustments=function(response){_this.filterErrors(response),response.cart&&_this.removeInvalidOrderPayments(response.cart)},this.getRequestByAction=function(action){return _this.requests[action]},this.userIsLoggedIn=function(){return _this.account.userIsLoggedIn()},this.getActivePaymentMethods=function(){var urlString="/?"+_this.appConfig.action+"=admin:ajax.getActivePaymentMethods",request=_this.requestService.newPublicRequest(urlString).then(function(result){angular.isDefined(result.data.paymentMethods)&&(_this.paymentMethods=result.data.paymentMethods)});_this.requests[request.getAction()]=request},this.filterErrors=function(response){if(response&&response.cart&&response.cart.errors){var cartErrors=response.cart.errors;cartErrors.addOrderPayment&&(cartErrors.addOrderPayment=cartErrors.addOrderPayment.filter(function(error){return"billingAddress"!=error}))}},this.loadingThisRequest=function(action,conditions,strict){var request=_this.getRequestByAction(action);if(!request||!request.loading)return!1;for(var identifier in conditions)if((!0!==conditions[identifier]||strict)&&request.data[identifier]!=conditions[identifier])return!1;return!0},this.removeInvalidOrderPayments=function(cart){cart.orderPayments=cart.orderPayments.filter(function(payment){return!payment.hasErrors})},this.getPaymentMethodID=function(name){for(var method in _this.paymentMethods)if(_this.paymentMethods[method].paymentMethodName==name&&"Yes "==_this.paymentMethods[method].activeFlag)return _this.paymentMethods[method].paymentMethodID},this.hasPaymentMethod=function(paymentMethodName){for(var _i=0,_a=_this.cart.orderPayments;_i<_a.length;_i++){if(_a[_i].paymentMethod.paymentMethodName===paymentMethodName)return!0}return!1},this.hasCreditCardPaymentMethod=function(){return _this.hasPaymentMethod("Credit Card")},this.hasPaypalPaymentMethod=function(){return _this.hasPaymentMethod("PayPal Express")},this.hasGiftCardPaymentMethod=function(){return _this.hasPaymentMethod("Gift Card")},this.hasMoneyOrderPaymentMethod=function(){return _this.hasPaymentMethod("Money Order")},this.hasCashPaymentMethod=function(){return _this.hasPaymentMethod("Cash")},this.hasFulfillmentMethod=function(fulfillmentMethodName){for(var _i=0,_a=_this.cart.orderFulfillments;_i<_a.length;_i++){if(_a[_i].fulfillmentMethod.fulfillmentMethodName===fulfillmentMethodName)return!0}return!1},this.hasShippingFulfillmentMethod=function(){return _this.hasFulfillmentMethod("Shipping")},this.hasEmailFulfillmentMethod=function(){return _this.hasFulfillmentMethod("Email")},this.hasPickupFulfillmentMethod=function(){return _this.hasFulfillmentMethod("Pickup")},this.getFulfillmentType=function(fulfillment){return fulfillment.fulfillmentMethod.fulfillmentMethodType},this.isShippingFulfillment=function(fulfillment){return"shipping"===_this.getFulfillmentType(fulfillment)},this.isEmailFulfillment=function(fulfillment){return"email"===_this.getFulfillmentType(fulfillment)},this.isPickupFulfillment=function(fulfillment){return"pickup"===_this.getFulfillmentType(fulfillment)},this.hasShippingAddress=function(fulfillmentIndex){return _this.cart.orderFulfillments[fulfillmentIndex]&&_this.isShippingFulfillment(_this.cart.orderFulfillments[fulfillmentIndex])&&_this.cart.orderFulfillments[fulfillmentIndex].data.shippingAddress&&_this.cart.orderFulfillments[fulfillmentIndex].data.shippingAddress.addressID},this.hasShippingMethodOptions=function(fulfillmentIndex){var shippingMethodOptions=_this.cart.orderFulfillments[fulfillmentIndex].shippingMethodOptions;return shippingMethodOptions&&shippingMethodOptions.length&&(shippingMethodOptions.length>1||shippingMethodOptions[0].value&&shippingMethodOptions[0].value.length)},this.hasPickupLocation=function(fulfillmentIndex){return _this.cart.orderFulfillments[fulfillmentIndex]&&_this.isPickupFulfillment(_this.cart.orderFulfillments[fulfillmentIndex])&&_this.cart.orderFulfillments[fulfillmentIndex].pickupLocation},this.orderRequiresFulfillment=function(){return _this.cart.orderRequiresFulfillment()},this.orderRequiresAccount=function(){return _this.cart.orderRequiresAccount()},this.hasShippingAddressAndMethod=function(){return _this.cart.hasShippingAddressAndMethod()},this.hasAccount=function(){return!!_this.account.accountID},this.redirectExact=function(url){_this.$window.location.href=url},this.isUndefinedOrEmpty=function(object,property){return!angular.isDefined(object[property])||""==object[property]},this.getOrderItemQuantitySum=function(){return angular.isDefined(_this.cart)?_this.cart.getOrderItemQuantitySum():0},this.getSelectedStateIndexFromStateCode=function(stateCode,states){for(var state in states)if(states[state].value==stateCode)return state},this.isMobile=function(){return _this.$window.innerWidth<=800&&_this.$window.innerHeight<=600},this.isSelectedShippingMethod=function(option,fulfillmentIndex){if("number"==typeof option||"string"==typeof option){for(var value=fulfillmentIndex,orderFulfillment=void 0,_i=0,_a=_this.cart.orderFulfillments;_i<_a.length;_i++){var fulfillment=_a[_i];_this.isShippingFulfillment(fulfillment)&&(orderFulfillment=fulfillment)}return!!(_this.cart.fulfillmentTotal&&value==orderFulfillment.shippingMethod.shippingMethodID||1==orderFulfillment.shippingMethodOptions.length)}return _this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod&&_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod.shippingMethodID==option.value||1==_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethodOptions.length},this.selectShippingMethod=function(option,fulfillmentIndex){var data={shippingMethodID:option.value,fulfillmentID:_this.cart.orderFulfillments[fulfillmentIndex].orderFulfillmentID};_this.doAction("addShippingMethodUsingShippingMethodID",data),_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod||(_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod={}),_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod.shippingMethodID=option.value},this.removePromoCode=function(code){_this.doAction("removePromotionCode",{promotionCode:code})},this.getTotalMinusGiftCards=function(){var total=_this.getAppliedGiftCardTotals();return _this.cart.calculatedTotal-total},this.formatPaymentMethod=function(paymentMethod){return(paymentMethod.accountPaymentMethodName||paymentMethod.nameOnCreditCard)+" - "+paymentMethod.creditCardType+" *"+paymentMethod.creditCardLastFour+" exp. "+("0"+paymentMethod.expirationMonth).slice(-2)+"/"+paymentMethod.expirationYear.toString().slice(-2)},this.getOrderItemSkuIDs=function(cart){return cart.orderItems.map(function(item){return item.sku.skuID}).join(",")},this.getResizedImageByProfileName=function(profileName,skuIDs){_this.loading=!0,void 0==profileName&&(profileName="medium"),_this.doAction("getResizedImageByProfileName",{profileName:profileName,skuIds:skuIDs}).then(function(result){if(angular.isDefined(_this.imagePath)||(_this.imagePath={}),result.resizedImagePaths)for(var skuID in result.resizedImagePaths)_this.imagePath[skuID]=result.resizedImagePaths[skuID]})},this.getPaymentTotals=function(){var total=0;for(var index in _this.cart.orderPayments)total+=Number(_this.cart.orderPayments[index].amount.toFixed(2));return total},this.getTotalMinusPayments=function(){var total=_this.getPaymentTotals();return _this.cart.calculatedTotal-total},this.paymentsEqualTotalBalance=function(){return 0==_this.getTotalMinusPayments()},this.checkIfFinalPayment=function(){(_this.getRequestByAction("addOrderPayment")&&_this.getRequestByAction("addOrderPayment").hasSuccessfulAction()||_this.getRequestByAction("addGiftCardOrderPayment")&&_this.getRequestByAction("addGiftCardOrderPayment").hasSuccessfulAction())&&_this.paymentsEqualTotalBalance()&&(_this.edit="review")},this.getAddressEntity=function(address){var addressEntity=_this.$hibachi.newAddress();if(address)for(var key in address)address.hasOwnProperty(key)&&(addressEntity[key]=address[key]);return addressEntity},this.resetRequests=function(request){delete _this.requests[request]},this.addressesMatch=function(address1,address2){return!(!angular.isDefined(address1)||!angular.isDefined(address2)||address1.streetAddress!=address2.streetAddress||address1.street2Address!=address2.street2Address||address1.city!=address2.city||address1.postalCode!=address2.postalCode||address1.stateCode!=address2.stateCode||address1.countrycode!=address2.countrycode)},this.showFulfillmentTabBody=function(){return!!_this.hasAccount()&&(-1==_this.cart.orderRequirementsList.indexOf("account")&&-1!=_this.cart.orderRequirementsList.indexOf("fulfillment")&&!_this.edit||"fulfillment"==_this.edit)},this.showPaymentTabBody=function(){return!!_this.hasAccount()&&(-1==_this.cart.orderRequirementsList.indexOf("account")&&-1==_this.cart.orderRequirementsList.indexOf("fulfillment")&&-1!=_this.cart.orderRequirementsList.indexOf("payment")&&!_this.edit||-1==_this.cart.orderRequirementsList.indexOf("account")&&-1==_this.cart.orderRequirementsList.indexOf("fulfillment")&&"payment"==_this.edit)},this.showReviewTabBody=function(){return!!_this.hasAccount()&&!(-1!=_this.cart.orderRequirementsList.indexOf("account")||-1!=_this.cart.orderRequirementsList.indexOf("fulfillment")||-1!=_this.cart.orderRequirementsList.indexOf("payment")||_this.edit&&"review"!=_this.edit)},this.fulfillmentTabIsActive=function(){return!!_this.hasAccount()&&!("fulfillment"!=_this.edit&&(_this.edit||-1!=_this.cart.orderRequirementsList.indexOf("account")||!_this.account.accountID||-1==_this.cart.orderRequirementsList.indexOf("fulfillment")))},this.paymentTabIsActive=function(){return!!_this.hasAccount()&&!("payment"!=_this.edit&&(_this.edit||-1!=_this.cart.orderRequirementsList.indexOf("account")||!_this.account.accountID||-1!=_this.cart.orderRequirementsList.indexOf("fulfillment")||-1==_this.cart.orderRequirementsList.indexOf("payment")))},this.isCreatingAccount=function(){return!_this.hasAccount()&&_this.showCreateAccount},this.isSigningIn=function(){return!_this.hasAccount()&&!_this.showCreateAccount},this.loginError=function(){if(_this.account.processObjects&&_this.account.processObjects.login&&_this.account.processObjects.login.hasErrors)return _this.account.processObjects.login.errors.emailAddress[0]},this.createAccountError=function(){if(_this.account.processObjects&&_this.account.processObjects.create&&_this.account.processObjects.create.hasErrors)return _this.account.processObjects.create.errors},this.forgotPasswordNotSubmitted=function(){return!_this.account.processObjects||!_this.account.hasErrors&&!_this.account.processObjects.forgotPassword},this.forgotPasswordSubmitted=function(){return _this.account.processObjects&&_this.account.processObjects.forgotPassword},this.forgotPasswordHasNoErrors=function(){return _this.account.processObjects&&_this.account.processObjects.forgotPassword&&!_this.account.processObjects.forgotPassword.hasErrors},this.forgotPasswordError=function(){if(_this.forgotPasswordSubmitted()&&!_this.forgotPasswordHasNoErrors())return _this.account.processObjects.forgotPassword.errors.emailAddress[0]},this.placeOrderFailure=function(){var errors=[];for(var key in _this.cart.errors){var errArray=_this.cart.errors[key];errors=errors.concat(errArray)}_this.cart.errors.runPlaceOrderTransaction=errors,_this.edit=""},this.placeOrderError=function(){if(_this.cart.hasErrors&&_this.cart.errors.runPlaceOrderTransaction)return _this.cart.errors.runPlaceOrderTransaction},this.addOrderPaymentError=function(){return _this.cart.errors.addOrderPayment?_this.cart.errors.addOrderPayment:_this.cart.errors.runPlaceOrderTransaction?_this.cart.errors.runPlaceOrderTransaction:!!angular.isDefined(_this.errors)&&_this.errors.ADDORDERPAYMENT},this.addBillingAddressError=function(){if(_this.loadingThisRequest("addOrderPayment",{},!1))return!1;if(_this.errors&&_this.errors.copied)return _this.addBillingAddressErrors;if(_this.addBillingAddressErrors=_this.cart.errors.addBillingAddress||!!angular.isDefined(_this.errors)&&_this.errors.addBillingAddress,!_this.billingAddressEditFormIndex&&_this.errors&&_this.hasFailureAction("addBillingAddress")){var addressProperties=_this.$hibachi.newAddress().data;for(var property in _this.errors)addressProperties.hasOwnProperty(property)&&(_this.addBillingAddressErrors=_this.addBillingAddressErrors||[],_this.errors[property].forEach(function(error){_this.addBillingAddressErrors.push(error)}));_this.errors.copied=1}return _this.addBillingAddressErrors},this.giftCardError=function(){if(_this.cart.processObjects&&_this.cart.processObjects.addOrderPayment&&_this.cart.processObjects.addOrderPayment.errors&&_this.cart.processObjects.addOrderPayment.errors.giftCardID)return _this.cart.processObjects.addOrderPayment.errors.giftCardID[0]},this.editAccountAddress=function(key,fulfillmentIndex){_this.clearShippingAddressErrors(),_this.accountAddressEditFormIndex[fulfillmentIndex]=key,_this.editingAccountAddress=_this.getAddressEntity(_this.account.accountAddresses[key].address),_this.editingAccountAddress.accountAddressName=_this.account.accountAddresses[key].accountAddressName,_this.editingAccountAddress.accountAddressID=_this.account.accountAddresses[key].accountAddressID},this.editBillingAddress=function(key,formName){_this.clearMessages(),_this.billingAddressEditFormIndex=key,_this.selectedBillingAddress=null,formName?(_this[formName+"BillingAddress"]=_this.getAddressEntity(_this.account.accountAddresses[key].address),_this[formName+"BillingAddress"].accountAddressName=_this.account.accountAddresses[key].accountAddressName,_this[formName+"BillingAddress"].accountAddressID=_this.account.accountAddresses[key].accountAddressID):(_this.billingAddress=_this.getAddressEntity(_this.account.accountAddresses[key].address),_this.billingAddress.accountAddressName=_this.account.accountAddresses[key].accountAddressName,_this.billingAddress.accountAddressID=_this.account.accountAddresses[key].accountAddressID)},this.clearShippingAddressErrors=function(){_this.clearMessages(),_this.shippingAddressErrors=void 0},this.clearMessages=function(){_this.successfulActions=[],_this.failureActions=[]},this.hideAccountAddressForm=function(fulfillmentIndex){_this.accountAddressEditFormIndex[fulfillmentIndex]=void 0},this.hideBillingAddressForm=function(){if(void 0!=_this.billingAddressEditFormIndex){var index=_this.billingAddressEditFormIndex;"new"==_this.billingAddressEditFormIndex&&(index=_this.account.accountAddresses.length-1),_this.selectBillingAddress(index)}_this.billingAddressEditFormIndex=void 0,_this.billingAddress={}},this.editingDifferentAccountAddress=function(fulfillmentIndex){for(var index=0;index<_this.cart.orderFulfillments.length;index++)if(index!==fulfillmentIndex&&void 0!=_this.accountAddressEditFormIndex[index])return!0},this.showEditAccountAddressForm=function(fulfillmentIndex){return void 0!=_this.accountAddressEditFormIndex[fulfillmentIndex]&&"new"!=_this.accountAddressEditFormIndex[fulfillmentIndex]},this.showNewAccountAddressForm=function(fulfillmentIndex){return"new"==_this.accountAddressEditFormIndex[fulfillmentIndex]},this.showNewBillingAddressForm=function(){return!_this.useShippingAsBilling&&"new"==_this.billingAddressEditFormIndex},this.showEditBillingAddressForm=function(){return!_this.useShippingAsBilling&&void 0!=_this.billingAddressEditFormIndex&&"new"!=_this.billingAddressEditFormIndex},this.addBillingErrorsToCartErrors=function(){var cartErrors=_this.cart.errors;if(cartErrors.addOrderPayment){var deleteIndex=cartErrors.addOrderPayment.indexOf("billingAddress");deleteIndex>-1&&cartErrors.addOrderPayment.splice(deleteIndex,1),0==cartErrors.addOrderPayment.length&&(cartErrors.addOrderPayment=null)}cartErrors.addBillingAddress=[];for(var key in _this.errors)_this.cart.errors.addBillingAddress=_this.cart.errors.addBillingAddress.concat(_this.errors[key])},this.accountAddressIsSelectedShippingAddress=function(key,fulfillmentIndex){return!(!(_this.account&&_this.account.accountAddresses&&_this.cart.orderFulfillments[fulfillmentIndex].shippingAddress)||_this.cart.orderFulfillments[fulfillmentIndex].shippingAddress.hasErrors)&&_this.addressesMatch(_this.account.accountAddresses[key].address,_this.cart.orderFulfillments[fulfillmentIndex].shippingAddress)},this.accountAddressIsSelectedBillingAddress=function(key){return!!(_this.account&&_this.account.accountAddresses&&_this.orderPaymentObject&&_this.orderPaymentObject.newOrderPayment&&_this.orderPaymentObject.newOrderPayment.billingAddress)&&_this.account.accountAddresses[key].accountAddressID==_this.orderPaymentObject.newOrderPayment.billingAddress.accountAddressID},this.hasEmailFulfillmentAddress=function(fulfillmentIndex){return Boolean(_this.cart.orderFulfillments[fulfillmentIndex].emailAddress)},this.getEligiblePaymentMethodsForPaymentMethodType=function(paymentMethodType){return _this.cart.eligiblePaymentMethodDetails.filter(function(paymentMethod){return paymentMethod.paymentMethod.paymentMethodType==paymentMethodType})},this.getEligibleCreditCardPaymentMethods=function(){return _this.getEligiblePaymentMethodsForPaymentMethodType("creditCard")},this.getPickupLocation=function(fulfillmentIndex){if(_this.cart.data.orderFulfillments[fulfillmentIndex])return _this.cart.data.orderFulfillments[fulfillmentIndex].pickupLocation},this.getShippingAddress=function(fulfillmentIndex){if(_this.cart.data.orderFulfillments[fulfillmentIndex])return _this.cart.data.orderFulfillments[fulfillmentIndex].data.shippingAddress},this.getEmailFulfillmentAddress=function(fulfillmentIndex){if(_this.cart.data.orderFulfillments[fulfillmentIndex])return _this.cart.data.orderFulfillments[fulfillmentIndex].emailAddress},this.getPickupLocations=function(){var locations=[];return _this.cart.orderFulfillments.forEach(function(fulfillment,index){"pickup"==_this.getFulfillmentType(fulfillment)&&fulfillment.pickupLocation&&fulfillment.pickupLocation.locationID&&(fulfillment.pickupLocation.fulfillmentIndex=index,locations.push(fulfillment.pickupLocation))}),locations},this.getShippingAddresses=function(){var addresses=[];return _this.cart.orderFulfillments.forEach(function(fulfillment,index){"shipping"==_this.getFulfillmentType(fulfillment)&&fulfillment.data.shippingAddress&&fulfillment.data.shippingAddress.addressID&&(fulfillment.data.shippingAddress.fulfillmentIndex=index,addresses.push(fulfillment.data.shippingAddress))}),addresses},this.getEmailFulfillmentAddresses=function(){var addresses=[];return _this.cart.orderFulfillments.forEach(function(fulfillment,index){"email"==_this.getFulfillmentType(fulfillment)&&fulfillment.emailAddress&&(fulfillment.fulfillmentIndex=index,addresses.push(fulfillment))}),addresses},this.hasSuccessfulAction=function(actionList){for(var _i=0,_a=actionList.split(",");_i<_a.length;_i++){var action=_a[_i];if(_this.successfulActions.indexOf(action)>-1)return!0}return!1},this.hasFailureAction=function(actionList){for(var _i=0,_a=actionList.split(",");_i<_a.length;_i++){var action=_a[_i];if(_this.failureActions.indexOf(action)>-1)return!0}return!1},this.shippingUpdateSuccess=function(){return _this.hasSuccessfulAction("addShippingAddressUsingAccountAddress,addShippingAddress")},this.shippingMethodUpdateSuccess=function(){return _this.hasSuccessfulAction("addShippingMethodUsingShippingMethodID")},this.updatedBillingAddress=function(){return _this.hasSuccessfulAction("updateAddress")&&!_this.hasSuccessfulAction("addShippingAddress")},this.addedBillingAddress=function(){return _this.hasSuccessfulAction("addNewAccountAddress")&&!_this.hasSuccessfulAction("addShippingAddressUsingAccountAddress")},this.addedShippingAddress=function(){return _this.hasSuccessfulAction("addNewAccountAddress")&&_this.hasSuccessfulAction("addShippingAddressUsingAccountAddress")},this.emailFulfillmentUpdateSuccess=function(){return _this.hasSuccessfulAction("addEmailFulfillmentAddress")},this.pickupLocationUpdateSuccess=function(){return _this.hasSuccessfulAction("addEmailFulfillmentAddress")},this.namelessPickupLocation=function(fulfillmentIndex){return!!_this.getPickupLocation(fulfillmentIndex)&&(void 0!=_this.getPickupLocation(fulfillmentIndex).primaryAddress&&void 0==_this.getPickupLocation(fulfillmentIndex).locationName)},this.noPickupLocation=function(fulfillmentIndex){return!_this.getPickupLocation(fulfillmentIndex)||void 0==_this.getPickupLocation(fulfillmentIndex).primaryAddress&&void 0==_this.getPickupLocation(fulfillmentIndex).locationName},this.disableContinueToPayment=function(){return-1!=_this.cart.orderRequirementsList.indexOf("fulfillment")},this.hasAccountPaymentMethods=function(){return _this.account&&_this.account.accountPaymentMethods&&_this.account.accountPaymentMethods.length},this.showBillingAccountAddresses=function(){return!_this.useShippingAsBilling&&void 0==_this.billingAddressEditFormIndex},this.hasNoCardInfo=function(){return!(_this.newCardInfo&&_this.newCardInfo.nameOnCreditCard&&_this.newCardInfo.cardNumber&&_this.newCardInfo.cvv)},this.isGiftCardPayment=function(payment){return payment.giftCard&&payment.giftCard.giftCardCode},this.isPurchaseOrderPayment=function(payment){return payment.purchaseOrderNumber},this.isCheckOrMoneyOrderPayment=function(payment){return"Check or Money Order"==payment.paymentMethod.paymentMethodName},this.orderHasNoPayments=function(){return!_this.cart.orderPayments.filter(function(payment){return 0!=payment.amount}).length},this.hasProductNameAndNoSkuName=function(orderItem){return!orderItem.sku.skuName&&orderItem.sku.product&&orderItem.sku.product.productName},this.cartHasNoItems=function(){return!_this.getRequestByAction("getCart").loading&&_this.hasAccount()&&_this.cart&&_this.cart.orderItems&&!_this.cart.orderItems.length&&!_this.loading&&!_this.orderPlaced},this.hasAccountAndCartItems=function(){return _this.hasAccount()&&!_this.cartHasNoItems()},this.hideStoreSelector=function(fulfillmentIndex){_this.showStoreSelector[fulfillmentIndex]=!1},this.hideEmailSelector=function(fulfillmentIndex){_this.showEmailSelector[fulfillmentIndex]=!1},this.incrementItemQuantity=function(orderItem,amount){void 0===amount&&(amount=1),orderItem.quantity+=amount,orderItem.quantity<0&&(orderItem.quantity=0),_this.updateOrderItemQuantity(orderItem)},this.updateOrderItemQuantity=function(event){event.swForm.submit()},this.getOrderAttributeValues=function(allowedAttributeSets){var attributeValues={},orderAttributeModel=JSON.parse(localStorage.attributeMetaData).Order;for(var attributeSetCode in orderAttributeModel){var attributeSet=orderAttributeModel[attributeSetCode];if(-1!==allowedAttributeSets.indexOf(attributeSetCode))for(var attributeCode in attributeSet.attributes){var attribute=attributeSet.attributes[attributeCode];attributeValues[attribute.attributeCode]={attributeCode:attribute.attributeCode,attributeName:attribute.attributeName,attributeValue:_this.cart[attribute.attributeCode],inputType:attribute.attributeInputType,requiredFlag:attribute.requiredFlag}}}return attributeValues},this.binder=function(self,fn){for(var args=[],_i=2;_i<arguments.length;_i++)args[_i-2]=arguments[_i];return fn.bind.apply(fn,[self].concat(args))},this.getSelectedShippingIndex=function(index,value){for(var i=0;i<=this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions.length;i++)if(this.cart.fulfillmentTotal==this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions[i].totalCharge)return i},this.validateNewOrderPayment=function(newOrderPayment){var newOrderPaymentErrors={};_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.streetAddress")&&(newOrderPaymentErrors.streetAddress="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.countrycode")&&(newOrderPaymentErrors.countrycode="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.statecode")&&_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.locality")&&(newOrderPaymentErrors.statecode="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.city")&&_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.city")&&(newOrderPaymentErrors.city="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.locality")&&_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.statecode")&&(newOrderPaymentErrors.locality="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.billingAddress.postalcode")&&(newOrderPaymentErrors.postalCode="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.nameOnCreditCard")&&(newOrderPaymentErrors.nameOnCreditCard="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.expirationMonth")&&(newOrderPaymentErrors.streetAddress="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.expirationYear")&&(newOrderPaymentErrors.expirationYear="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.creditCardNumber")&&(newOrderPaymentErrors.creditCardNumber="Required *"),_this.isUndefinedOrEmpty(newOrderPayment,"newOrderPayment.securityCode")&&(newOrderPaymentErrors.securityCode="Required *"),Object.keys(newOrderPaymentErrors).length},this.addOrderPayment=function(formdata){var billingAddress=_this.newBillingAddress,expirationMonth=formdata.month,expirationYear=formdata.year,country=formdata.country,state=formdata.state,data=(_this.account.firstName,_this.account.lastName,{});_this.orderService.newOrder_AddOrderPayment();if(data={"newOrderPayment.billingAddress.addressID":"","newOrderPayment.billingAddress.streetAddress":billingAddress.streetAddress,"newOrderPayment.billingAddress.street2Address":billingAddress.street2Address,"newOrderPayment.nameOnCreditCard":billingAddress.nameOnCreditCard,"newOrderPayment.billingAddress.name":billingAddress.nameOnCreditCard,"newOrderPayment.expirationMonth":expirationMonth,"newOrderPayment.expirationYear":expirationYear,"newOrderPayment.billingAddress.countrycode":country||billingAddress.countrycode,"newOrderPayment.billingAddress.city":""+billingAddress.city,"newOrderPayment.billingAddress.statecode":state||billingAddress.statecode,"newOrderPayment.billingAddress.locality":billingAddress.locality||"","newOrderPayment.billingAddress.postalcode":billingAddress.postalcode,"newOrderPayment.securityCode":billingAddress.cvv,"newOrderPayment.creditCardNumber":billingAddress.cardNumber,"newOrderPayment.saveShippingAsBilling":1==_this.saveShippingAsBilling},_this.validateNewOrderPayment(data),_this.cart.orderPayments.hasErrors&&Object.keys(_this.cart.orderPayments.errors).length)return-1;_this.doAction("addOrderPayment",data,"post").then(function(result){result.cart.hasErrors||angular.isDefined(_this.cart.orderPayments[_this.cart.orderPayments.length-1].errors)&&!_this.cart.orderPayments[_this.cart.orderPayments.length-1].errors.hasErrors?(_this.cart.hasErrors=!0,_this.readyToPlaceOrder=!0,_this.edit=""):(_this.editPayment=!1,_this.readyToPlaceOrder=!0,_this.edit="")})},this.addGiftCardOrderPayments=function(redeemGiftCardToAccount){_this.cart.hasErrors=!1,_this.cart.orderPayments.errors={},_this.cart.orderPayments.hasErrors=!1;var giftCards=_this.account.giftCards,data={};data={"newOrderPayment.paymentMethod.paymentMethodID":"50d8cd61009931554764385482347f3a","newOrderPayment.redeemGiftCardToAccount":redeemGiftCardToAccount};for(var card in giftCards)1==giftCards[card].applied&&(data["newOrderPayment.giftCardNumber"]=giftCards[card].giftCardCode,giftCards[card].calculatedTotal<_this.cart.calculatedTotal?data["newOrderPayment.amount"]=giftCards[card].calculatedBalanceAmount:data["newOrderPayment.amount"]=_this.cart.calculatedTotal,data.copyFromType="",_this.$q.all([_this.doAction("addOrderPayment",data,"post")]).then(function(result){var serverData;angular.isDefined(result[0])&&(serverData=result[0].data),(serverData.cart.hasErrors||angular.isDefined(this.cart.orderPayments[this.cart.orderPayments.length-1].errors)&&!this.cart.orderPayments[""+(this.cart.orderPayments.length-1)].errors.hasErrors)&&(this.cart.hasErrors=!0,this.readyToPlaceOrder=!0,this.edit="")}))},this.addOrderPaymentAndPlaceOrder=function(formdata){_this.orderPlaced=!1;var billingAddress=_this.newBillingAddress,expirationMonth=formdata.month,expirationYear=formdata.year,country=formdata.country,state=formdata.state,accountFirst=_this.account.firstName,accountLast=_this.account.lastName,data={};if(data={orderid:_this.cart.orderID,"newOrderPayment.billingAddress.streetAddress":billingAddress.streetAddress,"newOrderPayment.billingAddress.street2Address":billingAddress.street2Address,"newOrderPayment.nameOnCreditCard":billingAddress.nameOnCard||accountFirst+" "+accountLast,"newOrderPayment.expirationMonth":expirationMonth,"newOrderPayment.expirationYear":expirationYear,"newOrderPayment.billingAddress.countrycode":country||billingAddress.countrycode,"newOrderPayment.billingAddress.city":""+billingAddress.city,"newOrderPayment.billingAddress.statecode":state||billingAddress.statecode,"newOrderPayment.billingAddress.locality":billingAddress.locality||"","newOrderPayment.billingAddress.postalcode":billingAddress.postalcode,"newOrderPayment.securityCode":billingAddress.cvv,"newOrderPayment.creditCardNumber":billingAddress.cardNumber,"newOrderPayment.saveShippingAsBilling":1==_this.saveShippingAsBilling},_this.cart.orderPayments.hasErrors&&Object.keys(_this.cart.orderPayments.errors).length)return-1;_this.$q.all([_this.doAction("addOrderPayment,placeOrder",data,"post")]).then(function(result){var serverData;if(angular.isDefined(result[0])&&(serverData=result[0].data),serverData.cart.hasErrors||angular.isDefined(serverData.failureActions)&&serverData.failureActions.length&&"public:cart.addOrderPayment"==serverData.failureActions[0]){if(serverData.failureActions.length)for(var action in serverData.failureActions);return this.edit="",!0}if(serverData.successfulActions.length){this.cart.hasErrors=!1,this.editPayment=!1,this.edit="";for(var action in serverData.successfulActions)-1!=serverData.successfulActions[action].indexOf("placeOrder")&&(this.orderPlaced=!0,this.redirectExact("/order-confirmation/"))}else this.edit=""})},this.applyGiftCard=function(giftCardCode){_this.finding=!0;var found=!1;for(var giftCard in _this.account.giftCards)0==_this.account.giftCards[giftCard].balanceAmount&&(_this.account.giftCards[giftCard].error="The balance is $0.00 for this card.",found=!1),_this.account.giftCards[giftCard].giftCardCode==giftCardCode&&(_this.account.giftCards[giftCard].applied=!0,found=!0);found?(_this.finding=!1,_this.addGiftCardOrderPayments(!1)):(_this.finding=!1,_this.addGiftCardOrderPayments(!0))},this.getAppliedGiftCardTotals=function(){var total=0;for(var payment in _this.cart.orderPayments)""!=_this.cart.orderPayments[payment].giftCardNumber&&(total+=parseInt(_this.cart.orderPayments[payment].amount));return total},this.orderService=orderService,this.cartService=cartService,this.accountService=accountService,this.requestService=requestService,this.appConfig=appConfig,this.baseActionPath=this.appConfig.baseURL+"/index.cfm/api/scope/",this.confirmationUrl="/order-confirmation",this.checkoutUrl="/checkout",this.$http=$http,this.$location=$location,this.$q=$q,this.$injector=$injector,this.getExpirationYears(),this.$window=$window,this.$hibachi=$hibachi,this.cart=this.cartService.newCart(),this.account=this.accountService.newAccount(),this.observerService=observerService,this.$timeout=$timeout}return PublicService.prototype.getOrderFulfillmentItemList=function(fulfillmentIndex){return this.cart.orderFulfillments[fulfillmentIndex].orderFulfillmentItems.map(function(item){return item.sku.skuName?item.sku.skuName:item.sku.product.productName}).join(", ")},PublicService.prototype.copyOrderItem=function(orderItem){return this.orderItem={orderItemID:orderItem.orderItemID,quantity:orderItem.quantity},this},PublicService}();exports.PublicService=PublicService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var RbKeyService=function(){function RbKeyService($http,$q,appConfig,resourceBundles){var _this=this;this.$http=$http,this.$q=$q,this.appConfig=appConfig,this.resourceBundles=resourceBundles,this._resourceBundle={},this._resourceBundleLastModified="",this._loadingResourceBundle=!1,this._loadedResourceBundle=!1,this.getRBLoaded=function(){return _this._loadedResourceBundle},this.rbKey=function(key,replaceStringData){return _this.getRBKey(key,_this.appConfig.rbLocale)},this.getRBKey=function(key,locale,checkedKeys,originalKey){if(_this.resourceBundles){key=key.toLowerCase(),checkedKeys=checkedKeys||"",locale=locale||"en_us";var keyListArray=key.split(",");if(keyListArray.length>1){for(var keyValue="",i=0;i<keyListArray.length&&(keyValue=_this.getRBKey(keyListArray[i],locale,keyValue),"_missing"==keyValue.slice(-8));i++);return keyValue}var bundle=_this.resourceBundles[locale];if(angular.isDefined(bundle[key]))return bundle[key];var checkedKeysListArray=checkedKeys.split(",");checkedKeysListArray.push(key+"_"+locale+"_missing"),checkedKeys=checkedKeysListArray.join(","),angular.isUndefined(originalKey)&&(originalKey=key);var localeListArray=locale.split("_");if(2===localeListArray.length){if(bundle=_this.resourceBundles[localeListArray[0]],angular.isDefined(bundle[key]))return bundle[key];checkedKeysListArray.push(key+"_"+localeListArray[0]+"_missing"),checkedKeys=checkedKeysListArray.join(",")}var keyDotListArray=key.split(".");if(keyDotListArray.length>=3&&"define"===keyDotListArray[keyDotListArray.length-2]){var newKey=key.replace(keyDotListArray[keyDotListArray.length-3]+".define","define");return _this.getRBKey(newKey,locale,checkedKeys,originalKey)}if(keyDotListArray.length>=2&&"define"!==keyDotListArray[keyDotListArray.length-2]){var newKey=key.replace(keyDotListArray[keyDotListArray.length-2]+".","define.");return _this.getRBKey(newKey,locale,checkedKeys,originalKey)}return"en"!==localeListArray[0]?_this.getRBKey(originalKey,"en",checkedKeys):checkedKeys}return""},this.$q=$q,this.$http=$http,this.appConfig=appConfig,this.resourceBundles=resourceBundles}return RbKeyService}();exports.RbKeyService=RbKeyService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var adminrequest_1=__webpack_require__(580),publicrequest_1=__webpack_require__(581),RequestService=function(){function RequestService($injector,observerService){var _this=this;this.$injector=$injector,this.observerService=observerService,this.newAdminRequest=function(url,data,method,headers,$injector,observerService){return void 0===method&&(method="post"),void 0===headers&&(headers={"Content-Type":"application/json"}),void 0===$injector&&($injector=_this.$injector),void 0===observerService&&(observerService=_this.observerService),new adminrequest_1.AdminRequest(url,data,method,headers,$injector,observerService)},this.newPublicRequest=function(url,data,method,headers,$injector,observerService){return void 0===method&&(method="post"),void 0===headers&&(headers={"Content-Type":"application/x-www-form-urlencoded"}),void 0===$injector&&($injector=_this.$injector),void 0===observerService&&(observerService=_this.observerService),new publicrequest_1.PublicRequest(url,data,method,headers,$injector,observerService)},this.$injector=$injector,this.observerService=observerService}return RequestService}();exports.RequestService=RequestService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ScopeService=function(){function ScopeService(){var _this=this;this.getRootParentScope=function(scope,targetScopeName){for(var currentScope=scope;null!=currentScope&&angular.isUndefined(currentScope[targetScopeName])&&angular.isDefined(currentScope.$parent);)currentScope=currentScope.$parent;if(null!=currentScope&&angular.isDefined(currentScope[targetScopeName]))return currentScope},this.hasParentScope=function(scope,targetScopeName){return null!=_this.getRootParentScope(scope,targetScopeName)}}return ScopeService}();exports.ScopeService=ScopeService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseservice_1=__webpack_require__(62),SelectionService=function(_super){function SelectionService(observerService){var _this=_super.call(this)||this;return _this.observerService=observerService,_this._selection={},_this.createSelections=function(selectionid){_this._selection[selectionid]={allSelected:!1,ids:[]}},_this.radioSelection=function(selectionid,selection){_this.createSelections(selectionid),_this._selection[selectionid].ids.push(selection),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"check",selectionid:selectionid,selection:selection})},_this.addSelection=function(selectionid,selection){if(_this.isAllSelected(selectionid)){var index=_this._selection[selectionid].ids.indexOf(selection);index>-1&&(_this._selection[selectionid].ids.splice(index,1),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"check",selectionid:selectionid,selection:selection}))}else _this.hasSelection(selectionid,selection)||(_this._selection[selectionid].ids.push(selection),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"check",selectionid:selectionid,selection:selection}))},_this.setSelection=function(selectionid,selections){angular.isUndefined(_this._selection[selectionid])&&_this.createSelections(selectionid),_this._selection[selectionid].ids=selections},_this.removeSelection=function(selectionid,selection){if(!angular.isUndefined(_this._selection[selectionid]))if(_this.isAllSelected(selectionid))_this.hasSelection(selectionid,selection)||(_this._selection[selectionid].ids.push(selection),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"uncheck",selectionid:selectionid,selection:selection}));else{var index=_this._selection[selectionid].ids.indexOf(selection);index>-1&&(_this._selection[selectionid].ids.splice(index,1),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"uncheck",selectionid:selectionid,selection:selection}))}},_this.hasSelection=function(selectionid,selection){return!angular.isUndefined(_this._selection[selectionid])&&_this._selection[selectionid].ids.indexOf(selection)>-1},_this.getSelections=function(selectionid){return angular.isUndefined(_this._selection[selectionid])&&_this.createSelections(selectionid),_this._selection[selectionid].ids},_this.getSelectionCount=function(selectionid){return angular.isUndefined(_this._selection[selectionid])&&_this.createSelections(selectionid),_this._selection[selectionid].ids.length},_this.clearSelection=function(selectionid){_this.createSelections(selectionid),_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"clear"})},_this.selectAll=function(selectionid){_this._selection[selectionid]={allSelected:!0,ids:[]},_this.observerService.notify("swSelectionToggleSelection"+selectionid,{action:"selectAll"})},_this.isAllSelected=function(selectionid){return angular.isUndefined(_this._selection[selectionid])&&_this.createSelections(selectionid),_this._selection[selectionid].allSelected},_this}return __extends(SelectionService,_super),SelectionService}(baseservice_1.BaseService);exports.SelectionService=SelectionService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),SkuService=function(_super){function SkuService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"Sku")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this}return __extends(SkuService,_super),SkuService}(baseentityservice_1.BaseEntityService);exports.SkuService=SkuService},function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var TypeaheadStore=__webpack_require__(170),TypeaheadService=function(){function TypeaheadService($timeout,observerService){var _this=this;this.$timeout=$timeout,this.observerService=observerService,this.typeaheadData={},this.typeaheadPromises={},this.typeaheadStates={},this.state={typeaheadInstances:this.typeaheadStates},this.typeaheadStateReducer=function(state,action){switch(action.type){case"TYPEAHEAD_QUERY":case"TYPEAHEAD_USER_SELECTION":return __assign({},state,{action:action});default:return state}},this.getTypeaheadSelectionUpdateEvent=function(key){return"typeaheadSelectionUpdated"+key},this.attachTypeaheadSelectionUpdateEvent=function(key,callback){_this.observerService.attach(callback,_this.getTypeaheadSelectionUpdateEvent(key))},this.notifyTypeaheadSelectionUpdateEvent=function(key,data){_this.observerService.notify(_this.getTypeaheadSelectionUpdateEvent(key),data)},this.setTypeaheadState=function(key,state){_this.typeaheadStates[key]=state},this.getTypeaheadState=function(key){return _this.typeaheadStates[key]},this.getTypeaheadPrimaryIDPropertyName=function(key){return _this.getTypeaheadState(key).primaryIDPropertyName},this.getIndexOfSelection=function(key,data){for(var j=0;j<_this.getData(key).length;j++){if(angular.isDefined(data[_this.getTypeaheadPrimaryIDPropertyName(key)])&&data[_this.getTypeaheadPrimaryIDPropertyName(key)]==_this.getData(key)[j][_this.getTypeaheadPrimaryIDPropertyName(key)])return j;if(_this.checkAgainstFallbackProperties(key,_this.getData(key)[j],data))return j}return-1},this.addSelection=function(key,data){angular.isUndefined(_this.typeaheadData[key])&&(_this.typeaheadData[key]=[]),_this.typeaheadData[key].push(data),_this.notifyTypeaheadSelectionUpdateEvent(key,data)},this.removeSelection=function(key,index,data){if(angular.isUndefined(index)&&angular.isDefined(data)&&(index=_this.getIndexOfSelection(key,data)),angular.isDefined(index)&&angular.isDefined(_this.typeaheadData[key])&&-1!=index){_this.updateSelections(key);var removedItem=_this.typeaheadData[key].splice(index,1)[0];return _this.notifyTypeaheadSelectionUpdateEvent(key,removedItem),removedItem}},this.initializeSelections=function(key,selectedCollectionConfig){selectedCollectionConfig.setAllRecords(!0),_this.typeaheadPromises[key]=selectedCollectionConfig.getEntity(),_this.typeaheadPromises[key].then(function(data){for(var j=0;j<data.records.length;j++)_this.addSelection(key,data.records[j])},function(reason){throw"typeaheadservice had trouble intializing selections for "+key+" because "+reason})},this.updateSelections=function(key){if(angular.isDefined(_this.getData(key))&&_this.getData(key).length)for(var j=0;j<_this.getTypeaheadState(key).results.length;j++)for(var i=0;i<_this.getData(key).length;i++){if(_this.getData(key)[i][_this.getTypeaheadPrimaryIDPropertyName(key)]==_this.getTypeaheadState(key).results[j][_this.getTypeaheadPrimaryIDPropertyName(key)]){_this.markResultSelected(_this.getTypeaheadState(key).results[j],i);break}var found=_this.checkAgainstFallbackProperties(key,_this.getData(key)[i],_this.getTypeaheadState(key).results[j],i);if(found)break}},this.markResultSelected=function(result,index){result.selected=!0,result.selectedIndex=index},this.checkAgainstFallbackProperties=function(key,selection,result,selectionIndex){var resultPrimaryID=result[_this.getTypeaheadPrimaryIDPropertyName(key)];if(angular.isDefined(_this.getTypeaheadState(key).propertyToCompare)&&_this.getTypeaheadState(key).propertyToCompare.length){if(angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare])&&selection[_this.getTypeaheadState(key).propertyToCompare]==resultPrimaryID)return angular.isDefined(selectionIndex)&&_this.markResultSelected(result,selectionIndex),!0;if(angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare])&&angular.isDefined(result[_this.getTypeaheadState(key).propertyToCompare])&&selection[_this.getTypeaheadState(key).propertyToCompare]==result[_this.getTypeaheadState(key).propertyToCompare])return angular.isDefined(selectionIndex)&&_this.markResultSelected(result,selectionIndex),!0}if(_this.getTypeaheadState(key).fallbackPropertyArray.length>0)for(var j=0;j<_this.getTypeaheadState(key).fallbackPropertyArray.length;j++){var property=_this.getTypeaheadState(key).fallbackPropertyArray[j];if(angular.isDefined(selection[property])){if(selection[property]==resultPrimaryID)return angular.isDefined(selectionIndex)&&_this.markResultSelected(result,selectionIndex),!0;if(angular.isDefined(result[property])&&selection[property]==result[property])return angular.isDefined(selectionIndex)&&_this.markResultSelected(result,selectionIndex),!0}}return!1},this.updateSelectionList=function(key){var selectionIDArray=[];if(angular.isDefined(_this.getData(key)))for(var j=0;j<_this.getData(key).length;j++){var selection=_this.getData(key)[j],primaryID=selection[_this.getTypeaheadPrimaryIDPropertyName(key)];if(angular.isDefined(primaryID))selectionIDArray.push(primaryID);else if(angular.isDefined(_this.getTypeaheadState(key).propertyToCompare)&&angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare]))selectionIDArray.push(selection[_this.getTypeaheadState(key).propertyToCompare]);else if(angular.isDefined(_this.getTypeaheadState(key).fallbackPropertyArray))for(var fallbackPropertyArray=_this.getTypeaheadState(key).fallbackPropertyArray,i=0;i<fallbackPropertyArray.length;i++){var fallbackProperty=fallbackPropertyArray[i];if(angular.isDefined(selection[fallbackProperty])){selectionIDArray.push(selection[fallbackProperty]);break}}}return selectionIDArray.join(",")},this.getData=function(key){if(!(key in _this.typeaheadPromises))return _this.typeaheadData[key]||[];_this.typeaheadPromises[key].then().finally(function(){return _this.typeaheadData[key]||[]}),delete _this.typeaheadPromises[key]},this.stripTranscludedContent=function(transcludedContent){for(var i=0;i<transcludedContent.length;i++)angular.isDefined(transcludedContent[i].localName)&&"ng-transclude"==transcludedContent[i].localName&&(transcludedContent=transcludedContent.children());for(var i=0;i<transcludedContent.length;i++)angular.isDefined(transcludedContent[i].localName)&&"sw-collection-config"==transcludedContent[i].localName&&transcludedContent.splice(i,1);return transcludedContent},this.typeaheadStore=new TypeaheadStore.IStore(this.state,this.typeaheadStateReducer)}return TypeaheadService}();exports.TypeaheadService=TypeaheadService},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseservice_1=__webpack_require__(62),UtilityService=function(_super){function UtilityService($parse){var _this=_super.call(this)||this;return _this.$parse=$parse,_this.structKeyExists=function(struct,key){return key in struct},_this.keyToAttributeString=function(key){for(var attributeString="data-",i=0;i<key.length;i++)if("_"==key.charAt(i))attributeString+="-";else if(_this.isUpperCase(key.charAt(i)))if(i+1<=key.length&&_this.isUpperCase(key.charAt(i+1))){if(key.charAt(i)+key.charAt(i+1)=="ID")attributeString+="-id",i++;else if(_this.isUpperCase(key.charAt(i+1)))for(attributeString+="-";i+1<=key.length&&_this.isUpperCase(key.charAt(i+1));)attributeString+=key.charAt(i).toLowerCase(),i++}else attributeString+="-"+key.charAt(i).toLowerCase();else attributeString+=key.charAt(i);return attributeString},_this.isUpperCase=function(character){return character==character.toUpperCase()},_this.isLowerCase=function(character){return character==character.toLowerCase()},_this.snakeToCapitalCase=function(s){return s.charAt(0).toUpperCase()+s.replace(/(\-\w)/g,function(m){return m[1].toUpperCase()}).slice(1)},_this.camelCaseToSnakeCase=function(s){return s.replace(/([A-Z])/g,function($1){return"-"+$1.toLowerCase()})},_this.replaceStringWithProperties=function(stringItem,context){var properties=_this.getPropertiesFromString(stringItem);if(properties){var data=[];return angular.forEach(properties,function(property){-1!=property.indexOf(".")&&(property=property.replace(".","_"));var parseFunction=_this.$parse(property);data.push(parseFunction(context))}),_this.replacePropertiesWithData(stringItem,data)}},_this.extend=function(ChildClass,ParentClass){ChildClass.prototype=new ParentClass,ChildClass.prototype.constructor=ChildClass},_this.getQueryParamsFromUrl=function(url){var query_string={};if(url&&url.split){var spliturl=url.split("?");if(spliturl.length&&(url=spliturl[1])&&url.split){var vars=url.split("&");if(vars&&vars.length)for(var i=0;i<vars.length;i++){var pair=vars[i].split("=");if(void 0===query_string[pair[0]])query_string[pair[0]]=pair[1];else if("string"==typeof query_string[pair[0]]){var arr=[query_string[pair[0]],pair[1]];query_string[pair[0]]=arr}else query_string[pair[0]].push(pair[1])}}}return query_string},_this.isAngularRoute=function(){return/[\?&]ng#!/.test(window.location.href)},_this.ArrayFindByPropertyValue=function(arr,property,value){var currentIndex=-1;return arr.forEach(function(arrItem,index){arrItem[property]&&arrItem[property]===value&&(currentIndex=index)}),currentIndex},_this.listLast=function(list,delimiter){void 0===list&&(list=""),void 0===delimiter&&(delimiter=",");var listArray=list.split(delimiter);return listArray[listArray.length-1]},_this.listRest=function(list,delimiter){void 0===list&&(list=""),void 0===delimiter&&(delimiter=",");var listArray=list.split(delimiter);return listArray.length&&listArray.splice(0,1),listArray.join(delimiter)},_this.listFirst=function(list,delimiter){return void 0===list&&(list=""),void 0===delimiter&&(delimiter=","),list.split(delimiter)[0]},_this.listPrepend=function(list,substring,delimiter){return void 0===list&&(list=""),void 0===substring&&(substring=""),void 0===delimiter&&(delimiter=","),list.split(delimiter).length?substring+delimiter+list:substring},_this.listAppend=function(list,substring,delimiter){void 0===list&&(list=""),void 0===substring&&(substring=""),void 0===delimiter&&(delimiter=",");var listArray=list.split(delimiter);return""!=list.trim()&&listArray.length?list+delimiter+substring:substring},_this.listAppendUnique=function(list,substring,delimiter){void 0===list&&(list=""),void 0===substring&&(substring=""),void 0===delimiter&&(delimiter=",");var listArray=list.split(delimiter);return""!=list.trim()&&listArray.length&&-1==listArray.indexOf(substring)?list+delimiter+substring:substring},_this.listRemove=function(str,substring){return-1!=str.indexOf(substring)&&(str=str.replace(substring,""),str=str.replace(",,",""),","==str&&(str=""),","==str.substring(0,1)&&(str=str.substring(1)),str=str.substring(0,str.length-1)),str},_this.formatValue=function(value,formatType,formatDetails,entityInstance){return angular.isUndefined(formatDetails)&&(formatDetails={}),["currency","date","datetime","pixels","percentage","second","time","truefalse","url","weight","yesno"].indexOf(formatType)&&_this["format_"+formatType](value,formatDetails,entityInstance),value},_this.format_currency=function(value,formatDetails,entityInstance){angular.isUndefined&&{}},_this.format_date=function(value,formatDetails,entityInstance){angular.isUndefined&&{}},_this.format_datetime=function(value,formatDetails,entityInstance){angular.isUndefined&&{}},_this.format_pixels=function(value,formatDetails,entityInstance){angular.isUndefined&&{}},_this.format_yesno=function(value,formatDetails,entityInstance){return angular.isUndefined&&{},!0===Boolean(value)?entityInstance.metaData.$$getRBKey("define.yes"):!1===value||"No"===value.trim()||"NO"===value.trim||"0"===value.trim()?entityInstance.metaData.$$getRBKey("define.no"):void 0},_this.left=function(stringItem,count){return stringItem.substring(0,count)},_this.right=function(stringItem,count){return stringItem.substring(stringItem.length-count,stringItem.length)},_this.mid=function(stringItem,start,count){var end=start+count;return stringItem.substring(start,end)},_this.getPropertiesFromString=function(stringItem){if(stringItem){for(var capture=!1,property="",results=[],i=0;i<stringItem.length;i++)capture||"${"!=stringItem.substr(i,2)?capture&&"}"!=stringItem[i]?property=property.concat(stringItem[i]):capture&&(results.push(property),capture=!1):(property="",capture=!0,i+=1);return results}},_this.replacePropertiesWithData=function(stringItem,data){for(var results=_this.getPropertiesFromString(stringItem),i=0;i<results.length;i++)stringItem=stringItem.replace("${"+results[i]+"}",data[i]);return stringItem},_this.replaceAll=function(stringItem,find,replace){return stringItem.replace(new RegExp(_this.escapeRegExp(find),"g"),replace)},_this.escapeRegExp=function(stringItem){return stringItem.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")},_this.createID=function(count){for(var count=count||26,text="",currentPossibleCharacters="",i=0;i<count;i++)currentPossibleCharacters=0===i?"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",text+=currentPossibleCharacters.charAt(Math.floor(Math.random()*currentPossibleCharacters.length));return text},_this.arrayToList=function(array,delimiter){return null!=delimiter?array.join(delimiter):array.join()},_this.getPropertyValue=function(object,propertyIdentifier){for(var keyPart,keys=propertyIdentifier.split("."),obj=object;(keyPart=keys.shift())&&keys.length;)obj=obj[keyPart];return obj[keyPart]},_this.setPropertyValue=function(object,propertyIdentifier,value){for(var keyPart,keys=propertyIdentifier.split("."),obj=object;(keyPart=keys.shift())&&keys.length;)obj[keyPart]||(obj[keyPart]={}),obj=obj[keyPart];obj[keyPart]=value},_this.nvpToObject=function(NVPData){var object={};for(var key in NVPData){var value=NVPData[key],propertyIdentitifer=key.replace(/\_/g,".");_this.setPropertyValue(object,propertyIdentitifer,value)}return object},_this.isDescendantElement=function(parent,child){for(var node=child.parentNode;null!=node;){if(node==parent)return!0;node=node.parentNode}return!1},_this.toJson=function(obj){var seen=[];return JSON.stringify(obj,function(key,val){if(null!=val&&"object"==typeof val){if(seen.indexOf(val)>=0)return;seen.push(val)}return val})},_this.listFind=function(list,value,delimiter){void 0===list&&(list=""),void 0===value&&(value=""),void 0===delimiter&&(delimiter=",");for(var splitString=list.split(delimiter),stringFound=-1,i=0;i<splitString.length;i++){splitString[i]===value&&(stringFound=i)}return stringFound},_this.listLen=function(list,delimiter){return void 0===list&&(list=""),void 0===delimiter&&(delimiter=","),list.split(delimiter).length},_this.arraySorter=function(array,keysToSortBy){var arrayOfTypes=[],returnArray=[],firstKey=keysToSortBy[0];if(angular.isDefined(keysToSortBy[1]))var secondKey=keysToSortBy[1];for(var itemIndex in array)arrayOfTypes.indexOf(array[itemIndex][firstKey])>-1||arrayOfTypes.push(array[itemIndex][firstKey]);arrayOfTypes.sort(function(a,b){return a<b?-1:a>b?1:0});for(var typeIndex in arrayOfTypes){var tempArray=[];for(var itemIndex in array)array[itemIndex][firstKey]==arrayOfTypes[typeIndex]&&tempArray.push(array[itemIndex]);null!=keysToSortBy[1]&&tempArray.sort(function(a,b){return a[secondKey]<b[secondKey]?-1:a[secondKey]>b[secondKey]?1:0});for(var finalIndex in tempArray)returnArray.push(tempArray[finalIndex])}return returnArray},_this.minutesOfDay=function(m){return m.getMinutes()+60*m.getHours()},_this.removeTimeOffset=function(timestampStr){var date=new Date(timestampStr),correctDate=new Date;return correctDate.setUTCFullYear(date.getFullYear(),date.getMonth(),date.getDate()),correctDate.setUTCHours(date.getHours(),date.getMinutes(),date.getSeconds(),date.getMilliseconds())},_this}return __extends(UtilityService,_super),UtilityService}(baseservice_1.BaseService);exports.UtilityService=UtilityService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var PageDialogController=function(){function PageDialogController($scope,$location,$anchorScroll,dialogService){$scope.$id="pageDialogController",$scope.pageDialogs=dialogService.getPageDialogs(),$scope.scrollToTopOfDialog=function(){$location.hash("/#topOfPageDialog"),$anchorScroll()},$scope.pageDialogStyle={"z-index":3e3}}return PageDialogController}();exports.PageDialogController=PageDialogController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var DialogService=function(){function DialogService(hibachiPathBuilder){var _this=this;this.hibachiPathBuilder=hibachiPathBuilder,this.get=function(){return _this._pageDialogs||[]},this.addPageDialog=function(name,params){var newDialog={path:name+".html",params:params};_this._pageDialogs.push(newDialog)},this.removePageDialog=function(index){_this._pageDialogs.splice(index,1)},this.getPageDialogs=function(){return _this._pageDialogs},this.removeCurrentDialog=function(){_this._pageDialogs.splice(_this._pageDialogs.length-1,1)},this.getCurrentDialog=function(){return _this._pageDialogs[_this._pageDialogs.length-1]},this._pageDialogs=[],this.hibachiPathBuilder=hibachiPathBuilder}return DialogService.$inject=["hibachiPathBuilder"],DialogService}();exports.DialogService=DialogService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDetail=function(){function SWDetail($location,$log,$hibachi,coreEntityPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath)+"/detail.html",link:function(scope,element,attr){scope.$id="slatwallDetailController",$log.debug("slatwallDetailController"),scope.setDirty=function(entity){angular.forEach(entity.forms,function(form){form.$setSubmitted()})};var setupMetaData=function(){scope[scope.entityName.toLowerCase()]=scope.entity,scope.entity.metaData.$$getDetailTabs().then(function(value){scope.detailTabs=value.data,$log.debug("detailtabs"),$log.debug(scope.detailTabs)})},propertyCasedEntityName=scope.entityName.charAt(0).toUpperCase()+scope.entityName.slice(1);scope.tabPartialPath=hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath),scope.getEntity=function(){if("create"===scope.entityID)scope.createMode=!0,scope.entity=$hibachi["new"+propertyCasedEntityName](),setupMetaData();else{scope.createMode=!1;var entityPromise=$hibachi["get"+propertyCasedEntityName]({id:scope.entityID});entityPromise.promise.then(function(){scope.entity=entityPromise.value,setupMetaData()})}},scope.getEntity(),scope.deleteEntity=function(){scope.entity.$$delete().then(function(){$location.path("/entity/"+propertyCasedEntityName+"/")})},scope.allTabsOpen=!1}}}return SWDetail.Factory=function(){var directive=function($location,$log,$hibachi,coreEntityPartialsPath,hibachiPathBuilder){return new SWDetail($location,$log,$hibachi,coreEntityPartialsPath,hibachiPathBuilder)};return directive.$inject=["$location","$log","$hibachi","coreEntityPartialsPath","hibachiPathBuilder"],directive},SWDetail}();exports.SWDetail=SWDetail},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWDetailTabs=function(){function SWDetailTabs(coreEntityPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath)+"detailtabs.html",link:function(scope,element,attr){}}}return SWDetailTabs.Factory=function(){var directive=function(coreEntityPartialsPath,hibachiPathBuilder){return new SWDetailTabs(coreEntityPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreEntityPartialsPath","hibachiPathBuilder"],directive},SWDetailTabs}();exports.SWDetailTabs=SWDetailTabs},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWList=function(){function SWList($log,coreEntityPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath)+"/list.html",link:function(scope,element,attr){$log.debug("slatwallList init")}}}return SWList.Factory=function(){var directive=function($log,coreEntityPartialsPath,hibachiPathBuilder){return new SWList($log,coreEntityPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","coreEntityPartialsPath","hibachiPathBuilder"],directive},SWList}();exports.SWList=SWList},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var OtherWiseController=function(){function OtherWiseController($scope){$scope.$id="otherwiseController"}return OtherWiseController}();exports.OtherWiseController=OtherWiseController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var RouterController=function(){function RouterController($scope,$routeParams,$location,$log,utilityService){$scope.$id="routerController",$scope.partialRoute="",$log.debug($routeParams),$log.debug($location);var path=$location.path();$scope.controllerType=path.split("/")[1];"entity"===$scope.controllerType&&($scope.entityName=utilityService.snakeToCapitalCase($routeParams.entityName),angular.isDefined($routeParams.entityID)&&($scope.entityID=$routeParams.entityID||""))}return RouterController}();exports.RouterController=RouterController},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var otherwisecontroller_1=__webpack_require__(615),routercontroller_1=__webpack_require__(616),swdetailtabs_1=__webpack_require__(613),swdetail_1=__webpack_require__(612),swlist_1=__webpack_require__(614),core_module_1=__webpack_require__(16),entitymodule=angular.module("hibachi.entity",["ngRoute",core_module_1.coremodule.name]).config(["$routeProvider","$injector","$locationProvider","appConfig",function($routeProvider,$injector,$locationProvider,appConfig){var vars={};window.location.href.replace(/[?&]+([^=&]+)#([^\/]*)/gi,function(m,key,value){vars[key]=value});vars.ng&&$locationProvider.html5Mode(!1).hashPrefix("!");var snakeToCapitalCase=function(s){return s.charAt(0).toUpperCase()+s.replace(/(\-\w)/g,function(m){return m[1].toUpperCase()}).slice(1)};$routeProvider.when("/entity/:entityName/",{template:function(params){return $injector.has("sw"+snakeToCapitalCase(params.entityName)+"ListDirective")?"<sw-"+params.entityName.toLowerCase()+"-list></sw-"+params.entityName.toLowerCase()+"-list>":"<sw-list></sw-list>"},controller:"routerController"}).when("/entity/:entityName/:entityID",{template:function(params){return $injector.has("sw"+snakeToCapitalCase(params.entityName)+"DetailDirective")?"<sw-"+params.entityName.toLowerCase()+"-detail></sw-"+params.entityName.toLowerCase()+"-detail>":"<sw-detail></sw-detail>"},controller:"routerController"})}]).constant("coreEntityPartialsPath","entity/components/").controller("otherwiseController",otherwisecontroller_1.OtherWiseController).controller("routerController",routercontroller_1.RouterController).directive("swDetail",swdetail_1.SWDetail.Factory()).directive("swDetailTabs",swdetailtabs_1.SWDetailTabs.Factory()).directive("swList",swlist_1.SWList.Factory());exports.entitymodule=entitymodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWAddressFormController=function(){function SWAddressFormController($scope,$log,observerService,$rootScope){var _this=this;this.$scope=$scope,this.$log=$log,this.observerService=observerService,this.$rootScope=$rootScope,this.showAddressBookSelect=!1,this.showCountrySelect=!0,this.showSubmitButton=!0,this.showCloseButton=!0,this.param="?slataction=",this.showAlerts="true",this.getAction=function(){return angular.isDefined(_this.action)||(_this.action="addAddress"),-1!=_this.action.indexOf(":")&&-1==_this.action.indexOf(_this.param)&&(_this.action=_this.param+_this.action),_this.action},this.hasField=function(field){return-1!=_this.fieldList.indexOf(field)},this.submitKeyCheck=function(event){event.form.$name==_this.addressName&&13==event.event.keyCode&&event.swForm.submit(event.swForm.action)},angular.isDefined(this.slatwallScope)&&(this.slatwall=this.slatwallScope),void 0==this.fieldList&&(this.fieldList="countryCode,name,company,streetAddress,street2Address,locality,city,stateCode,postalCode"),void 0==this.showAddressBookSelect&&(this.showAddressBookSelect=!1),void 0==this.showCountrySelect&&(this.showCountrySelect=!0),void 0==this.action&&(this.showSubmitButton=!1),$rootScope.slatwall&&!$scope.slatwall&&($scope.slatwall=$rootScope.slatwall);var addressName=this.addressName;if(this.address&&(this.address.getData=function(){var formData=_this.address||{},form=_this.address.forms[addressName];for(var key_1 in form){var val=form[key_1];"object"==typeof val&&val.hasOwnProperty("$modelValue")&&(val=val.$modelValue?val.$modelValue:val.$viewValue?val.$viewValue:"",angular.isString(val)&&(formData[key_1]=val),val.$modelValue?formData[key_1]=val.$modelValue:val.$viewValue&&(formData[key_1]=val.$viewValue))}return formData||""}),this.eventListeners||(this.eventListeners={}),this.submitOnEnter&&(this.eventListeners.keyup=this.submitKeyCheck),this.eventListeners)for(var key in this.eventListeners)observerService.attach(this.eventListeners[key],key)}return SWAddressFormController}();exports.SWAddressFormController=SWAddressFormController;var SWAddressForm=function(){function SWAddressForm(coreFormPartialsPath,hibachiPathBuilder){var _this=this;this.coreFormPartialsPath=coreFormPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.transclude=!0,this.controller=SWAddressFormController,this.controllerAs="SwAddressForm",this.bindToController={action:"@",actionText:"@",context:"@",customPartial:"@",slatwallScope:"=",address:"=",id:"@?",fieldNamePrefix:"@",fieldList:"@",fieldClass:"@",fulfillmentIndex:"@",tabIndex:"@",addressName:"@",showAddressBookSelect:"@",showCountrySelect:"@",showSubmitButton:"@",showCloseButton:"@",showAlerts:"@",eventListeners:"=?",submitOnEnter:"@",stateOptions:"=?"},this.scope={},this.templateUrl=function(elem,attrs){return attrs.customPartial?"true"===attrs.customPartial?hibachiConfig.customPartialsPath+"addressform.html":hibachiConfig.customPartialsPath+attrs.customPartial:_this.hibachiPathBuilder.buildPartialsPath(_this.coreFormPartialsPath)+"addressform.html"}}return SWAddressForm.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWAddressForm(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWAddressForm}();exports.SWAddressForm=SWAddressForm},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWErrorDisplayController=function(){function SWErrorDisplayController($injector){this.$injector=$injector,this.$injector=$injector}return SWErrorDisplayController.prototype.$onInit=function(){this.swfPropertyDisplay&&this.swfPropertyDisplay.errorClass&&(this.swForm.errorClass=this.swfPropertyDisplay.errorClass);var bindToControllerProps=this.$injector.get("swErrorDisplayDirective")[0].bindToController;for(var i in bindToControllerProps)this[i]||"name"===i||(!this[i]&&this.swPropertyDisplay&&this.swPropertyDisplay[i]?this[i]=this.swPropertyDisplay[i]:!this[i]&&this.swfPropertyDisplay&&this.swfPropertyDisplay[i]?this[i]=this.swfPropertyDisplay[i]:!this[i]&&this.swForm&&this.swForm[i]&&(this[i]=this.swForm[i]));this.property=this.property||this.propertyIdentifier,this.propertyIdentifier=this.propertyIdentifier||this.property,!this.name&&this.property&&(this.name=this.property)},SWErrorDisplayController}();exports.SWErrorDisplayController=SWErrorDisplayController;var SWErrorDisplay=function(){function SWErrorDisplay(coreFormPartialsPath,hibachiPathBuilder){this.coreFormPartialsPath=coreFormPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.require={swForm:"^?swForm",form:"^?form",swPropertyDisplay:"^?swPropertyDisplay",swfPropertyDisplay:"^?swfPropertyDisplay"},this.restrict="E",this.controller=SWErrorDisplayController,this.controllerAs="swErrorDisplay",this.scope={},this.bindToController={form:"=?",name:"@?",property:"@?",propertyIdentifier:"@?",errorClass:"@?"},this.templateUrl=hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath)+"errordisplay.html"}return SWErrorDisplay.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWErrorDisplay(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWErrorDisplay}();exports.SWErrorDisplay=SWErrorDisplay},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFFormFieldController=function(){function SWFFormFieldController($scope,$element,$compile,utilityService){this.$scope=$scope,this.$element=$element,this.$compile=$compile,this.utilityService=utilityService,this.utilityService=utilityService,this.$scope=$scope,this.$element=$element,this.$compile=$compile}return SWFFormFieldController.$inject=["$scope","$element","$compile","utilityService"],SWFFormFieldController}(),SWFFormField=function(){function SWFFormField(coreFormPartialsPath,hibachiPathBuilder){this.restrict="E",this.require={swfPropertyDisplayCtrl:"^?swfPropertyDisplay",form:"^?form"},this.controller=SWFFormFieldController,this.controllerAs="swfFormField",this.scope={},this.bindToController={propertyDisplay:"=?",propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",type:"@?"},this.link=function(scope,element,attrs,formController,transcludeFn){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath)+"swfformfield.html"}return SWFFormField.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWFFormField(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWFFormField}();exports.SWFFormField=SWFFormField},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormController=function(){function SWFormController($scope,$element,$hibachi,$http,$timeout,observerService,$rootScope,entityService,utilityService){var _this=this;if(this.$scope=$scope,this.$element=$element,this.$hibachi=$hibachi,this.$http=$http,this.$timeout=$timeout,this.observerService=observerService,this.$rootScope=$rootScope,this.entityService=entityService,this.utilityService=utilityService,this.eventsObj=[],this.formData={},this.parseObjectErrors=!0,this.$onInit=function(){_this.object&&_this.parseObjectErrors&&_this.$timeout(function(){_this.parseErrors(_this.object.errors)})},this.isObject=function(){return angular.isObject(_this.object)},this.submitKeyCheck=function(event){event.form.$name==_this.name&&13==event.event.keyCode&&_this.submit(event.swForm.action)},this.submit=function(actions){actions=actions||_this.action,_this.clearErrors(),_this.formData=_this.getFormData()||"",_this.doActions(actions)},this.doActions=function(actions){if(angular.isArray(actions))for(var _i=0,_a=actions;_i<_a.length;_i++){var action=_a[_i];_this.doAction(action)}else{if(!angular.isString(actions))throw"Unknown type of action exception";_this.doAction(actions)}},this.doAction=function(action){if(!action)throw"Action not defined on form";_this.formData=_this.formData||{};_this.$rootScope.hibachiScope.doAction(action,_this.formData).then(function(result){result&&(_this.object.forms[_this.name].$setSubmitted(!0),result.errors&&_this.parseErrors(result.errors))})},this.parseErrors=function(errors){angular.isDefined(errors)&&errors&&angular.forEach(errors,function(val,key){var primaryElement=_this.$element.find("[error-for='"+key+"']");_this.$timeout(function(){var errorClass=_this.errorClass?_this.errorClass:"error";errors[key].forEach(function(error){primaryElement.append("<div class='"+errorClass+"' name='"+key+"Error'>"+error+"</div>")})},0)},_this)},this.clearErrors=function(){_this.$timeout(function(){_this.$element.find("[error-for]").empty()},0)},this.eventsHandler=function(params){for(var e in params.events)angular.isDefined(params.events[e].value)&&params.events[e].value==_this.name.toLowerCase()&&params.events[e].name&&_this[params.events[e].name]&&_this[params.events[e].name](params.events[e].value)},this.hide=function(param){_this.name.toLowerCase()==param&&_this.$element.hide()},this.show=function(param){_this.name.toLowerCase()==param&&_this.$element.show()},this.refresh=function(params){},this.update=function(params){},this.clear=function(params){var iterable=_this.formCtrl;angular.forEach(iterable,function(val,key){"object"==typeof val&&val.hasOwnProperty("$modelValue")?_this.object.forms[_this.name][key].$viewValue&&(_this.object.forms[_this.name][key].$setViewValue(""),_this.object.forms[_this.name][key].$render()):val=""})},this.getFormData=function(){var iterable=_this.formCtrl;return angular.forEach(iterable,function(val,key){"object"==typeof val&&val.hasOwnProperty("$modelValue")&&(void 0!=_this.object.forms[_this.name][key].$modelValue?val=_this.object.forms[_this.name][key].$modelValue:void 0!=_this.object.forms[_this.name][key].$viewValue?val=_this.object.forms[_this.name][key].$viewValue:_this.object.forms[_this.name][key].$dirty&&(val=""),(angular.isString(val)||angular.isNumber(val)||"boolean"==typeof val)&&(_this.formData[key]=val),void 0!=val.$modelValue?_this.formData[key]=val.$modelValue:void 0!=val.$viewValue&&(_this.formData[key]=val.$viewValue))}),_this.formData||""},this.$hibachi=$hibachi,this.utilityService=utilityService,angular.isUndefined(this.isDirty)&&(this.isDirty=!1),angular.isString(this.object)){var objectNameArray=this.object.split("_");this.entityName=objectNameArray[0],objectNameArray.length>1?(this.context=this.context||objectNameArray[1],this.isProcessForm=!0):(this.context=this.context||"save",this.isProcessForm=!1),this.$timeout(function(){_this.object=_this.$hibachi["new"+_this.object]()})}else this.object&&this.object.metaData&&(this.isProcessForm=this.object.metaData.isProcessObject,this.entityName=this.object.metaData.className.split("_")[0],this.isProcessForm?this.context=this.context||this.object.metaData.className.split("_")[1]:this.context=this.context||"save");if(this.context=this.context||this.name,this.isProcessForm&&"Order"==this.entityName&&(this.entityName="Cart"),this.submitOnEnter&&(this.eventListeners=this.eventListeners||{},this.eventListeners.keyup=this.submitKeyCheck),this.eventListeners)for(var key in this.eventListeners)this.observerService.attach(this.eventListeners[key],key)}return SWFormController}();exports.SWFormController=SWFormController;var SWForm=function(){function SWForm(coreFormPartialsPath,hibachiPathBuilder){this.coreFormPartialsPath=coreFormPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.templateUrl="",this.transclude=!0,this.restrict="E",this.controller=SWFormController,this.controllerAs="swForm",this.scope={},this.bindToController={name:"@?",context:"@?",entityName:"@?",hiddenFields:"=?",action:"@?",actions:"@?",formClass:"@?",formData:"=?",errorClass:"@?",object:"=?",onSuccess:"@?",onError:"@?",hideUntil:"@?",isDirty:"=?",inputAttributes:"@?",eventListeners:"=?",eventAnnouncers:"@",submitOnEnter:"@",parseObjectErrors:"@?"},this.link=function(scope,element,attrs,controller){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath)+"form.html"}return SWForm.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWForm(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWForm}();exports.SWForm=SWForm},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormFieldController=function(){function SWFormFieldController($injector,$scope,$timeout,$log,$hibachi,observerService,utilityService){var _this=this;this.$injector=$injector,this.$scope=$scope,this.$timeout=$timeout,this.$log=$log,this.$hibachi=$hibachi,this.observerService=observerService,this.utilityService=utilityService,this.formFieldChanged=function(option){"yesno"===_this.fieldType?(_this.object.data[_this.propertyIdentifier]=option.value,_this.form[_this.propertyIdentifier].$dirty=!0,_this.form["selected"+_this.object.metaData.className+_this.propertyIdentifier+_this.selectedRadioFormName].$dirty=!1):"checkbox"==_this.fieldType?(_this.object.data[_this.propertyIdentifier]=option.value,_this.form[_this.propertyIdentifier].$dirty=!0):"select"===_this.fieldType?(_this.$log.debug("formfieldchanged"),_this.$log.debug(option),"object"===_this.selectType&&"function"==typeof _this.object.data[_this.propertyIdentifier].$$getIDName?(_this.object.data[_this.propertyIdentifier].data[_this.object.data[_this.propertyIdentifier].$$getIDName()]=option.value,angular.isDefined(_this.form[_this.object.data[_this.propertyIdentifier].$$getIDName()])&&(_this.form[_this.object.data[_this.propertyIdentifier].$$getIDName()].$dirty=!0)):"string"===_this.selectType&&option&&null!=option.value&&(_this.object.data[_this.propertyIdentifier]=option.value,_this.form[_this.propertyIdentifier].$dirty=!0),_this.observerService.notify(_this.object.metaData.className+_this.propertyIdentifier.charAt(0).toUpperCase()+_this.propertyIdentifier.slice(1)+"OnChange",option)):(_this.object.data[_this.propertyIdentifier]=option.value,_this.form[_this.propertyIdentifier].$dirty=!0,_this.form["selected"+_this.object.metaData.className+_this.propertyIdentifier+_this.selectedRadioFormName].$dirty=!1)},this.$onInit=function(){var bindToControllerProps=_this.$injector.get("swFormFieldDirective")[0].bindToController;for(var i in bindToControllerProps)_this[i]||(!_this[i]&&_this.swPropertyDisplay&&_this.swPropertyDisplay[i]?_this[i]=_this.swPropertyDisplay[i]:!_this[i]&&_this.swfPropertyDisplay&&_this.swfPropertyDisplay[i]?_this[i]=_this.swfPropertyDisplay[i]:!_this[i]&&_this.swForm&&_this.swForm[i]&&(_this[i]=_this.swForm[i]));var tempObject=[];if("string"==typeof _this.optionValues){for(var temp=_this.optionValues.split(","),_i=0,temp_1=temp;_i<temp_1.length;_i++){var value=temp_1[_i];tempObject.push({name:value,value:value})}_this.optionValues=tempObject}if(_this.edit=_this.edit||!0,_this.fieldType=_this.fieldType||"text","yesno"===_this.fieldType&&_this.yesnoStrategy(),"select"===_this.fieldType&&_this.selectStrategy(),_this.eventListeners)for(var key in _this.eventListeners)_this.observerService.attach(_this.eventListeners[key],key)},this.selectStrategy=function(){angular.isDefined(_this.object.metaData)&&angular.isDefined(_this.object.metaData[_this.propertyIdentifier])&&angular.isDefined(_this.object.metaData[_this.propertyIdentifier].fieldtype)?(_this.selectType="object",_this.$log.debug("selectType:object")):(_this.selectType="string",_this.$log.debug("selectType:string")),_this.getOptions()},this.getOptions=function(){if(angular.isUndefined(_this.options)){_this.optionsArguments&&_this.optionsArguments.hasOwnProperty("propertyIdentifier")||(_this.optionsArguments={propertyIdentifier:_this.propertyIdentifier});_this.$hibachi.getPropertyDisplayOptions(_this.object.metaData.className,_this.optionsArguments).then(function(value){if(_this.options=value.data,"object"===_this.selectType)if(angular.isUndefined(_this.object.data[_this.propertyIdentifier])&&(_this.object.data[_this.propertyIdentifier]=_this.$hibachi["new"+_this.object.metaData[_this.propertyIdentifier].cfc]()),""===_this.object.data[_this.propertyIdentifier].$$getID())_this.$log.debug("no ID"),_this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName()),_this.object.data["selected"+_this.propertyIdentifier]=_this.options[0],_this.object.data[_this.propertyIdentifier]=_this.$hibachi["new"+_this.object.metaData[_this.propertyIdentifier].cfc](),_this.object.data[_this.propertyIdentifier].data[_this.object.data[_this.propertyIdentifier].$$getIDName()]=_this.options[0].value;else{var found=!1;for(var i in _this.options){if(angular.isObject(_this.options[i].value)){if(_this.$log.debug("isObject"),_this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName()),_this.options[i].value===_this.object.data[_this.propertyIdentifier]){_this.object.data["selected"+_this.propertyIdentifier]=_this.options[i],_this.object.data[_this.propertyIdentifier]=_this.options[i].value,found=!0;break}}else if(_this.$log.debug("notisObject"),_this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName()),_this.options[i].value===_this.object.data[_this.propertyIdentifier].$$getID()){_this.object.data["selected"+_this.propertyIdentifier]=_this.options[i],_this.object.data[_this.propertyIdentifier].data[_this.object.data[_this.propertyIdentifier].$$getIDName()]=_this.options[i].value,found=!0;break}found||(_this.object.data["selected"+_this.propertyIdentifier]=_this.options[0])}}else if("string"===_this.selectType)if(null!==_this.object.data[_this.propertyIdentifier])for(var i in _this.options)_this.options[i].value===_this.object.data[_this.propertyIdentifier]&&(_this.object.data["selected"+_this.propertyIdentifier]=_this.options[i],_this.object.data[_this.propertyIdentifier]=_this.options[i].value);else _this.object.data["selected"+_this.propertyIdentifier]=_this.options[0],_this.object.data[_this.propertyIdentifier]=_this.options[0].value})}},this.yesnoStrategy=function(){if(_this.selectedRadioFormName=_this.utilityService.createID(26),_this.object.data[_this.propertyIdentifier]=_this.object.data[_this.propertyIdentifier]&&_this.object.data[_this.propertyIdentifier].length&&"yes"===_this.object.data[_this.propertyIdentifier].toLowerCase().trim()||1==_this.object.data[_this.propertyIdentifier]?1:0,_this.options=[{name:"Yes",value:1},{name:"No",value:0}],angular.isDefined(_this.object.data[_this.propertyIdentifier]))for(var i in _this.options)_this.options[i].value===_this.object.data[_this.propertyIdentifier]&&(_this.selected=_this.options[i],_this.object.data[_this.propertyIdentifier]=_this.options[i].value);else _this.selected=_this.options[0],_this.object.data[_this.propertyIdentifier]=_this.options[0].value;_this.$timeout(function(){_this.form[_this.propertyIdentifier].$dirty=_this.isDirty})},this.$injector=$injector,this.$scope=$scope,this.$timeout=$timeout,this.$log=$log,this.$hibachi=$hibachi,this.observerService=observerService,this.utilityService=utilityService}return SWFormFieldController}();exports.SWFormFieldController=SWFormFieldController;var SWFormField=function(){function SWFormField($log,$templateCache,$window,$hibachi,formService,coreFormPartialsPath,hibachiPathBuilder){this.restrict="EA",this.require={swfPropertyDisplay:"^?swfPropertyDisplay",swPropertyDisplay:"^?swPropertyDisplay",form:"^?form",swForm:"^?swForm"},this.controller=SWFormFieldController,this.controllerAs="swFormField",this.scope={},this.bindToController={propertyIdentifier:"@?",property:"@?",name:"@?",class:"@?",errorClass:"@?",fieldType:"@?",type:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",inListingDisplay:"=?",inputAttributes:"@?",options:"=?",optionsArguments:"=?",eagerLoadOptions:"=?",rawFileTarget:"@?",binaryFileTarget:"@?",isDirty:"=?",onChange:"=?",editable:"=?",eventListeners:"=?",context:"@?",eventAnnouncers:"@"},this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath)+"formfield.html"}return SWFormField.Factory=function(){var directive=function($log,$templateCache,$window,$hibachi,formService,coreFormPartialsPath,hibachiPathBuilder){return new SWFormField($log,$templateCache,$window,$hibachi,formService,coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","$templateCache","$window","$hibachi","formService","coreFormPartialsPath","hibachiPathBuilder"],directive},SWFormField}();exports.SWFormField=SWFormField},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormFieldFileController=function(){function SWFormFieldFileController(formService){this.formService=formService,void 0==this.propertyDisplay.isDirty&&(this.propertyDisplay.isDirty=!1),this.propertyDisplay.form.$dirty=this.propertyDisplay.isDirty}return SWFormFieldFileController}(),SWFormFieldFile=function(){function SWFormFieldFile(coreFormPartialsPath,hibachiPathBuilder){this.restrict="E",this.require="^form",this.controller=SWFormFieldFileController,this.controllerAs="swFormFieldFile",this.scope=!0,this.bindToController={propertyDisplay:"="},this.link=function(scope,element,attr,formController){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath)+"file.html"}return SWFormFieldFile.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWFormFieldFile(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWFormFieldFile}();exports.SWFormFieldFile=SWFormFieldFile},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormFieldJsonController=function(){function SWFormFieldJsonController(formService){this.propertyDisplay.form.$dirty=this.propertyDisplay.isDirty}return SWFormFieldJsonController}(),SWFormFieldJson=function(){function SWFormFieldJson(coreFormPartialsPath,hibachiPathBuilder){this.restrict="E",this.require="^form",this.scope=!0,this.controller=SWFormFieldJsonController,this.bindToController={propertyDisplay:"=?"},this.controllerAs="ctrl",this.templateUrl="",this.link=function(scope,element,attrs,formController){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath)+"json.html"}return SWFormFieldJson.Factory=function(){var directive=function(coreFormPartialsPath,hibachiPathBuilder){return new SWFormFieldJson(coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["coreFormPartialsPath","hibachiPathBuilder"],directive},SWFormFieldJson}();exports.SWFormFieldJson=SWFormFieldJson},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormFieldSearchSelect=function(){function SWFormFieldSearchSelect($log,$hibachi,coreFormPartialsPath,hibachiPathBuilder){return{templateUrl:hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath)+"search-select.html",require:"^form",restrict:"E",scope:{propertyDisplay:"="},link:function(scope,element,attr,formController){scope.selectionOptions={value:[],$$adding:!1},scope.setAdding=function(isAdding){scope.isAdding=isAdding,scope.showAddBtn=!1},scope.selectedOption={},scope.showAddBtn=!1;var propertyMetaData=scope.propertyDisplay.object.$$getMetaData(scope.propertyDisplay.property),object=$hibachi.newEntity(propertyMetaData.cfc);scope.cfcProperCase=propertyMetaData.cfcProperCase,scope.selectionOptions.getOptionsByKeyword=function(keyword){var filterGroupsConfig='[ {  "filterGroup":[  { "propertyIdentifier":"_'+scope.cfcProperCase.toLowerCase()+"."+scope.cfcProperCase+'Name", "comparisonOperator":"like", "ormtype":"string", "value":"%'+keyword+'%"  } ] }]';return $hibachi.getEntity(propertyMetaData.cfc,{filterGroupsConfig:filterGroupsConfig.trim()}).then(function(value){$log.debug("typesByKeyword"),$log.debug(value),scope.selectionOptions.value=value.pageRecords;var myLength=keyword.length;return scope.showAddBtn=myLength>0,scope.selectionOptions.value})},scope.propertyDisplay.object["$$get"+propertyMetaData.nameCapitalCase]().then(function(data){}),scope.selectItem=function($item,$model,$label){scope.$item=$item,scope.$model=$model,scope.$label=$label,scope.showAddBtn=!1,object.$$init($item),$log.debug("select item"),$log.debug(object),scope.propertyDisplay.object["$$set"+propertyMetaData.nameCapitalCase](object)}}}}return SWFormFieldSearchSelect.Factory=function(){var directive=function($log,$hibachi,coreFormPartialsPath,hibachiPathBuilder){return new SWFormFieldSearchSelect($log,$hibachi,coreFormPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","$hibachi","coreFormPartialsPath","hibachiPathBuilder"],directive},SWFormFieldSearchSelect}();exports.SWFormFieldSearchSelect=SWFormFieldSearchSelect},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormRegistrar=function(){function SWFormRegistrar(formService){return{restrict:"E",require:["^form","^swForm"],scope:{object:"=?",context:"@?",name:"@?",isDirty:"=?"},link:function(scope,element,attrs,formController,transclude){scope.$watch(function(){return formController[0]},function(){formController[1].formCtrl=formController[0]}),formController[0].$$swFormInfo={object:scope.object,context:scope.context||"save",name:scope.name};scope.isDirty&&(formController[0].autoDirty=!0),scope.form=formController[0],formController[0].name=scope.name,formController[0].$setDirty(),formService.setForm(formController[0]),angular.isDefined(scope.object.forms)||(scope.object.forms={}),scope.object.forms[scope.name]=formController[0]}}}return SWFormRegistrar.Factory=function(){var directive=function(formService){return new SWFormRegistrar(formService)};return directive.$inject=["formService"],directive},SWFormRegistrar}();exports.SWFormRegistrar=SWFormRegistrar},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWFormSubscriberController=function(){function SWFormSubscriberController($log,$compile,$hibachi,utilityService,rbkeyService,$injector){var _this=this;this.$log=$log,this.$compile=$compile,this.$hibachi=$hibachi,this.utilityService=utilityService,this.rbkeyService=rbkeyService,this.$injector=$injector,this.$onInit=function(){var bindToControllerProps=_this.$injector.get("swFormSubscriberDirective")[0].bindToController;for(var i in bindToControllerProps)_this[i]||!_this[i]&&_this.swForm&&_this.swForm[i]&&(_this[i]=_this.swForm[i]);_this.property=_this.property||_this.propertyIdentifier,_this.propertyIdentifier=_this.propertyIdentifier||_this.property,_this.type=_this.type||_this.fieldType,_this.fieldType=_this.fieldType||_this.type,_this.edit=_this.edit||_this.editing,_this.editing=_this.editing||_this.edit,_this.editing=_this.editing||!0,_this.fieldType=_this.fieldType||"text",_this.inputAttributes=_this.inputAttributes||""},this.utilityService=utilityService,this.$hibachi=$hibachi,this.rbkeyService=rbkeyService,this.$log=$log,this.$injector=$injector}return SWFormSubscriberController}(),SWFormSubscriber=function(){function SWFormSubscriber(){this.restrict="A",this.require={swForm:"?^swForm",form:"?^form"},this.scope={},this.bindToController={propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",fieldType:"@?",property:"@?",inputAttributes:"@?",type:"@?",editing:"=?"},this.controller=SWFormSubscriberController,this.controllerAs="SWFormSubscriber",this.link=function(scope,element,attr){}}return SWFormSubscriber.Factory=function(){var directive=function(){return new SWFormSubscriber};return directive.$inject=[],directive},SWFormSubscriber}();exports.SWFormSubscriber=SWFormSubscriber},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var swpropertydisplay_1=__webpack_require__(172),SWFPropertyDisplayController=function(_super){function SWFPropertyDisplayController($filter,utilityService,$injector,metadataService,observerService){var _this=_super.call(this,$filter,utilityService,$injector,metadataService,observerService)||this;return _this.$filter=$filter,_this.utilityService=utilityService,_this.$injector=$injector,_this.metadataService=metadataService,_this.observerService=observerService,_this.edit=!0,_this}return __extends(SWFPropertyDisplayController,_super),SWFPropertyDisplayController}(swpropertydisplay_1.SWPropertyDisplayController);exports.SWFPropertyDisplayController=SWFPropertyDisplayController;var SWFPropertyDisplay=function(_super){function SWFPropertyDisplay($compile,scopeService,coreFormPartialsPath,hibachiPathBuilder,swpropertyPartialPath){var _this=_super.call(this,$compile,scopeService,coreFormPartialsPath,hibachiPathBuilder,swpropertyPartialPath)||this;return _this.$compile=$compile,_this.scopeService=scopeService,_this.coreFormPartialsPath=coreFormPartialsPath,_this.hibachiPathBuilder=hibachiPathBuilder,_this.swpropertyPartialPath=swpropertyPartialPath,_this.controller=SWFPropertyDisplayController,_this.controllerAs="swfPropertyDisplay",_this.scope={},_this.link=function(scope,element,attrs){},_this}return __extends(SWFPropertyDisplay,_super),SWFPropertyDisplay}(swpropertydisplay_1.SWPropertyDisplay);exports.SWFPropertyDisplay=SWFPropertyDisplay},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWInputController=function(){function SWInputController($scope,$log,$hibachi,$injector,listingService,utilityService,rbkeyService,observerService,metadataService){var _this=this;this.$scope=$scope,this.$log=$log,this.$hibachi=$hibachi,this.$injector=$injector,this.listingService=listingService,this.utilityService=utilityService,this.rbkeyService=rbkeyService,this.observerService=observerService,this.metadataService=metadataService,this.eventAnnouncers="",this.onSuccess=function(){_this.utilityService.setPropertyValue(_this.swForm.object,_this.propertyIdentifier,_this.value),_this.swPropertyDisplay&&_this.utilityService.setPropertyValue(_this.swPropertyDisplay.object,_this.propertyIdentifier,_this.value),_this.swfPropertyDisplay&&(_this.utilityService.setPropertyValue(_this.swfPropertyDisplay.object,_this.propertyIdentifier,_this.value),_this.swfPropertyDisplay.edit=!1),_this.utilityService.setPropertyValue(_this.swFormField.object,_this.propertyIdentifier,_this.value)},this.getValidationDirectives=function(){var spaceDelimitedList="",name=_this.propertyIdentifier,form=_this.form;if(_this.$log.debug("Name is:"+name+" and form is: "+form),_this.metadataService.isAttributePropertyByEntityAndPropertyIdentifier(_this.object,_this.propertyIdentifier)&&(_this.object.validations.properties[name]=[],(_this.object.metaData[_this.propertyIdentifier].requiredFlag&&1==_this.object.metaData[_this.propertyIdentifier].requiredFlag||"string"==typeof _this.object.metaData[_this.propertyIdentifier].requiredFlag&&"yes"==_this.object.metaData[_this.propertyIdentifier].requiredFlag.trim().toLowerCase())&&_this.object.validations.properties[name].push({contexts:"save",required:!0}),_this.object.metaData[_this.propertyIdentifier].validationRegex&&_this.object.validations.properties[name].push({contexts:"save",regex:_this.object.metaData[_this.propertyIdentifier].validationRegex})),angular.isUndefined(_this.object.validations)||angular.isUndefined(_this.object.validations.properties)||angular.isUndefined(_this.object.validations.properties[_this.propertyIdentifier]))return"";var validations=_this.object.validations.properties[_this.propertyIdentifier];_this.$log.debug("Validations: ",validations),_this.$log.debug(_this.form);var validationsForContext=[],formContext=_this.swForm.context,formName=_this.swForm.name;_this.$log.debug("Form context is: "),_this.$log.debug(formContext),_this.$log.debug("Form Name: "),_this.$log.debug(formName);var propertyValidations=_this.object.validations.properties[name];if(angular.isObject(propertyValidations)){if(angular.isUndefined(propertyValidations[0].contexts)&&_this.object.metaData.isProcessObject&&(propertyValidations[0].contexts=_this.object.metaData.className.split("_")[1]),propertyValidations[0].contexts.indexOf(formContext)>-1){_this.$log.debug("Matched");for(var prop in propertyValidations[0])"contexts"!=prop&&"conditions"!==prop&&(spaceDelimitedList+=" swvalidation"+prop.toLowerCase()+"='"+propertyValidations[0][prop]+"'")}_this.$log.debug(spaceDelimitedList)}return _this.$log.debug(validations),_this.$log.debug(form),angular.forEach(validations,function(validation,key){validation.contexts&&-1!==_this.utilityService.listFind(validation.contexts.toLowerCase(),_this.swForm.context.toLowerCase())&&(_this.$log.debug("Validations for context"),_this.$log.debug(validation),validationsForContext.push(validation))}),spaceDelimitedList},this.clear=function(){_this.reverted&&(_this.reverted=!1,_this.showRevert=!0),_this.edited=!1,_this.value=_this.initialValue,_this.inListingDisplay&&_this.rowSaveEnabled&&_this.listingService.markUnedited(_this.listingID,_this.pageRecordIndex,_this.propertyDisplayID)},this.revert=function(){_this.showRevert=!1,_this.reverted=!0,_this.value=_this.revertToValue,_this.onEvent({},"change")},this.onEvent=function(event,eventName){var customEventName=_this.swForm.name+_this.name+eventName,formEventName=_this.swForm.name+eventName,data={event:event,eventName:eventName,form:_this.form,swForm:_this.swForm,swInput:_this,inputElement:$("input").first()[0]};_this.observerService.notify(customEventName,data),_this.observerService.notify(formEventName,data),_this.observerService.notify(eventName,data)},this.getTemplate=function(){var template="",validations="",currencyTitle="",currencyFormatter="",style="";_this.class||(_this.class="form-control"),_this.noValidate||(validations=_this.getValidationDirectives()),_this.object&&_this.object.metaData&&void 0!=_this.object.metaData.$$getPropertyFormatType(_this.propertyIdentifier)&&"currency"==_this.object.metaData.$$getPropertyFormatType(_this.propertyIdentifier)&&(currencyFormatter="sw-currency-formatter ",angular.isDefined(_this.object.data.currencyCode)&&(currencyFormatter=currencyFormatter+'data-currency-code="'+_this.object.data.currencyCode+'" ',currencyTitle='<span class="s-title">'+_this.object.data.currencyCode+"</span>"));var appConfig=_this.$hibachi.getConfig(),placeholder="";if(_this.object.metaData&&_this.object.metaData[_this.propertyIdentifier]&&_this.object.metaData[_this.propertyIdentifier].hb_nullrbkey&&(placeholder=_this.rbkeyService.getRBKey(_this.object.metaData[_this.propertyIdentifier].hb_nullrbkey)),"json"===_this.fieldType.toLowerCase()&&(style=style+="display:none"),["email","text","password","number","time","date","datetime","json","file"].indexOf(_this.fieldType.toLowerCase())>=0){var inputType=_this.fieldType.toLowerCase();"time"!==_this.fieldType&&"number"!==_this.fieldType||(inputType="text"),template=currencyTitle+'<input type="'+inputType+'" class="'+_this.class+'" ng-model="swInput.value" ng-disabled="swInput.editable === false" ng-show="swInput.edit" ng-class="{\'form-control\':swInput.inListingDisplay, \'input-xs\':swInput.inListingDisplay}"name="'+_this.propertyIdentifier+'" placeholder="'+placeholder+'" '+validations+currencyFormatter+'id="swinput'+_this.swForm.name+_this.name+'" style="'+style+'"'+_this.inputAttributes+_this.eventAnnouncerTemplate}["date","datetime","time"].indexOf(_this.fieldType.toLowerCase())>=0&&(template+="datetime-picker "),"time"===_this.fieldType&&(template=template+'data-time-only="true" date-format="'+appConfig.timeFormat.replace("tt","a")+'" ng-blur="swInput.pushBindings()"'),"date"===_this.fieldType&&(template=template+'data-date-only="true" future-only date-format="'+appConfig.dateFormat+'" '),template.length&&(template+=" />");return template+'\n\t\t\t<a class="s-remove-change"\n\t\t\t\tdata-ng-click="swPropertyDisplay.clear()"\n\t\t\t\tdata-ng-if="swInput.edited && swInput.edit">\n\t\t\t\t\t<i class="fa fa-remove"></i>\n\t\t\t</a>\n\n\t\t\t\x3c!-- Revert Button --\x3e\n\t\t\t<button class="btn btn-xs btn-default s-revert-btn"\n\t\t\t\t\tdata-ng-show="swInput.showRevert"\n\t\t\t\t\tdata-ng-click="swInput.revert()"\n\t\t\t\t\tdata-toggle="popover"\n\t\t\t\t\tdata-trigger="hover"\n\t\t\t\t\tdata-content="{{swInput.revertText}}"\n\t\t\t\t\tdata-original-title=""\n\t\t\t\t\ttitle="">\n\t\t\t\t<i class="fa fa-refresh"></i>\n\t\t\t</button>\n\t\t'},this.pullBindings=function(){var bindToControllerProps=_this.$injector.get("swInputDirective")[0].bindToController;for(var i in bindToControllerProps)_this[i]||(!_this[i]&&_this.swFormField&&_this.swFormField[i]?_this[i]=_this.swFormField[i]:!_this[i]&&_this.swPropertyDisplay&&_this.swPropertyDisplay[i]?_this[i]=_this.swPropertyDisplay[i]:!_this[i]&&_this.swfPropertyDisplay&&_this.swfPropertyDisplay[i]?_this[i]=_this.swfPropertyDisplay[i]:!_this[i]&&_this.swForm&&_this.swForm[i]&&(_this[i]=_this.swForm[i]));_this.edit=_this.edit||!0,_this.fieldType=_this.fieldType||"text",_this.inputAttributes=_this.inputAttributes||"",_this.inputAttributes=_this.utilityService.replaceAll(_this.inputAttributes,"'",'"'),_this.value=_this.utilityService.getPropertyValue(_this.object,_this.propertyIdentifier)},this.pushBindings=function(){_this.observerService.notify("updateBindings").then(function(){})},this.$onInit=function(){_this.pullBindings(),_this.eventAnnouncersArray=_this.eventAnnouncers.split(","),_this.eventAnnouncerTemplate="";for(var i in _this.eventAnnouncersArray){var eventName=_this.eventAnnouncersArray[i];eventName.length&&(_this.eventAnnouncerTemplate+=" ng-"+eventName+"=\"swInput.onEvent($event,'"+eventName+"')\"")}_this.object&&_this.object.metaData&&void 0!=_this.object.metaData.className?_this.eventNameForObjectSuccess=_this.object.metaData.className.split("_")[0]+_this.context.charAt(0).toUpperCase()+_this.context.slice(1)+"Success":_this.eventNameForObjectSuccess=_this.context.charAt(0).toUpperCase()+_this.context.slice(1)+"Success";var eventNameForObjectSuccessID=_this.eventNameForObjectSuccess+_this.propertyIdentifier;if(_this.object&&_this.object.metaData&&void 0!=_this.object.metaData.className)var eventNameForUpdateBindingsID=_this.object.metaData.className.split("_")[0]+_this.propertyIdentifier+"updateBindings";else var eventNameForUpdateBindingsID=_this.propertyIdentifier+"updateBindings";if(_this.object&&_this.object.metaData&&void 0!=_this.object.metaData.className)var eventNameForPullBindingsID=_this.object.metaData.className.split("_")[0]+_this.propertyIdentifier+"pullBindings";else var eventNameForPullBindingsID=_this.propertyIdentifier+"pullBindings";_this.object&&(_this.observerService.attach(_this.onSuccess,_this.eventNameForObjectSuccess,eventNameForObjectSuccessID),_this.observerService.attach(_this.onSuccess,"updateBindings",eventNameForUpdateBindingsID),_this.observerService.attach(_this.pullBindings,"pullBindings",eventNameForPullBindingsID)),_this.$scope.$on("$destroy",function(){_this.observerService.detachById("updateBindings"),_this.observerService.detachById(eventNameForUpdateBindingsID)})}}return SWInputController}(),SWInput=function(){function SWInput($compile,$timeout,$parse,fileService){var _this=this;this.$compile=$compile,this.$timeout=$timeout,this.$parse=$parse,this.fileService=fileService,this.restrict="E",this.require={swForm:"?^swForm",form:"?^form",swFormField:"?^swFormField",swPropertyDisplay:"?^swPropertyDisplay",swfPropertyDisplay:"?^swfPropertyDisplay"},this.scope={},this.bindToController={propertyIdentifier:"@?",name:"@?",class:"@?",errorClass:"@?",option:"=?",valueObject:"=?",object:"=?",label:"@?",labelText:"@?",labelClass:"@?",inListingDisplay:"=?",listingID:"=?",pageRecordIndex:"=?",propertyDisplayID:"=?",initialValue:"=?",optionValues:"=?",edit:"=?",title:"@?",value:"=?",errorText:"@?",fieldType:"@?",property:"@?",binaryFileTarget:"@?",rawFileTarget:"@?",reverted:"=?",revertToValue:"=?",showRevert:"=?",inputAttributes:"@?",type:"@?",eventAnnouncers:"@?",context:"@?"},this.controller=SWInputController,this.controllerAs="swInput",this.link=function(scope,element,attr){if("file"===scope.swInput.type){angular.isUndefined(scope.swInput.object.data[scope.swInput.rawFileTarget])&&(scope.swInput.object[scope.swInput.rawFileTarget]="",scope.swInput.object.data[scope.swInput.rawFileTarget]="");var model=_this.$parse("swInput.object.data[swInput.rawFileTarget]"),modelSetter=model.assign;element.bind("change",function(e){var fileToUpload=(e.srcElement||e.target).files[0];scope.$apply(function(){modelSetter(scope,fileToUpload)},function(){throw"swinput couldn't apply the file to scope"}),_this.$timeout(function(){_this.fileService.uploadFile(fileToUpload,scope.swInput.object,scope.swInput.binaryFileTarget).then(function(result){scope.swInput.object[scope.swInput.property]=fileToUpload,scope.swInput.onEvent(e,"change")},function(){})})})}element.html(scope.swInput.getTemplate()),_this.$compile(element.contents())(scope)}}return SWInput.Factory=function(){var directive=function($compile,$timeout,$parse,fileService){return new SWInput($compile,$timeout,$parse,fileService)};return directive.$inject=["$compile","$timeout","$parse","fileService"],directive},SWInput}();exports.SWInput=SWInput},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core_module_1=__webpack_require__(16),fileservice_1=__webpack_require__(631),swinput_1=__webpack_require__(629),swfformfield_1=__webpack_require__(620),swform_1=__webpack_require__(621),swformfield_1=__webpack_require__(622),swformfieldfile_1=__webpack_require__(623),swformfieldjson_1=__webpack_require__(624),swformfieldsearchselect_1=__webpack_require__(625),swformregistrar_1=__webpack_require__(626),swerrordisplay_1=__webpack_require__(619),swaddressform_1=__webpack_require__(618),swpropertydisplay_1=__webpack_require__(172),swfpropertydisplay_1=__webpack_require__(628),swformsubscriber_1=__webpack_require__(627),formmodule=angular.module("hibachi.form",["angularjs-datetime-picker",core_module_1.coremodule.name]).config(function(){}).constant("coreFormPartialsPath","form/components/").service("fileService",fileservice_1.FileService).directive("swInput",swinput_1.SWInput.Factory()).directive("swfFormField",swfformfield_1.SWFFormField.Factory()).directive("swForm",swform_1.SWForm.Factory()).directive("swFormField",swformfield_1.SWFormField.Factory()).directive("swFormFieldFile",swformfieldfile_1.SWFormFieldFile.Factory()).directive("swFormFieldJson",swformfieldjson_1.SWFormFieldJson.Factory()).directive("swFormFieldSearchSelect",swformfieldsearchselect_1.SWFormFieldSearchSelect.Factory()).directive("swFormRegistrar",swformregistrar_1.SWFormRegistrar.Factory()).directive("swfPropertyDisplay",swfpropertydisplay_1.SWFPropertyDisplay.Factory(swfpropertydisplay_1.SWFPropertyDisplay,"swfpropertydisplay.html")).directive("swPropertyDisplay",swpropertydisplay_1.SWPropertyDisplay.Factory(swpropertydisplay_1.SWPropertyDisplay,"propertydisplay.html")).directive("swErrorDisplay",swerrordisplay_1.SWErrorDisplay.Factory()).directive("swAddressForm",swaddressform_1.SWAddressForm.Factory()).directive("swFormSubscriber",swformsubscriber_1.SWFormSubscriber.Factory());exports.formmodule=formmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var FileService=function(){function FileService($q,observerService){var _this=this;this.$q=$q,this.observerService=observerService,this.fileStates={},this.imageExists=function(src){var deferred=_this.$q.defer(),image=new Image;return image.onerror=function(){deferred.reject()},image.onload=function(){deferred.resolve()},image.src=src,deferred.promise},this.uploadFile=function(file,object,property){var deferred=_this.$q.defer(),promise=deferred.promise,fileReader=new FileReader;return fileReader.readAsDataURL(file),fileReader.onload=function(result){object.data[property]=fileReader.result,deferred.resolve(fileReader.result)},fileReader.onerror=function(result){throw deferred.reject(),"fileservice couldn't read the file"},promise}}return FileService}();exports.FileService=FileService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWSaveAndFinishController=function(){function SWSaveAndFinishController($hibachi,dialogService,alertService,rbkeyService,$log){var _this=this;if(this.$hibachi=$hibachi,this.dialogService=dialogService,this.alertService=alertService,this.rbkeyService=rbkeyService,this.$log=$log,this.saving=!1,this.initialSetup=function(){angular.isDefined(_this.finish)?_this.openNewDialog="true"!=_this.finish.toLowerCase():_this.openNewDialog=!1,_this.openNewDialog?_this.rbKey="admin.define.saveandnew":_this.rbKey="admin.define.saveandfinish"},this.save=function(){_this.saving=!0,_this.entity.$$save().then(function(data){_this.dialogService.removeCurrentDialog(),_this.openNewDialog&&angular.isDefined(_this.partial)?_this.dialogService.addPageDialog(_this.partial):angular.isDefined(_this.redirectUrl)?window.location.href=_this.redirectUrl:angular.isDefined(_this.redirectAction)?(angular.isUndefined(_this.redirectQueryString)&&(_this.redirectQueryString=""),window.location.href=_this.$hibachi.buildUrl(_this.redirectAction,_this.redirectQueryString)):_this.$log.debug("You did not specify a redirect for swSaveAndFinish")}).catch(function(data){if(angular.isDefined(_this.customErrorRbkey)&&(data=_this.rbkeyService.getRBKey(_this.customErrorRbkey)),angular.isString(data)){var alert=_this.alertService.newAlert();alert.msg=data,alert.type="error",alert.fade=!0,_this.alertService.addAlert(alert)}else _this.alertService.addAlerts(data)}).finally(function(){_this.saving=!1})},!angular.isFunction(this.entity.$$save))throw"Your entity does not have the $$save function.";this.initialSetup()}return SWSaveAndFinishController}();exports.SWSaveAndFinishController=SWSaveAndFinishController;var SWSaveAndFinish=function(){function SWSaveAndFinish(hibachiPartialsPath,hibachiPathBuilder){this.hibachiPartialsPath=hibachiPartialsPath,this.restrict="EA",this.scope={},this.controller=SWSaveAndFinishController,this.controllerAs="swSaveAndFinish",this.bindToController={entity:"=",redirectUrl:"@?",redirectAction:"@?",redirectQueryString:"@?",finish:"@?",partial:"@?",customErrorRbkey:"@?"},this.templateUrl=hibachiPathBuilder.buildPartialsPath(hibachiPartialsPath)+"saveandfinish.html"}return SWSaveAndFinish.Factory=function(){var directive=function(hibachiPartialsPath,hibachiPathBuilder){return new SWSaveAndFinish(hibachiPartialsPath,hibachiPathBuilder)};return directive.$inject=["hibachiPartialsPath","hibachiPathBuilder"],directive},SWSaveAndFinish}();exports.SWSaveAndFinish=SWSaveAndFinish},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var alert_module_1=__webpack_require__(60),card_module_1=__webpack_require__(488),collection_module_1=__webpack_require__(167),listing_module_1=__webpack_require__(648),dialog_module_1=__webpack_require__(171),entity_module_1=__webpack_require__(617),pagination_module_1=__webpack_require__(652),form_module_1=__webpack_require__(630),validation_module_1=__webpack_require__(670),workflow_module_1=__webpack_require__(685),swsaveandfinish_1=__webpack_require__(632),hibachimodule=angular.module("hibachi",[alert_module_1.alertmodule.name,card_module_1.cardmodule.name,collection_module_1.collectionmodule.name,entity_module_1.entitymodule.name,dialog_module_1.dialogmodule.name,listing_module_1.listingmodule.name,pagination_module_1.paginationmodule.name,form_module_1.formmodule.name,validation_module_1.validationmodule.name,workflow_module_1.workflowmodule.name]).config([function(){}]).run(["$rootScope","publicService","$hibachi","localStorageService",function($rootScope,publicService,$hibachi,localStorageService){$rootScope.hibachiScope=publicService,$rootScope.hasAccount=publicService.hasAccount,$hibachi.newAccount&&$rootScope.hibachiScope.getAccount(),$hibachi.newOrder&&$rootScope.hibachiScope.getCart(),$hibachi.newCountry&&$rootScope.hibachiScope.getCountries(),$hibachi.newState&&$rootScope.hibachiScope.getStates(),$hibachi.newState&&$rootScope.hibachiScope.getAddressOptions(),localStorageService.hasItem("selectedPersonalCollection")&&($rootScope.hibachiScope.selectedPersonalCollection=angular.fromJson(localStorageService.getItem("selectedPersonalCollection")))}]).constant("hibachiPartialsPath","hibachi/components/").directive("swSaveAndFinish",swsaveandfinish_1.SWSaveAndFinish.Factory());exports.hibachimodule=hibachimodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingAggregateController=function(){function SWListingAggregateController(){var _this=this;this.init=function(){_this.editable=_this.editable||!1},this.init()}return SWListingAggregateController}(),SWListingAggregate=function(){function SWListingAggregate(){this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",aggregateFunction:"@",aggregateAlias:"@?"},this.controller=SWListingAggregateController,this.controllerAs="swListingAggregate",this.link=function(scope,element,attrs){var aggregate={propertyIdentifier:scope.swListingAggregate.propertyIdentifier,aggregateFunction:scope.swListingAggregate.aggregateFunction,aggregateAlias:scope.swListingAggregate.aggregateAlias};scope.$parent.swListingDisplay.aggregates.push(aggregate)}}return SWListingAggregate.Factory=function(){var directive=function(){return new SWListingAggregate};return directive.$inject=[],directive},SWListingAggregate}();exports.SWListingAggregate=SWListingAggregate},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingColorFilterController=function(){function SWListingColorFilterController(){this.init=function(){},this.init()}return SWListingColorFilterController}(),SWListingColorFilter=function(){function SWListingColorFilter(utilityService){var _this=this;this.utilityService=utilityService,this.restrict="EA",this.scope=!0,this.bindToController={propertyToCompare:"@",comparisonOperator:"@",comparisonValue:"@",comparisonProperty:"@",colorClass:"@",color:"@"},this.controller=SWListingColorFilterController,this.controllerAs="swListingColorFilter",this.link=function(scope,element,attrs){var colorFilter={propertyToCompare:scope.swListingColorFilter.propertyToCompare,comparisonOperator:scope.swListingColorFilter.comparisonOperator,comparisonValue:scope.swListingColorFilter.comparisonValue,comparisonProperty:scope.swListingColorFilter.comparisonProperty,colorClass:scope.swListingColorFilter.colorClass,color:scope.swListingColorFilter.color};-1===_this.utilityService.ArrayFindByPropertyValue(scope.$parent.swListingDisplay.colorFilters,"propertyToCompare",colorFilter.propertyToCompare)&&scope.$parent.swListingDisplay.colorFilters.push(colorFilter)}}return SWListingColorFilter.Factory=function(){var directive=function(utilityService){return new SWListingColorFilter(utilityService)};return directive.$inject=["utilityService"],directive},SWListingColorFilter}();exports.SWListingColorFilter=SWListingColorFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingColumnController=function(){function SWListingColumnController($injector,utilityService,listingService,rbkeyService){var _this=this;this.$injector=$injector,this.utilityService=utilityService,this.listingService=listingService,this.rbkeyService=rbkeyService,this.hasCellView=!1,this.hasHeaderView=!1,this.$onInit=function(){if(angular.isUndefined(_this.isVisible)&&(_this.isVisible=!0),angular.isUndefined(_this.isExportable)&&(_this.isExportable=!0),angular.isUndefined(_this.isDeletable)&&(_this.isDeletable=!0),angular.isUndefined(_this.search)&&(_this.search=!0),_this.editable=_this.editable||!1,_this.cellView){if(!_this.$injector.has(_this.cellView+"Directive"))throw _this.cellView+" is not an existing directive";_this.hasCellView=!0}if(_this.headerView){if(!_this.$injector.has(_this.headerView+"Directive"))throw _this.headerView+" is not an existing directive";_this.hasHeaderView=!0}_this.column={columnID:"C"+_this.utilityService.createID(31),propertyIdentifier:_this.propertyIdentifier,fallbackPropertyIdentifiers:_this.fallbackPropertyIdentifiers,processObjectProperty:_this.processObjectProperty,title:_this.title,tdclass:_this.tdclass,search:_this.search,sort:_this.sort,filter:_this.filter,range:_this.range,editable:_this.editable,buttonGroup:_this.buttonGroup,hasCellView:_this.hasCellView,hasHeaderView:_this.hasHeaderView,isVisible:_this.isVisible,isDeletable:_this.isDeletable,isSearchable:_this.search,isExportable:_this.isExportable,action:_this.action,queryString:_this.queryString,persistent:_this.persistent},_this.hasCellView&&(_this.column.cellView=_this.cellView),_this.hasHeaderView&&(_this.column.headerView=_this.utilityService.camelCaseToSnakeCase(_this.headerView)),_this.aggregate&&(_this.column.aggregate=_this.aggregate,_this.column.aggregate.propertyIdentifier=_this.propertyIdentifier)},this.$injector=$injector,this.utilityService=utilityService,this.listingService=listingService,this.rbkeyService=rbkeyService}return SWListingColumnController}(),SWListingColumn=function(){function SWListingColumn(listingService){var _this=this;this.listingService=listingService,this.restrict="EA",this.scope=!0,this.require={swListingDisplay:"?^swListingDisplay"},this.bindToController={propertyIdentifier:"@",processObjectProperty:"@?",aggregate:"=?",title:"@?",tdclass:"@?",search:"=?",sort:"=?",filter:"=?",isVisible:"=?",isDeletable:"=?",isExportable:"=?",range:"=?",editable:"=?",buttonGroup:"=?",cellView:"@?",headerView:"@?",fallbackPropertyIdentifiers:"@?",action:"@?",queryString:"@?"},this.controller=SWListingColumnController,this.controllerAs="swListingColumn",this.link=function(scope,elem,attr,listingService){if(angular.isDefined(scope.swListingDisplay)&&scope.swListingDisplay.tableID&&scope.swListingDisplay.tableID.length){var listingDisplayID=scope.swListingDisplay.tableID;1!=scope.swListingDisplay.usePersonalCollection&&scope.swListingDisplay.columns&&(_this.listingService.addColumn(listingDisplayID,scope.swListingColumn.column),_this.listingService.setupColumn(listingDisplayID,scope.swListingColumn.column))}else{if(!(angular.isDefined(scope.swListingColumn.swListingDisplay)&&scope.swListingColumn.swListingDisplay.tableID&&scope.swListingColumn.swListingDisplay.tableID.length&&1!=scope.swListingColumn.swListingDisplay.usePersonalCollection&&scope.swListingColumn.swListingDisplay.columns))throw"listing display scope not available to sw-listing-column or there is no table id";var listingDisplayID=scope.swListingColumn.swListingDisplay.tableID;_this.listingService.addColumn(listingDisplayID,scope.swListingColumn.column)}}}return SWListingColumn.Factory=function(){var directive=function(listingService){return new SWListingColumn(listingService)};return directive.$inject=["listingService"],directive},SWListingColumn}();exports.SWListingColumn=SWListingColumn},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingControlsController=function(){function SWListingControlsController($hibachi,metadataService,collectionService,listingService,observerService){var _this=this;this.$hibachi=$hibachi,this.metadataService=metadataService,this.collectionService=collectionService,this.listingService=listingService,this.observerService=observerService,this.displayOptionsClosed=!0,this.filtersClosed=!0,this.personalCollectionsClosed=!0,this.columnIsControllableMap={},this.filterActions=function(res){"add"!=res.action&&"remove"!=res.action||_this.observerService.notifyById("swPaginationAction",_this.tableId,{type:"setCurrentPage",payload:1}),_this.filtersClosed=!0},this.getSelectedSearchColumnName=function(){return angular.isUndefined(_this.selectedSearchColumn)?"All":_this.selectedSearchColumn.title},this.canDisplayColumn=function(column){if(!_this.listingColumns||!_this.listingColumns.length)return!0;if(angular.isDefined(_this.columnIsControllableMap[column.propertyIdentifier]))return _this.columnIsControllableMap[column.propertyIdentifier];for(var i=0;i<_this.listingColumns.length;i++)column.propertyIdentifier==_this.listingColumns[i].propertyIdentifier&&(_this.columnIsControllableMap[column.propertyIdentifier]=!0);return _this.columnIsControllableMap[column.propertyIdentifier]||(_this.columnIsControllableMap[column.propertyIdentifier]=!1),_this.columnIsControllableMap[column.propertyIdentifier]},this.addSearchFilter=function(){if(!angular.isUndefined(_this.selectedSearchColumn)&&_this.searchText){for(var keywords=_this.searchText.split(" "),i=0;i<keywords.length;i++)_this.collectionConfig.addLikeFilter(_this.selectedSearchColumn.propertyIdentifier,keywords[i],"%w%",void 0,_this.selectedSearchColumn.title);_this.searchText="",_this.collectionConfig.setKeywords(_this.searchText),_this.observerService.notifyById("swPaginationAction",_this.tableId,{type:"setCurrentPage",payload:1})}},this.toggleDisplayOptions=function(closeButton){void 0===closeButton&&(closeButton=!1),_this.displayOptionsClosed=!!closeButton||!_this.displayOptionsClosed},this.setItemInUse=function(booleanValue){_this.itemInUse=booleanValue},this.removeFilter=function(array,index,reloadCollection){void 0===reloadCollection&&(reloadCollection=!0),array.splice(index,1),reloadCollection&&_this.observerService.notifyById("swPaginationAction",_this.tableId,{type:"setCurrentPage",payload:1})},this.toggleFilters=function(){_this.filtersClosed&&_this.simple&&(_this.newFilterPosition=_this.collectionService.newFilterItem(_this.collectionConfig.filterGroups[0].filterGroup,_this.setItemInUse)),_this.filtersClosed=!_this.filtersClosed},this.togglePersonalCollections=function(){_this.personalCollectionsClosed=!_this.personalCollectionsClosed},this.selectFilterItem=function(filterItem){_this.filtersClosed=!1,_this.collectionService.selectFilterItem(filterItem)},this.saveCollection=function(collectionConfig){collectionConfig&&(_this.collectionConfig=collectionConfig),_this.swListingDisplay.collectionConfig=_this.collectionConfig,_this.observerService.notifyById("swPaginationAction",_this.tableId,{type:"setCurrentPage",payload:1})},this.exportCollection=function(){_this.swListingDisplay.exportCurrentList()},this.printCollection=function(printTemplateID){_this.swListingDisplay.printCurrentList(printTemplateID)},angular.isUndefined(this.showPrintOptions)&&(this.showPrintOptions=!1),angular.isUndefined(this.showExport)&&(this.showExport=!0),angular.isUndefined(this.showToggleSearch)&&(this.showToggleSearch=!0),angular.isUndefined(this.showToggleFilters)&&(this.showToggleFilters=!0),angular.isUndefined(this.showToggleDisplayOptions)&&(this.showToggleDisplayOptions=!0),angular.isUndefined(this.showFilters)&&(this.showFilters=!1),this.backupColumnsConfig=this.collectionConfig.getColumns(),angular.isDefined(this.tableId)&&(this.listingColumns=this.listingService.getListingColumns(this.tableId)),angular.isUndefined(this.simple)&&(this.simple=!0),this.filterPropertiesList={},$hibachi.getFilterPropertiesByBaseEntityName(this.collectionConfig.baseEntityAlias).then(function(value){metadataService.setPropertiesList(value,_this.collectionConfig.baseEntityAlias),_this.filterPropertiesList[_this.collectionConfig.baseEntityAlias]=metadataService.getPropertiesListByBaseEntityAlias(_this.collectionConfig.baseEntityAlias),metadataService.formatPropertiesList(_this.filterPropertiesList[_this.collectionConfig.baseEntityAlias],_this.collectionConfig.baseEntityAlias)}),this.observerService.attach(this.filterActions,"filterItemAction")}return SWListingControlsController}(),SWListingControls=function(){function SWListingControls(collectionPartialsPath,hibachiPathBuilder){this.collectionPartialsPath=collectionPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="E",this.scope={},this.require={swListingDisplay:"?^swListingDisplay"},this.bindToController={collectionConfig:"=",tableId:"=?",getCollection:"&",showExport:"=?",showFilters:"=?",showPrintOptions:"=?",showToggleSearch:"=?",showToggleFilters:"=?",showToggleDisplayOptions:"=?",displayOptionsClosed:"=?",simple:"=?"},this.controller=SWListingControlsController,this.controllerAs="swListingControls",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"listingcontrols.html"}return SWListingControls.Factory=function(){var directive=function(listingPartialPath,hibachiPathBuilder){return new SWListingControls(listingPartialPath,hibachiPathBuilder)};return directive.$inject=["listingPartialPath","hibachiPathBuilder"],directive},SWListingControls.$inject=["listingPartialPath","hibachiPathBuilder"],SWListingControls}();exports.SWListingControls=SWListingControls},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingDisableRuleController=function(){function SWListingDisableRuleController($q){this.$q=$q}return SWListingDisableRuleController}(),SWListingDisableRule=function(){function SWListingDisableRule(scopeService,$q){var _this=this;this.scopeService=scopeService,this.$q=$q,this.restrict="EA",this.scope=!0,this.template="\n        \n    ",this.bindToController={filterPropertyIdentifier:"@",filterComparisonOperator:"@",filterComparisonValue:"@"},this.controller=SWListingDisableRuleController,this.controllerAs="swListingDisableRule",this.link=function(scope,element,attrs){var rule={filterPropertyIdentifier:scope.swListingDisableRule.filterPropertyIdentifier,filterComparisonOperator:scope.swListingDisableRule.filterComparisonOperator,filterComparisonValue:scope.swListingDisableRule.filterComparisonValue},listingDisplayScope=_this.scopeService.getRootParentScope(scope,"swListingDisplay");if(!angular.isDefined(listingDisplayScope.swListingDisplay))throw"listing display scope not available to sw-listing-disable-rule";listingDisplayScope=listingDisplayScope.swListingDisplay,listingDisplayScope.disableRules.push(rule)}}return SWListingDisableRule.Factory=function(){var directive=function(scopeService,$q){return new SWListingDisableRule(scopeService,$q)};return directive.$inject=["scopeService","$q"],directive},SWListingDisableRule}();exports.SWListingDisableRule=SWListingDisableRule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingDisplayController=function(){function SWListingDisplayController($scope,$rootScope,$transclude,$timeout,$q,$hibachi,utilityService,collectionConfigService,listingService,paginationService,selectionService,observerService,rbkeyService,localStorageService){var _this=this;if(this.$scope=$scope,this.$rootScope=$rootScope,this.$transclude=$transclude,this.$timeout=$timeout,this.$q=$q,this.$hibachi=$hibachi,this.utilityService=utilityService,this.collectionConfigService=collectionConfigService,this.listingService=listingService,this.paginationService=paginationService,this.selectionService=selectionService,this.observerService=observerService,this.rbkeyService=rbkeyService,this.localStorageService=localStorageService,this.actions=[],this.allpropertyidentifiers="",this.allprocessobjectproperties="false",this.aggregates=[],this.buttonGroup=[],this.childCollectionConfigs={},this.collectionConfigs=[],this.collectionObjects=[],this.colorFilters=[],this.columns=[],this.disableRules=[],this.expandableRules=[],this.exampleEntity="",this.filters=[],this.filterGroups=[],this.hideRules=[],this.multiselectable=!1,this.orderBys=[],this.orderByStates={},this.orderByIndices={},this.pageRecordsWithManualSortOrder={},this.searching=!1,this.selectable=!1,this.showSearchFilters=!1,this.sortable=!1,this.processCollection=function(){_this.initializeState(),angular.isDefined(_this.collectionPromise)&&(_this.hasCollectionPromise=!0,_this.multipleCollectionDeffered.reject()),null!=_this.collectionConfig&&_this.multipleCollectionDeffered.reject(),_this.listingService.setListingState(_this.tableID,_this),_this.$transclude(_this.$scope,function(){}),_this.hasCollectionPromise=angular.isDefined(_this.collectionPromise),_this.multiSlot?(_this.singleCollectionPromise.then(function(){_this.multipleCollectionDeffered.reject()}),_this.multipleCollectionPromise.then(function(){_this.listingService.setupInMultiCollectionConfigMode(_this.tableID)}).catch(function(){_this.listingService.setupInSingleCollectionConfigMode(_this.tableID,_this.$scope)}).finally(function(){angular.isUndefined(_this.getCollection)&&(_this.getCollection=_this.listingService.setupDefaultGetCollection(_this.tableID)),_this.paginator.getCollection=_this.getCollection,_this.observerService.attach(_this.getCollectionObserver,"getCollection",_this.tableID)})):0==_this.multiSlot&&(_this.columns&&_this.columns.length&&(_this.collectionConfig.columns=_this.columns),_this.setupCollectionPromise()),!_this.collectionObject&&_this.collectionConfig&&_this.collectionConfig.baseEntityName&&(_this.collectionObject=_this.collectionConfig.baseEntityName),_this.collectionObject&&(_this.exampleEntity=_this.$hibachi.getEntityExample(_this.collectionObject)),_this.observerService.attach(_this.getCollectionByPagination,"swPaginationAction",_this.tableID)},this.getCollectionByPagination=function(state){if(state.type){switch(state.type){case"setCurrentPage":case"nextPage":case"prevPage":_this.collectionConfig.currentPage=state.payload;break;case"setPageShow":_this.collectionConfig.currentPage=1,_this.collectionConfig.setPageShow(state.payload)}_this.getCollection=_this.collectionConfig.getEntity().then(function(data){_this.collectionData=data,_this.observerService.notifyById("swPaginationUpdate",_this.tableID,_this.collectionData)})}},this.setupCollectionPromise=function(){angular.isUndefined(_this.getCollection)&&(_this.getCollection=_this.listingService.setupDefaultGetCollection(_this.tableID)),_this.paginator.getCollection=_this.getCollection;_this.tableID;_this.listingService.getCollection(_this.tableID)},this.getCollectionObserver=function(param){_this.collectionConfig.loadJson(param.collectionConfig),_this.collectionData=void 0,_this.$timeout(function(){_this.getCollection()})},this.initializeState=function(){null!=_this.name?_this.tableID=_this.name:_this.tableID="LD"+_this.utilityService.createID(),angular.isUndefined(_this.collectionConfig)&&(_this.collectionConfig=null),angular.isUndefined(_this.multiSlot)&&(_this.multiSlot=!1),angular.isDefined(_this.administrativeCount)?_this.administrativeCount=parseInt(_this.administrativeCount):_this.administrativeCount=0,_this.recordDetailAction&&_this.recordDetailAction.length&&(_this.administrativeCount++,_this.adminattributes=_this.getAdminAttributesByType("detail")),_this.recordEditAction&&_this.recordEditAction.length&&(_this.administrativeCount++,_this.adminattributes=_this.getAdminAttributesByType("edit")),_this.recordDeleteAction&&_this.recordDeleteAction.length&&(_this.administrativeCount++,_this.adminattributes=_this.getAdminAttributesByType("delete")),_this.recordAddAction&&_this.recordAddAction.length&&(_this.administrativeCount++,_this.adminattributes=_this.getAdminAttributesByType("add")),null!=_this.collectionConfig&&angular.isDefined(_this.collection)&&angular.isDefined(_this.collection.collectionConfig)&&(_this.collectionConfig=_this.collection.collectionConfig),angular.isUndefined(_this.collectionObject)&&angular.isDefined(_this.collection)&&angular.isDefined(_this.collection.collectionObject)&&(_this.collectionObject=_this.collection.collectionObject),_this.processObjectProperties=_this.processObjectProperties||"",_this.recordProcessButtonDisplayFlag=_this.recordProcessButtonDisplayFlag||!0,_this.norecordstext=_this.rbkeyService.getRBKey("entity."+_this.collectionObject+".norecords"),angular.isUndefined(_this.defaultSelectEvent)&&(_this.defaultSelectEvent="swSelectionToggleSelection"+_this.tableID),angular.isUndefined(_this.isAngularRoute)&&(_this.isAngularRoute=!0),angular.isUndefined(_this.customListingControls)&&(_this.customListingControls=!1),angular.isUndefined(_this.hasSearch)&&(_this.hasSearch=!0,_this.showSearch=!0),angular.isUndefined(_this.showOrderBy)&&(_this.showOrderBy=!0),angular.isUndefined(_this.showPrintOptions)&&(_this.showPrintOptions=!1),angular.isUndefined(_this.showToggleDisplayOptions)&&(_this.showToggleDisplayOptions=!0),angular.isUndefined(_this.expandable)&&(_this.expandable=!1),angular.isUndefined(_this.exportAction)&&(_this.exportAction=_this.$hibachi.buildUrl("main.collectionExport")+"&collectionExportID="),angular.isDefined(_this.printAction)&&(_this.printAction=_this.$hibachi.buildUrl("main.collectionPrint")+"&collectionExportID="),angular.isDefined(_this.emailAction)&&(_this.emailAction=_this.$hibachi.buildUrl("main.collectionEmail")+"&collectionExportID="),_this.paginator=_this.paginationService.createPagination(_this.tableID),_this.hasCollectionPromise=!1,angular.isUndefined(_this.getChildCount)&&(_this.getChildCount=!1),_this.tableclass=_this.tableclass||"",_this.tableclass=_this.utilityService.listPrepend(_this.tableclass,"table table-bordered table-hover"," "),_this.collectionConfig&&_this.collectionConfig.setEventID(_this.tableID),angular.isDefined(_this.sortableFieldName)&&(_this.sortableFieldName="sorting"+_this.tableID)},this.getListingPageRecordsUpdateEventString=function(){return _this.listingService.getListingPageRecordsUpdateEventString(_this.tableID)},this.getKeyOfMatchedHideRule=function(pageRecord){return _this.listingService.getKeyOfMatchedHideRule(_this.tableID,pageRecord)},this.getPageRecordMatchesHideRule=function(pageRecord){return _this.listingService.getPageRecordMatchesHideRule(_this.tableID,pageRecord)},this.getPageRecordValueByColumn=function(pageRecord,column){return _this.listingService.getPageRecordValueByColumn(pageRecord,column)},this.getKeyOfMatchedDisableRule=function(pageRecord){return _this.listingService.getKeyOfMatchedExpandableRule(_this.tableID,pageRecord)},this.getPageRecordMatchesDisableRule=function(pageRecord){return _this.listingService.getPageRecordMatchesDisableRule(_this.tableID,pageRecord)},this.getKeyOfMatchedExpandableRule=function(pageRecord){return _this.listingService.getKeyOfMatchedExpandableRule(_this.tableID,pageRecord)},this.getPageRecordMatchesExpandableRule=function(pageRecord){return _this.listingService.getPageRecordMatchesExpandableRule(_this.tableID,pageRecord)},this.getPageRecordChildCollectionConfigForExpandableRule=function(pageRecord){return _this.listingService.getPageRecordChildCollectionConfigForExpandableRule(_this.tableID,pageRecord)},this.getPageRecordRefreshChildrenEvent=function(pageRecord){return _this.listingService.hasPageRecordRefreshChildrenEvent(_this.tableID,pageRecord)?_this.listingService.getPageRecordRefreshChildrenEvent(_this.tableID,pageRecord):""},this.getExampleEntityForExpandableRecord=function(pageRecord){return _this.listingService.getExampleEntityForExpandableRecord(_this.tableID,pageRecord)},this.getNGClassObjectForPageRecordRow=function(pageRecord){return _this.listingService.getNGClassObjectForPageRecordRow(_this.tableID,pageRecord)},this.getNGClassObjectForPageRecordCell=function(pageRecord,column){return"{}"},this.getColorFilterConditionString=function(colorFilter,pageRecord){return _this.listingService.getColorFilterConditionString(colorFilter,pageRecord)},this.hasSingleCollectionConfig=function(){return _this.collectionConfig&&0==_this.collectionConfigs.length},this.toggleOrderBy=function(column){_this.listingService.toggleOrderBy(_this.tableID,column)},this.showCalculation=function(show){void 0===show&&(show="total"),$(".sw-"+("total"==show?"average":"total")).hide(),$(".sw-"+show).show()},this.hasNumerical=function(){return _this.columns.reduce(function(totalNumericalCols,col){return totalNumericalCols+(col.ormtype&&"big_decimal,integer,float,double".indexOf(col.ormtype)>=0)?1:0})},this.columnOrderByIndex=function(column){return _this.listingService.columnOrderByIndex(_this.tableID,column)},this.updateMultiselectValues=function(res){switch(_this.multiselectValues=_this.selectionService.getSelections(_this.tableID),_this.selectionService.isAllSelected(_this.tableID)?_this.multiselectCount=_this.collectionData.recordsCount-_this.selectionService.getSelectionCount(_this.tableID):_this.multiselectCount=_this.selectionService.getSelectionCount(_this.tableID),res.action){case"uncheck":_this.isCurrentPageRecordsSelected=!1;break;case"selectAll":_this.allSelected=!0,_this.isCurrentPageRecordsSelected=!1;break;case"clear":_this.allSelected=!1,_this.isCurrentPageRecordsSelected=!1}_this.listingService.listingDisplayStore.dispatch({type:"CURRENT_PAGE_RECORDS_SELECTED",payload:{listingID:_this.tableID,selectionCount:_this.multiselectCount,values:_this.multiselectValues}})},this.getPageRecordKey=function(propertyIdentifier){return _this.listingService.getPageRecordKey(propertyIdentifier)},this.getAdminAttributesByType=function(type){var recordActionName="record"+type.toUpperCase()+"Action",recordActionPropertyName=recordActionName+"Property",recordActionQueryStringName=recordActionName+"QueryString",recordActionModalName=recordActionName+"Modal";_this.adminattributes=_this.utilityService.listAppend(_this.adminattributes,"data-"+type+'action="'+_this[recordActionName]+'"'," "),_this[recordActionPropertyName]&&_this[recordActionPropertyName].length&&(_this.adminattributes=_this.utilityService.listAppend(_this.adminattributes,"data-"+type+'actionproperty="'+_this[recordActionPropertyName]+'"'," ")),_this.adminattributes=_this.utilityService.listAppend(_this.adminattributes,"data-"+type+'querystring="'+_this[recordActionQueryStringName]+'"'," "),_this.adminattributes=_this.utilityService.listAppend(_this.adminattributes,"data-"+type+'modal="'+_this[recordActionModalName]+'"'," ")},this.getExportAction=function(){return _this.exportAction+_this.collectionID},this.getPrintAction=function(){return _this.printAction+_this.collectionID},this.getEmailAction=function(){return _this.emailAction+_this.collectionID},this.exportCurrentList=function(selection){if(void 0===selection&&(selection=!1),0==_this.collectionConfigs.length){var exportCollectionConfig=angular.copy(_this.collectionConfig.getCollectionConfig());selection&&!angular.isUndefined(_this.selectionService.getSelections(_this.tableID))&&_this.selectionService.getSelections(_this.tableID).length>0&&(exportCollectionConfig.filterGroups[0].filterGroup=[{displayPropertyIdentifier:_this.rbkeyService.getRBKey("entity."+exportCollectionConfig.baseEntityName.toLowerCase()+"."+_this.exampleEntity.$$getIDName().toLowerCase()),propertyIdentifier:exportCollectionConfig.baseEntityAlias+"."+_this.exampleEntity.$$getIDName(),comparisonOperator:_this.allSelected?"not in":"in",value:_this.selectionService.getSelections(_this.tableID).join(),displayValue:_this.selectionService.getSelections(_this.tableID).join(),ormtype:"string",fieldtype:"id",conditionDisplay:"In List"}])}$("body").append('<form action="/?'+_this.$hibachi.getConfigValue("action")+'=main.collectionConfigExport" method="post" id="formExport"></form>'),$("#formExport").append("<input type='hidden' name='collectionConfig' value='"+angular.toJson(exportCollectionConfig)+"' />").submit().remove()},this.printCurrentList=function(printTemplateID){var exportCollectionConfig=angular.copy(_this.collectionConfig.getCollectionConfig());$("body").append('<form action="?s=1" method="post" id="formPrint"></form>'),$("#formPrint").append("<input type='hidden' name='"+_this.$hibachi.getConfigValue("action")+"' value='entity.processPrint' />").append("<input type='hidden' name='redirectAction' value='admin:entity.list"+_this.baseEntityName.toLowerCase()+"' />").append("<input type='hidden' name='processContext' value='addToQueue' />").append("<input type='hidden' name='printID' value='' />").append("<input type='hidden' name='printTemplateID' value='"+printTemplateID+"' />").append("<input type='hidden' name='collectionConfig' value='"+angular.toJson(exportCollectionConfig)+"' />"),$("#formPrint").submit().remove()},this.paginationPageChange=function(res){_this.isCurrentPageRecordsSelected=!1},this.selectCurrentPageRecords=function(){_this.listingService.selectCurrentPageRecords(_this.tableID)},this.clearSelection=function(){_this.selectionService.clearSelection(_this.tableID)},this.selectAll=function(){_this.selectionService.selectAll(_this.tableID)},angular.isUndefined(this.usingPersonalCollection)&&(this.usingPersonalCollection=!1),angular.isUndefined(this.showExport)&&(this.showExport=!0),this.multipleCollectionDeffered=$q.defer(),this.multipleCollectionPromise=this.multipleCollectionDeffered.promise,this.singleCollectionDeferred=$q.defer(),this.singleCollectionPromise=this.singleCollectionDeferred.promise,angular.isDefined(this.collection)&&angular.isString(this.collection)&&(this.baseEntityName=this.collection,this.collectionObject=this.collection,this.collectionConfig=this.collectionConfigService.newCollectionConfig(this.collectionObject),this.$timeout(function(){_this.collection=_this.collectionConfig,_this.columns=_this.collectionConfig.columns}),this.multipleCollectionDeffered.reject()),this.usingPersonalCollection&&this.localStorageService.hasItem("selectedPersonalCollection")&&this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()]&&(angular.isUndefined(this.personalCollectionIdentifier)||angular.isDefined(this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionDescription)&&this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionDescription==this.personalCollectionIdentifier)){var personalCollection=this.collectionConfigService.newCollectionConfig("Collection");personalCollection.setDisplayProperties("collectionConfig"),personalCollection.addFilter("collectionID",this.localStorageService.getItem("selectedPersonalCollection")[this.baseEntityName.toLowerCase()].collectionID);var originalMultiSlotValue=angular.copy(this.multiSlot);this.multiSlot=!1,personalCollection.getEntity().then(function(data){data.pageRecords.length?(_this.collectionConfig=_this.collectionConfigService.newCollectionConfig().loadJson(data.pageRecords[0].collectionConfig),_this.collectionObject=_this.baseEntityName,_this.$timeout(function(){_this.collection=_this.collectionConfig,_this.columns=_this.collectionConfig.columns})):_this.multiSlot=originalMultiSlotValue,_this.processCollection()})}else $rootScope.hibachiScope.selectedPersonalCollection=void 0,this.processCollection()}return SWListingDisplayController}(),SWListingDisplay=function(){function SWListingDisplay(listingPartialPath,hibachiPathBuilder){this.listingPartialPath=listingPartialPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="E",this.scope={},this.transclude={addAction:"?swListingAddAction",detailAction:"?swListingDetailAction",deleteAction:"?swListingDeleteAction",editAction:"?swListingEditAction",saveAction:"?swListingSaveAction",columns:"?swListingColumns",collectionConfigs:"?swCollectionConfigs",disableRules:"?swDisabledRowRules",expandableRules:"?swExpandableRowRules",customListingControls:"?swCustomListingControls"},this.bindToController={usingPersonalCollection:"<?",personalCollectionIdentifier:"@?",isRadio:"<?",angularLinks:"<?",isAngularRoute:"<?",name:"@?",collection:"<?",collectionConfig:"<?",getCollection:"&?",collectionPromise:"<?",edit:"<?",title:"<?",childPropertyName:"@?",baseEntity:"<?",baseEntityName:"@?",baseEntityId:"@?",actions:"<?",administrativeCount:"@?",recordEditAction:"@?",recordEditActionProperty:"@?",recordEditQueryString:"@?",recordEditModal:"<?",recordEditDisabled:"<?",recordDetailAction:"@?",recordDetailActionProperty:"@?",recordDetailActionIdProperty:"@?",recordDetailActionIdKey:"@?",recordDetailQueryString:"@?",recordDetailModal:"<?",recordDeleteAction:"@?",recordDeleteActionProperty:"@?",recordDeleteQueryString:"@?",recordAddAction:"@?",recordAddActionProperty:"@?",recordAddQueryString:"@?",recordAddModal:"<?",recordAddDisabled:"<?",recordProcessesConfig:"<?",parentPropertyName:"@?",expandable:"<?",expandableOpenRoot:"<?",searchText:"<?",sortable:"<?",sortableFieldName:"@?",sortProperty:"@?",sortContextIDColumn:"@?",sortContextIDValue:"@?",selectFiledName:"@?",selectValue:"@?",selectTitle:"@?",multiselectFieldName:"@?",multiselectPropertyIdentifier:"@?",multiselectIdPaths:"@?",multiselectValues:"@?",tableattributes:"@?",tableclass:"@?",typeaheadDataKey:"@?",adminattributes:"@?",showheader:"<?",showExport:"<?",showOrderBy:"<?",showTopPagination:"<?",showToggleDisplayOptions:"<?",showSearch:"<?",showSearchFilters:"<?",showSimpleListingControls:"<?",showPrintOptions:"<?",createModal:"<?",createAction:"@?",createQueryString:"@?",exportAction:"@?",getChildCount:"<?",hasSearch:"<?",hasActionBar:"<?",multiSlot:"=?",customListingControls:"<?"},this.controller=SWListingDisplayController,this.controllerAs="swListingDisplay",this.compile=function(element,attrs){return{pre:function($scope,element,attrs,transclude){},post:function($scope,element,attrs){}}},this.listingPartialPath=listingPartialPath,this.templateUrl=hibachiPathBuilder.buildPartialsPath(this.listingPartialPath)+"listingdisplay.html"}return SWListingDisplay.Factory=function(){var directive=function(listingPartialPath,hibachiPathBuilder){return new SWListingDisplay(listingPartialPath,hibachiPathBuilder)};return directive.$inject=["listingPartialPath","hibachiPathBuilder"],directive},SWListingDisplay}();exports.SWListingDisplay=SWListingDisplay},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingDisplayCellController=function(){function SWListingDisplayCellController(listingPartialPath,hibachiPathBuilder,listingService,utilityService,$scope){var _this=this;if(this.listingPartialPath=listingPartialPath,this.hibachiPathBuilder=hibachiPathBuilder,this.listingService=listingService,this.utilityService=utilityService,this.$scope=$scope,this.expandable=!1,this.getDirectiveTemplate=function(){var templateUrl=_this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath)+"listingdisplaycell.html";return(_this.expandable||_this.swListingDisplay.expandable&&_this.column.tdclass&&"primary"===_this.column.tdclass)&&(templateUrl=_this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath)+"listingdisplayselectablecellexpandable.html"),_this.swListingDisplay.expandable&&_this.column.tdclass&&"primary"===_this.column.tdclass||("timestamp"===_this.column.ormtype?templateUrl=_this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath)+"listingdisplaycelldate.html":"currency"===_this.column.type?templateUrl=_this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath)+"listingdisplaycellcurrency.html":_this.column.aggregate&&(_this.value=_this.pageRecord[_this.swListingDisplay.getPageRecordKey(_this.column.aggregate.aggregateAlias)],templateUrl=_this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath)+"listingdisplaycellaggregate.html")),templateUrl},this.hibachiPathBuilder=hibachiPathBuilder,this.listingPartialPath=listingPartialPath,this.$scope=$scope,!this.value&&this.pageRecord&&this.column&&(this.value=this.listingService.getPageRecordValueByColumn(this.pageRecord,this.column)),this.popover=this.utilityService.replaceStringWithProperties(this.column.tooltip,this.pageRecord),this.hasActionCaller=!1,this.column.action&&this.column.queryString&&(this.hasActionCaller=!0,this.actionCaller={action:this.column.action},this.column.queryString&&(this.actionCaller.queryString=this.utilityService.replaceStringWithProperties(this.column.queryString,this.pageRecord))),this.cellView){var htmlCellView=this.utilityService.camelCaseToSnakeCase(this.cellView);this.template=htmlCellView,this.templateVariables=this.pageRecord,angular.isDefined(this.column.columnID)&&(this.templateVariables.column=this.column.columnID),angular.isDefined(this.swListingDisplay.baseEntityName)&&angular.isDefined(this.swListingDisplay.baseEntityId)&&(this.templateVariables.baseEntityId=this.swListingDisplay.baseEntityId,this.templateVariables.baseEntityName=this.swListingDisplay.baseEntityName),angular.isDefined(this.column.propertyIdentifier)&&(this.templateVariables.columnPropertyIdentifier=this.column.propertyIdentifier),this.templateVariables.listingDisplayID=this.swListingDisplay.tableID}else this.hasActionCaller||(this.templateUrl=this.getDirectiveTemplate())}return SWListingDisplayCellController}(),SWListingDisplayCell=function(){function SWListingDisplayCell(){this.restrict="E",this.scope={},this.bindToController={swListingDisplay:"=?",column:"=?",pageRecord:"=?",value:"=?",cellView:"@?",expandableRules:"=?"},this.controller=SWListingDisplayCellController,this.controllerAs="swListingDisplayCell",this.template='\n        <div ng-if="swListingDisplayCell.template" sw-directive data-variables="swListingDisplayCell.templateVariables" data-directive-template="swListingDisplayCell.template"></div>\n        <div ng-if="swListingDisplayCell.templateUrl" ng-include src="swListingDisplayCell.templateUrl"></div>\n        <sw-action-caller ng-if="swListingDisplayCell.hasActionCaller"\n                    data-action="{{swListingDisplayCell.actionCaller.action}}"\n                    data-query-string="{{swListingDisplayCell.actionCaller.queryString}}"\n                    data-text="{{swListingDisplayCell.value}}"\n                    data-tooltip-text="{{swListingDisplayCell.popover}}"\n                    data-is-angular-route="false"\n\n        >\n        </sw-action-caller>\n    '}return SWListingDisplayCell.Factory=function(){var directive=function(){return new SWListingDisplayCell};return directive.$inject=[],directive},SWListingDisplayCell}();exports.SWListingDisplayCell=SWListingDisplayCell},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingExpandableRuleController=function(){function SWListingExpandableRuleController($q){this.$q=$q,this.hasChildrenCollectionConfigDeferred=$q.defer(),this.hasChildrenCollectionConfigPromise=this.hasChildrenCollectionConfigDeferred.promise,this.childrenCollectionConfig=null}return SWListingExpandableRuleController}(),SWListingExpandableRule=function(){function SWListingExpandableRule(scopeService,$q){var _this=this;this.scopeService=scopeService,this.$q=$q,this.restrict="EA",this.scope=!0,this.transclude={collectionConfig:"?swConfig"},this.template='\n        <div ng-transclude="collectionConfig"></div> \n    ',this.bindToController={childrenCollectionConfig:"=?",filterPropertyIdentifier:"@",filterComparisonOperator:"@",filterComparisonValue:"@",refreshChildrenEvent:"@?"},this.controller=SWListingExpandableRuleController,this.controllerAs="swListingExpandableRule",this.link=function(scope,element,attrs){scope.swListingExpandableRule.hasChildrenCollectionConfigPromise.then(function(){var rule={filterPropertyIdentifier:scope.swListingExpandableRule.filterPropertyIdentifier,filterComparisonOperator:scope.swListingExpandableRule.filterComparisonOperator,filterComparisonValue:scope.swListingExpandableRule.filterComparisonValue,childrenCollectionConfig:scope.swListingExpandableRule.childrenCollectionConfig,refreshChildrenEvent:scope.swListingExpandableRule.refreshChildrenEvent},listingDisplayScope=_this.scopeService.getRootParentScope(scope,"swListingDisplay");if(!angular.isDefined(listingDisplayScope.swListingDisplay))throw"listing display scope not available to sw-listing-expandable-rule";listingDisplayScope=listingDisplayScope.swListingDisplay,listingDisplayScope.expandableRules.push(rule)})}}return SWListingExpandableRule.Factory=function(){var directive=function(scopeService,$q){return new SWListingExpandableRule(scopeService,$q)};return directive.$inject=["scopeService","$q"],directive},SWListingExpandableRule}();exports.SWListingExpandableRule=SWListingExpandableRule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingFilterController=function(){function SWListingFilterController(){this.init=function(){},this.init()}return SWListingFilterController}(),SWListingFilter=function(){function SWListingFilter(){this.restrict="EA",this.scope=!0,this.bindToController={propertyIdentifier:"@",comparisonOperator:"@",comparisonValue:"@",logicalOperator:"@",hidden:"@?"},this.controller=SWListingFilterController,this.controllerAs="swListingFilter",this.link=function(scope,element,attrs){var filter={propertyIdentifier:scope.swListingFilter.propertyIdentifier,comparisonOperator:scope.swListingFilter.comparisonOperator,comparisonValue:scope.swListingFilter.comparisonValue,logicalOperator:scope.swListingFilter.logicalOperator,hidden:!1};angular.isDefined(scope.swListingFilter.hidden)&&(filter.hidden=scope.swListingFilter.hidden),angular.isDefined(scope.$parent.swListingFilterGroup)?scope.$parent.swListingFilterGroup.filters.push(filter):scope.$parent.swListingDisplay.filters.push(filter)}}return SWListingFilter.Factory=function(){var directive=function(){return new SWListingFilter};return directive.$inject=[],directive},SWListingFilter}();exports.SWListingFilter=SWListingFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingFilterGroupController=function(){function SWListingFilterGroupController($scope,$transclude){this.$scope=$scope,this.$transclude=$transclude,this.filters=[],$transclude($scope,function(){}),$scope.$parent.swListingDisplay.filterGroups.push(this.filters)}return SWListingFilterGroupController}(),SWListingFilterGroup=function(){function SWListingFilterGroup(){this.restrict="EA",this.transclude=!0,this.scope=!0,this.bindToController={},this.controller=SWListingFilterGroupController,this.controllerAs="swListingFilterGroup"}return SWListingFilterGroup.Factory=function(){var directive=function(){return new SWListingFilterGroup};return directive.$inject=[],directive},SWListingFilterGroup.$inject=[],SWListingFilterGroup}();exports.SWListingFilterGroup=SWListingFilterGroup},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingGlobalSearchController=function(){function SWListingGlobalSearchController($timeout){var _this=this;this.$timeout=$timeout,this.init=function(){_this.searching=!1},this.search=function(){_this.searching=!0,_this._timeoutPromise&&_this.$timeout.cancel(_this._timeoutPromise),_this._timeoutPromise=_this.$timeout(function(){_this.getCollection()},500)},this.init()}return SWListingGlobalSearchController}(),SWListingGlobalSearch=function(){function SWListingGlobalSearch(utilityService,listingPartialPath,hibachiPathBuilder){this.utilityService=utilityService,this.restrict="EA",this.scope={},this.bindToController={searching:"=",searchText:"=",getCollection:"="},this.controller=SWListingGlobalSearchController,this.controllerAs="swListingGlobalSearch",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(listingPartialPath)+"listingglobalsearch.html"}return SWListingGlobalSearch.Factory=function(){var directive=function(utilityService,listingPartialPath,hibachiPathBuilder){return new SWListingGlobalSearch(utilityService,listingPartialPath,hibachiPathBuilder)};return directive.$inject=["utilityService","listingPartialPath","hibachiPathBuilder"],directive},SWListingGlobalSearch}();exports.SWListingGlobalSearch=SWListingGlobalSearch},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingOrderByController=function(){function SWListingOrderByController(){this.init=function(){},this.init()}return SWListingOrderByController}(),SWListingOrderBy=function(){function SWListingOrderBy(utilityService){this.utilityService=utilityService,this.restrict="EA",this.scope=!0,this.bindToController={orderBy:"@"},this.controller=SWListingOrderByController,this.controllerAs="swListingOrderBy",this.link=function(scope,element,attrs){var orderBy={orderBy:scope.swListingOrderBy.orderBy};scope.$parent.swListingDisplay.orderBys.push(orderBy)}}return SWListingOrderBy.Factory=function(){var directive=function(utilityService){return new SWListingOrderBy(utilityService)};return directive.$inject=["utilityService"],directive},SWListingOrderBy}();exports.SWListingOrderBy=SWListingOrderBy},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingRowSaveController=function(){function SWListingRowSaveController(listingService){var _this=this;this.listingService=listingService,this.save=function(){_this.listingService.markSaved(_this.listingID,_this.pageRecordIndex)}}return SWListingRowSaveController}(),SWListingRowSave=function(){function SWListingRowSave(hibachiPathBuilder,listingPartialPath,utilityService,scopeService){var _this=this;this.hibachiPathBuilder=hibachiPathBuilder,this.listingPartialPath=listingPartialPath,this.utilityService=utilityService,this.scopeService=scopeService,this.restrict="EA",this.scope=!0,this.bindToController={},this.controller=SWListingRowSaveController,this.controllerAs="swListingRowSave",this.link=function($scope,element,attrs){var currentScope=_this.scopeService.getRootParentScope($scope,"pageRecord");angular.isDefined(currentScope.pageRecord)&&($scope.swListingRowSave.pageRecord=currentScope.pageRecord);var currentScope=_this.scopeService.getRootParentScope($scope,"pageRecordKey");angular.isDefined(currentScope.pageRecordKey)&&($scope.swListingRowSave.pageRecordIndex=currentScope.pageRecordKey);var currentScope=_this.scopeService.getRootParentScope($scope,"swListingDisplay");angular.isDefined(currentScope.swListingDisplay)&&($scope.swListingRowSave.listingID=currentScope.swListingDisplay.tableID)},this.templateUrl=hibachiPathBuilder.buildPartialsPath(this.listingPartialPath)+"listingrowsave.html"}return SWListingRowSave.Factory=function(){var directive=function(hibachiPathBuilder,listingPartialPath,utilityService,scopeService){return new SWListingRowSave(hibachiPathBuilder,listingPartialPath,utilityService,scopeService)};return directive.$inject=["hibachiPathBuilder","listingPartialPath","utilityService","scopeService"],directive},SWListingRowSave.$inject=["utilityService"],SWListingRowSave}();exports.SWListingRowSave=SWListingRowSave},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWListingSearchController=function(){function SWListingSearchController($rootScope,$hibachi,metadataService,listingService,collectionService,observerService,localStorageService){var _this=this;this.$rootScope=$rootScope,this.$hibachi=$hibachi,this.metadataService=metadataService,this.listingService=listingService,this.collectionService=collectionService,this.observerService=observerService,this.localStorageService=localStorageService,this.displayOptionsClosed=!0,this.filtersClosed=!0,this.hasPersonalCollections=!1,this.collectionNameSaveIsOpen=!1,this.$onInit=function(){if(angular.isDefined(_this.swListingDisplay.personalCollectionIdentifier)&&(_this.personalCollectionIdentifier=_this.swListingDisplay.personalCollectionIdentifier),_this.searchableOptions=angular.copy(_this.swListingDisplay.collectionConfig.columns),_this.selectedSearchColumn={title:"All"},_this.configureSearchableColumns(_this.selectedSearchColumn),_this.swListingControls.showPrintOptions){var printTemplateOptionsCollection=_this.collectionConfig.newCollectionConfig("PrintTemplate");printTemplateOptionsCollection.addFilter("printTemplateObject",_this.swListingDisplay.collectionConfig.baseEntityName),printTemplateOptionsCollection.setAllRecords(!0),printTemplateOptionsCollection.getEntity().then(function(response){_this.printTemplateOptions=response.records},function(reason){throw"swListingSearch couldn't load printTemplateOptions because: "+reason})}},this.selectSearchColumn=function(column){_this.selectedSearchColumn=column,_this.configureSearchableColumns(column),_this.searchText&&_this.search()},this.selectPersonalCollection=function(personalCollection){_this.localStorageService.hasItem("selectedPersonalCollection")||_this.localStorageService.setItem("selectedPersonalCollection","{}");var selectedPersonalCollection=angular.fromJson(_this.localStorageService.getItem("selectedPersonalCollection"));personalCollection?(selectedPersonalCollection[personalCollection.collectionObject.toLowerCase()]=personalCollection,_this.localStorageService.setItem("selectedPersonalCollection",angular.toJson(selectedPersonalCollection))):(delete selectedPersonalCollection[_this.swListingDisplay.baseEntityName.toLowerCase()],_this.localStorageService.setItem("selectedPersonalCollection",angular.toJson(selectedPersonalCollection))),window.location.reload()},this.savePersonalCollection=function(collectionName){if(_this.localStorageService.hasItem("selectedPersonalCollection")&&_this.localStorageService.getItem("selectedPersonalCollection")[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]&&(angular.isUndefined(_this.personalCollectionIdentifier)||angular.isDefined(_this.localStorageService.getItem("selectedPersonalCollection")[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionDescription)&&_this.localStorageService.getItem("selectedPersonalCollection")[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionDescription==_this.personalCollectionIdentifier)){var selectedPersonalCollection=angular.fromJson(_this.localStorageService.getItem("selectedPersonalCollection"));if(selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()])return void _this.$hibachi.saveEntity("Collection",selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionID,{"accountOwner.accountID":_this.$rootScope.slatwall.account.accountID,collectionConfig:_this.swListingDisplay.collectionConfig.collectionConfigString},"save").then(function(data){})}else if(collectionName){var serializedJSONData={collectionConfig:_this.swListingDisplay.collectionConfig.collectionConfigString,collectionName:collectionName,collectionDescription:_this.personalCollectionIdentifier,collectionObject:_this.swListingDisplay.collectionConfig.baseEntityName,accountOwner:{accountID:_this.$rootScope.slatwall.account.accountID}};return void _this.$hibachi.saveEntity("Collection","",{serializedJSONData:angular.toJson(serializedJSONData),propertyIdentifiersList:"collectionID,collectionName,collectionObject,collectionDescription"},"save").then(function(data){_this.localStorageService.hasItem("selectedPersonalCollection")||_this.localStorageService.setItem("selectedPersonalCollection","{}");var selectedPersonalCollection=angular.fromJson(_this.localStorageService.getItem("selectedPersonalCollection"));selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]={collectionID:data.data.collectionID,collectionObject:data.data.collectionObject,collectionName:data.data.collectionName,collectionDescription:data.data.collectionDescription},_this.localStorageService.setItem("selectedPersonalCollection",angular.toJson(selectedPersonalCollection)),_this.$rootScope.slatwall.selectedPersonalCollection=selectedPersonalCollection,_this.collectionNameSaveIsOpen=!1,_this.hasPersonalCollections=!1})}_this.collectionNameSaveIsOpen=!0},this.getPersonalCollections=function(){if(!_this.hasPersonalCollections){var personalCollectionList=_this.collectionConfig.newCollectionConfig("Collection");personalCollectionList.setDisplayProperties("collectionID,collectionName,collectionObject,collectionDescription"),personalCollectionList.addFilter("accountOwner.accountID",_this.$rootScope.slatwall.account.accountID),personalCollectionList.addFilter("collectionObject",_this.swListingDisplay.baseEntityName),angular.isDefined(_this.personalCollectionIdentifier)&&personalCollectionList.addFilter("collectionDescription",_this.personalCollectionIdentifier),personalCollectionList.setAllRecords(!0),personalCollectionList.getEntity().then(function(data){_this.personalCollections=data.records})}_this.hasPersonalCollections=!0},this.clearPersonalCollection=function(){_this.selectPersonalCollection()},this.search=function(){_this.searchText.length>0?_this.listingService.setExpandable(_this.listingId,!1):_this.listingService.setExpandable(_this.listingId,!0),_this.collectionConfig.setKeywords(_this.searchText),_this.swListingDisplay.collectionConfig=_this.collectionConfig,_this.observerService.notifyById("swPaginationAction",_this.listingId,{type:"setCurrentPage",payload:1})},this.configureSearchableColumns=function(column){var searchableColumn="";column.propertyIdentifier&&(searchableColumn=column.propertyIdentifier);for(var i=0;i<_this.swListingDisplay.collectionConfig.columns.length;i++)searchableColumn.length?searchableColumn===_this.swListingDisplay.collectionConfig.columns[i].propertyIdentifier?_this.swListingDisplay.collectionConfig.columns[i].isSearchable=!0:_this.swListingDisplay.collectionConfig.columns[i].isSearchable=!1:_this.swListingDisplay.collectionConfig.columns[i].isSearchable=!0}}return SWListingSearchController}(),SWListingSearch=function(){function SWListingSearch(scopeService,collectionPartialsPath,hibachiPathBuilder){this.scopeService=scopeService,this.collectionPartialsPath=collectionPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="EA",this.scope={},this.require={swListingDisplay:"?^swListingDisplay",swListingControls:"?^swListingControls"},this.bindToController={collectionConfig:"<?",paginator:"=?",listingId:"@?",showToggleSearch:"=?"},this.controller=SWListingSearchController,this.controllerAs="swListingSearch",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath)+"listingsearch.html"}return SWListingSearch.Factory=function(){var directive=function(scopeService,listingPartialPath,hibachiPathBuilder){return new SWListingSearch(scopeService,listingPartialPath,hibachiPathBuilder)};return directive.$inject=["scopeService","listingPartialPath","hibachiPathBuilder"],directive},SWListingSearch}();exports.SWListingSearch=SWListingSearch},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var collection_module_1=__webpack_require__(167),listingservice_1=__webpack_require__(649),swlistingdisplay_1=__webpack_require__(639),swlistingdisplaycell_1=__webpack_require__(640),swlistingcontrols_1=__webpack_require__(637),swlistingaggregate_1=__webpack_require__(634),swlistingcolorfilter_1=__webpack_require__(635),swlistingcolumn_1=__webpack_require__(636),swlistingdisablerule_1=__webpack_require__(638),swlistingexpandablerule_1=__webpack_require__(641),swlistingfilter_1=__webpack_require__(642),swlistingfiltergroup_1=__webpack_require__(643),swlistingorderby_1=__webpack_require__(645),swlistingrowsave_1=__webpack_require__(646),swlistingsearch_1=__webpack_require__(647),swlistingglobalsearch_1=__webpack_require__(644),listingmodule=angular.module("hibachi.listing",[collection_module_1.collectionmodule.name]).run([function(){}]).service("listingService",listingservice_1.ListingService).directive("swListingDisplay",swlistingdisplay_1.SWListingDisplay.Factory()).directive("swListingControls",swlistingcontrols_1.SWListingControls.Factory()).directive("swListingAggregate",swlistingaggregate_1.SWListingAggregate.Factory()).directive("swListingColorFilter",swlistingcolorfilter_1.SWListingColorFilter.Factory()).directive("swListingColumn",swlistingcolumn_1.SWListingColumn.Factory()).directive("swListingDisableRule",swlistingdisablerule_1.SWListingDisableRule.Factory()).directive("swListingExpandableRule",swlistingexpandablerule_1.SWListingExpandableRule.Factory()).directive("swListingDisplayCell",swlistingdisplaycell_1.SWListingDisplayCell.Factory()).directive("swListingFilter",swlistingfilter_1.SWListingFilter.Factory()).directive("swListingFilterGroup",swlistingfiltergroup_1.SWListingFilterGroup.Factory()).directive("swListingOrderBy",swlistingorderby_1.SWListingOrderBy.Factory()).directive("swListingRowSave",swlistingrowsave_1.SWListingRowSave.Factory()).directive("swListingSearch",swlistingsearch_1.SWListingSearch.Factory()).directive("swListingGlobalSearch",swlistingglobalsearch_1.SWListingGlobalSearch.Factory()).constant("listingPartialPath","listing/components/");exports.listingmodule=listingmodule},function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var Store=__webpack_require__(170),ListingService=function(){function ListingService($timeout,$q,collectionConfigService,filterService,historyService,observerService,rbkeyService,selectionService,utilityService,$hibachi){var _this=this;this.$timeout=$timeout,this.$q=$q,this.collectionConfigService=collectionConfigService,this.filterService=filterService,this.historyService=historyService,this.observerService=observerService,this.rbkeyService=rbkeyService,this.selectionService=selectionService,this.utilityService=utilityService,this.$hibachi=$hibachi,this.listingDisplays={},this.state={},this.listingDisplayStateReducer=function(state,action){switch(action.type){case"LISTING_PAGE_RECORDS_UPDATE":case"CURRENT_PAGE_RECORDS_SELECTED":case"ADD_SELECTION":return __assign({},state,{action:action});default:return state}},this.getListingPageRecordsUpdateEventString=function(listingID){return listingID+"pageRecordsUpdated"},this.getListingOrderByChangedEventString=function(listingID){return listingID+"orderByChanged"},this.getListingInitiatedEventString=function(listingID){return listingID+"initiated"},this.notifyListingPageRecordsUpdate=function(listingID){_this.listingDisplayStore.dispatch({type:"LISTING_PAGE_RECORDS_UPDATE",payload:{listingID:listingID,listingPageRecordsUpdateEventString:_this.getListingPageRecordsUpdateEventString(listingID)}}),_this.observerService.notify(_this.getListingPageRecordsUpdateEventString(listingID),listingID)},this.attachToListingPageRecordsUpdate=function(listingID,callback,id){_this.observerService.attach(callback,_this.getListingPageRecordsUpdateEventString(listingID),id)},this.attachToOrderByChangedUpdate=function(listingID,callback,id){_this.observerService.attach(callback,_this.getListingOrderByChangedEventString(listingID),id)},this.attachToListingInitiated=function(listingID,callback){_this.observerService.attach(callback,_this.getListingInitiatedEventString(listingID)),_this.historyService.hasHistory(_this.getListingInitiatedEventString(listingID))&&callback()},this.setListingState=function(listingID,state){_this.listingDisplays[listingID]=state,_this.observerService.notifyAndRecord(_this.getListingInitiatedEventString(listingID))},this.getListing=function(listingID){return _this.listingDisplays[listingID]},this.getListingColumns=function(listingID){return _this.getListing(listingID).columns||_this.getListingCollectionConfigColumns(listingID)},this.getListingCollectionConfigColumns=function(listingID){if(null!=_this.getListing(listingID).collectionConfig)return _this.getListing(listingID).collectionConfig.columns},this.getListingExampleEntity=function(listingID){if(null!=_this.getListing(listingID).exampleEntity)return _this.getListing(listingID).exampleEntity;_this.setupExampleEntity(listingID)},this.getListingCollectionConfigColumnIndexByPropertyIdentifier=function(listingID,propertyIdentifier){var columns=_this.getListingCollectionConfigColumns(listingID);return _this.utilityService.ArrayFindByPropertyValue(columns,"propertyIdentifier",propertyIdentifier)},this.getListingColumnIndexByPropertyIdentifier=function(listingID,propertyIdentifier){var columns=_this.getListingColumns(listingID);return _this.utilityService.ArrayFindByPropertyValue(columns,"propertyIdentifier",propertyIdentifier)},this.getListingBaseEntityName=function(listingID){var baseEntityName=_this.getListing(listingID).baseEntityName||_this.getListing(listingID).collectionObject;return null==baseEntityName&&null!=_this.getListing(listingID).collectionConfig&&(baseEntityName=_this.getListing(listingID).collectionConfig.baseEntityName),null==baseEntityName&&null!=_this.getListing(listingID).collectionData&&(baseEntityName=_this.getListing(listingID).collectionData.collectionObject),baseEntityName},this.getListingBaseEntityPrimaryIDPropertyName=function(listingID){if(null!=_this.getListingExampleEntity(listingID))return _this.getListingExampleEntity(listingID).$$getIDName()},this.getListingPrimaryEntityName=function(listingID){return _this.getListing(listingID).baseEntityName||_this.getListing(listingID).collectionObject||_this.getListing(listingID).collectionConfig.baseEntityName},this.getListingEntityPrimaryIDPropertyName=function(listingID){return _this.$hibachi.getPrimaryIDPropertyNameByEntityName(_this.getListingPrimaryEntityName(listingID))},this.getListingPageRecords=function(listingID){if(angular.isDefined(_this.getListing(listingID))&&angular.isDefined(_this.getListing(listingID).collectionData)&&angular.isDefined(_this.getListing(listingID).collectionData.pageRecords))return _this.getListing(listingID).collectionData.pageRecords},this.getCollection=function(listingID){return _this.getListing(listingID).getCollection()},this.getPageRecordsWithManualSortOrder=function(listingID){if(!angular.isDefined(_this.getListing(listingID))||null==_this.getListingPageRecords(listingID))return angular.toJson({});var pageRecords=_this.getListingPageRecords(listingID),primaryIDPropertyName=_this.getListingEntityPrimaryIDPropertyName(listingID),primaryIDWithBaseAlias=_this.getListing(listingID).collectionConfig.baseEntityAlias+"."+primaryIDPropertyName,pageRecordsWithManualSortOrder={};_this.$timeout(function(){for(var j=0;j<pageRecords.length;j++){var pageRecord=pageRecords[j],primaryID=pageRecords[j][primaryIDPropertyName],sortOrder=j+1,primaryIDColumnIndex=_this.getListingCollectionConfigColumnIndexByPropertyIdentifier(listingID,primaryIDWithBaseAlias);if(angular.isDefined(primaryID))pageRecordsWithManualSortOrder[primaryID]=sortOrder;else if(-1!==primaryIDColumnIndex){var column=_this.getListingCollectionConfigColumns(listingID)[primaryIDColumnIndex];if(angular.isDefined(column.fallbackPropertyIdentifiers))for(var fallbackPropertyArray=column.fallbackPropertyIdentifiers.split(","),i=0;i<fallbackPropertyArray.length;i++)angular.isDefined(pageRecord[fallbackPropertyArray[i]])&&(pageRecordsWithManualSortOrder[pageRecord[fallbackPropertyArray[i]]]=sortOrder)}}return _this.getListing(listingID).pageRecordsWithManualSortOrder=angular.toJson(pageRecordsWithManualSortOrder),_this.getListing(listingID).pageRecordsWithManualSortOrders},0)},this.getListingPageRecordIndexByPageRecord=function(listingID,pageRecordToCompare){for(var pageRecords=_this.getListingPageRecords(listingID),primaryIDPropertyName=_this.getListingEntityPrimaryIDPropertyName(listingID),j=0;j<pageRecords.length;j++){if(pageRecords[j][primaryIDPropertyName]==pageRecordToCompare[primaryIDPropertyName])return j}return-1},this.insertListingPageRecord=function(listingID,pageRecord){pageRecord.newFlag=!0,angular.isDefined(_this.getListingPageRecords(listingID))&&(_this.notifyListingPageRecordsUpdate(listingID),_this.getListingPageRecords(listingID).unshift(pageRecord))},this.removeListingPageRecord=function(listingID,pageRecord){var pageRecords=_this.getListingPageRecords(listingID);if(-1!=_this.getListingPageRecordIndexByPageRecord(listingID,pageRecord))return _this.notifyListingPageRecordsUpdate(listingID),pageRecords.splice(_this.getListingPageRecordIndexByPageRecord(listingID,pageRecord),1)[0]},this.getPageRecordKey=function(propertyIdentifier){if(propertyIdentifier){var propertyIdentifierWithoutAlias="";if(0===propertyIdentifier.indexOf("_")){if(propertyIdentifier.match(new RegExp("_","g")||[]).length>1){var properSubStr=propertyIdentifier.substring(1);propertyIdentifierWithoutAlias=properSubStr.substring(properSubStr.indexOf("_")+1,properSubStr.length)}else propertyIdentifierWithoutAlias=propertyIdentifier.substring(propertyIdentifier.indexOf(".")+1)}else propertyIdentifierWithoutAlias=propertyIdentifier;return _this.utilityService.replaceAll(propertyIdentifierWithoutAlias,".","_")}return""},this.getPageRecordValueByColumn=function(pageRecord,column){var pageRecordValue=pageRecord[_this.getPageRecordKey(column.propertyIdentifier)]||"";if(""==pageRecordValue)for(var property in pageRecord)-1!=property.indexOf(_this.getPageRecordKey(column.propertyIdentifier).trim())&&(pageRecordValue=pageRecord[property]);if((angular.isUndefined(pageRecordValue)||angular.isString(pageRecordValue)&&0==pageRecordValue.trim().length)&&angular.isDefined(column.fallbackPropertyIdentifiers))for(var fallbackPropertyArray=column.fallbackPropertyIdentifiers.replace(".","_").split(","),i=0;i<fallbackPropertyArray.length;i++)if(angular.isDefined(pageRecord[_this.getPageRecordKey(fallbackPropertyArray[i])])){pageRecordValue=pageRecord[_this.getPageRecordKey(fallbackPropertyArray[i])];break}return pageRecordValue},this.selectCurrentPageRecords=function(listingID){if(_this.getListing(listingID).collectionData.pageRecords)for(var i=0;i<_this.getListing(listingID).collectionData.pageRecords.length;i++)1==_this.getListing(listingID).isCurrentPageRecordsSelected?_this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID,_this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)]):_this.selectionService.removeSelection(_this.getListing(listingID).tableID,_this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)])},this.getSelectedBy=function(listingID,propertyName,value){return listingID&&propertyName&&value?_this.getListing(listingID).collectionData.pageRecords.findIndex(function(record){return record[propertyName]==value}):-1},this.getAllSelected=function(listingID){if(!listingID)return-1;for(var i=0;i<_this.getListing(listingID).collectionData.pageRecords.length;i++)_this.selectionService.getSelections(_this.getListing(listingID).tableID,_this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)])},this.clearAllSelections=function(listingID){if(!listingID)return-1;for(var i=0;i<_this.getListing(listingID).collectionData.pageRecords.length;i++)_this.selectionService.removeSelection(_this.getListing(listingID).tableID,_this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)])},this.getNGClassObjectForPageRecordRow=function(listingID,pageRecord){var classObjectString="{";angular.forEach(_this.getListing(listingID).colorFilters,function(colorFilter,index){classObjectString=classObjectString.concat("'"+colorFilter.colorClass+"':"+_this.getColorFilterConditionString(colorFilter,pageRecord)),classObjectString=classObjectString.concat(",")}),classObjectString=classObjectString.concat(" 's-child':"+_this.getPageRecordIsChild(listingID,pageRecord));var newFlag=!1;return pageRecord&&null!=pageRecord.newFlag&&"string"==typeof pageRecord.newFlag&&""!==pageRecord.newFlag.trim()&&(newFlag=pageRecord.newFlag),classObjectString=classObjectString.concat(",'s-selected-row':"+newFlag),classObjectString=classObjectString.concat(",'s-disabled':"+_this.getPageRecordMatchesDisableRule(listingID,pageRecord)),(classObjectString=classObjectString.concat(",'s-edited':pageRecord.edited"))+"}"},this.getPageRecordIsChild=function(listingID,pageRecord){return!1},this.determineRowEdited=function(pageRecords,pageRecordIndex){var fieldCount=0;for(var key in pageRecords[pageRecordIndex].editedFields)if(++fieldCount>1)return pageRecords[pageRecordIndex].edited=!0,!0;return pageRecords[pageRecordIndex].edited=!1,!1},this.markUnedited=function(listingID,pageRecordIndex,propertyDisplayID){var pageRecords=_this.getListingPageRecords(listingID);return angular.isDefined(pageRecords[pageRecordIndex].editedFields[propertyDisplayID])&&delete pageRecords[pageRecordIndex].editedFields[propertyDisplayID],_this.determineRowEdited(pageRecords,pageRecordIndex)},this.markEdited=function(listingID,pageRecordIndex,propertyDisplayID,saveCallback){var pageRecords=_this.getListingPageRecords(listingID);return angular.isUndefined(pageRecords[pageRecordIndex].editedFields)&&!angular.isObject(pageRecords[pageRecordIndex].editedFields)&&(pageRecords[pageRecordIndex].editedFields={}),pageRecords[pageRecordIndex].editedFields[propertyDisplayID]=saveCallback,_this.determineRowEdited(pageRecords,pageRecordIndex)},this.markSaved=function(listingID,pageRecordIndex){var pageRecords=_this.getListingPageRecords(listingID),savePromises=[];for(var key in pageRecords[pageRecordIndex].editedFields)angular.isFunction(pageRecords[pageRecordIndex].editedFields[key])&&savePromises.push(pageRecords[pageRecordIndex].editedFields[key]());_this.$q.all(savePromises).then(function(){delete pageRecords[pageRecordIndex].editedFields,pageRecords[pageRecordIndex].edited=!1})},this.setupInSingleCollectionConfigMode=function(listingID,listingDisplayScope){null!=_this.getListing(listingID).collectionObject&&null!=_this.getListing(listingID).collectionConfig&&(_this.getListing(listingID).collectionObject=_this.getListing(listingID).collectionConfig.baseEntityName),_this.initCollectionConfigData(listingID,_this.getListing(listingID).collectionConfig),_this.setupColumns(listingID,_this.getListing(listingID).collectionConfig,_this.getListing(listingID).collectionObject),listingDisplayScope.$watch("swListingDisplay.collectionPromise",function(newValue,oldValue){newValue&&_this.$q.when(_this.getListing(listingID).collectionPromise).then(function(data){_this.getListing(listingID).collectionData=data,_this.setupDefaultCollectionInfo(listingID),null!=_this.getListing(listingID).collectionConfig&&_this.getListing(listingID).collectionConfig.hasColumns()?_this.setupColumns(listingID,_this.getListing(listingID).collectionConfig,_this.getListing(listingID).collectionObject):_this.getListing(listingID).collectionConfig.loadJson(data.collectionConfig),_this.notifyListingPageRecordsUpdate(listingID),_this.getListing(listingID).collectionData.pageRecords=_this.getListing(listingID).collectionData.pageRecords||_this.getListing(listingID).collectionData.records,_this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData),_this.getListing(listingID).searching=!1,_this.getListing(listingID).columnCount=_this.getListing(listingID).columns.length+1,(_this.getListing(listingID).selectable||_this.getListing(listingID).multiselectable||_this.getListing(listingID).sortable)&&_this.getListing(listingID).columnCount++})})},this.setupInMultiCollectionConfigMode=function(listingID){angular.forEach(_this.getListing(listingID).collectionConfigs,function(value,key){_this.getListing(listingID).collectionObjects[key]=value.baseEntityName})},this.setupDefaultCollectionInfo=function(listingID){_this.getListing(listingID).hasCollectionPromise&&angular.isDefined(_this.getListing(listingID).collection)&&null==_this.getListing(listingID).collectionConfig&&(_this.getListing(listingID).collectionObject=_this.getListing(listingID).collection.collectionObject,_this.getListing(listingID).collectionConfig=_this.collectionConfigService.newCollectionConfig(_this.getListing(listingID).collectionObject),_this.getListing(listingID).collectionConfig.loadJson(_this.getListing(listingID).collection.collectionConfig)),0==_this.getListing(listingID).multiSlot&&_this.$timeout(function(){_this.getListing(listingID).collectionConfig.loadJson(_this.getListing(listingID).collectionData.collectionConfig),_this.getListing(listingID).columns=_this.getListing(listingID).collectionConfig.columns}),null!=_this.getListing(listingID).paginator&&null!=_this.getListing(listingID).collectionConfig&&(_this.getListing(listingID).collectionConfig.setPageShow(_this.getListing(listingID).paginator.getPageShow()),_this.getListing(listingID).collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.getCurrentPage()))},this.addColumn=function(listingID,column){null!=_this.getListing(listingID).collectionConfig&&null!=_this.getListing(listingID).collectionConfig.baseEntityAlias?column.propertyIdentifier=_this.getListing(listingID).collectionConfig.baseEntityAlias+"."+column.propertyIdentifier:null!=_this.getListingBaseEntityName(listingID)&&(column.propertyIdentifier="_"+_this.getListingBaseEntityName(listingID).toLowerCase()+"."+column.propertyIdentifier),-1===_this.getListingColumnIndexByPropertyIdentifier(listingID,column.propertyIdentifier)&&(column.aggregate?_this.getListing(listingID).aggregates.push(column.aggregate):_this.getListing(listingID).columns.push(column))},this.setupColumns=function(listingID,collectionConfig,collectionObject){if(0==_this.getListing(listingID).columns.length&&null!=collectionConfig)if(null==collectionConfig.columns)collectionConfig.getEntity().then(function(){for(var j=0;j<collectionConfig.columns.length;j++){var column=collectionConfig.columns[j];column.isVisible&&_this.getListing(listingID).columns.push(column)}},function(){throw"listing display couldn't initiate no columns"});else for(var j=0;j<collectionConfig.columns.length;j++){var column=collectionConfig.columns[j];column.isVisible&&_this.getListing(listingID).columns.push(column)}for(var i=0;i<_this.getListing(listingID).columns.length;i++){var column=_this.getListing(listingID).columns[i];_this.setupColumn(listingID,column,collectionConfig,collectionObject)}},this.setupColumn=function(listingID,column,collectionConfig,collectionObject){null==_this.getListing(listingID).collectionConfig||column.hasCellView||_this.getListing(listingID).collectionConfig.addColumn(column.propertyIdentifier,void 0,column),collectionConfig||null==_this.getListing(listingID).collectionConfig||(collectionConfig=null!=_this.getListing(listingID).collectionConfig);var baseEntityName=_this.getListingBaseEntityName(listingID);if(collectionObject||(collectionObject=baseEntityName),null!=baseEntityName){var lastEntity=_this.$hibachi.getLastEntityNameInPropertyIdentifier(baseEntityName,column.propertyIdentifier);angular.isUndefined(column.title)&&(column.title=_this.rbkeyService.getRBKey("entity."+lastEntity.toLowerCase()+"."+_this.utilityService.listLast(column.propertyIdentifier,"."))),angular.isUndefined(column.isVisible)&&(column.isVisible=!0);var metadata=_this.$hibachi.getPropertyByEntityNameAndPropertyName(lastEntity,_this.utilityService.listLast(column.propertyIdentifier,"."));if(metadata&&angular.isDefined(metadata.persistent)&&(column.persistent=metadata.persistent),metadata&&angular.isDefined(metadata.ormtype)&&(column.ormtype=metadata.ormtype),(angular.isUndefined(column.type)||"none"==column.type)&&(angular.isDefined(metadata)&&angular.isDefined(metadata.hb_formattype)?column.type=metadata.hb_formattype:column.type="none"),column.propertyIdentifier?_this.getListing(listingID).allpropertyidentifiers=_this.utilityService.listAppend(_this.getListing(listingID).allpropertyidentifiers,column.propertyIdentifier):column.processObjectProperty&&(column.searchable=!1,column.sort=!1,_this.getListing(listingID).allprocessobjectproperties=_this.utilityService.listAppend(_this.getListing(listingID).allprocessobjectproperties,column.processObjectProperty)),column.tdclass){column.tdclass.split(" ").indexOf("primary")>=0&&_this.getListing(listingID).expandable&&(_this.getListing(listingID).tableattributes=_this.utilityService.listAppend(_this.getListing(listingID).tableattributes,"data-expandsortproperty="+column.propertyIdentifier," "),column.sort=!1)}}if(angular.isDefined(column.tooltip)){var parsedProperties=_this.utilityService.getPropertiesFromString(column.tooltip);parsedProperties&&parsedProperties.length&&collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties),"",{isVisible:!1})}else column.tooltip="";if(angular.isDefined(column.queryString)){var parsedProperties=_this.utilityService.getPropertiesFromString(column.queryString);parsedProperties&&parsedProperties.length&&collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties),"",{isVisible:!1})}if(_this.getListing(listingID).hasCollectionPromise){var lastEntity=_this.$hibachi.getLastEntityNameInPropertyIdentifier(collectionObject,_this.utilityService.listRest(column.propertyIdentifier,"."));column.title=column.title||_this.rbkeyService.getRBKey("entity."+lastEntity.toLowerCase()+"."+_this.utilityService.listLast(column.propertyIdentifier,".")),angular.isUndefined(column.isVisible)&&(column.isVisible=!0)}_this.columnOrderBy(listingID,column)},this.initCollectionConfigData=function(listingID,collectionConfig){_this.setupSelect(listingID),_this.setupMultiselect(listingID),_this.setupExampleEntity(listingID),null!=collectionConfig&&(angular.forEach(_this.getListing(listingID).filterGroups,function(filterGroup){collectionConfig.addFilterGroup(filterGroup)}),angular.forEach(_this.getListing(listingID).filters,function(filter){collectionConfig.addFilter(filter.propertyIdentifier,filter.comparisonValue,filter.comparisonOperator,filter.logicalOperator,filter.hidden)}),angular.forEach(_this.getListing(listingID).orderBys,function(orderBy){collectionConfig.addOrderBy(orderBy.orderBy)}),angular.forEach(_this.getListing(listingID).aggregates,function(aggregate){collectionConfig.addDisplayAggregate(aggregate.propertyIdentifier,aggregate.aggregateFunction,aggregate.aggregateAlias)}),angular.forEach(_this.getListing(listingID).actions,function(action){if(angular.isDefined(action.queryString)){var parsedProperties=_this.utilityService.getPropertiesFromString(action.queryString);parsedProperties&&parsedProperties.length&&collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties),"",{isVisible:!1})}}),angular.forEach(_this.getListing(listingID).colorFilters,function(colorFilter){angular.isDefined(colorFilter.propertyToCompare)&&collectionConfig.addDisplayProperty(colorFilter.propertyToCompare,"",{isVisible:!1})}),null!=_this.getListing(listingID).collectionConfig&&_this.getListing(listingID).collectionConfig.hasColumns()&&collectionConfig.addDisplayProperty(_this.getListingExampleEntity(listingID).$$getIDName(),void 0,{isVisible:!1}),collectionConfig.setPageShow(_this.getListing(listingID).paginator.pageShow),collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.currentPage),!_this.getListing(listingID).multiselectable||_this.getListing(listingID).columns&&_this.getListing(listingID).columns.length||_this.getListing(listingID).exampleEntity.metaData.activeProperty&&!_this.getListing(listingID).hasCollectionPromise&&collectionConfig.addFilter("activeFlag",1,"=",void 0,!0),_this.setupHierarchicalExpandable(listingID,collectionConfig)),_this.setupSortable(listingID),_this.updateColumnAndAdministrativeCount(listingID)},this.setupSortable=function(listingID){_this.attachToListingPageRecordsUpdate(listingID,_this.getPageRecordsWithManualSortOrder,_this.utilityService.createID(32))},this.setupSelect=function(listingID){_this.getListing(listingID).selectFieldName&&_this.getListing(listingID).selectFieldName.length&&(_this.getListing(listingID).selectable=!0,_this.getListing(listingID).tableclass=_this.utilityService.listAppend(_this.getListing(listingID).tableclass,"table-select"," "),_this.getListing(listingID).tableattributes=_this.utilityService.listAppend(_this.getListing(listingID).tableattributes,'data-selectfield="'+_this.getListing(listingID).selectFieldName+'"'," "))},this.setupMultiselect=function(listingID){if(_this.getListing(listingID).multiselectFieldName&&_this.getListing(listingID).multiselectFieldName.length&&(_this.getListing(listingID).multiselectable=!0,_this.getListing(listingID).tableclass=_this.utilityService.listAppend(_this.getListing(listingID).tableclass,"table-multiselect"," "),_this.getListing(listingID).tableattributes=_this.utilityService.listAppend(_this.getListing(listingID).tableattributes,'data-multiselectpropertyidentifier="'+_this.getListing(listingID).multiselectPropertyIdentifier+'"'," "),_this.getListing(listingID).observerService.attach(_this.getListing(listingID).updateMultiselectValues,_this.getListing(listingID).defaultSelectEvent,_this.getListing(listingID).collectionObject),_this.getListing(listingID).observerService.attach(_this.getListing(listingID).paginationPageChange,"swPaginationAction")),_this.getListing(listingID).multiselectValues&&_this.getListing(listingID).multiselectValues.length){var multiSelectValuesArray=_this.getListing(listingID).multiselectValues.split(",");angular.forEach(multiSelectValuesArray,function(value){_this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID,value)})}_this.getListing(listingID).multiselectIdPaths&&_this.getListing(listingID).multiselectIdPaths.length&&angular.forEach(_this.getListing(listingID).multiselectIdPaths.split(","),function(value){var id=_this.getListing(listingID).utilityService.listLast(value,"/");_this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID,id)})},this.setupExampleEntity=function(listingID){_this.getListing(listingID).exampleEntity=_this.$hibachi.getEntityExample(_this.getListingBaseEntityName(listingID)),null!=_this.getListing(listingID).exampleEntity&&((!_this.getListing(listingID).parentPropertyName||_this.getListing(listingID).parentPropertyName&&!_this.getListing(listingID).parentPropertyName.length)&&_this.getListing(listingID).exampleEntity.metaData.hb_parentPropertyName&&(_this.getListing(listingID).parentPropertyName=_this.getListing(listingID).exampleEntity.metaData.hb_parentPropertyName),(!_this.getListing(listingID).childPropertyName||_this.getListing(listingID).childPropertyName&&!_this.getListing(listingID).childPropertyName.length)&&_this.getListing(listingID).exampleEntity.metaData.hb_childPropertyName&&(_this.getListing(listingID).childPropertyName=_this.getListing(listingID).exampleEntity.metaData.hb_childPropertyName))},this.setupHierarchicalExpandable=function(listingID,collectionConfig){_this.getListing(listingID).parentPropertyName&&_this.getListing(listingID).parentPropertyName.length&&0!=_this.getListing(listingID).expandable&&(angular.isUndefined(_this.getListing(listingID).expandable)&&(_this.getListing(listingID).expandable=!0),_this.getListing(listingID).tableclass=_this.utilityService.listAppend(_this.getListing(listingID).tableclass,"table-expandable"," "),_this.getListing(listingID).hasCollectionPromise||collectionConfig.addFilter(_this.getListing(listingID).parentPropertyName+"."+_this.getListing(listingID).exampleEntity.$$getIDName(),"NULL","IS",void 0,!0,!1,!1),_this.getListing(listingID).childPropertyName&&_this.getListing(listingID).childPropertyName.length&&(!_this.getListing(listingID).getChildCount&&_this.getListing(listingID).hasCollectionPromise||collectionConfig.addDisplayAggregate(_this.getListing(listingID).childPropertyName,"COUNT",_this.getListing(listingID).childPropertyName+"Count",{isVisible:!1,isSearchable:!1})),_this.getListing(listingID).allpropertyidentifiers=_this.utilityService.listAppend(_this.getListing(listingID).allpropertyidentifiers,_this.getListing(listingID).exampleEntity.$$getIDName()+"Path"),_this.getListing(listingID).tableattributes=_this.utilityService.listAppend(_this.getListing(listingID).tableattributes,"data-parentidproperty="+_this.getListing(listingID).parentPropertyName+"."+_this.getListing(listingID).exampleEntity.$$getIDName()," "))},this.updateColumnAndAdministrativeCount=function(listingID){_this.getListing(listingID).columnCount=_this.getListing(listingID).columns?_this.getListing(listingID).columns.length:0,_this.getListing(listingID).selectable&&_this.getListing(listingID).columnCount++,_this.getListing(listingID).multiselectable&&_this.getListing(listingID).columnCount++,_this.getListing(listingID).sortable&&_this.getListing(listingID).columnCount++,_this.getListing(listingID).administrativeCount&&_this.getListing(listingID).administrativeCount++},this.setupDefaultGetCollection=function(listingID){return 0==_this.getListing(listingID).collectionConfigs.length?(_this.getListing(listingID).collectionPromise=_this.getListing(listingID).collectionConfig.getEntity(),function(){_this.getListing(listingID).collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.getCurrentPage()),_this.getListing(listingID).collectionConfig.setPageShow(_this.getListing(listingID).paginator.getPageShow()),_this.getListing(listingID).multiSlot?_this.getListing(listingID).collectionConfig.getEntity().then(function(data){_this.getListing(listingID).collectionData=data,_this.setupDefaultCollectionInfo(listingID),_this.getListing(listingID).collectionData.pageRecords=data.pageRecords||data.records,_this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData)},function(reason){throw"Listing Service encounter a problem when trying to get collection. Reason: "+reason}):_this.getListing(listingID).collectionPromise.then(function(data){_this.getListing(listingID).collectionData=data,_this.setupDefaultCollectionInfo(listingID),_this.getListing(listingID).collectionData.pageRecords=data.pageRecords||data.records,_this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData)},function(reason){throw"Listing Service encounter a problem when trying to get collection. Reason: "+reason})}):function(){_this.getListing(listingID).collectionData={},_this.getListing(listingID).collectionData.pageRecords=[];var allGetEntityPromises=[];angular.forEach(_this.getListing(listingID).collectionConfigs,function(collectionConfig,key){allGetEntityPromises.push(collectionConfig.getEntity())}),allGetEntityPromises.length&&_this.$q.all(allGetEntityPromises).then(function(results){angular.forEach(results,function(result,key){_this.getListing(listingID).listingService.setupColumns(listingID,_this.getListing(listingID).collectionConfigs[key],_this.getListing(listingID).collectionObjects[key]),_this.getListing(listingID).collectionData.pageRecords=_this.getListing(listingID).collectionData.pageRecords.concat(result.records)})},function(reason){throw"listing service had trouble getting collection data because: "+reason})}},this.columnOrderBy=function(listingID,column){var isfound=!1;return null!=_this.getListing(listingID).collectionConfigs&&angular.forEach(_this.getListing(listingID).collectionConfig.orderBy,function(orderBy,index){column.propertyIdentifier==orderBy.propertyIdentifier&&(isfound=!0,_this.getListing(listingID).orderByStates[column.propertyIdentifier]=orderBy.direction)}),isfound||(_this.getListing(listingID).orderByStates[column.propertyIdentifier]=""),_this.getListing(listingID).orderByStates[column.propertyIdentifier]},this.columnOrderByIndex=function(listingID,column){var isfound=!1;return column.sorting&&column.sorting.active&&column.sorting.sortOrder?column.sorting.sortOrder.toUpperCase():(null!=_this.getListing(listingID).collectionConfig&&angular.forEach(_this.getListing(listingID).collectionConfig.orderBy,function(orderBy,index){column.propertyIdentifier==orderBy.propertyIdentifier&&(isfound=!0,_this.getListing(listingID).orderByIndices[column.propertyIdentifier]=index+1)}),isfound||(_this.getListing(listingID).orderByIndices[column.propertyIdentifier]=""),_this.getListing(listingID).orderByIndices[column.propertyIdentifier])},this.setSingleColumnOrderBy=function(listingID,propertyIdentifier,direction,notify){if(void 0===notify&&(notify=!0),"ASC"===direction.toUpperCase())var oppositeDirection="DESC";else var oppositeDirection="ASC";if(null!=_this.getListing(listingID).collectionConfig){var found=!1;angular.forEach(_this.getListing(listingID).collectionConfig.orderBy,function(orderBy,index){propertyIdentifier==orderBy.propertyIdentifier?(orderBy.direction=direction,found=!0):orderBy.direction=oppositeDirection}),found||_this.getListing(listingID).collectionConfig.addOrderBy(propertyIdentifier+"|"+direction),notify&&_this.observerService.notify(_this.getListingOrderByChangedEventString(listingID)),_this.getCollection(listingID)}},this.setManualSort=function(listingID,toggle){_this.getListing(listingID).sortable=toggle,toggle&&_this.setSingleColumnOrderBy(listingID,"sortOrder","ASC")},this.toggleOrderBy=function(listingID,column){_this.getListing(listingID).hasSingleCollectionConfig()&&_this.getListing(listingID).collectionConfig.toggleOrderBy(column.propertyIdentifier,!0)},this.getColorFilterConditionString=function(colorFilter,pageRecord){return angular.isDefined(colorFilter.comparisonProperty)?pageRecord[colorFilter.propertyToCompare.replace(".","_")]+colorFilter.comparisonOperator+pageRecord[colorFilter.comparisonProperty.replace(".","_")]:pageRecord[colorFilter.propertyToCompare.replace(".","_")]+colorFilter.comparisonOperator+colorFilter.comparisonValue},this.getKeyOfMatchedDisableRule=function(listingID,pageRecord){var disableRuleMatchedKey=-1;return angular.isDefined(_this.getListing(listingID).disableRules)&&angular.forEach(_this.getListing(listingID).disableRules,function(rule,key){if(angular.isDefined(pageRecord[rule.filterPropertyIdentifier])){if(angular.isString(pageRecord[rule.filterPropertyIdentifier]))var pageRecordValue=pageRecord[rule.filterPropertyIdentifier].trim();else var pageRecordValue=pageRecord[rule.filterPropertyIdentifier];if("null"==rule.filterComparisonValue&&(rule.filterComparisonValue=""),_this.filterService.filterMatch(pageRecordValue,rule.filterComparisonOperator,rule.filterComparisonValue)&&(disableRuleMatchedKey=key),-1!=disableRuleMatchedKey)return disableRuleMatchedKey}}),disableRuleMatchedKey},this.getPageRecordMatchesDisableRule=function(listingID,pageRecord){return-1!=_this.getKeyOfMatchedDisableRule(listingID,pageRecord)},this.setExpandable=function(listingID,value){angular.isDefined(_this.getListing(listingID))&&(_this.getListing(listingID).expandable=value)},this.getKeyOfMatchedExpandableRule=function(listingID,pageRecord){var expandableRuleMatchedKey=-1;return angular.isDefined(_this.getListing(listingID))&&angular.isDefined(_this.getListing(listingID).expandableRules)&&angular.forEach(_this.getListing(listingID).expandableRules,function(rule,key){if(angular.isDefined(pageRecord[rule.filterPropertyIdentifier])){if(angular.isString(pageRecord[rule.filterPropertyIdentifier]))var pageRecordValue=pageRecord[rule.filterPropertyIdentifier].trim();else var pageRecordValue=pageRecord[rule.filterPropertyIdentifier];if(_this.filterService.filterMatch(pageRecordValue,rule.filterComparisonOperator,rule.filterComparisonValue)&&(expandableRuleMatchedKey=key),-1!=expandableRuleMatchedKey)return expandableRuleMatchedKey}}),expandableRuleMatchedKey},this.getExampleEntityForExpandableRecord=function(listingID,pageRecord){var childCollectionConfig=_this.getListing(listingID).getPageRecordChildCollectionConfigForExpandableRule(pageRecord);return angular.isDefined(childCollectionConfig)?_this.$hibachi.getEntityExample(_this.getListing(listingID).getPageRecordChildCollectionConfigForExpandableRule(pageRecord).baseEntityName):_this.getListing(listingID).exampleEntity},this.getPageRecordMatchesExpandableRule=function(listingID,pageRecord){return-1!=_this.getKeyOfMatchedExpandableRule(listingID,pageRecord)},this.hasPageRecordRefreshChildrenEvent=function(listingID,pageRecord){return null!=_this.getPageRecordRefreshChildrenEvent(listingID,pageRecord)},this.getPageRecordRefreshChildrenEvent=function(listingID,pageRecord){var keyOfExpandableRuleMet=_this.getKeyOfMatchedExpandableRule(listingID,pageRecord);if(-1!=keyOfExpandableRuleMet)return _this.getListing(listingID).expandableRules[keyOfExpandableRuleMet].refreshChildrenEvent},this.getPageRecordChildCollectionConfigForExpandableRule=function(listingID,pageRecord){var keyOfExpandableRuleMet=_this.getKeyOfMatchedExpandableRule(listingID,pageRecord);if(null!=_this.getListing(listingID)&&angular.isFunction(_this.getListing(listingID).exampleEntity.$$getIDName)&&angular.isDefined(pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()])&&angular.isDefined(_this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]]))return _this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]];if(-1!=keyOfExpandableRuleMet){var childCollectionConfig=_this.getListing(listingID).expandableRules[keyOfExpandableRuleMet].childrenCollectionConfig.clone();return angular.forEach(childCollectionConfig.filterGroups[0],function(filterGroup,key){angular.forEach(filterGroup,function(filter,key){angular.isString(filter.value)&&filter.value.length&&"$"==filter.value.charAt(0)&&(filter.value=_this.utilityService.replaceStringWithProperties(filter.value,pageRecord))})}),_this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]]=childCollectionConfig,_this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]]}},this.listingDisplayStore=new Store.IStore(this.state,this.listingDisplayStateReducer)}return ListingService}();exports.ListingService=ListingService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var alert_module_1=__webpack_require__(60),loggermodule=angular.module("logger",[alert_module_1.alertmodule.name]).run([function(){}]);exports.loggermodule=loggermodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWPaginationBarController=function(){function SWPaginationBarController(paginationService){this.paginationService=paginationService,angular.isUndefined(this.paginator)&&(this.paginator=paginationService.createPagination())}return SWPaginationBarController}();exports.SWPaginationBarController=SWPaginationBarController;var SWPaginationBar=function(){function SWPaginationBar(hibachiPathBuilder,partialsPath){this.restrict="E",this.scope={},this.bindToController={paginator:"=?"},this.controller=SWPaginationBarController,this.controllerAs="swPaginationBar",this.link=function(scope,element,attrs){},this.templateUrl=hibachiPathBuilder.buildPartialsPath(partialsPath)+"paginationbar.html"}return SWPaginationBar.Factory=function(){var directive=function(hibachiPathBuilder,partialsPath){return new SWPaginationBar(hibachiPathBuilder,partialsPath)};return directive.$inject=["hibachiPathBuilder","partialsPath"],directive},SWPaginationBar}();exports.SWPaginationBar=SWPaginationBar},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var paginationservice_1=__webpack_require__(653),swpaginationbar_1=__webpack_require__(651),core_module_1=__webpack_require__(16),paginationmodule=angular.module("hibachi.pagination",[core_module_1.coremodule.name]).run([function(){}]).service("paginationService",paginationservice_1.PaginationService).directive("swPaginationBar",swpaginationbar_1.SWPaginationBar.Factory()).constant("partialsPath","pagination/components/");exports.paginationmodule=paginationmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Pagination=function(){function Pagination(observerService,uuid){var _this=this;this.observerService=observerService,this.uuid=uuid,this.pageShow=10,this.currentPage=1,this.pageStart=0,this.pageEnd=0,this.recordsCount=0,this.totalPages=0,this.pageShowOptions=[{display:10,value:10},{display:20,value:20},{display:50,value:50},{display:250,value:250},{display:"Auto",value:"Auto"}],this.autoScrollPage=1,this.autoScrollDisabled=!1,this.notifyById=!0,this.getSelectedPageShowOption=function(){return _this.selectedPageShowOption},this.pageShowOptionChanged=function(pageShowOption){_this.setPageShow(pageShowOption.value),_this.currentPage=1,_this.notify("swPaginationAction",{type:"setPageShow",payload:_this.getPageShow()})},this.getTotalPages=function(){return _this.totalPages},this.setTotalPages=function(totalPages){_this.totalPages=totalPages},this.getPageStart=function(){return _this.pageStart},this.setPageStart=function(pageStart){_this.pageStart=pageStart},this.getPageEnd=function(){return _this.pageEnd},this.setPageEnd=function(pageEnd){_this.pageEnd=pageEnd},this.getRecordsCount=function(){return _this.recordsCount},this.setRecordsCount=function(recordsCount){_this.recordsCount=recordsCount},this.getPageShowOptions=function(){return _this.pageShowOptions},this.setPageShowOptions=function(pageShowOptions){_this.pageShowOptions=pageShowOptions},this.getPageShow=function(){return _this.pageShow},this.setPageShow=function(pageShow){_this.pageShow=pageShow},this.getCurrentPage=function(){return _this.currentPage},this.setCurrentPage=function(currentPage){_this.currentPage=currentPage,_this.notify("swPaginationAction",{type:"setCurrentPage",payload:_this.getCurrentPage()})},this.previousPage=function(){1!=_this.getCurrentPage()&&_this.setCurrentPage(_this.getCurrentPage()-1)},this.nextPage=function(){_this.getCurrentPage()<_this.getTotalPages()&&(_this.setCurrentPage(_this.getCurrentPage()+1),_this.notify("swPaginationAction",{type:"nextPage",payload:_this.getCurrentPage()}))},this.hasPrevious=function(){return _this.getPageStart()<=1},this.hasNext=function(){return _this.getPageEnd()===_this.getRecordsCount()},this.showPreviousJump=function(){return angular.isDefined(_this.getCurrentPage())&&_this.getCurrentPage()>3},this.showNextJump=function(){return!!(_this.getCurrentPage()<_this.getTotalPages()-3&&_this.getTotalPages()>6)},this.previousJump=function(){_this.setCurrentPage(_this.currentPage-3)},this.nextJump=function(){_this.setCurrentPage(_this.getCurrentPage()+3)},this.showPageNumber=function(pageNumber){if(_this.getCurrentPage()>=_this.getTotalPages()-3&&pageNumber>_this.getTotalPages()-6)return!0;if(_this.getCurrentPage()<=3){if(pageNumber<6)return!0}else{var bottomRange=_this.getCurrentPage()-2,topRange=_this.getCurrentPage()+2;if(pageNumber>bottomRange&&pageNumber<topRange)return!0}return!1},this.setPageRecordsInfo=function(collection){if(_this.setRecordsCount(collection.recordsCount),0===_this.getRecordsCount()?_this.setPageStart(0):_this.setPageStart(collection.pageRecordsStart),_this.setPageEnd(collection.pageRecordsEnd),_this.setTotalPages(collection.totalPages),_this.totalPagesArray=[],angular.isUndefined(_this.getCurrentPage())||_this.getCurrentPage()<5)var start=1,end=_this.getTotalPages()<=10?_this.getTotalPages()+1:10;else var start=_this.showNextJump()?_this.getCurrentPage()-3:_this.getTotalPages()-4,end=_this.showNextJump()?_this.getCurrentPage()+5:_this.getTotalPages()+1;for(var i=start;i<end;i++)_this.totalPagesArray.push(i)},this.uuid=uuid,this.selectedPageShowOption=this.pageShowOptions[0],this.observerService.attach(this.setPageRecordsInfo,"swPaginationUpdate",this.uuid)}return Pagination.prototype.notify=function(event,parameters){!0===this.notifyById?this.observerService.notifyById(event,this.uuid,parameters):this.observerService.notify(event,parameters)},Pagination}();exports.Pagination=Pagination;var PaginationService=function(){function PaginationService(utilityService,observerService){var _this=this;this.utilityService=utilityService,this.observerService=observerService,this.paginations={},this.createPagination=function(id){var uuid=_this.utilityService.createID(10);return angular.isDefined(id)&&(uuid=id),_this.paginations[uuid]=new Pagination(_this.observerService,uuid),_this.paginations[uuid]},this.getPagination=function(uuid){if(uuid)return _this.paginations[uuid]}}return PaginationService}();exports.PaginationService=PaginationService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidate=function(){function SWValidate($log,$hibachi){return{restrict:"A",require:"^ngModel",link:function(scope,elem,attr,ngModel){function validate(name,context,elementValue){var validationResults={};validationResults={name:"name",context:"context",required:"required",error:"none",errorkey:"none"};for(var key in validationObject)if(key===name||key===name+"Flag")for(var inner in validationObject[key]){var required=validationObject[key][inner].required||"false",context=validationObject[key][inner].contexts||"none";validationResults={name:key,context:context,required:required,error:"none",errorkey:"none"};for(var elementValidationArr=map(checkHasValidationType,validationPropertiesArray,validationObject[key][inner]),i=0;i<elementValidationArr.length;i++)if(1==elementValidationArr[i]){if("regex"===validationPropertiesArray[i]&&""!==elementValue){var re=validationObject[key][inner].regex,result=validate_RegExp(elementValue,re);return 1!=result?(errorMessages.push("Invalid input"),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.REGEX.name,validationResults.fail=!0):(errorMessages.push("Valid input"),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.REGEX.name,validationResults.fail=!1),validationResults}if("minValue"===validationPropertiesArray[i]){var validationMinValue=validationObject[key][inner].minValue;$log.debug(validationMinValue);var result=validate_MinValue(elementValue,validationMinValue);return $log.debug("e>v"+result+" :"+elementValue,":"+validationMinValue),1!=result?(errorMessages.push("Minimum value is: "+validationMinValue),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.MIN_VALUE.name,validationResults.fail=!0):(validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.MIN_VALUE.name,validationResults.fail=!1),validationResults}if("maxValue"===validationPropertiesArray[i]){var validationMaxValue=validationObject[key][inner].maxValue,result=validate_MaxValue(elementValue,validationMaxValue);return $log.debug("Max Value result is: "+result),1!=result&&(errorMessages.push("Maximum value is: "+validationMaxValue),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.MAX_VALUE.name,validationResults.fail=!0),validationResults}if("minLength"===validationPropertiesArray[i]){var validationMinLength=validationObject[key][inner].minLength,result=validate_MinLength(elementValue,validationMinLength);return $log.debug("Min Length result is: "+result),1!=result&&(errorMessages.push("Minimum length must be: "+validationMinLength),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.MIN_LENGTH.name,validationResults.fail=!0),validationResults}if("maxLength"===validationPropertiesArray[i]){var validationMaxLength=validationObject[key][inner].maxLength,result=validate_MaxLength(elementValue,validationMaxLength);return $log.debug("Max Length result is: "+result),1!=result&&(errorMessages.push("Maximum length is: "+validationMaxLength),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.MAX_LENGTH.name,validationResults.fail=!0),validationResults}if("eq"===validationPropertiesArray[i]){var validationEq=validationObject[key][inner].eq,result=validate_Eq(elementValue,validationEq);return 1!=result&&(errorMessages.push("Must equal "+validationEq),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.EQ.name,validationResults.fail=!0),validationResults}if("neq"===validationPropertiesArray[i]){var validationNeq=validationObject[key][inner].neq,result=validate_Neq(elementValue,validationNeq);return 1!=result&&(errorMessages.push("Must not equal: "+validationNeq),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.NEQ.name,validationResults.fail=!0),validationResults}if("lte"===validationPropertiesArray[i]){var validationLte=validationObject[key][inner].lte,result=validate_Lte(elementValue,validationLte);return 1!=result&&(errorMessages.push("Must be less than "+validationLte),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.LTE.name,validationResults.fail=!0),validationResults}if("gte"===validationPropertiesArray[i]){var validationGte=validationObject[key][inner].gte,result=validate_Gte(elementValue,validationGte);return 1!=result&&(errorMessages.push("Must be greater than: "+validationGte),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey="invalid-"+ValidationPropertiesEnum.GTE.name,validationResults.fail=!0),validationResults}if("required"===validationPropertiesArray[i]){var validationRequire=validationObject[key][inner].require,result=validate_Required(elementValue,validationRequire);return 1!=result?(errorMessages.push("Required"),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey=ValidationPropertiesEnum.REQUIRED.name,validationResults.fail=!0):(errorMessages.push("Required"),validationResults.error=errorMessages[errorMessages.length-1],validationResults.errorkey=ValidationPropertiesEnum.REQUIRED.name,validationResults.fail=!1),validationResults}}}}function checkHasValidationType(validationProp,validationType){return void 0!=validationProp[validationType]}function map(func,array,obj){var result=[];return forEach(array,function(element){result.push(func(obj,element))}),result}function forEach(array,action){for(var i=0;i<array.length;i++)action(array[i])}function getNamesFromObject(obj){var result=[];for(var i in obj){var name=obj[i].name||"stub";result.push(name)}return result}function validate_RegExp(value,pattern){return!!new RegExp(pattern).test(value)}function validate_MinValue(userValue,minValue){return userValue>=minValue}function validate_MaxValue(userValue,maxValue){return userValue<=maxValue}function validate_MinLength(userValue,minLength){return userValue.length>=minLength}function validate_MaxLength(userValue,maxLength){return userValue.length<=maxLength}function validate_Eq(userValue,eqValue){return userValue==eqValue}function validate_Neq(userValue,neqValue){return userValue!=neqValue}function validate_Lte(userValue,decisionValue){return userValue<decisionValue}function validate_Gte(userValue,decisionValue){return userValue>decisionValue}function validate_Required(property,userValue){return""==userValue&&1==property}var ContextsEnum={SAVE:{name:"save",value:0},DELETE:{name:"delete",value:1},EDIT:{name:"edit",value:2}},ValidationPropertiesEnum={REGEX:{name:"regex",value:0},MIN_VALUE:{name:"minValue",value:1},MAX_VALUE:{name:"maxValue",value:2},EQ:{name:"eq",value:3},NEQ:{name:"neq",value:4},UNIQUE:{name:"unique",value:5},LTE:{name:"lte",value:6},GTE:{name:"gte",value:7},MIN_LENGTH:{name:"minLength",value:8},MAX_LENGTH:{name:"maxLength",value:9},DATA_TYPE:{name:"dataType",value:10},REQUIRED:{name:"required",value:11}};scope.validationPropertiesEnum=ValidationPropertiesEnum,scope.contextsEnum=ContextsEnum;var myCurrentContext=scope.contextsEnum.SAVE,validationPropertiesArray=(getNamesFromObject(ContextsEnum),getNamesFromObject(ValidationPropertiesEnum)),validationObject=scope.propertyDisplay.object.validations.properties,errorMessages=(scope.propertyDisplay.errors,[]);ngModel.$parsers.unshift(function(value){var name=elem.context.name,currentValue=elem.val(),val=validate(name,myCurrentContext,currentValue)||{};return $log.debug(scope),$log.debug(val),ngModel.$setValidity(val.errorkey,!val.fail),!0}),elem.bind("blur",function(e){})}}}return SWValidate.Factory=function(){var directive=function($log,$hibachi){return new SWValidate($log,$hibachi)};return directive.$inject=["$log","$hibachi"],directive},SWValidate}();exports.SWValidate=SWValidate},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationDataType=function(){function SWValidationDataType(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){var isValidFunction=function(modelValue){return validationService.validateDataType(modelValue,attributes.swvalidationdatatype)};ngModel.$validators.swvalidationdatatype=isValidFunction,ngModel.$validators["swvalidation"+attributes.swvalidationdatatype]=isValidFunction}}}return SWValidationDataType.Factory=function(){var directive=function(validationService){return new SWValidationDataType(validationService)};return directive.$inject=["validationService"],directive},SWValidationDataType}();exports.SWValidationDataType=SWValidationDataType},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationEq=function(){function SWValidationEq(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationeq=function(modelValue,viewValue){return validationService.validateEq(modelValue,attributes.swvalidationeq)}}}}return SWValidationEq.Factory=function(){var directive=function(validationService){return new SWValidationEq(validationService)};return directive.$inject=["validationService"],directive},SWValidationEq}();exports.SWValidationEq=SWValidationEq},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationGte=function(){function SWValidationGte(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationGte=function(modelValue,viewValue){return validationService.validateGte(modelValue,attributes.swvalidationGte)}}}}return SWValidationGte.Factory=function(){var directive=function(validationService){return new SWValidationGte(validationService)};return directive.$inject=["validationService"],directive},SWValidationGte}();exports.SWValidationGte=SWValidationGte},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationLte=function(){function SWValidationLte(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationlte=function(modelValue,viewValue){return validationService.validateLte(modelValue,attributes.swvalidationlte)}}}}return SWValidationLte.Factory=function(){var directive=function(validationService){return new SWValidationLte(validationService)};return directive.$inject=["validationService"],directive},SWValidationLte}();exports.SWValidationLte=SWValidationLte},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationMaxLength=function(){function SWValidationMaxLength(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationmaxlength=function(modelValue,viewValue){var length=0;return viewValue&&viewValue.length&&(length=viewValue.length),validationService.validateMaxLength(length||0,attributes.swvalidationmaxlength)}}}}return SWValidationMaxLength.Factory=function(){var directive=function(validationService){return new SWValidationMaxLength(validationService)};return directive.$inject=["validationService"],directive},SWValidationMaxLength}();exports.SWValidationMaxLength=SWValidationMaxLength},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationMaxValue=function(){function SWValidationMaxValue(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationmaxvalue=function(modelValue,viewValue){if(null==viewValue)return!0;validationService.validateMaxValue(viewValue,attributes.swvalidationmaxvalue)}}}}return SWValidationMaxValue.Factory=function(){var directive=function(validationService){return new SWValidationMaxValue(validationService)};return directive.$inject=["validationService"],directive},SWValidationMaxValue}();exports.SWValidationMaxValue=SWValidationMaxValue},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationMinLength=function(){function SWValidationMinLength($log,validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationminlength=function(modelValue,viewValue){var length=0;return viewValue&&viewValue.length&&(length=viewValue.length),validationService.validateMinLength(length||0,attributes.swvalidationminlength)}}}}return SWValidationMinLength.Factory=function(){var directive=function($log,validationService){return new SWValidationMinLength($log,validationService)};return directive.$inject=["$log","validationService"],directive},SWValidationMinLength}();exports.SWValidationMinLength=SWValidationMinLength},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationMinValue=function(){function SWValidationMinValue(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationminvalue=function(modelValue,viewValue){return null==viewValue||validationService.validateMinValue(viewValue,attributes.swvalidationminvalue)}}}}return SWValidationMinValue.Factory=function(){var directive=function(validationService){return new SWValidationMinValue(validationService)};return directive.$inject=["validationService"],directive},SWValidationMinValue}();exports.SWValidationMinValue=SWValidationMinValue},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationNeq=function(){function SWValidationNeq(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationneq=function(modelValue){return validationService.validateNeq(modelValue,attributes.swvalidationneq)}}}}return SWValidationNeq.Factory=function(){var directive=function(validationService){return new SWValidationNeq(validationService)};return directive.$inject=["validationService"],directive},SWValidationNeq}();exports.SWValidationNeq=SWValidationNeq},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationNumeric=function(){function SWValidationNumeric(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationnumeric=function(modelValue,viewValue){return validationService.validateNumeric(viewValue)}}}}return SWValidationNumeric.Factory=function(){var directive=function(validationService){return new SWValidationNumeric(validationService)};return directive.$inject=["validationService"],directive},SWValidationNumeric}();exports.SWValidationNumeric=SWValidationNumeric},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationRegex=function(){function SWValidationRegex(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationregex=function(modelValue){return validationService.validateRegex(modelValue,attributes.swvalidationregex)}}}}return SWValidationRegex.Factory=function(){var directive=function(validationService){return new SWValidationRegex(validationService)};return directive.$inject=["validationService"],directive},SWValidationRegex}();exports.SWValidationRegex=SWValidationRegex},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationRequired=function(){function SWValidationRequired(validationService){return{restrict:"A",require:"^ngModel",link:function(scope,element,attributes,ngModel){ngModel.$validators.swvalidationrequired=function(modelValue,viewValue){var value=modelValue||viewValue;return"true"!==attributes.swvalidationrequired||validationService.validateRequired(value)}}}}return SWValidationRequired.Factory=function(){var directive=function(validationService){return new SWValidationRequired(validationService)};return directive.$inject=["validationService"],directive},SWValidationRequired}();exports.SWValidationRequired=SWValidationRequired},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationUnique=function(){function SWValidationUnique($http,$q,$hibachi,$log,validationService){return{restrict:"A",require:["ngModel","^?swFormField"],link:function(scope,element,attributes,controllers){controllers[0].$asyncValidators.swvalidationunique=function(modelValue,viewValue){var currentValue=modelValue||viewValue,property=controllers[1].property;return validationService.validateUnique(currentValue,controllers[1].object,property)}}}}return SWValidationUnique.Factory=function(){var directive=function($http,$q,$hibachi,$log,validationService){return new SWValidationUnique($http,$q,$hibachi,$log,validationService)};return directive.$inject=["$http","$q","$hibachi","$log","validationService"],directive},SWValidationUnique}();exports.SWValidationUnique=SWValidationUnique},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWValidationUniqueOrNull=function(){function SWValidationUniqueOrNull($http,$q,$hibachi,$log,validationService){return{restrict:"A",require:"ngModel",link:function(scope,element,attributes,ngModel){ngModel.$asyncValidators.swvalidationuniqueornull=function(modelValue,viewValue){var currentValue=modelValue||viewValue;if(scope&&scope.propertyDisplay&&scope.propertyDisplay.property){var property=scope.propertyDisplay.property;return validationService.validateUniqueOrNull(currentValue,scope.propertyDisplay.object,property)}return $q.resolve()}}}}return SWValidationUniqueOrNull.Factory=function(){var directive=function($http,$q,$hibachi,$log,validationService){return new SWValidationUniqueOrNull($http,$q,$hibachi,$log,validationService)};return directive.$inject=["$http","$q","$hibachi","$log","validationService"],directive},SWValidationUniqueOrNull}();exports.SWValidationUniqueOrNull=SWValidationUniqueOrNull},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ValidationService=function(){function ValidationService($hibachi,$q){var _this=this;this.$hibachi=$hibachi,this.$q=$q,this.MY_EMAIL_REGEXP=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,this.validateUnique=function(value,object,property){var deferred=_this.$q.defer();return object&&property?_this.$hibachi.checkUniqueValue(object,property,value).then(function(unique){unique?deferred.resolve():deferred.reject()}):deferred.resolve(),deferred.promise},this.validateUniqueOrNull=function(value,object,property){var deferred=_this.$q.defer();return object&&property?_this.$hibachi.checkUniqueOrNullValue(object,property,value).then(function(unique){unique?deferred.resolve():deferred.reject()}):deferred.resolve(),deferred.promise},this.validateEmail=function(value){return _this.validateDataType(value,"email")},this.validateDataType=function(value,type){return null==value||(!(!angular.isString(value)||"string"!==type)||(!(!angular.isNumber(parseInt(value))||"numeric"!==type)||(!(!angular.isArray(value)||"array"!==type)||(!(!angular.isDate(value)||"date"!==type)||(!(!angular.isObject(value)||"object"!==type)||("email"===type?_this.MY_EMAIL_REGEXP.test(value):!!angular.isUndefined(value&&"undefined"===type)))))))},this.validateEq=function(value,expectedValue){return value===expectedValue},this.validateNeq=function(value,expectedValue){return value!==expectedValue},this.validateGte=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),angular.isString(value)&&(value=parseInt(value)),angular.isString(comparisonValue)&&(comparisonValue=parseInt(comparisonValue)),value>=comparisonValue},this.validateLte=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),angular.isString(value)&&(value=parseInt(value)),angular.isString(comparisonValue)&&(comparisonValue=parseInt(comparisonValue)),value<=comparisonValue},this.validateMaxLength=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),_this.validateLte(value,comparisonValue)},this.validateMaxValue=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),_this.validateLte(value,comparisonValue)},this.validateMinLength=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),_this.validateGte(value,comparisonValue)},this.validateMinValue=function(value,comparisonValue){return void 0===comparisonValue&&(comparisonValue=0),_this.validateGte(value,comparisonValue)},this.validateNumeric=function(value){return!isNaN(value)},this.validateRegex=function(value,pattern){return new RegExp(pattern).test(value)},this.validateRequired=function(value){return!!value},this.$hibachi=$hibachi,this.$q=$q}return ValidationService}();exports.ValidationService=ValidationService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var swvalidate_1=__webpack_require__(654),swvalidationminlength_1=__webpack_require__(661),swvalidationdatatype_1=__webpack_require__(655),swvalidationeq_1=__webpack_require__(656),swvalidationgte_1=__webpack_require__(657),swvalidationlte_1=__webpack_require__(658),swvalidationmaxlength_1=__webpack_require__(659),swvalidationmaxvalue_1=__webpack_require__(660),swvalidationminvalue_1=__webpack_require__(662),swvalidationneq_1=__webpack_require__(663),swvalidationnumeric_1=__webpack_require__(664),swvalidationregex_1=__webpack_require__(665),swvalidationrequired_1=__webpack_require__(666),swvalidationunique_1=__webpack_require__(667),swvalidationuniqueornull_1=__webpack_require__(668),validationservice_1=__webpack_require__(669),core_module_1=__webpack_require__(16),validationmodule=angular.module("hibachi.validation",[core_module_1.coremodule.name]).run([function(){}]).directive("swValidate",swvalidate_1.SWValidate.Factory()).directive("swvalidationminlength",swvalidationminlength_1.SWValidationMinLength.Factory()).directive("swvalidationdatatype",swvalidationdatatype_1.SWValidationDataType.Factory()).directive("swvalidationeq",swvalidationeq_1.SWValidationEq.Factory()).directive("swvalidationgte",swvalidationgte_1.SWValidationGte.Factory()).directive("swvalidationlte",swvalidationlte_1.SWValidationLte.Factory()).directive("swvalidationmaxlength",swvalidationmaxlength_1.SWValidationMaxLength.Factory()).directive("swvalidationmaxvalue",swvalidationmaxvalue_1.SWValidationMaxValue.Factory()).directive("swvalidationminvalue",swvalidationminvalue_1.SWValidationMinValue.Factory()).directive("swvalidationneq",swvalidationneq_1.SWValidationNeq.Factory()).directive("swvalidationnumeric",swvalidationnumeric_1.SWValidationNumeric.Factory()).directive("swvalidationregex",swvalidationregex_1.SWValidationRegex.Factory()).directive("swvalidationrequired",swvalidationrequired_1.SWValidationRequired.Factory()).directive("swvalidationunique",swvalidationunique_1.SWValidationUnique.Factory()).directive("swvalidationuniqueornull",swvalidationuniqueornull_1.SWValidationUniqueOrNull.Factory()).service("validationService",validationservice_1.ValidationService);exports.validationmodule=validationmodule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWAdminCreateSuperUser=function(){function SWAdminCreateSuperUser($hibachi,workflowPartialsPath,hibachiPathBuilder){return{restrict:"E",scope:{},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"admincreatesuperuser.html",link:function(scope,element,attrs){scope.Account_SetupInitialAdmin=$hibachi.newAccount_SetupInitialAdmin()}}}return SWAdminCreateSuperUser.Factory=function(){var directive=function($hibachi,workflowPartialsPath,hibachiPathBuilder){return new SWAdminCreateSuperUser($hibachi,workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["$hibachi","workflowPartialsPath","hibachiPathBuilder"],directive},SWAdminCreateSuperUser}();exports.SWAdminCreateSuperUser=SWAdminCreateSuperUser},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWSchedulePreviewController=function(){function SWSchedulePreviewController(){}return SWSchedulePreviewController}(),SWSchedulePreview=function(){function SWSchedulePreview(workflowPartialsPath,hibachiPathBuilder){this.workflowPartialsPath=workflowPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="AE",this.scope={},this.bindToController={schedule:"="},this.controller=SWSchedulePreviewController,this.controllerAs="swSchedulePreview",this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath)+"schedulepreview.html"}return SWSchedulePreview.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder){return new SWSchedulePreview(workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder"],directive},SWSchedulePreview.$inject=["workflowPartialsPath","hibachiPathBuilder"],SWSchedulePreview}();exports.SWSchedulePreview=SWSchedulePreview},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowBasic=function(){function SWWorkflowBasic(workflowPartialsPath,hibachiPathBuilder){return{restrict:"A",scope:{workflow:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowbasic.html",link:function(scope,element,attrs){}}}return SWWorkflowBasic.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowBasic(workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowBasic}();exports.SWWorkflowBasic=SWWorkflowBasic},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowCondition=function(){function SWWorkflowCondition($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder){return{restrict:"E",scope:{workflowCondition:"=",workflowConditionIndex:"=",workflow:"=",filterPropertiesList:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowcondition.html",link:function(scope,element,attrs){if($log.debug("workflowCondition init"),$log.debug(scope),scope.selectBreadCrumb=function(breadCrumbIndex){var removeCount=scope.filterItem.breadCrumbs.length-1-breadCrumbIndex;scope.filterItem.breadCrumbs.splice(breadCrumbIndex+1,removeCount),scope.selectedFilterPropertyChanged(null)},scope.selectedFilterPropertyChanged=function(selectedFilterProperty){$log.debug("selectedFilterProperty"),$log.debug(selectedFilterProperty),scope.selectedFilterProperty=selectedFilterProperty},angular.isUndefined(scope.workflowCondition.breadCrumbs))if(scope.workflowCondition.breadCrumbs=[],""===scope.workflowCondition.propertyIdentifier)scope.workflowCondition.breadCrumbs=[{entityAlias:scope.workflow.data.workflowObject,cfc:scope.workflow.data.workflowObject,propertyIdentifier:scope.workflow.data.workflowObject}];else{var entityAliasArrayFromString=scope.workflowCondition.propertyIdentifier.split(".");entityAliasArrayFromString.pop();for(var i in entityAliasArrayFromString){var breadCrumb={entityAlias:entityAliasArrayFromString[i],cfc:entityAliasArrayFromString[i],propertyIdentifier:entityAliasArrayFromString[i]};scope.workflowCondition.breadCrumbs.push(breadCrumb)}}else angular.forEach(scope.workflowCondition.breadCrumbs,function(breadCrumb,key){if(angular.isUndefined(scope.filterPropertiesList[breadCrumb.propertyIdentifier])){$hibachi.getFilterPropertiesByBaseEntityName(breadCrumb.cfc,!0).then(function(value){metadataService.setPropertiesList(value,breadCrumb.propertyIdentifier),scope.filterPropertiesList[breadCrumb.propertyIdentifier]=metadataService.getPropertiesListByBaseEntityAlias(breadCrumb.propertyIdentifier),metadataService.formatPropertiesList(scope.filterPropertiesList[breadCrumb.propertyIdentifier],breadCrumb.propertyIdentifier);var entityAliasArrayFromString=scope.workflowCondition.propertyIdentifier.split(".");if(entityAliasArrayFromString.pop(),entityAliasArrayFromString=entityAliasArrayFromString.join(".").trim(),angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString]))for(var i in scope.filterPropertiesList[entityAliasArrayFromString].data){var filterProperty=scope.filterPropertiesList[entityAliasArrayFromString].data[i];filterProperty.propertyIdentifier===scope.workflowCondition.propertyIdentifier&&(scope.selectedFilterProperty=filterProperty,scope.selectedFilterProperty.value=scope.workflowCondition.value,scope.selectedFilterProperty.comparisonOperator=scope.workflowCondition.comparisonOperator)}})}else{var entityAliasArrayFromString=scope.workflowCondition.propertyIdentifier.split(".");if(entityAliasArrayFromString.pop(),entityAliasArrayFromString=entityAliasArrayFromString.join(".").trim(),angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString]))for(var i in scope.filterPropertiesList[entityAliasArrayFromString].data){var filterProperty=scope.filterPropertiesList[entityAliasArrayFromString].data[i];filterProperty.propertyIdentifier===scope.workflowCondition.propertyIdentifier&&(scope.selectedFilterProperty=filterProperty,scope.selectedFilterProperty.value=scope.workflowCondition.value,scope.selectedFilterProperty.comparisonOperator=scope.workflowCondition.comparisonOperator)}}})}}}return SWWorkflowCondition.Factory=function(){var directive=function($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowCondition($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","$hibachi","metadataService","workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowCondition}();exports.SWWorkflowCondition=SWWorkflowCondition},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowConditionGroupItem=function(){function SWWorkflowConditionGroupItem(workflowPartialsPath,hibachiPathBuilder){return{restrict:"E",templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowconditiongroupitem.html",link:function(scope,element,attrs){}}}return SWWorkflowConditionGroupItem.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowConditionGroupItem(workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowConditionGroupItem}();exports.SWWorkflowConditionGroupItem=SWWorkflowConditionGroupItem},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowConditionGroups=function(){function SWWorkflowConditionGroups($log,workflowConditionService,workflowPartialsPath,hibachiPathBuilder){return{restrict:"E",scope:{workflowConditionGroupItem:"=",workflowConditionGroup:"=",workflow:"=",filterPropertiesList:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowconditiongroups.html",link:function(scope,element,attrs){$log.debug("workflowconditiongroups init"),scope.addWorkflowCondition=function(){$log.debug("addWorkflowCondition");var workflowCondition=workflowConditionService.newWorkflowCondition();workflowConditionService.addWorkflowCondition(scope.workflowConditionGroupItem,workflowCondition)},scope.addWorkflowGroupItem=function(){$log.debug("addWorkflowGrouptItem");var workflowConditionGroupItem=workflowConditionService.newWorkflowConditionGroupItem();workflowConditionService.addWorkflowConditionGroupItem(scope.workflowConditionItem,workflowConditionGroupItem)}}}}return SWWorkflowConditionGroups.Factory=function(){var directive=function($log,workflowConditionService,workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowConditionGroups($log,workflowConditionService,workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","workflowConditionService","workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowConditionGroups}();exports.SWWorkflowConditionGroups=SWWorkflowConditionGroups},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTask=function(){function SWWorkflowTask(workflowPartialsPath,hibachiPathBuilder){return{restrict:"E",scope:{workflowTask:"=",workflowTasks:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowtask.html",link:function(scope,element,attrs){scope.removeWorkflowTask=function(workflowTask){workflowTask.$$delete().then(function(){workflowTask===scope.workflowTasks.selectedTask&&delete scope.workflowTasks.selectedTask,scope.workflowTasks.splice(workflowTask.$$index,1);for(var i in scope.workflowTasks)scope.workflowTasks[i].$$index=i})}}}}return SWWorkflowTask.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowTask(workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowTask}();exports.SWWorkflowTask=SWWorkflowTask},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTaskActionsController=function(){function SWWorkflowTaskActionsController($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder,collectionConfigService,observerService){var _this=this;this.$log=$log,this.$hibachi=$hibachi,this.metadataService=metadataService,this.workflowPartialsPath=workflowPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.collectionConfigService=collectionConfigService,this.observerService=observerService,this.$log.debug("Workflow Task Actions Init"),this.$log.debug(this.workflowTask),this.openActions=!1,this.observerService.attach(function(item){angular.isDefined(_this.emailTemplateCollectionConfig)&&(_this.emailTemplateCollectionConfig.clearFilters(),_this.emailTemplateCollectionConfig.addFilter("emailTemplateObject",item.value)),angular.isDefined(_this.printTemplateCollectionConfig)&&(_this.printTemplateCollectionConfig.clearFilters(),_this.printTemplateCollectionConfig.addFilter("printTemplateObject",item.value))},"WorkflowWorkflowObjectOnChange");var getObjectByActionType=function(workflowTaskAction){"email"===workflowTaskAction.data.actionType?workflowTaskAction.$$getEmailTemplate():"print"===workflowTaskAction.data.actionType&&workflowTaskAction.$$getPrintTemplate()};this.getWorkflowTaskActions=function(){if(angular.isUndefined(_this.workflowTask.data.workflowTaskActions)){_this.workflowTask.$$getWorkflowTaskActions().then(function(){_this.workflowTaskActions=_this.workflowTask.data.workflowTaskActions,angular.forEach(_this.workflowTaskActions,function(workflowTaskAction){getObjectByActionType(workflowTaskAction)}),_this.$log.debug(_this.workflowTaskActions)})}else _this.workflowTaskActions=_this.workflowTask.data.workflowTaskActions;angular.isUndefined(_this.workflowTask.data.workflowTaskActions)&&(_this.workflowTask.data.workflowTaskActions=[],_this.workflowTaskActions=_this.workflowTask.data.workflowTaskActions)},this.getWorkflowTaskActions(),this.saveWorkflowTaskAction=function(taskAction,context){_this.$log.debug("Context: "+context),_this.$log.debug("saving task action and parent task"),_this.$log.debug(taskAction),_this.workflowTaskActions.selectedTaskAction.$$save().then(function(){taskAction.$$save,"add"==context?(_this.$log.debug("Save and New"),_this.addWorkflowTaskAction(taskAction),_this.finished=!1):"finish"==context&&(_this.finished=!0),_this.workflowTask.data.workflow.$$save()},function(err){angular.element('a[href="/##j-basic-2"]').click()})},this.setHidden=function(task){angular.isObject(task)||(task={}),angular.isUndefined(task.hidden)?task.hidden=!1:(_this.$log.debug("setHidden()","Setting Hide Value To "+!task.hidden),task.hidden=!task.hidden)},this.addWorkflowTaskAction=function(taskAction){var workflowTaskAction=_this.workflowTask.$$addWorkflowTaskAction();_this.selectWorkflowTaskAction(workflowTaskAction),_this.$log.debug(_this.workflow)},this.selectWorkflowTaskAction=function(workflowTaskAction){_this.$log.debug("Selecting new task action for editing: "),_this.$log.debug(workflowTaskAction),_this.finished=!1,_this.workflowTaskActions.selectedTaskAction=void 0,_this.$hibachi.getFilterPropertiesByBaseEntityName(_this.workflowTask.data.workflow.data.workflowObject,!0).then(function(value){_this.filterPropertiesList={baseEntityName:_this.workflowTask.data.workflow.data.workflowObject,baseEntityAlias:"_"+_this.workflowTask.data.workflow.data.workflowObject},_this.metadataService.setPropertiesList(value,_this.workflowTask.data.workflow.data.workflowObject),_this.filterPropertiesList[_this.workflowTask.data.workflow.data.workflowObject]=_this.metadataService.getPropertiesListByBaseEntityAlias(_this.workflowTask.data.workflow.data.workflowObject),_this.metadataService.formatPropertiesList(_this.filterPropertiesList[_this.workflowTask.data.workflow.data.workflowObject],_this.workflowTask.data.workflow.data.workflowObject),_this.workflowTaskActions.selectedTaskAction=workflowTaskAction,_this.emailTemplateSelected=_this.workflowTaskActions.selectedTaskAction.data.emailTemplate?_this.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateName:"",_this.emailTemplateCollectionConfig=_this.collectionConfigService.newCollectionConfig("EmailTemplate"),_this.emailTemplateCollectionConfig.setDisplayProperties("emailTemplateID,emailTemplateName"),_this.emailTemplateCollectionConfig.addFilter("emailTemplateObject",_this.workflowTask.data.workflow.data.workflowObject),_this.printTemplateSelected=_this.workflowTaskActions.selectedTaskAction.data.printTemplate?_this.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateName:"",_this.printTemplateCollectionConfig=_this.collectionConfigService.newCollectionConfig("PrintTemplate"),_this.printTemplateCollectionConfig.setDisplayProperties("printTemplateID,printTemplateName"),_this.printTemplateCollectionConfig.addFilter("printTemplateObject",_this.workflowTask.data.workflow.data.workflowObject)})},this.deleteEntity=function(entity){_this.removeWorkflowTaskAction(entity)},this.removeWorkflowTaskAction=function(workflowTaskAction){workflowTaskAction.$$delete().then(function(){workflowTaskAction===_this.workflowTaskActions.selectedTaskAction&&delete _this.workflowTaskActions.selectedTaskAction,_this.$log.debug("removeWorkflowTaskAction"),_this.$log.debug(workflowTaskAction),_this.workflowTaskActions.splice(workflowTaskAction.$$actionIndex,1);for(var i in _this.workflowTaskActions)_this.workflowTaskActions[i].$$actionIndex=i})},this.searchProcess={name:""},this.showProcessOptions=!1,this.processOptions=[],this.getProcessOptions=function(objectName){if(!_this.processOptions.length){_this.$hibachi.getProcessOptions(objectName).then(function(value){_this.processOptions=value.data})}_this.showProcessOptions=!0},this.selectProcess=function(processOption){_this.workflowTaskActions.selectedTaskAction.data.processMethod=processOption.value,_this.searchProcess.name=processOption.value,_this.workflowTaskActions.selectedTaskAction.forms.selectedTaskAction.$setDirty(),_this.showProcessOptions=!1},this.selectEmailTemplate=function(item){if(angular.isDefined(_this.workflowTaskActions.selectedTaskAction.data.emailTemplate))_this.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateID=item.emailTemplateID;else{var templateEmail=_this.$hibachi.newEmailTemplate();templateEmail.data.emailTemplateID=item.emailTemplateID,_this.workflowTaskActions.selectedTaskAction.$$setEmailTemplate(templateEmail)}},this.selectPrintTemplate=function(item){if(angular.isDefined(_this.workflowTaskActions.selectedTaskAction.data.printTemplate))_this.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateID=item.printTemplateID;else{var templatePrint=_this.$hibachi.newPrintTemplate();templatePrint.data.printTemplateID=item.printTemplateID,_this.workflowTaskActions.selectedTaskAction.$$setPrintTemplate(templatePrint)}}}return SWWorkflowTaskActionsController}(),SWWorkflowTaskActions=function(){function SWWorkflowTaskActions(workflowPartialsPath,hibachiPathBuilder){this.workflowPartialsPath=workflowPartialsPath,this.hibachiPathBuilder=hibachiPathBuilder,this.restrict="AE",this.scope={},this.bindToController={workflowTask:"="},this.controller=SWWorkflowTaskActionsController,this.controllerAs="swWorkflowTaskActions",this.link=function($scope,element,attrs){},this.templateUrl=this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath)+"workflowtaskactions.html"}return SWWorkflowTaskActions.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowTaskActions(workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowTaskActions.$inject=["workflowPartialsPath","hibachiPathBuilder"],SWWorkflowTaskActions}();exports.SWWorkflowTaskActions=SWWorkflowTaskActions},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTasks=function(){function SWWorkflowTasks($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder){return{restrict:"A",scope:{workflow:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowtasks.html",link:function(scope,element,attrs){function logger(context,message){$log.debug("SwWorkflowTasks :"+context+" : "+message)}scope.workflowPartialsPath=hibachiPathBuilder.buildPartialsPath(workflowPartialsPath),scope.propertiesList={},scope.getWorkflowTasks=function(){if(logger("getWorkflowTasks","Retrieving items"),logger("getWorkflowTasks","Workflow Tasks"),$log.debug(scope.workflowTasks),!scope.workflow.$$isPersisted())return scope.workflow.data.workflowTasks=[],void(scope.workflowTasks=scope.workflow.data.workflowTasks);if(angular.isUndefined(scope.workflow.data.workflowTasks)){scope.workflow.$$getWorkflowTasks().then(function(){scope.workflowTasks=scope.workflow.data.workflowTasks})}else logger("getWorkflowTasks","Retrieving cached Items"),scope.workflowTasks=scope.workflow.data.workflowTasks;angular.isUndefined(scope.workflow.data.workflowTasks)&&(logger("getWorkflowTasks","workflowTasks is undefined."),scope.workflow.data.workflowTasks=[],scope.workflowTasks=scope.workflow.data.workflowTasks)},scope.getWorkflowTasks(),scope.setHidden=function(task){!angular.isObject(task)||angular.isUndefined(task.hidden)?task.hidden=!1:(logger("setHidden()","Setting Hide Value To "+!task.hidden),task.hidden=!task.hidden)},scope.addWorkflowTask=function(){var newWorkflowTask=scope.workflow.$$addWorkflowTask();logger("var newWorkflowTask",newWorkflowTask),scope.selectWorkflowTask(newWorkflowTask)},scope.$watch("workflowTasks.selectedTask.data.workflow.data.workflowObject",function(newValue,oldValue){logger("scope.$watch","Change Detected "+newValue+" from "+oldValue),newValue!==oldValue&&angular.isDefined(scope.workflowTasks.selectedTask)&&(logger("scope.$watch","Change to "+newValue),scope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityAlias="_"+newValue.charAt(0).toLowerCase()+newValue.slice(1),scope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityName=newValue)}),scope.saveWorkflowTask=function(task,context){scope.workflowTasks.selectedTask.$$save().then(function(res){scope.done=!0,delete scope.workflowTasks.selectedTask,"add"===context?(scope.addWorkflowTask(),scope.finished=!0):"finish"==context&&(scope.finished=!1),delete scope.workflow.data.workflowTasks,scope.getWorkflowTasks(),scope.workflow.$$save()},function(err){})},scope.selectWorkflowTask=function(workflowTask){scope.done=!1,$log.debug(workflowTask),scope.finished=!1,scope.workflowTasks.selectedTask=void 0,$hibachi.getFilterPropertiesByBaseEntityName(scope.workflow.data.workflowObject,!0).then(function(value){scope.filterPropertiesList={baseEntityName:scope.workflow.data.workflowObject,baseEntityAlias:"_"+scope.workflow.data.workflowObject},metadataService.setPropertiesList(value,scope.workflow.data.workflowObject),scope.filterPropertiesList[scope.workflow.data.workflowObject]=metadataService.getPropertiesListByBaseEntityAlias(scope.workflow.data.workflowObject),metadataService.formatPropertiesList(scope.filterPropertiesList[scope.workflow.data.workflowObject],scope.workflow.data.workflowObject),scope.workflowTasks.selectedTask=workflowTask})},scope.softRemoveTask=function(workflowTask){workflowTask===scope.workflowTasks.selectedTask&&delete scope.workflowTasks.selectedTask,scope.removeIndexFromTasks(workflowTask.$$index),scope.reindexTaskList()},scope.hardRemoveTask=function(workflowTask){workflowTask.$$delete().then(function(){workflowTask===scope.workflowTasks.selectedTask&&delete scope.workflowTasks.selectedTask,scope.removeIndexFromTasks(workflowTask.$$index),scope.reindexTaskList()})},scope.deleteEntity=function(entity){scope.hardRemoveTask(entity)},scope.reindexTaskList=function(){for(var i in scope.workflowTasks)logger("ReIndexing the list",i),scope.workflowTasks[i].$$index=i},scope.removeIndexFromTasks=function(index){logger("RemoveIndexFromTasks",index),scope.workflowTasks.splice(index,1)}}}}return SWWorkflowTasks.Factory=function(){var directive=function($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder){return new SWWorkflowTasks($log,$hibachi,metadataService,workflowPartialsPath,hibachiPathBuilder)};return directive.$inject=["$log","$hibachi","metadataService","workflowPartialsPath","hibachiPathBuilder"],directive},SWWorkflowTasks}();exports.SWWorkflowTasks=SWWorkflowTasks},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTrigger=function(){function SWWorkflowTrigger($http,$hibachi,alertService,metadataService,workflowPartialsPath,hibachiPathBuilder,utilityService){return{restrict:"A",replace:!0,scope:{workflowTrigger:"=",workflowTriggers:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowtrigger.html",link:function(scope,element,attrs){scope.selectWorkflowTrigger=function(workflowTrigger){scope.done=!1,scope.finished=!1,scope.workflowTriggers.selectedTrigger=void 0,$hibachi.getFilterPropertiesByBaseEntityName(scope.workflowTrigger.data.workflow.data.workflowObject,!0).then(function(value){scope.filterPropertiesList={baseEntityName:scope.workflowTrigger.data.workflow.data.workflowObject,baseEntityAlias:"_"+scope.workflowTrigger.data.workflow.data.workflowObject},metadataService.setPropertiesList(value,scope.workflowTrigger.data.workflow.data.workflowObject),scope.filterPropertiesList[scope.workflowTrigger.data.workflow.data.workflowObject]=metadataService.getPropertiesListByBaseEntityAlias(scope.workflowTrigger.data.workflow.data.workflowObject),metadataService.formatPropertiesList(scope.filterPropertiesList[scope.workflowTrigger.data.workflow.data.workflowObject],scope.workflowTrigger.data.workflow.data.workflowObject),scope.workflowTriggers.selectedTrigger=workflowTrigger})},scope.executingTrigger=!1,scope.executeWorkflowTrigger=function(workflowTrigger){if(!scope.executingTrigger){if(!workflowTrigger.data.workflow.data.workflowTasks||!workflowTrigger.data.workflow.data.workflowTasks.length){var alert=alertService.newAlert();return alert.msg="You don't have any Task yet!",alert.type="error",alert.fade=!0,void alertService.addAlert(alert)}scope.executingTrigger=!0;var appConfig=$hibachi.getConfig(),urlString=appConfig.baseURL+"/index.cfm/?"+appConfig.action+"=api:workflow.executeScheduleWorkflowTrigger&workflowTriggerID="+workflowTrigger.data.workflowTriggerID+"&x="+utilityService.createID();$http.get(urlString).finally(function(){scope.executingTrigger=!1;var alert=alertService.newAlert();alert.msg="Task Triggered Successfully. Check History for Status",alert.type="success",alert.fade=!0,alertService.addAlert(alert)})}},scope.deleteEntity=function(entity,index){scope.deleteTrigger(entity,index)},scope.deleteTrigger=function(workflowTrigger,index){$hibachi.saveEntity("WorkflowTrigger",workflowTrigger.data.workflowTriggerID,{},"Delete").then(function(value){scope.workflowTriggers.splice(index,1)})}}}}return SWWorkflowTrigger.Factory=function(){var directive=function($http,$hibachi,alertService,metadataService,workflowPartialsPath,hibachiPathBuilder,utilityService){return new SWWorkflowTrigger($http,$hibachi,alertService,metadataService,workflowPartialsPath,hibachiPathBuilder,utilityService)};return directive.$inject=["$http","$hibachi","alertService","metadataService","workflowPartialsPath","hibachiPathBuilder","utilityService"],directive},SWWorkflowTrigger}();exports.SWWorkflowTrigger=SWWorkflowTrigger},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTriggerHistory=function(){function SWWorkflowTriggerHistory(workflowPartialsPath,hibachiPathBuilder,$rootScope,collectionConfigService){return{restrict:"A",scope:{workflow:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowtriggerhistory.html",link:function(scope,element,attrs){$rootScope.workflowID=scope.workflow.data.workflowID,scope.workflowTriggerHistoryCollection=collectionConfigService.newCollectionConfig("WorkflowTriggerHistory"),scope.workflowTriggerHistoryCollection.addFilter("workflowTrigger.workflow.workflowID",$rootScope.workflowID,"="),scope.workflowTriggerHistoryCollection.addDisplayProperty("workflowTrigger.triggerType"),scope.workflowTriggerHistoryCollection.addDisplayProperty("response"),scope.workflowTriggerHistoryCollection.addDisplayProperty("endTime"),scope.workflowTriggerHistoryCollection.addDisplayProperty("startTime"),scope.workflowTriggerHistoryCollection.addDisplayProperty("successFlag")}}}return SWWorkflowTriggerHistory.Factory=function(){var directive=function(workflowPartialsPath,hibachiPathBuilder,$rootScope,collectionConfigService){return new SWWorkflowTriggerHistory(workflowPartialsPath,hibachiPathBuilder,$rootScope,collectionConfigService)};return directive.$inject=["workflowPartialsPath","hibachiPathBuilder","$rootScope","collectionConfigService"],directive},SWWorkflowTriggerHistory}();exports.SWWorkflowTriggerHistory=SWWorkflowTriggerHistory},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var SWWorkflowTriggers=function(){function SWWorkflowTriggers($hibachi,workflowPartialsPath,formService,observerService,hibachiPathBuilder,collectionConfigService,scheduleService,dialogService){return{restrict:"E",scope:{workflow:"="},templateUrl:hibachiPathBuilder.buildPartialsPath(workflowPartialsPath)+"workflowtriggers.html",link:function(scope,element,attrs,formController){scope.schedule={},scope.$watch("workflowTriggers.selectedTrigger",function(newValue,oldValue){void 0!==newValue&&newValue!==oldValue&&("Schedule"==newValue.data.triggerType?(angular.isDefined(newValue.data.schedule)&&(scope.schedule.selectedName=newValue.data.schedule.data.scheduleName,scope.selectSchedule(newValue.data.schedule.data)),angular.isDefined(newValue.data.scheduleCollection)&&(scope.selectedCollection=newValue.data.scheduleCollection.data.collectionName)):scope.searchEvent.name=scope.workflowTriggers.selectedTrigger.triggerEventTitle)}),scope.collectionCollectionConfig=collectionConfigService.newCollectionConfig("Collection"),scope.collectionCollectionConfig.setDisplayProperties("collectionID,collectionName"),scope.collectionCollectionConfig.addFilter("collectionObject",scope.workflow.data.workflowObject),observerService.attach(function(item){scope.collectionCollectionConfig.clearFilters(),scope.collectionCollectionConfig.addFilter("collectionObject",item.value),scope.eventOptions=[]},"WorkflowWorkflowObjectOnChange"),scope.scheduleCollectionConfig=collectionConfigService.newCollectionConfig("Schedule"),scope.scheduleCollectionConfig.setDisplayProperties("scheduleID,scheduleName,daysOfMonthToRun,daysOfWeekToRun,recuringType,frequencyStartTime,frequencyEndTime,frequencyInterval"),scope.daysOfweek=[],scope.daysOfMonth=[],scope.$id="swWorkflowTriggers",scope.getWorkflowTriggers=function(){if(!scope.workflow.$$isPersisted())return scope.workflow.data.workflowTriggers=[],void(scope.workflowTriggers=scope.workflow.data.workflowTriggers);if(angular.isUndefined(scope.workflow.data.workflowTriggers)){scope.workflow.$$getWorkflowTriggers().then(function(){scope.workflowTriggers=scope.workflow.data.workflowTriggers,angular.isUndefined(scope.workflow.data.workflowTriggers)&&(scope.workflow.data.workflowTriggers=[],scope.workflowTriggers=scope.workflow.data.workflowTriggers),angular.forEach(scope.workflowTriggers,function(workflowTrigger,key){"Schedule"===workflowTrigger.data.triggerType&&(workflowTrigger.$$getSchedule(),workflowTrigger.$$getScheduleCollection())})})}else scope.workflowTriggers=scope.workflow.data.workflowTriggers},scope.getWorkflowTriggers(),scope.showCollections=!1,scope.collections=[],scope.searchEvent={name:""},scope.showEventOptions=!1,scope.eventOptions=[],scope.getEventOptions=function(objectName){if(!scope.eventOptions.length){$hibachi.getEventOptions(objectName).then(function(value){scope.eventOptions=value.data})}scope.showEventOptions=!scope.showEventOptions},scope.saveWorkflowTrigger=function(context){scope.workflowTriggers.selectedTrigger.$$isPersisted()||scope.workflowTriggers.selectedTrigger.$$setWorkflow(scope.workflow),scope.workflowTriggers.selectedTrigger.$$save().then(function(){scope.showEventOptions=!0,scope.searchEvent={name:""},scope.schedule.selectedName="",scope.schedulePreview={},"add"==context?scope.addWorkflowTrigger():"finish"==context&&(scope.workflowTriggers.selectedTrigger=void 0),scope.workflow.$$save()})},scope.closeTrigger=function(){scope.workflowTriggers.selectedTrigger.$$isPersisted()||scope.workflowTriggers.selectedTrigger.$$setWorkflow(),scope.workflowTriggers.selectedTrigger=void 0},scope.selectEvent=function(eventOption){scope.workflowTriggers.selectedTrigger.data.triggerEventTitle=eventOption.name,scope.workflowTriggers.selectedTrigger.data.triggerEvent=eventOption.value,eventOption.entityName==scope.workflow.data.workflowObject?scope.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier="":scope.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier=eventOption.entityName,scope.searchEvent.name=eventOption.name,scope.showEventOptions=!1,observerService.notifyById("pullBindings","WorkflowTriggertriggerEventpullBindings").then(function(){}),observerService.notifyById("pullBindings","WorkflowTriggertriggerEventTitlepullBindings").then(function(){})},scope.selectCollection=function(collection){scope.workflowTriggers.selectedTrigger.data.scheduleCollection=collection,scope.showCollections=!1},scope.removeWorkflowTrigger=function(workflowTrigger){workflowTrigger===scope.workflowTriggers.selectedTrigger&&delete scope.workflowTriggers.selectedTrigger,scope.workflowTriggers.splice(workflowTrigger.$$index,1)},scope.setAsEvent=function(workflowTrigger){workflowTrigger.$$isPersisted()||(workflowTrigger.data.saveTriggerHistoryFlag=0)},scope.setAsSchedule=function(workflowTrigger){workflowTrigger.$$isPersisted()||(workflowTrigger.data.saveTriggerHistoryFlag=1)},scope.addWorkflowTrigger=function(){var newWorkflowTrigger=$hibachi.newWorkflowTrigger();scope.workflowTriggers.selectedTrigger=newWorkflowTrigger},scope.addNewSchedule=function(){scope.createSchedule=!0,scope.scheduleEntity=$hibachi.newSchedule()},scope.saveSchedule=function(){"weekly"==scope.scheduleEntity.data.recuringType?scope.scheduleEntity.data.daysOfWeekToRun=scope.daysOfweek.filter(Number).join():"monthly"==scope.scheduleEntity.data.recuringType&&(scope.scheduleEntity.data.daysOfMonthToRun=scope.daysOfMonth.filter(Number).join()),scope.scheduleEntity.$$save().then(function(res){scope.schedule.selectedName=angular.copy(scope.scheduleEntity.data.scheduleName),scope.selectSchedule(angular.copy(scope.scheduleEntity.data)),formService.resetForm(scope.scheduleEntity.forms.scheduleForm),scope.createSchedule=!1},function(){})},scope.selectCollection=function(item){if(void 0===item)return void scope.workflowTriggers.selectedTrigger.$$setScheduleCollection();if(angular.isDefined(scope.workflowTriggers.selectedTrigger.data.scheduleCollection))scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID=item.collectionID,scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionName=item.collectionName;else{var _collection=$hibachi.newCollection();_collection.data.collectionID=item.collectionID,_collection.data.collectionName=item.collectionName,scope.workflowTriggers.selectedTrigger.$$setScheduleCollection(_collection)}},scope.viewCollection=function(){angular.isDefined(scope.workflowTriggers.selectedTrigger.data.scheduleCollection)&&dialogService.addPageDialog("org/Hibachi/client/src/collection/components/criteriacreatecollection",{entityName:"Collection",entityId:scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID,readOnly:!0})},scope.selectSchedule=function(item){if(void 0===item)return scope.schedulePreview={},void scope.workflowTriggers.selectedTrigger.$$setSchedule();if(scope.schedulePreview=scheduleService.buildSchedulePreview(item,6),angular.isDefined(scope.workflowTriggers.selectedTrigger.data.schedule))scope.workflowTriggers.selectedTrigger.data.schedule.data.scheduleID=item.scheduleID,scope.workflowTriggers.selectedTrigger.data.schedule.data.scheduleName=item.scheduleName;else{var _schedule=$hibachi.newSchedule();_schedule.data.scheduleID=item.scheduleID,_schedule.data.scheduleName=item.scheduleName,scope.workflowTriggers.selectedTrigger.$$setSchedule(_schedule)}}}}}return SWWorkflowTriggers.Factory=function(){var directive=function($hibachi,workflowPartialsPath,formService,observerService,hibachiPathBuilder,collectionConfigService,scheduleService,dialogService){return new SWWorkflowTriggers($hibachi,workflowPartialsPath,formService,observerService,hibachiPathBuilder,collectionConfigService,scheduleService,dialogService)};return directive.$inject=["$hibachi","workflowPartialsPath","formService","observerService","hibachiPathBuilder","collectionConfigService","scheduleService","dialogService"],directive},SWWorkflowTriggers}();exports.SWWorkflowTriggers=SWWorkflowTriggers},function(module,exports,__webpack_require__){"use strict";var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,"__esModule",{value:!0});var baseentityservice_1=__webpack_require__(14),ScheduleService=function(_super){function ScheduleService($injector,$hibachi,utilityService){var _this=_super.call(this,$injector,$hibachi,utilityService,"Schedule")||this;return _this.$injector=$injector,_this.$hibachi=$hibachi,_this.utilityService=utilityService,_this.schedulePreview={},_this.clearSchedulePreview=function(){_this.schedulePreview={}},_this.addSchedulePreviewItem=function(cdate,longMonthName){void 0===longMonthName&&(longMonthName=!0);var weekday=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],month=["January","February","March","April","May","June","July","August","September","October","November","December"],monthShort=["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"],currentDate=cdate.getMonth()+1+"-"+cdate.getDate()+"-"+cdate.getFullYear();void 0===_this.schedulePreview[currentDate]&&(_this.schedulePreview[currentDate]={day:cdate.getDate(),month:longMonthName?month[cdate.getMonth()]:monthShort[cdate.getMonth()],year:cdate.getFullYear(),weekday:weekday[cdate.getDay()],times:[]}),_this.schedulePreview[currentDate].times.push(cdate.toLocaleTimeString())},_this.buildSchedulePreview=function(scheduleObject,totalOfPreviews){void 0===totalOfPreviews&&(totalOfPreviews=10),_this.clearSchedulePreview();var startTime=new Date(Date.parse(scheduleObject.frequencyStartTime)),endTime=!!scheduleObject.frequencyEndTime.trim()&&new Date(Date.parse(scheduleObject.frequencyEndTime)),now=new Date,startPoint=new Date;startPoint.setHours(startTime.getHours()),startPoint.setMinutes(startTime.getMinutes()),startPoint.setSeconds(startTime.getSeconds());var daysToRun=[];if("weekly"==scheduleObject.recuringType&&(daysToRun=scheduleObject.daysOfWeekToRun.toString().split(","),!daysToRun.length||""==scheduleObject.daysOfWeekToRun.toString().trim()))return _this.schedulePreview;if("monthly"==scheduleObject.recuringType&&(daysToRun=scheduleObject.daysOfMonthToRun.toString().split(","),!daysToRun.length||!scheduleObject.daysOfWeekToRun||""==scheduleObject.daysOfWeekToRun.toString().trim()))return _this.schedulePreview;for(var datesAdded=0,i=0;!(datesAdded>=totalOfPreviews||i>=500);i++){var timeToadd=scheduleObject.frequencyInterval&&scheduleObject.frequencyInterval.toString().trim()?scheduleObject.frequencyInterval*i*6e4:24*i*60*60*1e3,currentDatetime=new Date(startPoint.getTime()+timeToadd);if(!(currentDatetime<now)){if("weekly"==scheduleObject.recuringType){if(-1==daysToRun.indexOf((currentDatetime.getDay()+1).toString()))continue}else if("monthly"==scheduleObject.recuringType&&-1==daysToRun.indexOf(currentDatetime.getDate().toString()))continue;endTime?_this.utilityService.minutesOfDay(startTime)<=_this.utilityService.minutesOfDay(currentDatetime)&&_this.utilityService.minutesOfDay(endTime)>=_this.utilityService.minutesOfDay(currentDatetime)&&(_this.addSchedulePreviewItem(currentDatetime),datesAdded++):(_this.addSchedulePreviewItem(currentDatetime),datesAdded++)}}return _this.schedulePreview},_this}return __extends(ScheduleService,_super),ScheduleService}(baseentityservice_1.BaseEntityService);exports.ScheduleService=ScheduleService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var WorkflowCondition=function(){function WorkflowCondition(){this.propertyIdentifer="",this.comparisonOperator="",this.value="",this.displayPropertyIdentifier="",this.$$disabled=!1,this.$$isClosed=!0,this.$$isNew=!0}return WorkflowCondition}();exports.WorkflowCondition=WorkflowCondition;var WorkflowConditionGroupItem=function(){function WorkflowConditionGroupItem(){this.workflowConditionGroup=[]}return WorkflowConditionGroupItem}();exports.WorkflowConditionGroupItem=WorkflowConditionGroupItem;var WorkflowConditionService=function(){function WorkflowConditionService($log,$hibachi,alertService){var _this=this;this.$log=$log,this.newWorkflowCondition=function(){return new WorkflowCondition},this.addWorkflowCondition=function(groupItem,condition){_this.$log.debug("addWorkflowCondition"),_this.$log.debug(groupItem),_this.$log.debug(condition),groupItem.length>=1&&(condition.logicalOperator="AND"),groupItem.push(condition)},this.newWorkflowConditionGroupItem=function(){return new WorkflowConditionGroupItem},this.addWorkflowConditionGroupItem=function(group,groupItem){group.push(groupItem)}}return WorkflowConditionService.$inject=["$log","$hibachi","alertService"],WorkflowConditionService}();exports.WorkflowConditionService=WorkflowConditionService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var workflowconditionservice_1=__webpack_require__(684),scheduleservice_1=__webpack_require__(683),swadmincreatesuperuser_1=__webpack_require__(671),swworkflowbasic_1=__webpack_require__(673),swworkflowcondition_1=__webpack_require__(674),swworkflowconditiongroupitem_1=__webpack_require__(675),swworkflowconditiongroups_1=__webpack_require__(676),swworkflowtask_1=__webpack_require__(677),swworkflowtaskactions_1=__webpack_require__(678),swworkflowtasks_1=__webpack_require__(679),swworkflowtrigger_1=__webpack_require__(680),swworkflowtriggers_1=__webpack_require__(682),swworkflowtriggerhistory_1=__webpack_require__(681),swschedulepreview_1=__webpack_require__(672),workflowmodule=angular.module("hibachi.workflow",["hibachi.collection"]).config(function(){}).constant("workflowPartialsPath","workflow/components/").service("workflowConditionService",workflowconditionservice_1.WorkflowConditionService).service("scheduleService",scheduleservice_1.ScheduleService).directive("swAdminCreateSuperUser",swadmincreatesuperuser_1.SWAdminCreateSuperUser.Factory()).directive("swWorkflowBasic",swworkflowbasic_1.SWWorkflowBasic.Factory()).directive("swWorkflowCondition",swworkflowcondition_1.SWWorkflowCondition.Factory()).directive("swWorkflowConditionGroupItem",swworkflowconditiongroupitem_1.SWWorkflowConditionGroupItem.Factory()).directive("swWorkflowConditionGroups",swworkflowconditiongroups_1.SWWorkflowConditionGroups.Factory()).directive("swWorkflowTask",swworkflowtask_1.SWWorkflowTask.Factory()).directive("swWorkflowTaskActions",swworkflowtaskactions_1.SWWorkflowTaskActions.Factory()).directive("swWorkflowTasks",swworkflowtasks_1.SWWorkflowTasks.Factory()).directive("swWorkflowTrigger",swworkflowtrigger_1.SWWorkflowTrigger.Factory()).directive("swWorkflowTriggers",swworkflowtriggers_1.SWWorkflowTriggers.Factory()).directive("swWorkflowTriggerHistory",swworkflowtriggerhistory_1.SWWorkflowTriggerHistory.Factory()).directive("swSchedulePreview",swschedulepreview_1.SWSchedulePreview.Factory());exports.workflowmodule=workflowmodule},function(module,exports,__webpack_require__){module.exports=__webpack_require__(173)}],[686]);
>>>>>>> 35cd95e2dc9999cfe6b3ec0b9cbe29b7e38938e3
=======
var hibachi =
webpackJsonphibachi([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
var toSubscriber_1 = __webpack_require__(483);
var observable_1 = __webpack_require__(36);
var pipe_1 = __webpack_require__(58);
/**
 * A representation of any set of values over any amount of time. This is the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    /**
     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.
     *
     * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>
     *
     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It
     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is
     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling
     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often
     * thought.
     *
     * Apart from starting the execution of an Observable, this method allows you to listen for values
     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two
     * following ways.
     *
     * The first way is creating an object that implements {@link Observer} interface. It should have methods
     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create
     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do
     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also
     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't
     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will
     * be left uncaught.
     *
     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.
     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent
     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,
     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,
     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes
     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.
     *
     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.
     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean
     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback
     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.
     *
     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.
     * It is an Observable itself that decides when these functions will be called. For example {@link of}
     * by default emits all its values synchronously. Always check documentation for how given Observable
     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.
     *
     * @example <caption>Subscribe with an Observer</caption>
     * const sumObserver = {
     *   sum: 0,
     *   next(value) {
     *     console.log('Adding: ' + value);
     *     this.sum = this.sum + value;
     *   },
     *   error() { // We actually could just remove this method,
     *   },        // since we do not really care about errors right now.
     *   complete() {
     *     console.log('Sum equals: ' + this.sum);
     *   }
     * };
     *
     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.
     * .subscribe(sumObserver);
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Subscribe with functions</caption>
     * let sum = 0;
     *
     * Rx.Observable.of(1, 2, 3)
     * .subscribe(
     *   function(value) {
     *     console.log('Adding: ' + value);
     *     sum = sum + value;
     *   },
     *   undefined,
     *   function() {
     *     console.log('Sum equals: ' + sum);
     *   }
     * );
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Cancel a subscription</caption>
     * const subscription = Rx.Observable.interval(1000).subscribe(
     *   num => console.log(num),
     *   undefined,
     *   () => console.log('completed!') // Will not be called, even
     * );                                // when cancelling subscription
     *
     *
     * setTimeout(() => {
     *   subscription.unsubscribe();
     *   console.log('unsubscribed!');
     * }, 2500);
     *
     * // Logs:
     * // 0 after 1s
     * // 1 after 2s
     * // "unsubscribed!" after 2.5s
     *
     *
     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,
     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed
     *  Observable.
     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,
     *  the error will be thrown as unhandled.
     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.
     * @return {ISubscription} a subscription reference to the registered handlers
     * @method subscribe
     */
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        if (operator) {
            operator.call(sink, this.source);
        }
        else {
            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
        }
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
            sink.error(err);
        }
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            // Must be declared in a separate statement to avoid a RefernceError when
            // accessing subscription below in the closure due to Temporal Dead Zone.
            var subscription;
            subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.observable] = function () {
        return this;
    };
    /* tslint:enable:max-line-length */
    /**
     * Used to stitch together functional operators into a chain.
     * @method pipe
     * @return {Observable} the Observable result of all of the operators having
     * been called in the order they were passed in.
     *
     * @example
     *
     * import { map, filter, scan } from 'rxjs/operators';
     *
     * Rx.Observable.interval(1000)
     *   .pipe(
     *     filter(x => x % 2 === 0),
     *     map(x => x + x),
     *     scan((acc, x) => acc + x)
     *   )
     *   .subscribe(x => console.log(x))
     */
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i - 0] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return pipe_1.pipeFromArray(operations)(this);
    };
    /* tslint:enable:max-line-length */
    Observable.prototype.toPromise = function (PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;
//# sourceMappingURL=Observable.js.map

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(41);
var Subscription_1 = __webpack_require__(5);
var Observer_1 = __webpack_require__(66);
var rxSubscriber_1 = __webpack_require__(37);
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    // HACK(benlesh): To resolve an issue where Node users may have multiple
                    // copies of rxjs in their node_modules directory.
                    if (isTrustedSubscriber(destinationOrNext)) {
                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();
                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;
                        this.destination = trustedSubscriber;
                        trustedSubscriber.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        this._parent = null;
        this._parents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parent = _parent;
        this._parents = _parents;
        return this;
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        _super.call(this);
        this._parentSubscriber = _parentSubscriber;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== Observer_1.empty) {
                context = Object.create(observerOrNext);
                if (isFunction_1.isFunction(context.unsubscribe)) {
                    this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = this.unsubscribe.bind(this);
            }
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._error) {
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parentSubscriber.syncErrorValue = err;
                _parentSubscriber.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));
function isTrustedSubscriber(obj) {
    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]);
}
//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var OuterSubscriber = (function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
        _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(Subscriber_1.Subscriber));
exports.OuterSubscriber = OuterSubscriber;
//# sourceMappingURL=OuterSubscriber.js.map

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
var isArrayLike_1 = __webpack_require__(163);
var isPromise_1 = __webpack_require__(165);
var isObject_1 = __webpack_require__(164);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(24);
var InnerSubscriber_1 = __webpack_require__(190);
var observable_1 = __webpack_require__(36);
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.closed) {
        return null;
    }
    if (result instanceof Observable_1.Observable) {
        if (result._isScalar) {
            destination.next(result.value);
            destination.complete();
            return null;
        }
        else {
            destination.syncErrorThrowable = true;
            return result.subscribe(destination);
        }
    }
    else if (isArrayLike_1.isArrayLike(result)) {
        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {
            destination.next(result[i]);
        }
        if (!destination.closed) {
            destination.complete();
        }
    }
    else if (isPromise_1.isPromise(result)) {
        result.then(function (value) {
            if (!destination.closed) {
                destination.next(value);
                destination.complete();
            }
        }, function (err) { return destination.error(err); })
            .then(null, function (err) {
            // Escaping the Promise trap: globally throw unhandled errors
            root_1.root.setTimeout(function () { throw err; });
        });
        return destination;
    }
    else if (result && typeof result[iterator_1.iterator] === 'function') {
        var iterator = result[iterator_1.iterator]();
        do {
            var item = iterator.next();
            if (item.done) {
                destination.complete();
                break;
            }
            destination.next(item.value);
            if (destination.closed) {
                break;
            }
        } while (true);
    }
    else if (result && typeof result[observable_1.observable] === 'function') {
        var obs = result[observable_1.observable]();
        if (typeof obs.subscribe !== 'function') {
            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));
        }
        else {
            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
        }
    }
    else {
        var value = isObject_1.isObject(result) ? 'an invalid object' : "'" + result + "'";
        var msg = ("You provided " + value + " where a stream was expected.")
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        destination.error(new TypeError(msg));
    }
    return null;
}
exports.subscribeToResult = subscribeToResult;
//# sourceMappingURL=subscribeToResult.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncAction_1 = __webpack_require__(22);
var AsyncScheduler_1 = __webpack_require__(23);
/**
 *
 * Async Scheduler
 *
 * <span class="informal">Schedule task as if you used setTimeout(task, duration)</span>
 *
 * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript
 * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating
 * in intervals.
 *
 * If you just want to "defer" task, that is to perform it right after currently
 * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),
 * better choice will be the {@link asap} scheduler.
 *
 * @example <caption>Use async scheduler to delay task</caption>
 * const task = () => console.log('it works!');
 *
 * Rx.Scheduler.async.schedule(task, 2000);
 *
 * // After 2 seconds logs:
 * // "it works!"
 *
 *
 * @example <caption>Use async scheduler to repeat task in intervals</caption>
 * function task(state) {
 *   console.log(state);
 *   this.schedule(state + 1, 1000); // `this` references currently executing Action,
 *                                   // which we reschedule with new state and delay
 * }
 *
 * Rx.Scheduler.async.schedule(task, 3000, 0);
 *
 * // Logs:
 * // 0 after 3s
 * // 1 after 4s
 * // 2 after 5s
 * // 3 after 6s
 *
 * @static true
 * @name async
 * @owner Scheduler
 */
exports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
//# sourceMappingURL=async.js.map

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(11);
var isObject_1 = __webpack_require__(164);
var isFunction_1 = __webpack_require__(41);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var UnsubscriptionError_1 = __webpack_require__(160);
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.closed = false;
        this._parent = null;
        this._parents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parent = null;
        this._parents = null;
        // null out _subscriptions first so any child subscriptions that attempt
        // to remove themselves from this subscription will noop
        this._subscriptions = null;
        var index = -1;
        var len = _parents ? _parents.length : 0;
        // if this._parent is null, then so is this._parents, and we
        // don't have to remove ourselves from any parent subscriptions.
        while (_parent) {
            _parent.remove(this);
            // if this._parents is null or index >= len,
            // then _parent is set to null, and the loop exits
            _parent = ++index < len && _parents[index] || null;
        }
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?
                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            index = -1;
            len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === Subscription.EMPTY)) {
            return Subscription.EMPTY;
        }
        if (teardown === this) {
            return this;
        }
        var subscription = teardown;
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (typeof subscription._addParent !== 'function' /* quack quack */) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default:
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        var subscriptions = this._subscriptions || (this._subscriptions = []);
        subscriptions.push(subscription);
        subscription._addParent(this);
        return subscription;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.prototype._addParent = function (parent) {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        if (!_parent || _parent === parent) {
            // If we don't have a parent, or the new parent is the same as the
            // current parent, then set this._parent to the new parent.
            this._parent = parent;
        }
        else if (!_parents) {
            // If there's already one parent, but not multiple, allocate an Array to
            // store the rest of the parent Subscriptions.
            this._parents = [parent];
        }
        else if (_parents.indexOf(parent) === -1) {
            // Only add the new parent to the _parents list if it's not already there.
            _parents.push(parent);
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;
function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(5);
var ObjectUnsubscribedError_1 = __webpack_require__(39);
var SubjectSubscription_1 = __webpack_require__(67);
var rxSubscriber_1 = __webpack_require__(37);
/**
 * @class SubjectSubscriber<T>
 */
var SubjectSubscriber = (function (_super) {
    __extends(SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        _super.call(this, destination);
        this.destination = destination;
    }
    return SubjectSubscriber;
}(Subscriber_1.Subscriber));
exports.SubjectSubscriber = SubjectSubscriber;
/**
 * @class Subject<T>
 */
var Subject = (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        _super.call(this);
        this.observers = [];
        this.closed = false;
        this.isStopped = false;
        this.hasError = false;
        this.thrownError = null;
    }
    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    /** @deprecated internal use only */ Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_1.Observable));
exports.Subject = Subject;
/**
 * @class AnonymousSubject<T>
 */
var AnonymousSubject = (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        _super.call(this);
        this.destination = destination;
        this.source = source;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    /** @deprecated internal use only */ AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return Subscription_1.Subscription.EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));
exports.AnonymousSubject = AnonymousSubject;
//# sourceMappingURL=Subject.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };
//# sourceMappingURL=errorObject.js.map

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var errorObject_1 = __webpack_require__(7);
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;
;
//# sourceMappingURL=tryCatch.js.map

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
// CommonJS / Node have global context exposed as "global" variable.
// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake
// the global "global" var for now.
var __window = typeof window !== 'undefined' && window;
var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
    self instanceof WorkerGlobalScope && self;
var __global = typeof global !== 'undefined' && global;
var _root = __window || __global || __self;
exports.root = _root;
// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.
// This is needed when used with angular/tsickle which inserts a goog.module statement.
// Wrap in IIFE
(function () {
    if (!_root) {
        throw new Error('RxJS could not find any global context (window, self, global)');
    }
})();
//# sourceMappingURL=root.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
exports.isScheduler = isScheduler;
//# sourceMappingURL=isScheduler.js.map

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArray.js.map

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(42);
var EmptyObservable_1 = __webpack_require__(13);
var isScheduler_1 = __webpack_require__(10);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayObservable = (function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
        _super.call(this);
        this.array = array;
        this.scheduler = scheduler;
        if (!scheduler && array.length === 1) {
            this._isScalar = true;
            this.value = array[0];
        }
    }
    ArrayObservable.create = function (array, scheduler) {
        return new ArrayObservable(array, scheduler);
    };
    /**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` IScheduler, which means the `next`
     * notifications are sent synchronously, although with a different IScheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */
    ArrayObservable.of = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i - 0] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len > 1) {
            return new ArrayObservable(array, scheduler);
        }
        else if (len === 1) {
            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
        }
        else {
            return new EmptyObservable_1.EmptyObservable(scheduler);
        }
    };
    ArrayObservable.dispatch = function (state) {
        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(array[index]);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        this.schedule(state);
    };
    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var array = this.array;
        var count = array.length;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ArrayObservable.dispatch, 0, {
                array: array, index: index, count: count, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < count && !subscriber.closed; i++) {
                subscriber.next(array[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayObservable;
}(Observable_1.Observable));
exports.ArrayObservable = ArrayObservable;
//# sourceMappingURL=ArrayObservable.js.map

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var EmptyObservable = (function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following to the console:
     * // x is equal to the count on the interval eg(0,1,2,3,...)
     * // x will occur every 1000ms
     * // if x % 2 is equal to 1 print abc
     * // if x % 2 is not equal to 1 nothing will be output
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */
    EmptyObservable.create = function (scheduler) {
        return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (arg) {
        var subscriber = arg.subscriber;
        subscriber.complete();
    };
    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
        }
        else {
            subscriber.complete();
        }
    };
    return EmptyObservable;
}(Observable_1.Observable));
exports.EmptyObservable = EmptyObservable;
//# sourceMappingURL=EmptyObservable.js.map

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var baseobject_1 = __webpack_require__(168);
var Entities = __webpack_require__(574);
var Processes = __webpack_require__(580);
var BaseEntityService = /** @class */ (function (_super) {
    __extends(BaseEntityService, _super);
    //@ngInject
    function BaseEntityService($injector, $hibachi, utilityService, baseObjectName, objectName) {
        var _this = _super.call(this, $injector) || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        _this.baseObjectName = baseObjectName;
        _this.objectName = objectName;
        _this.newEntity = function (baseObjectName, objectName) {
            if (!objectName) {
                objectName = baseObjectName;
            }
            return _this.newObject('Entity', baseObjectName, objectName);
        };
        _this.newProcessObject = function (baseObjectName, objectName) {
            if (!objectName) {
                objectName = baseObjectName;
            }
            return _this.newObject('Process', baseObjectName, objectName);
        };
        _this.newObject = function (type, baseObjectName, objectName) {
            if (!objectName) {
                objectName = baseObjectName;
            }
            var baseObject = _this.$hibachi.getEntityDefinition(baseObjectName);
            if (baseObject) {
                var Barrell = {};
                if (type === 'Entity') {
                    Barrell = Entities;
                }
                else if (type === 'Process') {
                    Barrell = Processes;
                }
                if (Barrell[objectName]) {
                    _this.utilityService.extend(Barrell[objectName], baseObject);
                    var entity = new Barrell[objectName](_this.$injector);
                }
                else {
                    var entity = new baseObject();
                    //throw('need to add '+ objectName+' class');
                }
                return entity;
            }
            else {
                return {};
            }
        };
        _this.utilityService = utilityService;
        _this.$hibachi = $hibachi;
        _this.$injector = $injector;
        if (!_this.objectName) {
            _this.objectName = _this.baseObjectName;
        }
        _this['new' + _this.objectName] = function () {
            return _this.newEntity(_this.baseObjectName, _this.objectName);
        };
        return _this;
    }
    return BaseEntityService;
}(baseobject_1.BaseObject));
exports.BaseEntityService = BaseEntityService;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ConnectableObservable_1 = __webpack_require__(68);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} [selector] - Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} An Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
exports.multicast = multicast;
var MulticastOperator = (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());
exports.MulticastOperator = MulticastOperator;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var hibachiinterceptor_1 = __webpack_require__(591);
//constant
var hibachipathbuilder_1 = __webpack_require__(592);
//services
var cacheservice_1 = __webpack_require__(584);
var publicservice_1 = __webpack_require__(603);
var accountservice_1 = __webpack_require__(583);
var cartservice_1 = __webpack_require__(585);
var draggableservice_1 = __webpack_require__(586);
var utilityservice_1 = __webpack_require__(610);
var selectionservice_1 = __webpack_require__(607);
var observerservice_1 = __webpack_require__(600);
var orderservice_1 = __webpack_require__(602);
var orderpaymentservice_1 = __webpack_require__(601);
var formservice_1 = __webpack_require__(590);
var filterservice_1 = __webpack_require__(589);
var expandableservice_1 = __webpack_require__(588);
var metadataservice_1 = __webpack_require__(599);
var rbkeyservice_1 = __webpack_require__(604);
var typeaheadservice_1 = __webpack_require__(609);
var hibachiservice_1 = __webpack_require__(594);
var historyservice_1 = __webpack_require__(597);
var localstorageservice_1 = __webpack_require__(598);
var hibachiservicedecorator_1 = __webpack_require__(595);
var hibachiscope_1 = __webpack_require__(593);
var requestservice_1 = __webpack_require__(605);
var scopeservice_1 = __webpack_require__(606);
var skuservice_1 = __webpack_require__(608);
var hibachivalidationservice_1 = __webpack_require__(596);
var entityservice_1 = __webpack_require__(587);
//controllers
var globalsearch_1 = __webpack_require__(565);
//filters
var percentage_1 = __webpack_require__(568);
var entityrbkey_1 = __webpack_require__(567);
var swtrim_1 = __webpack_require__(569);
var swunique_1 = __webpack_require__(570);
var datefilter_1 = __webpack_require__(566);
//directives
//  components
var swactioncaller_1 = __webpack_require__(526);
var swtypeaheadsearch_1 = __webpack_require__(563);
var swtypeaheadinputfield_1 = __webpack_require__(560);
var swtypeaheadmultiselect_1 = __webpack_require__(561);
var swtypeaheadsearchlineitem_1 = __webpack_require__(564);
var swtypeaheadremoveselection_1 = __webpack_require__(562);
var swcollectionconfig_1 = __webpack_require__(530);
var swcollectionfilter_1 = __webpack_require__(531);
var swcollectionorderby_1 = __webpack_require__(532);
var swcollectioncolumn_1 = __webpack_require__(529);
var swactioncallerdropdown_1 = __webpack_require__(527);
var swcolumnsorter_1 = __webpack_require__(533);
var swconfirm_1 = __webpack_require__(534);
var swdraggable_1 = __webpack_require__(536);
var swdraggablecontainer_1 = __webpack_require__(537);
var swentityactionbar_1 = __webpack_require__(538);
var swentityactionbarbuttongroup_1 = __webpack_require__(539);
var swexpandablerecord_1 = __webpack_require__(540);
var swexpiringsessionnotifier_1 = __webpack_require__(541);
var swgravatar_1 = __webpack_require__(543);
var swlogin_1 = __webpack_require__(546);
var swmodallauncher_1 = __webpack_require__(547);
var swmodalwindow_1 = __webpack_require__(548);
var swnumbersonly_1 = __webpack_require__(549);
var swloading_1 = __webpack_require__(545);
var swscrolltrigger_1 = __webpack_require__(554);
var swtabgroup_1 = __webpack_require__(558);
var swtabcontent_1 = __webpack_require__(557);
var swtooltip_1 = __webpack_require__(559);
var swrbkey_1 = __webpack_require__(553);
var swoptions_1 = __webpack_require__(550);
var swselection_1 = __webpack_require__(555);
var swclickoutside_1 = __webpack_require__(528);
var swdirective_1 = __webpack_require__(535);
var swexportaction_1 = __webpack_require__(542);
var swhref_1 = __webpack_require__(544);
var swprocesscaller_1 = __webpack_require__(552);
var swsortable_1 = __webpack_require__(556);
var sworderbycontrols_1 = __webpack_require__(551);
var alert_module_1 = __webpack_require__(59);
var dialog_module_1 = __webpack_require__(171);
var coremodule = angular.module('hibachi.core', [
    //Angular Modules
    'ngAnimate',
    'ngRoute',
    'ngSanitize',
    //3rdParty modules
    'ui.bootstrap',
    alert_module_1.alertmodule.name,
    dialog_module_1.dialogmodule.name
])
    .config(['$compileProvider', '$httpProvider', '$logProvider', '$filterProvider', '$provide', 'hibachiPathBuilder', 'appConfig', function ($compileProvider, $httpProvider, $logProvider, $filterProvider, $provide, hibachiPathBuilder, appConfig) {
        hibachiPathBuilder.setBaseURL(appConfig.baseURL);
        hibachiPathBuilder.setBasePartialsPath('/org/Hibachi/client/src/');
        if (!appConfig.debugFlag) {
            appConfig.debugFlag = false;
        }
        $logProvider.debugEnabled(appConfig.debugFlag);
        $filterProvider.register('likeFilter', function () {
            return function (text) {
                if (angular.isDefined(text) && angular.isString(text)) {
                    return text.replace(new RegExp('%', 'g'), '');
                }
            };
        });
        //This filter is used to shorten a string by removing the charecter count that is passed to it and ending it with "..."
        $filterProvider.register('truncate', function () {
            return function (input, chars, breakOnWord) {
                if (isNaN(chars))
                    return input;
                if (chars <= 0)
                    return '';
                if (input && input.length > chars) {
                    input = input.substring(0, chars);
                    if (!breakOnWord) {
                        var lastspace = input.lastIndexOf(' ');
                        //get last space
                        if (lastspace !== -1) {
                            input = input.substr(0, lastspace);
                        }
                    }
                    else {
                        while (input.charAt(input.length - 1) === ' ') {
                            input = input.substr(0, input.length - 1);
                        }
                    }
                    return input + '...';
                }
                return input;
            };
        });
        //This filter is used to shorten long string but unlike "truncate", it removes from the start of the string and prepends "..."
        $filterProvider.register('pretruncate', function () {
            return function (input, chars, breakOnWord) {
                if (isNaN(chars))
                    return input;
                if (chars <= 0)
                    return '';
                if (input && input.length > chars) {
                    input = input.slice('-' + chars);
                    //  input = input.substring(0, chars);
                    if (!breakOnWord) {
                        var lastspace = input.lastIndexOf(' ');
                        //get last space
                        if (lastspace !== -1) {
                            input = input.substr(0, lastspace);
                        }
                    }
                    else {
                        while (input.charAt(input.length - 1) === ' ') {
                            input = input.substr(0, input.length - 1);
                        }
                    }
                    return '...' + input;
                }
                return input;
            };
        });
        hibachiPathBuilder.setBaseURL(appConfig.baseURL);
        hibachiPathBuilder.setBasePartialsPath('/org/Hibachi/client/src/');
        // $provide.decorator('$hibachi',
        $httpProvider.interceptors.push('hibachiInterceptor');
        //Pulls seperate http requests into a single digest cycle.
        $httpProvider.useApplyAsync(true);
    }])
    .run(['$rootScope', '$hibachi', '$route', '$location', function ($rootScope, $hibachi, $route, $location) {
        $rootScope.buildUrl = $hibachi.buildUrl;
        var original = $location.path;
        $location.path = function (path, reload) {
            if (reload === false) {
                var lastRoute = $route.current;
                var un = $rootScope.$on('$locationChangeSuccess', function () {
                    $route.current = lastRoute;
                    un();
                });
            }
            return original.apply($location, [path]);
        };
    }])
    .constant('hibachiPathBuilder', new hibachipathbuilder_1.HibachiPathBuilder())
    .constant('corePartialsPath', 'core/components/')
    //services
    .service('cacheService', cacheservice_1.CacheService)
    .service('publicService', publicservice_1.PublicService)
    .service('utilityService', utilityservice_1.UtilityService)
    .service('selectionService', selectionservice_1.SelectionService)
    .service('observerService', observerservice_1.ObserverService)
    .service('draggableService', draggableservice_1.DraggableService)
    .service('expandableService', expandableservice_1.ExpandableService)
    .service('filterService', filterservice_1.FilterService)
    .service('formService', formservice_1.FormService)
    .service('historyService', historyservice_1.HistoryService)
    .service('metadataService', metadataservice_1.MetaDataService)
    .service('rbkeyService', rbkeyservice_1.RbKeyService)
    .service('typeaheadService', typeaheadservice_1.TypeaheadService)
    .provider('$hibachi', hibachiservice_1.$Hibachi)
    .decorator('$hibachi', hibachiservicedecorator_1.HibachiServiceDecorator)
    .service('hibachiInterceptor', hibachiinterceptor_1.HibachiInterceptor.Factory())
    .service('hibachiScope', hibachiscope_1.HibachiScope)
    .service('scopeService', scopeservice_1.ScopeService)
    .service('skuService', skuservice_1.SkuService)
    .service('localStorageService', localstorageservice_1.LocalStorageService)
    .service('requestService', requestservice_1.RequestService)
    .service('accountService', accountservice_1.AccountService)
    .service('orderService', orderservice_1.OrderService)
    .service('orderPaymentService', orderpaymentservice_1.OrderPaymentService)
    .service('cartService', cartservice_1.CartService)
    .service('hibachiValidationService', hibachivalidationservice_1.HibachiValidationService)
    .service('entityService', entityservice_1.EntityService)
    //controllers
    .controller('globalSearch', globalsearch_1.GlobalSearchController)
    //filters
    .filter('dateFilter', ['$filter', datefilter_1.DateFilter.Factory])
    .filter('percentage', [percentage_1.PercentageFilter.Factory])
    .filter('trim', [swtrim_1.SWTrim.Factory])
    .filter('entityRBKey', ['rbkeyService', entityrbkey_1.EntityRBKey.Factory])
    .filter('swdate', ['$filter', datefilter_1.DateFilter.Factory])
    .filter('unique', [swunique_1.SWUnique.Factory])
    //directives
    .directive('swCollectionConfig', swcollectionconfig_1.SWCollectionConfig.Factory())
    .directive('swCollectionColumn', swcollectioncolumn_1.SWCollectionColumn.Factory())
    .directive('swCollectionFilter', swcollectionfilter_1.SWCollectionFilter.Factory())
    .directive('swCollectionOrderBy', swcollectionorderby_1.SWCollectionOrderBy.Factory())
    .directive('swTypeaheadSearch', swtypeaheadsearch_1.SWTypeaheadSearch.Factory())
    .directive('swTypeaheadInputField', swtypeaheadinputfield_1.SWTypeaheadInputField.Factory())
    .directive('swTypeaheadMultiselect', swtypeaheadmultiselect_1.SWTypeaheadMultiselect.Factory())
    .directive('swTypeaheadSearchLineItem', swtypeaheadsearchlineitem_1.SWTypeaheadSearchLineItem.Factory())
    .directive('swTypeaheadRemoveSelection', swtypeaheadremoveselection_1.SWTypeaheadRemoveSelection.Factory())
    .directive('swActionCaller', swactioncaller_1.SWActionCaller.Factory())
    .directive('swActionCallerDropdown', swactioncallerdropdown_1.SWActionCallerDropdown.Factory())
    .directive('swColumnSorter', swcolumnsorter_1.SWColumnSorter.Factory())
    .directive('swConfirm', swconfirm_1.SWConfirm.Factory())
    .directive('swEntityActionBar', swentityactionbar_1.SWEntityActionBar.Factory())
    .directive('swEntityActionBarButtonGroup', swentityactionbarbuttongroup_1.SWEntityActionBarButtonGroup.Factory())
    .directive('swExpandableRecord', swexpandablerecord_1.SWExpandableRecord.Factory())
    .directive('swExpiringSessionNotifier', swexpiringsessionnotifier_1.SWExpiringSessionNotifier.Factory())
    .directive('swGravatar', swgravatar_1.SWGravatar.Factory())
    .directive('swDraggable', swdraggable_1.SWDraggable.Factory())
    .directive('swDraggableContainer', swdraggablecontainer_1.SWDraggableContainer.Factory())
    .directive('swLogin', swlogin_1.SWLogin.Factory())
    .directive('swModalLauncher', swmodallauncher_1.SWModalLauncher.Factory())
    .directive('swModalWindow', swmodalwindow_1.SWModalWindow.Factory())
    .directive('swNumbersOnly', swnumbersonly_1.SWNumbersOnly.Factory())
    .directive('swLoading', swloading_1.SWLoading.Factory())
    .directive('swScrollTrigger', swscrolltrigger_1.SWScrollTrigger.Factory())
    .directive('swRbkey', swrbkey_1.SWRbKey.Factory())
    .directive('swOptions', swoptions_1.SWOptions.Factory())
    .directive('swSelection', swselection_1.SWSelection.Factory())
    .directive('swTabGroup', swtabgroup_1.SWTabGroup.Factory())
    .directive('swTabContent', swtabcontent_1.SWTabContent.Factory())
    .directive('swTooltip', swtooltip_1.SWTooltip.Factory())
    .directive('swClickOutside', swclickoutside_1.SWClickOutside.Factory())
    .directive('swDirective', swdirective_1.SWDirective.Factory())
    .directive('swExportAction', swexportaction_1.SWExportAction.Factory())
    .directive('swHref', swhref_1.SWHref.Factory())
    .directive('swProcessCaller', swprocesscaller_1.SWProcessCaller.Factory())
    .directive('sw:sortable', swsortable_1.SWSortable.Factory())
    .directive('swOrderByControls', sworderbycontrols_1.SWOrderByControls.Factory());
exports.coremodule = coremodule;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */
var Notification = (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    /**
     * Delivers to the given `observer` the value wrapped by this Notification.
     * @param {Observer} observer
     * @return
     */
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    /**
     * Given some {@link Observer} callbacks, deliver the value represented by the
     * current Notification to the correctly corresponding callback.
     * @param {function(value: T): void} next An Observer `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    /**
     * Takes an Observer or its individual callback functions, and calls `observe`
     * or `do` methods accordingly.
     * @param {Observer|function(value: T): void} nextOrObserver An Observer or
     * the `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    /**
     * Returns a simple Observable that just delivers the notification represented
     * by this Notification instance.
     * @return {any}
     */
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Observable_1.Observable.of(this.value);
            case 'E':
                return Observable_1.Observable.throw(this.error);
            case 'C':
                return Observable_1.Observable.empty();
        }
        throw new Error('unexpected notification kind value');
    };
    /**
     * A shortcut to create a Notification instance of the type `next` from a
     * given value.
     * @param {T} value The `next` value.
     * @return {Notification<T>} The "next" Notification representing the
     * argument.
     */
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    /**
     * A shortcut to create a Notification instance of the type `error` from a
     * given error.
     * @param {any} [err] The `error` error.
     * @return {Notification<T>} The "error" Notification representing the
     * argument.
     */
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    /**
     * A shortcut to create a Notification instance of the type `complete`.
     * @return {Notification<any>} The valueless "complete" Notification.
     */
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());
exports.Notification = Notification;
//# sourceMappingURL=Notification.js.map

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(10);
var of_1 = __webpack_require__(73);
var from_1 = __webpack_require__(72);
var concatAll_1 = __webpack_require__(45);
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from given
 * Observable and then moves on to the next.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * `concat` joins multiple Observables together, by subscribing to them one at a time and
 * merging their results into the output Observable. You can pass either an array of
 * Observables, or put them directly as arguments. Passing an empty array will result
 * in Observable that completes immediately.
 *
 * `concat` will subscribe to first input Observable and emit all its values, without
 * changing or affecting them in any way. When that Observable completes, it will
 * subscribe to then next Observable passed and, again, emit its values. This will be
 * repeated, until the operator runs out of Observables. When last input Observable completes,
 * `concat` will complete as well. At any given moment only one Observable passed to operator
 * emits values. If you would like to emit values from passed Observables concurrently, check out
 * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,
 * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.
 *
 * Note that if some input Observable never completes, `concat` will also never complete
 * and Observables following the one that did not complete will never be subscribed. On the other
 * hand, if some Observable simply completes immediately after it is subscribed, it will be
 * invisible for `concat`, which will just move on to the next Observable.
 *
 * If any Observable in chain errors, instead of passing control to the next Observable,
 * `concat` will error immediately as well. Observables that would be subscribed after
 * the one that emitted error, never will.
 *
 * If you pass to `concat` the same Observable many times, its stream of values
 * will be "replayed" on every subscription, which means you can repeat given Observable
 * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,
 * you can always use {@link repeat}.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 *
 * @example <caption>Concatenate an array of 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 *
 * @example <caption>Concatenate the same Observable to repeat it</caption>
 * const timer = Rx.Observable.interval(1000).take(2);
 *
 * Rx.Observable.concat(timer, timer) // concating the same Observable!
 * .subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('...and it is done!')
 * );
 *
 * // Logs:
 * // 0 after 1s
 * // 1 after 2s
 * // 0 after 3s
 * // 1 after 4s
 * // "...and it is done!" also after 4s
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} input1 An input Observable to concatenate with others.
 * @param {ObservableInput} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {
        return from_1.from(observables[0]);
    }
    return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
exports.map = map;
var MapOperator = (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());
exports.MapOperator = MapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapSubscriber = (function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        _super.call(this, destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    }
    // NOTE: This looks unoptimized, but it's actually purposefully NOT
    // using try/catch optimizations.
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=map.js.map

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return function mergeMapOperatorFunction(source) {
        if (typeof resultSelector === 'number') {
            concurrent = resultSelector;
            resultSelector = null;
        }
        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));
    };
}
exports.mergeMap = mergeMap;
var MergeMapOperator = (function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
}());
exports.MergeMapOperator = MergeMapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapSubscriber = (function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapSubscriber = MergeMapSubscriber;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var scan_1 = __webpack_require__(53);
var takeLast_1 = __webpack_require__(55);
var defaultIfEmpty_1 = __webpack_require__(47);
var pipe_1 = __webpack_require__(58);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return pipe_1.pipe(scan_1.scan(function (acc, value, index) {
            return accumulator(acc, value, index + 1);
        }), takeLast_1.takeLast(1))(source);
    };
}
exports.reduce = reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(9);
var Action_1 = __webpack_require__(464);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        // Always replace the current state with the new state.
        this.state = state;
        // Set the pending flag indicating that this action has been scheduled, or
        // has recursively rescheduled itself.
        this.pending = true;
        var id = this.id;
        var scheduler = this.scheduler;
        //
        // Important implementation note:
        //
        // Actions only execute once by default, unless rescheduled from within the
        // scheduled callback. This allows us to implement single and repeat
        // actions via the same code path, without adding API surface area, as well
        // as mimic traditional recursion but across asynchronous boundaries.
        //
        // However, JS runtimes and timers distinguish between intervals achieved by
        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
        // serial `setTimeout` calls can be individually delayed, which delays
        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
        // guarantee the interval callback will be invoked more precisely to the
        // interval period, regardless of load.
        //
        // Therefore, we use `setInterval` to schedule single and repeat actions.
        // If the action reschedules itself with the same delay, the interval is not
        // canceled. If the action doesn't reschedule, or reschedules with a
        // different delay, the interval will be canceled after scheduled callback
        // execution.
        //
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.delay = delay;
        // If this action has already an async Id, don't request a new one.
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If this action is rescheduled with the same delay time, don't clear the interval id.
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        // Otherwise, if the action's delay time is different from the current delay,
        // or the action has been rescheduled before it's executed, clear the interval id
        return root_1.root.clearInterval(id) && undefined || undefined;
    };
    /**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            // Dequeue if the action didn't reschedule itself. Don't call
            // unsubscribe(), because the action could reschedule later.
            // For example:
            // ```
            // scheduler.schedule(function doWork(counter) {
            //   /* ... I'm a busy worker bee ... */
            //   var originalAction = this;
            //   /* wait 100ms before rescheduling the action */
            //   setTimeout(function () {
            //     originalAction.schedule(counter + 1);
            //   }, 100);
            // }, 1000);
            // ```
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;
//# sourceMappingURL=AsyncAction.js.map

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Scheduler_1 = __webpack_require__(192);
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler() {
        _super.apply(this, arguments);
        this.actions = [];
        /**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */
        this.active = false;
        /**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */
        this.scheduled = undefined;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift()); // exhaust the scheduler queue
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;
//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
function symbolIteratorPonyfill(root) {
    var Symbol = root.Symbol;
    if (typeof Symbol === 'function') {
        if (!Symbol.iterator) {
            Symbol.iterator = Symbol('iterator polyfill');
        }
        return Symbol.iterator;
    }
    else {
        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)
        var Set_1 = root.Set;
        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {
            return '@@iterator';
        }
        var Map_1 = root.Map;
        // required for compatability with es6-shim
        if (Map_1) {
            var keys = Object.getOwnPropertyNames(Map_1.prototype);
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.
                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {
                    return key;
                }
            }
        }
        return '@@iterator';
    }
}
exports.symbolIteratorPonyfill = symbolIteratorPonyfill;
exports.iterator = symbolIteratorPonyfill(root_1.root);
/**
 * @deprecated use iterator instead
 */
exports.$$iterator = exports.iterator;
//# sourceMappingURL=iterator.js.map

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
var ArgumentOutOfRangeError = (function (_super) {
    __extends(ArgumentOutOfRangeError, _super);
    function ArgumentOutOfRangeError() {
        var err = _super.call(this, 'argument out of range');
        this.name = err.name = 'ArgumentOutOfRangeError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ArgumentOutOfRangeError;
}(Error));
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(11);
function isNumeric(val) {
    // parseFloat NaNs numeric-cast false positives (null|true|false|"")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    // adding 1 corrects loss of precision from parseFloat (#15100)
    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
}
exports.isNumeric = isNumeric;
;
//# sourceMappingURL=isNumeric.js.map

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var basetransient_1 = __webpack_require__(60);
var BaseEntity = /** @class */ (function (_super) {
    __extends(BaseEntity, _super);
    function BaseEntity($injector) {
        return _super.call(this, $injector) || this;
    }
    return BaseEntity;
}(basetransient_1.BaseTransient));
exports.BaseEntity = BaseEntity;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(5);
/**
 * @class AsyncSubject<T>
 */
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject() {
        _super.apply(this, arguments);
        this.value = null;
        this.hasNext = false;
        this.hasCompleted = false;
    }
    /** @deprecated internal use only */ AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var queue_1 = __webpack_require__(156);
var Subscription_1 = __webpack_require__(5);
var observeOn_1 = __webpack_require__(33);
var ObjectUnsubscribedError_1 = __webpack_require__(39);
var SubjectSubscription_1 = __webpack_require__(67);
/**
 * @class ReplaySubject<T>
 */
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
        _super.call(this);
        this.scheduler = scheduler;
        this._events = [];
        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        this._windowTime = windowTime < 1 ? 1 : windowTime;
    }
    ReplaySubject.prototype.next = function (value) {
        var now = this._getNow();
        this._events.push(new ReplayEvent(now, value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    /** @deprecated internal use only */ ReplaySubject.prototype._subscribe = function (subscriber) {
        var _events = this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var subscription;
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
        }
        var len = _events.length;
        for (var i = 0; i < len && !subscriber.closed; i++) {
            subscriber.next(_events[i].value);
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue_1.queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        // Trim events that fall out of the time window.
        // Start at the front of the list. Break early once
        // we encounter an event that falls within the window.
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
var ReplayEvent = (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ArrayObservable_1 = __webpack_require__(12);
var isScheduler_1 = __webpack_require__(10);
var mergeAll_1 = __webpack_require__(32);
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...ObservableInput} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler_1.isScheduler(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {
        return observables[0];
    }
    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(12);
var isArray_1 = __webpack_require__(11);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
var none = {};
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };
}
exports.combineLatest = combineLatest;
var CombineLatestOperator = (function () {
    function CombineLatestOperator(project) {
        this.project = project;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));
    };
    return CombineLatestOperator;
}());
exports.CombineLatestOperator = CombineLatestOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CombineLatestSubscriber = (function (_super) {
    __extends(CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, project) {
        _super.call(this, destination);
        this.project = project;
        this.active = 0;
        this.values = [];
        this.observables = [];
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(none);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === none ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.project) {
                this._tryProject(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryProject = function (values) {
        var result;
        try {
            result = this.project.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.CombineLatestSubscriber = CombineLatestSubscriber;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
var identity_1 = __webpack_require__(162);
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);
}
exports.mergeAll = mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(17);
/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
exports.observeOn = observeOn;
var ObserveOnOperator = (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());
exports.ObserveOnOperator = ObserveOnOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ObserveOnSubscriber = (function (_super) {
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(Notification_1.Notification.createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(Notification_1.Notification.createError(err));
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(Notification_1.Notification.createComplete());
    };
    return ObserveOnSubscriber;
}(Subscriber_1.Subscriber));
exports.ObserveOnSubscriber = ObserveOnSubscriber;
var ObserveOnMessage = (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());
exports.ObserveOnMessage = ObserveOnMessage;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
exports.defaultThrottleConfig = {
    leading: true,
    trailing: false
};
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector, config) {
    if (config === void 0) { config = exports.defaultThrottleConfig; }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
}
exports.throttle = throttle;
var ThrottleOperator = (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc
 * @ignore
 * @extends {Ignored}
 */
var ThrottleSubscriber = (function (_super) {
    __extends(ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        _super.call(this, destination);
        this.destination = destination;
        this.durationSelector = durationSelector;
        this._leading = _leading;
        this._trailing = _trailing;
        this._hasTrailingValue = false;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this._trailing) {
                this._hasTrailingValue = true;
                this._trailingValue = value;
            }
        }
        else {
            var duration = this.tryDurationSelector(value);
            if (duration) {
                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
            }
            if (this._leading) {
                this.destination.next(value);
                if (this._trailing) {
                    this._hasTrailingValue = true;
                    this._trailingValue = value;
                }
            }
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    /** @deprecated internal use only */ ThrottleSubscriber.prototype._unsubscribe = function () {
        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;
        this._trailingValue = null;
        this._hasTrailingValue = false;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
    };
    ThrottleSubscriber.prototype._sendTrailing = function () {
        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;
        if (throttled && _trailing && _hasTrailingValue) {
            destination.next(_trailingValue);
            this._trailingValue = null;
            this._hasTrailingValue = false;
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._sendTrailing();
        this._unsubscribe();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this._sendTrailing();
        this._unsubscribe();
    };
    return ThrottleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(12);
var isArray_1 = __webpack_require__(11);
var Subscriber_1 = __webpack_require__(1);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
var iterator_1 = __webpack_require__(24);
/* tslint:enable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));
    };
}
exports.zip = zip;
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each
 * of its input Observables.
 *
 * If the latest parameter is a function, this function is used to compute the created value from the input values.
 * Otherwise, an array of the input values is returned.
 *
 * @example <caption>Combine age and name from different sources</caption>
 *
 * let age$ = Observable.of<number>(27, 25, 29);
 * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');
 * let isDev$ = Observable.of<boolean>(true, true, false);
 *
 * Observable
 *     .zip(age$,
 *          name$,
 *          isDev$,
 *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))
 *     .subscribe(x => console.log(x));
 *
 * // outputs
 * // { age: 27, name: 'Foo', isDev: true }
 * // { age: 25, name: 'Bar', isDev: true }
 * // { age: 29, name: 'Beer', isDev: false }
 *
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */
function zipStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
        observables.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));
}
exports.zipStatic = zipStatic;
var ZipOperator = (function () {
    function ZipOperator(project) {
        this.project = project;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.project));
    };
    return ZipOperator;
}());
exports.ZipOperator = ZipOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipSubscriber = (function (_super) {
    __extends(ZipSubscriber, _super);
    function ZipSubscriber(destination, project, values) {
        if (values === void 0) { values = Object.create(null); }
        _super.call(this, destination);
        this.iterators = [];
        this.active = 0;
        this.project = (typeof project === 'function') ? project : null;
        this.values = values;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (isArray_1.isArray(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[iterator_1.iterator] === 'function') {
            iterators.push(new StaticIterator(value[iterator_1.iterator]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                this.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--; // not an observable
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        // abort if not all of them have values
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            // check to see if it's completed now that you've gotten
            // the next value.
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.project) {
            this._tryProject(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(Subscriber_1.Subscriber));
exports.ZipSubscriber = ZipSubscriber;
var StaticIterator = (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator_1.iterator] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipBufferIterator = (function (_super) {
    __extends(ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        _super.call(this, destination);
        this.parent = parent;
        this.observable = observable;
        this.stillUnsubscribed = true;
        this.buffer = [];
        this.isComplete = false;
    }
    ZipBufferIterator.prototype[iterator_1.iterator] = function () {
        return this;
    };
    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
    //    this is legit because `next()` will never be called by a subscription in this case.
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=zip.js.map

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
function getSymbolObservable(context) {
    var $$observable;
    var Symbol = context.Symbol;
    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            $$observable = Symbol.observable;
        }
        else {
            $$observable = Symbol('observable');
            Symbol.observable = $$observable;
        }
    }
    else {
        $$observable = '@@observable';
    }
    return $$observable;
}
exports.getSymbolObservable = getSymbolObservable;
exports.observable = getSymbolObservable(root_1.root);
/**
 * @deprecated use observable instead
 */
exports.$$observable = exports.observable;
//# sourceMappingURL=observable.js.map

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
var Symbol = root_1.root.Symbol;
exports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';
/**
 * @deprecated use rxSubscriber instead
 */
exports.$$rxSubscriber = exports.rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
var EmptyError = (function (_super) {
    __extends(EmptyError, _super);
    function EmptyError() {
        var err = _super.call(this, 'no elements in sequence');
        this.name = err.name = 'EmptyError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return EmptyError;
}(Error));
exports.EmptyError = EmptyError;
//# sourceMappingURL=EmptyError.js.map

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
var ObjectUnsubscribedError = (function (_super) {
    __extends(ObjectUnsubscribedError, _super);
    function ObjectUnsubscribedError() {
        var err = _super.call(this, 'object unsubscribed');
        this.name = err.name = 'ObjectUnsubscribedError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ObjectUnsubscribedError;
}(Error));
exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
exports.isDate = isDate;
//# sourceMappingURL=isDate.js.map

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;
//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ScalarObservable = (function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
        _super.call(this);
        this.value = value;
        this.scheduler = scheduler;
        this._isScalar = true;
        if (scheduler) {
            this._isScalar = false;
        }
    }
    ScalarObservable.create = function (value, scheduler) {
        return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
        var done = state.done, value = state.value, subscriber = state.subscriber;
        if (done) {
            subscriber.complete();
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        state.done = true;
        this.schedule(state);
    };
    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {
        var value = this.value;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ScalarObservable.dispatch, 0, {
                done: false, value: value, subscriber: subscriber
            });
        }
        else {
            subscriber.next(value);
            if (!subscriber.closed) {
                subscriber.complete();
            }
        }
    };
    return ScalarObservable;
}(Observable_1.Observable));
exports.ScalarObservable = ScalarObservable;
//# sourceMappingURL=ScalarObservable.js.map

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(11);
var ArrayObservable_1 = __webpack_require__(12);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `race([obs1, obs2, ...])`
    if (observables.length === 1) {
        if (isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());
}
exports.race = race;
var RaceOperator = (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());
exports.RaceOperator = RaceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RaceSubscriber = (function (_super) {
    __extends(RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        _super.call(this, destination);
        this.hasFirst = false;
        this.observables = [];
        this.subscriptions = [];
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.RaceSubscriber = RaceSubscriber;
//# sourceMappingURL=race.js.map

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
exports.audit = audit;
var AuditOperator = (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditSubscriber = (function (_super) {
    __extends(AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);
            if (duration === errorObject_1.errorObject) {
                this.destination.error(errorObject_1.errorObject.e);
            }
            else {
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);
                if (innerSubscription.closed) {
                    this.clearThrottle();
                }
                else {
                    this.add(this.throttled = innerSubscription);
                }
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=audit.js.map

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeAll_1 = __webpack_require__(32);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return mergeAll_1.mergeAll(1);
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return mergeMap_1.mergeMap(project, resultSelector, 1);
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:enable:max-line-length */
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
exports.defaultIfEmpty = defaultIfEmpty;
var DefaultIfEmptyOperator = (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DefaultIfEmptySubscriber = (function (_super) {
    __extends(DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        _super.call(this, destination);
        this.defaultValue = defaultValue;
        this.isEmpty = true;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
exports.distinctUntilChanged = distinctUntilChanged;
var DistinctUntilChangedOperator = (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctUntilChangedSubscriber = (function (_super) {
    __extends(DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.hasKey = false;
        if (typeof compare === 'function') {
            this.compare = compare;
        }
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var keySelector = this.keySelector;
        var key = value;
        if (keySelector) {
            key = tryCatch_1.tryCatch(this.keySelector)(value);
            if (key === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        var result = false;
        if (this.hasKey) {
            result = tryCatch_1.tryCatch(this.compare)(this.key, key);
            if (result === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        else {
            this.hasKey = true;
        }
        if (Boolean(result) === false) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:enable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
exports.filter = filter;
var FilterOperator = (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FilterSubscriber = (function (_super) {
    __extends(FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.count = 0;
    }
    // the try catch block below is left specifically for
    // optimization and perf reasons. a tryCatcher is not necessary here.
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=filter.js.map

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
exports.find = find;
var FindValueOperator = (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());
exports.FindValueOperator = FindValueOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FindValueSubscriber = (function (_super) {
    __extends(FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
        this.index = 0;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(Subscriber_1.Subscriber));
exports.FindValueSubscriber = FindValueSubscriber;
//# sourceMappingURL=find.js.map

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var FromObservable_1 = __webpack_require__(69);
var isArray_1 = __webpack_require__(11);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
exports.onErrorResumeNext = onErrorResumeNext;
/* tslint:enable:max-line-length */
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
var OnErrorResumeNextOperator = (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = (function (_super) {
    __extends(OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        _super.call(this, destination);
        this.destination = destination;
        this.nextSources = nextSources;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (next) {
            this.add(subscribeToResult_1.subscribeToResult(this, next));
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
exports.refCount = refCount;
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=refCount.js.map

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    var hasSeed = false;
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
exports.scan = scan;
var ScanOperator = (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) { hasSeed = false; }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ScanSubscriber = (function (_super) {
    __extends(ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this._seed = _seed;
        this.hasSeed = hasSeed;
        this.index = 0;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=scan.js.map

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return function switchMapOperatorFunction(source) {
        return source.lift(new SwitchMapOperator(project, resultSelector));
    };
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
var EmptyObservable_1 = __webpack_require__(13);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
exports.takeLast = takeLast;
var TakeLastOperator = (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeLastSubscriber = (function (_super) {
    __extends(TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.ring = new Array();
        this.count = 0;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var map_1 = __webpack_require__(19);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return map_1.map(function (value) { return new Timestamp(value, scheduler.now()); });
    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));
}
exports.timestamp = timestamp;
var Timestamp = (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());
exports.Timestamp = Timestamp;
;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-empty */
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var noop_1 = __webpack_require__(57);
/* tslint:enable:max-line-length */
function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i - 0] = arguments[_i];
    }
    return pipeFromArray(fns);
}
exports.pipe = pipe;
/* @internal */
function pipeFromArray(fns) {
    if (!fns) {
        return noop_1.noop;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
exports.pipeFromArray = pipeFromArray;
//# sourceMappingURL=pipe.js.map

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
//controllers
var alertcontroller_1 = __webpack_require__(485);
//services
var alertservice_1 = __webpack_require__(487);
var alertmodule = angular.module('hibachi.alert', [])
    //controllers
    .controller('alertController', alertcontroller_1.AlertController)
    //services
    .service('alertService', alertservice_1.AlertService);
exports.alertmodule = alertmodule;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseobject_1 = __webpack_require__(168);
var BaseTransient = /** @class */ (function (_super) {
    __extends(BaseTransient, _super);
    function BaseTransient($injector) {
        var _this = _super.call(this, $injector) || this;
        _this.errors = {};
        _this.messages = {};
        _this.populate = function (response) {
            var data = response;
            if (response.data) {
                data = response.data;
            }
            data = _this.utilityService.nvpToObject(data);
            var _loop_1 = function () {
                var propertyIdentifier = key.replace(_this.className.toLowerCase() + '.', '');
                var propertyIdentifierArray = propertyIdentifier.split('.');
                var propertyIdentifierKey = propertyIdentifier.replace(/\./g, '_');
                var currentEntity = _this;
                angular.forEach(propertyIdentifierArray, function (property, propertyKey) {
                    if (currentEntity.metaData[property]) {
                        //if we are on the last item in the array
                        if (propertyKey === propertyIdentifierArray.length - 1) {
                            //if is json
                            //if(currentEntity.metaData[key]){
                            //if propertyidentifier
                            // }else{
                            if (angular.isObject(data[key]) && currentEntity.metaData[property].fieldtype && currentEntity.metaData[property].fieldtype === 'many-to-one') {
                                var relatedEntity = _this.entityService.newEntity(currentEntity.metaData[property].cfc);
                                if (relatedEntity.populate) {
                                    relatedEntity.populate(data[key]);
                                    currentEntity['$$set' + currentEntity.metaData[property].name.charAt(0).toUpperCase() + currentEntity.metaData[property].name.slice(1)](relatedEntity);
                                }
                                else {
                                    relatedEntity.$$init(data[key]);
                                    currentEntity['$$set' + currentEntity.metaData[property].name.charAt(0).toUpperCase() + currentEntity.metaData[property].name.slice(1)](relatedEntity);
                                }
                            }
                            else if (angular.isArray(data[propertyIdentifierKey]) && currentEntity.metaData[property].fieldtype && (currentEntity.metaData[property].fieldtype === 'one-to-many')) {
                                currentEntity[property] = [];
                                angular.forEach(data[key], function (arrayItem, propertyKey) {
                                    var relatedEntity = _this.entityService.newEntity(currentEntity.metaData[property].cfc);
                                    if (relatedEntity.populate) {
                                        relatedEntity.populate(arrayItem);
                                        var hasItem = false;
                                        for (var item in currentEntity[property]) {
                                            if (currentEntity[property][item].$$getID().length > 0 && currentEntity[property][item].$$getID() === relatedEntity.$$getID()) {
                                                hasItem = true;
                                                break;
                                            }
                                        }
                                        if (!hasItem) {
                                            currentEntity['$$add' + currentEntity.metaData[property].singularname.charAt(0).toUpperCase() + currentEntity.metaData[property].singularname.slice(1)](relatedEntity);
                                        }
                                    }
                                    else {
                                        relatedEntity.$$init(arrayItem);
                                        currentEntity['$$add' + currentEntity.metaData[property].singularname.charAt(0).toUpperCase() + currentEntity.metaData[property].singularname.slice(1)](relatedEntity);
                                    }
                                });
                            }
                            else {
                                currentEntity[property] = data[key];
                            }
                            //}
                        }
                        else {
                            var propertyMetaData = currentEntity.metaData[property];
                            if (angular.isUndefined(currentEntity.data[property]) || (currentEntity.data[property] && currentEntity.data[property] === null)) {
                                if (propertyMetaData.fieldtype === 'one-to-many') {
                                    relatedEntity = [];
                                }
                                else {
                                    relatedEntity = _this.$hibachi['new' + propertyMetaData.cfc]();
                                }
                            }
                            else {
                                relatedEntity = currentEntity.data[property];
                            }
                            currentEntity['$$set' + propertyMetaData.name.charAt(0).toUpperCase() + propertyMetaData.name.slice(1)](relatedEntity);
                            currentEntity = relatedEntity;
                        }
                    }
                    else {
                        _this[key] = data[key];
                    }
                });
            };
            for (var key in data) {
                _loop_1();
            }
            if (response.errors) {
                _this.errors = response.errors;
                _this.messages = response.messages;
            }
        };
        _this.addError = function (errorName, errorMessage) {
            if (!_this.errors[errorName]) {
                _this.errors[errorName] = [];
            }
            if (angular.isArray(errorMessage)) {
                _this.addErrorsByArray(errorName, errorMessage);
            }
            else if (angular.isObject(errorMessage)) {
                _this.addErrorsByObject(errorName, errorMessage);
            }
            else {
                _this.errors[errorName].push(errorMessage);
            }
        };
        _this.addErrorsByArray = function (errorName, errorMessages) {
            for (var i = 0; i < errorMessages.length; i++) {
                var message = errorMessages[i];
                _this.errors[errorName].push(message);
            }
        };
        _this.addErrorsByObject = function (errorName, errorMessage) {
            if (!_this.errors[errorName]) {
                _this.errors[errorName] = [];
            }
            for (var key in errorMessage) {
                for (var i = 0; i < errorMessage[key].length; i++) {
                    var message = errorMessage[i];
                    _this.errors[errorName].push(message);
                }
            }
        };
        _this.addErrors = function (errors) {
            for (var key in errors) {
                if (!_this.errors[key]) {
                    _this.errors[key] = [];
                }
                for (var message in errors[key]) {
                    _this.errors[key].push(message);
                }
            }
        };
        _this.getError = function (errorName) {
            return _this.getErrorByErrorName(errorName);
        };
        _this.getErrorByErrorName = function (errorName) {
            return _this.errors[errorName];
        };
        _this.hasError = function (errorName) {
            return _this.hasErrorByErrorName(errorName);
        };
        _this.hasErrorByErrorName = function (errorName) {
            return angular.isDefined(_this.errors[errorName]);
        };
        _this.hasErrors = function () {
            return Object.keys(_this.errors).length;
        };
        _this.hasSuccessfulAction = function (action) {
            return;
        };
        _this.$hibachi = _this.getService('$hibachi');
        _this.hibachiValidationService = _this.getService('hibachiValidationService');
        _this.utilityService = _this.getService('utilityService');
        _this.entityService = _this.getService('entityService');
        return _this;
    }
    return BaseTransient;
}(baseobject_1.BaseObject));
exports.BaseTransient = BaseTransient;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var BaseService = /** @class */ (function () {
    function BaseService() {
    }
    return BaseService;
}());
exports.BaseService = BaseService;


/***/ }),
/* 62 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 63 */
/***/ (function(module, exports) {

var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },

  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join('');
    }
  }
};

module.exports = charenc;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

(function(){
  var crypt = __webpack_require__(187),
      utf8 = __webpack_require__(63).utf8,
      isBuffer = __webpack_require__(188),
      bin = __webpack_require__(63).bin,

  // The core
  md5 = function (message, options) {
    // Convert to byte array
    if (message.constructor == String)
      if (options && options.encoding === 'binary')
        message = bin.stringToBytes(message);
      else
        message = utf8.stringToBytes(message);
    else if (isBuffer(message))
      message = Array.prototype.slice.call(message, 0);
    else if (!Array.isArray(message))
      message = message.toString();
    // else, assume byte array already

    var m = crypt.bytesToWords(message),
        l = message.length * 8,
        a =  1732584193,
        b = -271733879,
        c = -1732584194,
        d =  271733878;

    // Swap endian
    for (var i = 0; i < m.length; i++) {
      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |
             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;
    }

    // Padding
    m[l >>> 5] |= 0x80 << (l % 32);
    m[(((l + 64) >>> 9) << 4) + 14] = l;

    // Method shortcuts
    var FF = md5._ff,
        GG = md5._gg,
        HH = md5._hh,
        II = md5._ii;

    for (var i = 0; i < m.length; i += 16) {

      var aa = a,
          bb = b,
          cc = c,
          dd = d;

      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);
      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);
      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);
      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);
      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);
      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);
      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);
      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);
      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);
      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);
      c = FF(c, d, a, b, m[i+10], 17, -42063);
      b = FF(b, c, d, a, m[i+11], 22, -1990404162);
      a = FF(a, b, c, d, m[i+12],  7,  1804603682);
      d = FF(d, a, b, c, m[i+13], 12, -40341101);
      c = FF(c, d, a, b, m[i+14], 17, -1502002290);
      b = FF(b, c, d, a, m[i+15], 22,  1236535329);

      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);
      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);
      c = GG(c, d, a, b, m[i+11], 14,  643717713);
      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);
      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);
      d = GG(d, a, b, c, m[i+10],  9,  38016083);
      c = GG(c, d, a, b, m[i+15], 14, -660478335);
      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);
      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);
      d = GG(d, a, b, c, m[i+14],  9, -1019803690);
      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);
      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);
      a = GG(a, b, c, d, m[i+13],  5, -1444681467);
      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);
      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);
      b = GG(b, c, d, a, m[i+12], 20, -1926607734);

      a = HH(a, b, c, d, m[i+ 5],  4, -378558);
      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);
      c = HH(c, d, a, b, m[i+11], 16,  1839030562);
      b = HH(b, c, d, a, m[i+14], 23, -35309556);
      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);
      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);
      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);
      b = HH(b, c, d, a, m[i+10], 23, -1094730640);
      a = HH(a, b, c, d, m[i+13],  4,  681279174);
      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);
      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);
      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);
      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);
      d = HH(d, a, b, c, m[i+12], 11, -421815835);
      c = HH(c, d, a, b, m[i+15], 16,  530742520);
      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);

      a = II(a, b, c, d, m[i+ 0],  6, -198630844);
      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);
      c = II(c, d, a, b, m[i+14], 15, -1416354905);
      b = II(b, c, d, a, m[i+ 5], 21, -57434055);
      a = II(a, b, c, d, m[i+12],  6,  1700485571);
      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);
      c = II(c, d, a, b, m[i+10], 15, -1051523);
      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);
      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);
      d = II(d, a, b, c, m[i+15], 10, -30611744);
      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);
      b = II(b, c, d, a, m[i+13], 21,  1309151649);
      a = II(a, b, c, d, m[i+ 4],  6, -145523070);
      d = II(d, a, b, c, m[i+11], 10, -1120210379);
      c = II(c, d, a, b, m[i+ 2], 15,  718787259);
      b = II(b, c, d, a, m[i+ 9], 21, -343485551);

      a = (a + aa) >>> 0;
      b = (b + bb) >>> 0;
      c = (c + cc) >>> 0;
      d = (d + dd) >>> 0;
    }

    return crypt.endian([a, b, c, d]);
  };

  // Auxiliary functions
  md5._ff  = function (a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._gg  = function (a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._hh  = function (a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._ii  = function (a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };

  // Package private blocksize
  md5._blocksize = 16;
  md5._digestsize = 16;

  module.exports = function (message, options) {
    if (message === undefined || message === null)
      throw new Error('Illegal argument ' + message);

    var digestbytes = crypt.wordsToBytes(md5(message, options));
    return options && options.asBytes ? digestbytes :
        options && options.asString ? bin.bytesToString(digestbytes) :
        crypt.bytesToHex(digestbytes);
  };

})();


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var ObjectUnsubscribedError_1 = __webpack_require__(39);
/**
 * @class BehaviorSubject<T>
 */
var BehaviorSubject = (function (_super) {
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        _super.call(this);
        this._value = _value;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    /** @deprecated internal use only */ BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;
//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.empty = {
    closed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(5);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubjectSubscription = (function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        _super.call(this);
        this.subject = subject;
        this.subscriber = subscriber;
        this.closed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(Subscription_1.Subscription));
exports.SubjectSubscription = SubjectSubscription;
//# sourceMappingURL=SubjectSubscription.js.map

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(5);
var refCount_1 = __webpack_require__(52);
/**
 * @class ConnectableObservable<T>
 */
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(/** @deprecated internal use only */ source, 
        /** @deprecated internal use only */ subjectFactory) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        /** @deprecated internal use only */ this._refCount = 0;
        this._isComplete = false;
    }
    /** @deprecated internal use only */ ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    /** @deprecated internal use only */ ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new Subscription_1.Subscription();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
            else {
                this._connection = connection;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return refCount_1.refCount()(this);
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
var connectableProto = ConnectableObservable.prototype;
exports.connectableObservableDescriptor = {
    operator: { value: null },
    _refCount: { value: 0, writable: true },
    _subject: { value: null, writable: true },
    _connection: { value: null, writable: true },
    _subscribe: { value: connectableProto._subscribe },
    _isComplete: { value: connectableProto._isComplete, writable: true },
    getSubject: { value: connectableProto.getSubject },
    connect: { value: connectableProto.connect },
    refCount: { value: connectableProto.refCount }
};
var ConnectableSubscriber = (function (_super) {
    __extends(ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    /** @deprecated internal use only */ ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject_1.SubjectSubscriber));
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(11);
var isArrayLike_1 = __webpack_require__(163);
var isPromise_1 = __webpack_require__(165);
var PromiseObservable_1 = __webpack_require__(70);
var IteratorObservable_1 = __webpack_require__(333);
var ArrayObservable_1 = __webpack_require__(12);
var ArrayLikeObservable_1 = __webpack_require__(322);
var iterator_1 = __webpack_require__(24);
var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(33);
var observable_1 = __webpack_require__(36);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromObservable = (function (_super) {
    __extends(FromObservable, _super);
    function FromObservable(ish, scheduler) {
        _super.call(this, null);
        this.ish = ish;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable from an Array, an array-like object, a Promise, an
     * iterable object, or an Observable-like object.
     *
     * <span class="informal">Converts almost anything to an Observable.</span>
     *
     * <img src="./img/from.png" width="100%">
     *
     * Convert various other objects and data types into Observables. `from`
     * converts a Promise or an array-like or an
     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)
     * object into an Observable that emits the items in that promise or array or
     * iterable. A String, in this context, is treated as an array of characters.
     * Observable-like objects (contains a function named with the ES2015 Symbol
     * for Observable) can also be converted through this operator.
     *
     * @example <caption>Converts an array to an Observable</caption>
     * var array = [10, 20, 30];
     * var result = Rx.Observable.from(array);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 10 20 30
     *
     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>
     * function* generateDoubles(seed) {
     *   var i = seed;
     *   while (true) {
     *     yield i;
     *     i = 2 * i; // double it
     *   }
     * }
     *
     * var iterator = generateDoubles(3);
     * var result = Rx.Observable.from(iterator).take(10);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 3 6 12 24 48 96 192 384 768 1536
     *
     * @see {@link create}
     * @see {@link fromEvent}
     * @see {@link fromEventPattern}
     * @see {@link fromPromise}
     *
     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an
     * Observable-like, an Array, an iterable or an array-like object to be
     * converted.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * emissions of values.
     * @return {Observable<T>} The Observable whose values are originally from the
     * input object that was converted.
     * @static true
     * @name from
     * @owner Observable
     */
    FromObservable.create = function (ish, scheduler) {
        if (ish != null) {
            if (typeof ish[observable_1.observable] === 'function') {
                if (ish instanceof Observable_1.Observable && !scheduler) {
                    return ish;
                }
                return new FromObservable(ish, scheduler);
            }
            else if (isArray_1.isArray(ish)) {
                return new ArrayObservable_1.ArrayObservable(ish, scheduler);
            }
            else if (isPromise_1.isPromise(ish)) {
                return new PromiseObservable_1.PromiseObservable(ish, scheduler);
            }
            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {
                return new IteratorObservable_1.IteratorObservable(ish, scheduler);
            }
            else if (isArrayLike_1.isArrayLike(ish)) {
                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);
            }
        }
        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');
    };
    /** @deprecated internal use only */ FromObservable.prototype._subscribe = function (subscriber) {
        var ish = this.ish;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            return ish[observable_1.observable]().subscribe(subscriber);
        }
        else {
            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));
        }
    };
    return FromObservable;
}(Observable_1.Observable));
exports.FromObservable = FromObservable;
//# sourceMappingURL=FromObservable.js.map

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(9);
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PromiseObservable = (function (_super) {
    __extends(PromiseObservable, _super);
    function PromiseObservable(promise, scheduler) {
        _super.call(this);
        this.promise = promise;
        this.scheduler = scheduler;
    }
    /**
     * Converts a Promise to an Observable.
     *
     * <span class="informal">Returns an Observable that just emits the Promise's
     * resolved value, then completes.</span>
     *
     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an
     * Observable. If the Promise resolves with a value, the output Observable
     * emits that resolved value as a `next`, and then completes. If the Promise
     * is rejected, then the output Observable emits the corresponding Error.
     *
     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>
     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     *
     * @param {PromiseLike<T>} promise The promise to be converted.
     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling
     * the delivery of the resolved value (or the rejection).
     * @return {Observable<T>} An Observable which wraps the Promise.
     * @static true
     * @name fromPromise
     * @owner Observable
     */
    PromiseObservable.create = function (promise, scheduler) {
        return new PromiseObservable(promise, scheduler);
    };
    /** @deprecated internal use only */ PromiseObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var promise = this.promise;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    subscriber.next(this.value);
                    subscriber.complete();
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.next(value);
                        subscriber.complete();
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.error(err);
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
        else {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
    };
    return PromiseObservable;
}(Observable_1.Observable));
exports.PromiseObservable = PromiseObservable;
function dispatchNext(arg) {
    var value = arg.value, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
    }
}
function dispatchError(arg) {
    var err = arg.err, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.error(err);
    }
}
//# sourceMappingURL=PromiseObservable.js.map

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(9);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(1);
var map_1 = __webpack_require__(19);
function getCORSRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else if (!!root_1.root.XDomainRequest) {
        return new root_1.root.XDomainRequest();
    }
    else {
        throw new Error('CORS is not supported by your browser');
    }
}
function getXMLHttpRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else {
        var progId = void 0;
        try {
            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
            for (var i = 0; i < 3; i++) {
                try {
                    progId = progIds[i];
                    if (new root_1.root.ActiveXObject(progId)) {
                        break;
                    }
                }
                catch (e) {
                }
            }
            return new root_1.root.ActiveXObject(progId);
        }
        catch (e) {
            throw new Error('XMLHttpRequest is not supported by your browser');
        }
    }
}
function ajaxGet(url, headers) {
    if (headers === void 0) { headers = null; }
    return new AjaxObservable({ method: 'GET', url: url, headers: headers });
}
exports.ajaxGet = ajaxGet;
;
function ajaxPost(url, body, headers) {
    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
}
exports.ajaxPost = ajaxPost;
;
function ajaxDelete(url, headers) {
    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
}
exports.ajaxDelete = ajaxDelete;
;
function ajaxPut(url, body, headers) {
    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
}
exports.ajaxPut = ajaxPut;
;
function ajaxPatch(url, body, headers) {
    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });
}
exports.ajaxPatch = ajaxPatch;
;
var mapResponse = map_1.map(function (x, index) { return x.response; });
function ajaxGetJSON(url, headers) {
    return mapResponse(new AjaxObservable({
        method: 'GET',
        url: url,
        responseType: 'json',
        headers: headers
    }));
}
exports.ajaxGetJSON = ajaxGetJSON;
;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var AjaxObservable = (function (_super) {
    __extends(AjaxObservable, _super);
    function AjaxObservable(urlOrRequest) {
        _super.call(this);
        var request = {
            async: true,
            createXHR: function () {
                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();
            },
            crossDomain: false,
            withCredentials: false,
            headers: {},
            method: 'GET',
            responseType: 'json',
            timeout: 0
        };
        if (typeof urlOrRequest === 'string') {
            request.url = urlOrRequest;
        }
        else {
            for (var prop in urlOrRequest) {
                if (urlOrRequest.hasOwnProperty(prop)) {
                    request[prop] = urlOrRequest[prop];
                }
            }
        }
        this.request = request;
    }
    /** @deprecated internal use only */ AjaxObservable.prototype._subscribe = function (subscriber) {
        return new AjaxSubscriber(subscriber, this.request);
    };
    /**
     * Creates an observable for an Ajax request with either a request object with
     * url, headers, etc or a string for a URL.
     *
     * @example
     * source = Rx.Observable.ajax('/products');
     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });
     *
     * @param {string|Object} request Can be one of the following:
     *   A string of the URL to make the Ajax call.
     *   An object with the following properties
     *   - url: URL of the request
     *   - body: The body of the request
     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE
     *   - async: Whether the request is async
     *   - headers: Optional headers
     *   - crossDomain: true if a cross domain request, else false
     *   - createXHR: a function to override if you need to use an alternate
     *   XMLHttpRequest implementation.
     *   - resultSelector: a function to use to alter the output value type of
     *   the Observable. Gets {@link AjaxResponse} as an argument.
     * @return {Observable} An observable sequence containing the XMLHttpRequest.
     * @static true
     * @name ajax
     * @owner Observable
    */
    AjaxObservable.create = (function () {
        var create = function (urlOrRequest) {
            return new AjaxObservable(urlOrRequest);
        };
        create.get = ajaxGet;
        create.post = ajaxPost;
        create.delete = ajaxDelete;
        create.put = ajaxPut;
        create.patch = ajaxPatch;
        create.getJSON = ajaxGetJSON;
        return create;
    })();
    return AjaxObservable;
}(Observable_1.Observable));
exports.AjaxObservable = AjaxObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AjaxSubscriber = (function (_super) {
    __extends(AjaxSubscriber, _super);
    function AjaxSubscriber(destination, request) {
        _super.call(this, destination);
        this.request = request;
        this.done = false;
        var headers = request.headers = request.headers || {};
        // force CORS if requested
        if (!request.crossDomain && !headers['X-Requested-With']) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
        }
        // ensure content type is set
        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {
            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
        }
        // properly serialize body
        request.body = this.serializeBody(request.body, request.headers['Content-Type']);
        this.send();
    }
    AjaxSubscriber.prototype.next = function (e) {
        this.done = true;
        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
        var response = new AjaxResponse(e, xhr, request);
        destination.next(response);
    };
    AjaxSubscriber.prototype.send = function () {
        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
        var createXHR = request.createXHR;
        var xhr = tryCatch_1.tryCatch(createXHR).call(request);
        if (xhr === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            this.xhr = xhr;
            // set up the events before open XHR
            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest
            // You need to add the event listeners before calling open() on the request.
            // Otherwise the progress events will not fire.
            this.setupEvents(xhr, request);
            // open XHR
            var result = void 0;
            if (user) {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);
            }
            else {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);
            }
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
            // timeout, responseType and withCredentials can be set once the XHR is open
            if (async) {
                xhr.timeout = request.timeout;
                xhr.responseType = request.responseType;
            }
            if ('withCredentials' in xhr) {
                xhr.withCredentials = !!request.withCredentials;
            }
            // set headers
            this.setHeaders(xhr, headers);
            // finally send the request
            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
        }
        return xhr;
    };
    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
        if (!body || typeof body === 'string') {
            return body;
        }
        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {
            return body;
        }
        if (contentType) {
            var splitIndex = contentType.indexOf(';');
            if (splitIndex !== -1) {
                contentType = contentType.substring(0, splitIndex);
            }
        }
        switch (contentType) {
            case 'application/x-www-form-urlencoded':
                return Object.keys(body).map(function (key) { return (encodeURI(key) + "=" + encodeURI(body[key])); }).join('&');
            case 'application/json':
                return JSON.stringify(body);
            default:
                return body;
        }
    };
    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
        for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
                xhr.setRequestHeader(key, headers[key]);
            }
        }
    };
    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
        var progressSubscriber = request.progressSubscriber;
        function xhrTimeout(e) {
            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (progressSubscriber) {
                progressSubscriber.error(e);
            }
            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.
        }
        ;
        xhr.ontimeout = xhrTimeout;
        xhrTimeout.request = request;
        xhrTimeout.subscriber = this;
        xhrTimeout.progressSubscriber = progressSubscriber;
        if (xhr.upload && 'withCredentials' in xhr) {
            if (progressSubscriber) {
                var xhrProgress_1;
                xhrProgress_1 = function (e) {
                    var progressSubscriber = xhrProgress_1.progressSubscriber;
                    progressSubscriber.next(e);
                };
                if (root_1.root.XDomainRequest) {
                    xhr.onprogress = xhrProgress_1;
                }
                else {
                    xhr.upload.onprogress = xhrProgress_1;
                }
                xhrProgress_1.progressSubscriber = progressSubscriber;
            }
            var xhrError_1;
            xhrError_1 = function (e) {
                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                subscriber.error(new AjaxError('ajax error', this, request));
            };
            xhr.onerror = xhrError_1;
            xhrError_1.request = request;
            xhrError_1.subscriber = this;
            xhrError_1.progressSubscriber = progressSubscriber;
        }
        function xhrReadyStateChange(e) {
            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (this.readyState === 4) {
                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
                var status_1 = this.status === 1223 ? 204 : this.status;
                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                // fix status code when it is 0 (0 status is undocumented).
                // Occurs when accessing file resources or on Android 4.1 stock browser
                // while retrieving files from application cache.
                if (status_1 === 0) {
                    status_1 = response ? 200 : 0;
                }
                if (200 <= status_1 && status_1 < 300) {
                    if (progressSubscriber) {
                        progressSubscriber.complete();
                    }
                    subscriber.next(e);
                    subscriber.complete();
                }
                else {
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));
                }
            }
        }
        ;
        xhr.onreadystatechange = xhrReadyStateChange;
        xhrReadyStateChange.subscriber = this;
        xhrReadyStateChange.progressSubscriber = progressSubscriber;
        xhrReadyStateChange.request = request;
    };
    AjaxSubscriber.prototype.unsubscribe = function () {
        var _a = this, done = _a.done, xhr = _a.xhr;
        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
            xhr.abort();
        }
        _super.prototype.unsubscribe.call(this);
    };
    return AjaxSubscriber;
}(Subscriber_1.Subscriber));
exports.AjaxSubscriber = AjaxSubscriber;
/**
 * A normalized AJAX response.
 *
 * @see {@link ajax}
 *
 * @class AjaxResponse
 */
var AjaxResponse = (function () {
    function AjaxResponse(originalEvent, xhr, request) {
        this.originalEvent = originalEvent;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
    }
    return AjaxResponse;
}());
exports.AjaxResponse = AjaxResponse;
/**
 * A normalized AJAX error.
 *
 * @see {@link ajax}
 *
 * @class AjaxError
 */
var AjaxError = (function (_super) {
    __extends(AjaxError, _super);
    function AjaxError(message, xhr, request) {
        _super.call(this, message);
        this.message = message;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
    }
    return AjaxError;
}(Error));
exports.AjaxError = AjaxError;
function parseXhrResponse(responseType, xhr) {
    switch (responseType) {
        case 'json':
            if ('response' in xhr) {
                //IE does not support json as responseType, parse it internally
                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
            }
            else {
                // HACK(benlesh): TypeScript shennanigans
                // tslint:disable-next-line:no-any latest TS seems to think xhr is "never" here.
                return JSON.parse(xhr.responseText || 'null');
            }
        case 'xml':
            return xhr.responseXML;
        case 'text':
        default:
            // HACK(benlesh): TypeScript shennanigans
            // tslint:disable-next-line:no-any latest TS seems to think xhr is "never" here.
            return ('response' in xhr) ? xhr.response : xhr.responseText;
    }
}
/**
 * @see {@link ajax}
 *
 * @class AjaxTimeoutError
 */
var AjaxTimeoutError = (function (_super) {
    __extends(AjaxTimeoutError, _super);
    function AjaxTimeoutError(xhr, request) {
        _super.call(this, 'ajax timeout', xhr, request);
    }
    return AjaxTimeoutError;
}(AjaxError));
exports.AjaxTimeoutError = AjaxTimeoutError;
//# sourceMappingURL=AjaxObservable.js.map

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromObservable_1 = __webpack_require__(69);
exports.from = FromObservable_1.FromObservable.create;
//# sourceMappingURL=from.js.map

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(12);
exports.of = ArrayObservable_1.ArrayObservable.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TimerObservable_1 = __webpack_require__(338);
exports.timer = TimerObservable_1.TimerObservable.create;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var timeInterval_1 = __webpack_require__(143);
exports.TimeInterval = timeInterval_1.TimeInterval;
/**
 * @param scheduler
 * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timeInterval
 * @owner Observable
 */
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeInterval_1.timeInterval(scheduler)(this);
}
exports.timeInterval = timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var audit_1 = __webpack_require__(44);
var timer_1 = __webpack_require__(74);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });
}
exports.auditTime = auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
exports.buffer = buffer;
var BufferOperator = (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSubscriber = (function (_super) {
    __extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        _super.call(this, destination);
        this.buffer = [];
        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
exports.bufferCount = bufferCount;
var BufferCountOperator = (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferCountSubscriber = (function (_super) {
    __extends(BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.buffer = [];
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSkipCountSubscriber = (function (_super) {
    __extends(BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [];
        this.count = 0;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(4);
var Subscriber_1 = __webpack_require__(1);
var isScheduler_1 = __webpack_require__(10);
/* tslint:enable:max-line-length */
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
exports.bufferTime = bufferTime;
var BufferTimeOperator = (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferTimeSubscriber = (function (_super) {
    __extends(BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        _super.call(this, destination);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
        this.contexts = [];
        var context = this.openContext();
        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context = contexts[i];
            var buffer = context.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context = contexts.shift();
            destination.next(context.buffer);
        }
        _super.prototype._complete.call(this);
    };
    /** @deprecated internal use only */ BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(5);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
exports.bufferToggle = bufferToggle;
var BufferToggleOperator = (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferToggleSubscriber = (function (_super) {
    __extends(BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(subscribeToResult_1.subscribeToResult(this, openings));
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            this.destination.next(context.buffer);
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new Subscription_1.Subscription();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(5);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
exports.bufferWhen = bufferWhen;
var BufferWhenOperator = (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferWhenSubscriber = (function (_super) {
    __extends(BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.closingSelector = closingSelector;
        this.subscribing = false;
        this.openBuffer();
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    /** @deprecated internal use only */ BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            closingSubscription = new Subscription_1.Subscription();
            this.closingSubscription = closingSubscription;
            this.add(closingSubscription);
            this.subscribing = true;
            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
            this.subscribing = false;
        }
    };
    return BufferWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @name catchError
 */
function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
exports.catchError = catchError;
var CatchOperator = (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CatchSubscriber = (function (_super) {
    __extends(CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        _super.call(this, destination);
        this.selector = selector;
        this.caught = caught;
    }
    // NOTE: overriding `error` instead of `_error` because we don't want
    // to have this flag this subscriber as `isStopped`. We can mimic the
    // behavior of the RetrySubscriber (from the `retry` operator), where
    // we unsubscribe from our source chain, reset our Subscriber flags,
    // then subscribe to the selector result.
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return CatchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=catchError.js.map

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineLatest_1 = __webpack_require__(31);
function combineAll(project) {
    return function (source) { return source.lift(new combineLatest_1.CombineLatestOperator(project)); };
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concat_1 = __webpack_require__(18);
var concat_2 = __webpack_require__(18);
exports.concatStatic = concat_2.concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function (source) { return source.lift.call(concat_1.concat.apply(void 0, [source].concat(observables))); };
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMap_1 = __webpack_require__(46);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return concatMap_1.concatMap(function () { return innerObservable; }, resultSelector);
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
exports.count = count;
var CountOperator = (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CountSubscriber = (function (_super) {
    __extends(CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.count = 0;
        this.index = 0;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=count.js.map

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
exports.debounce = debounce;
var DebounceOperator = (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceSubscriber = (function (_super) {
    __extends(DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
        this.durationSubscription = null;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = subscribeToResult_1.subscribeToResult(this, duration);
        if (!subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(4);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
exports.debounceTime = debounceTime;
var DebounceTimeOperator = (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceTimeSubscriber = (function (_super) {
    __extends(DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        _super.call(this, destination);
        this.dueTime = dueTime;
        this.scheduler = scheduler;
        this.debouncedSubscription = null;
        this.lastValue = null;
        this.hasValue = false;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            this.destination.next(this.lastValue);
            this.lastValue = null;
            this.hasValue = false;
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(4);
var isDate_1 = __webpack_require__(40);
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(17);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteDelay = isDate_1.isDate(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
exports.delay = delay;
var DelayOperator = (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelaySubscriber = (function (_super) {
    __extends(DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        _super.call(this, destination);
        this.delay = delay;
        this.scheduler = scheduler;
        this.queue = [];
        this.active = false;
        this.errored = false;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(Notification_1.Notification.createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(Notification_1.Notification.createComplete());
    };
    return DelaySubscriber;
}(Subscriber_1.Subscriber));
var DelayMessage = (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Observable_1 = __webpack_require__(0);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
exports.delayWhen = delayWhen;
var DelayWhenOperator = (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelayWhenSubscriber = (function (_super) {
    __extends(DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        _super.call(this, destination);
        this.delayDurationSelector = delayDurationSelector;
        this.completed = false;
        this.delayNotifierSubscriptions = [];
        this.values = [];
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        try {
            var delayNotifier = this.delayDurationSelector(value);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        var value = null;
        if (subscriptionIdx !== -1) {
            value = this.values[subscriptionIdx];
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
            this.values.splice(subscriptionIdx, 1);
        }
        return value;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            this.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
        this.values.push(value);
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelayObservable = (function (_super) {
    __extends(SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(/** @deprecated internal use only */ source, subscriptionDelay) {
        _super.call(this);
        this.source = source;
        this.subscriptionDelay = subscriptionDelay;
    }
    /** @deprecated internal use only */ SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(Observable_1.Observable));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelaySubscriber = (function (_super) {
    __extends(SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        _super.call(this);
        this.parent = parent;
        this.source = source;
        this.sourceSubscribed = false;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
exports.dematerialize = dematerialize;
var DeMaterializeOperator = (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DeMaterializeSubscriber = (function (_super) {
    __extends(DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
var Set_1 = __webpack_require__(480);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
exports.distinct = distinct;
var DistinctOperator = (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctSubscriber = (function (_super) {
    __extends(DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.values = new Set_1.Set();
        if (flushes) {
            this.add(subscribeToResult_1.subscribeToResult(this, flushes));
        }
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilChanged_1 = __webpack_require__(48);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };
}
exports.elementAt = elementAt;
var ElementAtOperator = (function () {
    function ElementAtOperator(index, defaultValue) {
        this.index = index;
        this.defaultValue = defaultValue;
        if (index < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    ElementAtOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));
    };
    return ElementAtOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ElementAtSubscriber = (function (_super) {
    __extends(ElementAtSubscriber, _super);
    function ElementAtSubscriber(destination, index, defaultValue) {
        _super.call(this, destination);
        this.index = index;
        this.defaultValue = defaultValue;
    }
    ElementAtSubscriber.prototype._next = function (x) {
        if (this.index-- === 0) {
            this.destination.next(x);
            this.destination.complete();
        }
    };
    ElementAtSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index >= 0) {
            if (typeof this.defaultValue !== 'undefined') {
                destination.next(this.defaultValue);
            }
            else {
                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);
            }
        }
        destination.complete();
    };
    return ElementAtSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
exports.every = every;
var EveryOperator = (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var EverySubscriber = (function (_super) {
    __extends(EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
        this.index = 0;
        this.thisArg = thisArg || this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=every.js.map

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
exports.exhaust = exhaust;
var SwitchFirstOperator = (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstSubscriber = (function (_super) {
    __extends(SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        _super.call(this, destination);
        this.hasCompleted = false;
        this.hasSubscription = false;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };
}
exports.exhaustMap = exhaustMap;
var SwitchFirstMapOperator = (function () {
    function SwitchFirstMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchFirstMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstMapSubscriber = (function (_super) {
    __extends(SwitchFirstMapSubscriber, _super);
    function SwitchFirstMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.hasSubscription = false;
        this.hasCompleted = false;
        this.index = 0;
    }
    SwitchFirstMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {
        var index = this.index++;
        var destination = this.destination;
        try {
            var result = this.project(value, index);
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        try {
            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
            destination.next(result);
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
exports.expand = expand;
var ExpandOperator = (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());
exports.ExpandOperator = ExpandOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ExpandSubscriber = (function (_super) {
    __extends(ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        _super.call(this, destination);
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
        this.index = 0;
        this.active = 0;
        this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            this.buffer = [];
        }
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            var result = tryCatch_1.tryCatch(this.project)(value, index);
            if (result === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else if (!this.scheduler) {
                this.subscribeToProjection(result, value, index);
            }
            else {
                var state = { subscriber: this, result: result, value: value, index: index };
                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.ExpandSubscriber = ExpandSubscriber;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(5);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
exports.finalize = finalize;
var FinallyOperator = (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FinallySubscriber = (function (_super) {
    __extends(FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        _super.call(this, destination);
        this.add(new Subscription_1.Subscription(callback));
    }
    return FinallySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=finalize.js.map

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var find_1 = __webpack_require__(50);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new find_1.FindValueOperator(predicate, source, true, thisArg)); };
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(38);
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };
}
exports.first = first;
var FirstOperator = (function () {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    FirstOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return FirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FirstSubscriber = (function (_super) {
    __extends(FirstSubscriber, _super);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.index = 0;
        this.hasCompleted = false;
        this._emitted = false;
    }
    FirstSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._emit = function (value, index) {
        if (this.resultSelector) {
            this._tryResultSelector(value, index);
            return;
        }
        this._emitFinal(value);
    };
    FirstSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this._emitFinal(result);
    };
    FirstSubscriber.prototype._emitFinal = function (value) {
        var destination = this.destination;
        if (!this._emitted) {
            this._emitted = true;
            destination.next(value);
            destination.complete();
            this.hasCompleted = true;
        }
    };
    FirstSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
            destination.next(this.defaultValue);
            destination.complete();
        }
        else if (!this.hasCompleted) {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return FirstSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=first.js.map

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subscription_1 = __webpack_require__(5);
var Observable_1 = __webpack_require__(0);
var Subject_1 = __webpack_require__(6);
var Map_1 = __webpack_require__(478);
var FastMap_1 = __webpack_require__(476);
/* tslint:enable:max-line-length */
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
exports.groupBy = groupBy;
var GroupByOperator = (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupBySubscriber = (function (_super) {
    __extends(GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
        this.groups = null;
        this.attemptedToUnsubscribe = false;
        this.count = 0;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupDurationSubscriber = (function (_super) {
    __extends(GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        _super.call(this, group);
        this.key = key;
        this.group = group;
        this.parent = parent;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    /** @deprecated internal use only */ GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(Subscriber_1.Subscriber));
/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */
var GroupedObservable = (function (_super) {
    __extends(GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        _super.call(this);
        this.key = key;
        this.groupSubject = groupSubject;
        this.refCountSubscription = refCountSubscription;
    }
    /** @deprecated internal use only */ GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new Subscription_1.Subscription();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(Observable_1.Observable));
exports.GroupedObservable = GroupedObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerRefCountSubscription = (function (_super) {
    __extends(InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        _super.call(this);
        this.parent = parent;
        parent.count++;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(Subscription_1.Subscription));
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var noop_1 = __webpack_require__(57);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
exports.ignoreElements = ignoreElements;
var IgnoreElementsOperator = (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IgnoreElementsSubscriber = (function (_super) {
    __extends(IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        _super.apply(this, arguments);
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
        noop_1.noop();
    };
    return IgnoreElementsSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
exports.isEmpty = isEmpty;
var IsEmptyOperator = (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IsEmptySubscriber = (function (_super) {
    __extends(IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        _super.call(this, destination);
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(38);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - The condition any source emitted item has to satisfy.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };
}
exports.last = last;
var LastOperator = (function () {
    function LastOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    LastOperator.prototype.call = function (observer, source) {
        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return LastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var LastSubscriber = (function (_super) {
    __extends(LastSubscriber, _super);
    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.hasValue = false;
        this.index = 0;
        if (typeof defaultValue !== 'undefined') {
            this.lastValue = defaultValue;
            this.hasValue = true;
        }
    }
    LastSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.lastValue = result;
        this.hasValue = true;
    };
    LastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.hasValue) {
            destination.next(this.lastValue);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return LastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=last.js.map

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
exports.mapTo = mapTo;
var MapToOperator = (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapToSubscriber = (function (_super) {
    __extends(MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        _super.call(this, destination);
        this.value = value;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Notification_1 = __webpack_require__(17);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
exports.materialize = materialize;
var MaterializeOperator = (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MaterializeSubscriber = (function (_super) {
    __extends(MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(Notification_1.Notification.createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(21);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return reduce_1.reduce(max);
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var merge_1 = __webpack_require__(30);
var merge_2 = __webpack_require__(30);
exports.mergeStatic = merge_2.merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {ObservableInput} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} An Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function (source) { return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables))); };
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };
}
exports.mergeMapTo = mergeMapTo;
// TODO: Figure out correct signature here: an Operator<Observable<T>, R>
//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>
var MergeMapToOperator = (function () {
    function MergeMapToOperator(ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapToOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));
    };
    return MergeMapToOperator;
}());
exports.MergeMapToOperator = MergeMapToOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapToSubscriber = (function (_super) {
    __extends(MergeMapToSubscriber, _super);
    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapToSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var resultSelector = this.resultSelector;
            var index = this.index++;
            var ish = this.ish;
            var destination = this.destination;
            this.active++;
            this._innerSub(ish, destination, resultSelector, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapToSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    MergeMapToSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapToSubscriber = MergeMapToSubscriber;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
exports.mergeScan = mergeScan;
var MergeScanOperator = (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());
exports.MergeScanOperator = MergeScanOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeScanSubscriber = (function (_super) {
    __extends(MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.acc = acc;
        this.concurrent = concurrent;
        this.hasValue = false;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);
            var destination = this.destination;
            if (ish === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.active++;
                this._innerSub(ish, value, index);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeScanSubscriber = MergeScanSubscriber;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(21);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return reduce_1.reduce(min);
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
exports.pairwise = pairwise;
var PairwiseOperator = (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var PairwiseSubscriber = (function (_super) {
    __extends(PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        _super.call(this, destination);
        this.hasPrev = false;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        if (this.hasPrev) {
            this.destination.next([this.prev, value]);
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
    };
    return PairwiseSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var not_1 = __webpack_require__(482);
var filter_1 = __webpack_require__(49);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return function (source) { return [
        filter_1.filter(predicate, thisArg)(source),
        filter_1.filter(not_1.not(predicate, thisArg))(source)
    ]; };
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var map_1 = __webpack_require__(19);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return map_1.map(plucker(properties, length))(source); };
}
exports.pluck = pluck;
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subject_1 = __webpack_require__(6);
var multicast_1 = __webpack_require__(15);
/* tslint:enable:max-line-length */
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return selector ?
        multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :
        multicast_1.multicast(new Subject_1.Subject());
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BehaviorSubject_1 = __webpack_require__(65);
var multicast_1 = __webpack_require__(15);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return function (source) { return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source); };
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncSubject_1 = __webpack_require__(28);
var multicast_1 = __webpack_require__(15);
function publishLast() {
    return function (source) { return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source); };
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ReplaySubject_1 = __webpack_require__(29);
var multicast_1 = __webpack_require__(15);
/* tslint:enable:max-line-length */
function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
    return function (source) { return multicast_1.multicast(function () { return subject; }, selector)(source); };
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(11);
var race_1 = __webpack_require__(43);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        // if the only argument is an array, it was most likely called with
        // `pair([obs1, obs2, ...])`
        if (observables.length === 1 && isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));
    };
}
exports.race = race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyObservable_1 = __webpack_require__(13);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    return function (source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
exports.repeat = repeat;
var RepeatOperator = (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatSubscriber = (function (_super) {
    __extends(RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
exports.repeatWhen = repeatWhen;
var RepeatWhenOperator = (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatWhenSubscriber = (function (_super) {
    __extends(RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
        this.sourceIsBeingSubscribedTo = true;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next();
        }
    };
    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.notifications = null;
        this.retries = null;
        this.retriesSubscription = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this.notifications = notifications;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new Subject_1.Subject();
        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);
        if (retries === errorObject_1.errorObject) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
    };
    return RepeatWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
exports.retry = retry;
var RetryOperator = (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetrySubscriber = (function (_super) {
    __extends(RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=retry.js.map

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
exports.retryWhen = retryWhen;
var RetryWhenOperator = (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetryWhenSubscriber = (function (_super) {
    __extends(RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new Subject_1.Subject();
                retries = tryCatch_1.tryCatch(this.notifier)(errors);
                if (retries === errorObject_1.errorObject) {
                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);
                }
                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    /** @deprecated internal use only */ RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.errors = null;
        this.retries = null;
        this.retriesSubscription = null;
        this._unsubscribeAndRecycle();
        this.errors = errors;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
exports.sample = sample;
var SampleOperator = (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleSubscriber = (function (_super) {
    __extends(SampleSubscriber, _super);
    function SampleSubscriber() {
        _super.apply(this, arguments);
        this.hasValue = false;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=sample.js.map

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(4);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
exports.sampleTime = sampleTime;
var SampleTimeOperator = (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleTimeSubscriber = (function (_super) {
    __extends(SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        _super.call(this, destination);
        this.period = period;
        this.scheduler = scheduler;
        this.hasValue = false;
        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };
}
exports.sequenceEqual = sequenceEqual;
var SequenceEqualOperator = (function () {
    function SequenceEqualOperator(compareTo, comparor) {
        this.compareTo = compareTo;
        this.comparor = comparor;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
    };
    return SequenceEqualOperator;
}());
exports.SequenceEqualOperator = SequenceEqualOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SequenceEqualSubscriber = (function (_super) {
    __extends(SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparor) {
        _super.call(this, destination);
        this.compareTo = compareTo;
        this.comparor = comparor;
        this._a = [];
        this._b = [];
        this._oneComplete = false;
        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            if (comparor) {
                areEqual = tryCatch_1.tryCatch(comparor)(a, b);
                if (areEqual === errorObject_1.errorObject) {
                    this.destination.error(errorObject_1.errorObject.e);
                }
            }
            else {
                areEqual = a === b;
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    return SequenceEqualSubscriber;
}(Subscriber_1.Subscriber));
exports.SequenceEqualSubscriber = SequenceEqualSubscriber;
var SequenceEqualCompareToSubscriber = (function (_super) {
    __extends(SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        _super.call(this, destination);
        this.parent = parent;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent._complete();
    };
    return SequenceEqualCompareToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var multicast_1 = __webpack_require__(15);
var refCount_1 = __webpack_require__(52);
var Subject_1 = __webpack_require__(6);
function shareSubjectFactory() {
    return new Subject_1.Subject();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .multicast(() => new Subject()).refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */
function share() {
    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ReplaySubject_1 = __webpack_require__(29);
/**
 * @method shareReplay
 * @owner Observable
 */
function shareReplay(bufferSize, windowTime, scheduler) {
    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };
}
exports.shareReplay = shareReplay;
function shareReplayOperator(bufferSize, windowTime, scheduler) {
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        if (!subject || hasError) {
            hasError = false;
            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subject.complete();
                },
            });
        }
        var innerSub = subject.subscribe(this);
        return function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && refCount === 0 && isComplete) {
                subscription.unsubscribe();
            }
        };
    };
}
;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var EmptyError_1 = __webpack_require__(38);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
exports.single = single;
var SingleOperator = (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SingleSubscriber = (function (_super) {
    __extends(SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.seenValue = false;
        this.index = 0;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return SingleSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=single.js.map

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
exports.skip = skip;
var SkipOperator = (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipSubscriber = (function (_super) {
    __extends(SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skip.js.map

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */
function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
exports.skipLast = skipLast;
var SkipLastOperator = (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            // If we don't want to skip any values then just subscribe
            // to Subscriber without any further logic.
            return source.subscribe(new Subscriber_1.Subscriber(subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipLastSubscriber = (function (_super) {
    __extends(SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        _super.call(this, destination);
        this._skipCount = _skipCount;
        this._count = 0;
        this._ring = new Array(_skipCount);
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
exports.skipUntil = skipUntil;
var SkipUntilOperator = (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));
    };
    return SkipUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipUntilSubscriber = (function (_super) {
    __extends(SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.hasValue = false;
        this.isInnerStopped = false;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype._complete = function () {
        if (this.isInnerStopped) {
            _super.prototype._complete.call(this);
        }
        else {
            this.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
        this.isInnerStopped = true;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    return SkipUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
exports.skipWhile = skipWhile;
var SkipWhileOperator = (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipWhileSubscriber = (function (_super) {
    __extends(SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.skipping = true;
        this.index = 0;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(12);
var ScalarObservable_1 = __webpack_require__(42);
var EmptyObservable_1 = __webpack_require__(13);
var concat_1 = __webpack_require__(18);
var isScheduler_1 = __webpack_require__(10);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    return function (source) {
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len === 1) {
            return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);
        }
        else if (len > 1) {
            return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);
        }
        else {
            return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);
        }
    };
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMap_1 = __webpack_require__(54);
var identity_1 = __webpack_require__(162);
function switchAll() {
    return switchMap_1.switchMap(identity_1.identity);
}
exports.switchAll = switchAll;
//# sourceMappingURL=switchAll.js.map

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };
}
exports.switchMapTo = switchMapTo;
var SwitchMapToOperator = (function () {
    function SwitchMapToOperator(observable, resultSelector) {
        this.observable = observable;
        this.resultSelector = resultSelector;
    }
    SwitchMapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));
    };
    return SwitchMapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapToSubscriber = (function (_super) {
    __extends(SwitchMapToSubscriber, _super);
    function SwitchMapToSubscriber(destination, inner, resultSelector) {
        _super.call(this, destination);
        this.inner = inner;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapToSubscriber.prototype._next = function (value) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));
    };
    SwitchMapToSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    /** @deprecated internal use only */ SwitchMapToSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    return SwitchMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
var EmptyObservable_1 = __webpack_require__(13);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    return function (source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
exports.take = take;
var TakeOperator = (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeSubscriber = (function (_super) {
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=take.js.map

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
exports.takeUntil = takeUntil;
var TakeUntilOperator = (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));
    };
    return TakeUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeUntilSubscriber = (function (_super) {
    __extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    return TakeUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };
}
exports.takeWhile = takeWhile;
var TakeWhileOperator = (function () {
    function TakeWhileOperator(predicate) {
        this.predicate = predicate;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
    };
    return TakeWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeWhileSubscriber = (function (_super) {
    __extends(TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.index = 0;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/* tslint:enable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @name tap
 */
function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
exports.tap = tap;
var DoOperator = (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DoSubscriber = (function (_super) {
    __extends(DoSubscriber, _super);
    function DoSubscriber(destination, nextOrObserver, error, complete) {
        _super.call(this, destination);
        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);
        safeSubscriber.syncErrorThrowable = true;
        this.add(safeSubscriber);
        this.safeSubscriber = safeSubscriber;
    }
    DoSubscriber.prototype._next = function (value) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.next(value);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.next(value);
        }
    };
    DoSubscriber.prototype._error = function (err) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.error(err);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.error(err);
        }
    };
    DoSubscriber.prototype._complete = function () {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.complete();
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.complete();
        }
    };
    return DoSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=tap.js.map

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(4);
var throttle_1 = __webpack_require__(34);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
exports.throttleTime = throttleTime;
var ThrottleTimeOperator = (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleTimeSubscriber = (function (_super) {
    __extends(ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
        this._hasTrailingValue = false;
        this._trailingValue = null;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var async_1 = __webpack_require__(4);
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };
}
exports.timeInterval = timeInterval;
var TimeInterval = (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());
exports.TimeInterval = TimeInterval;
;
var TimeIntervalOperator = (function () {
    function TimeIntervalOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimeIntervalOperator.prototype.call = function (observer, source) {
        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));
    };
    return TimeIntervalOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeIntervalSubscriber = (function (_super) {
    __extends(TimeIntervalSubscriber, _super);
    function TimeIntervalSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.lastTime = 0;
        this.lastTime = scheduler.now();
    }
    TimeIntervalSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        var span = now - this.lastTime;
        this.lastTime = now;
        this.destination.next(new TimeInterval(value, span));
    };
    return TimeIntervalSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(4);
var isDate_1 = __webpack_require__(40);
var Subscriber_1 = __webpack_require__(1);
var TimeoutError_1 = __webpack_require__(159);
/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */
function timeout(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };
}
exports.timeout = timeout;
var TimeoutOperator = (function () {
    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
    }
    TimeoutOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));
    };
    return TimeoutOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutSubscriber = (function (_super) {
    __extends(TimeoutSubscriber, _super);
    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
        this.action = null;
        this.scheduleTimeout();
    }
    TimeoutSubscriber.dispatchTimeout = function (subscriber) {
        subscriber.error(subscriber.errorInstance);
    };
    TimeoutSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            // Recycle the action if we've already scheduled one. All the production
            // Scheduler Actions mutate their state/delay time and return themeselves.
            // VirtualActions are immutable, so they create and return a clone. In this
            // case, we need to set the action reference to the most recent VirtualAction,
            // to ensure that's the one we clone from next time.
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    /** @deprecated internal use only */ TimeoutSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.errorInstance = null;
    };
    return TimeoutSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(4);
var isDate_1 = __webpack_require__(40);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 *
 * Errors if Observable does not emit a value in given time span, in case of which
 * subscribes to the second Observable.
 *
 * <span class="informal">It's a version of `timeout` operator that let's you specify fallback Observable.</span>
 *
 * <img src="./img/timeoutWith.png" width="100%">
 *
 * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,
 * still accepting as a first argument either a number or a Date, which control - respectively -
 * when values of source Observable should be emitted or when it should complete.
 *
 * The only difference is that it accepts a second, required parameter. This parameter
 * should be an Observable which will be subscribed when source Observable fails any timeout check.
 * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting
 * values from second Observable. Note that this fallback Observable is not checked for timeouts
 * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second
 * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that
 * stream completes, it completes as well.
 *
 * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided
 * here - as a third, optional parameter. It still is used to schedule timeout checks and -
 * as a consequence - when second Observable will be subscribed, since subscription happens
 * immediately after failing check.
 *
 * @example <caption>Add fallback observable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const minutes = Rx.Observable.interval(60 * 1000);
 *
 * seconds.timeoutWith(900, minutes)
 *     .subscribe(
 *         value => console.log(value), // After 900ms, will start emitting `minutes`,
 *                                      // since first value of `seconds` will not arrive fast enough.
 *         err => console.log(err) // Would be called after 900ms in case of `timeout`,
 *                                 // but here will never be called.
 *     );
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable
 *                          passed as a second parameter.
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) {
        var absoluteTimeout = isDate_1.isDate(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
exports.timeoutWith = timeoutWith;
var TimeoutWithOperator = (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutWithSubscriber = (function (_super) {
    __extends(TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
        this.action = null;
        this.scheduleTimeout();
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            // Recycle the action if we've already scheduled one. All the production
            // Scheduler Actions mutate their state/delay time and return themeselves.
            // VirtualActions are immutable, so they create and return a clone. In this
            // case, we need to set the action reference to the most recent VirtualAction,
            // to ensure that's the one we clone from next time.
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    /** @deprecated internal use only */ TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(21);
function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return reduce_1.reduce(toArrayReducer, []);
}
exports.toArray = toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
exports.window = window;
var WindowOperator = (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        _super.call(this, destination);
        this.window = new Subject_1.Subject();
        destination.next(this.window);
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    /** @deprecated internal use only */ WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new Subject_1.Subject();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=window.js.map

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
var Subject_1 = __webpack_require__(6);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
exports.windowCount = windowCount;
var WindowCountOperator = (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowCountSubscriber = (function (_super) {
    __extends(WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
        this.windows = [new Subject_1.Subject()];
        this.count = 0;
        destination.next(this.windows[0]);
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new Subject_1.Subject();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    /** @deprecated internal use only */ WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var async_1 = __webpack_require__(4);
var Subscriber_1 = __webpack_require__(1);
var isNumeric_1 = __webpack_require__(26);
var isScheduler_1 = __webpack_require__(10);
function windowTime(windowTimeSpan) {
    var scheduler = async_1.async;
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (isScheduler_1.isScheduler(arguments[3])) {
        scheduler = arguments[3];
    }
    if (isScheduler_1.isScheduler(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (isNumeric_1.isNumeric(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (isScheduler_1.isScheduler(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (isNumeric_1.isNumeric(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
exports.windowTime = windowTime;
var WindowTimeOperator = (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = (function (_super) {
    __extends(CountedSubject, _super);
    function CountedSubject() {
        _super.apply(this, arguments);
        this._numberOfNextedValues = 0;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(Subject_1.Subject));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowTimeSubscriber = (function (_super) {
    __extends(WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
        this.windows = [];
        var window = this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };
            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(5);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
exports.windowToggle = windowToggle;
var WindowToggleOperator = (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowToggleSubscriber = (function (_super) {
    __extends(WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.error(err);
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.complete();
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    /** @deprecated internal use only */ WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.unsubscribe();
                context.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingSelector = this.closingSelector;
            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);
            if (closingNotifier === errorObject_1.errorObject) {
                return this.error(errorObject_1.errorObject.e);
            }
            else {
                var window_1 = new Subject_1.Subject();
                var subscription = new Subscription_1.Subscription();
                var context = { window: window_1, subscription: subscription };
                this.contexts.push(context);
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
                if (innerSubscription.closed) {
                    this.closeWindow(this.contexts.length - 1);
                }
                else {
                    innerSubscription.context = context;
                    subscription.add(innerSubscription);
                }
                this.destination.next(window_1);
            }
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
exports.windowWhen = windowWhen;
var WindowOperator = (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.closingSelector = closingSelector;
        this.openWindow();
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) { innerSub = null; }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new Subject_1.Subject();
        this.destination.next(window);
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            var err = errorObject_1.errorObject.e;
            this.destination.error(err);
            this.window.error(err);
        }
        else {
            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));
        }
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(2);
var subscribeToResult_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
exports.withLatestFrom = withLatestFrom;
var WithLatestFromOperator = (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WithLatestFromSubscriber = (function (_super) {
    __extends(WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        _super.call(this, destination);
        this.observables = observables;
        this.project = project;
        this.toRespond = [];
        var len = observables.length;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
        }
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(35);
function zipAll(project) {
    return function (source) { return source.lift(new zip_1.ZipOperator(project)); };
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
var AsyncScheduler_1 = __webpack_require__(23);
var VirtualTimeScheduler = (function (_super) {
    __extends(VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        var _this = this;
        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }
        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }
        _super.call(this, SchedulerAction, function () { return _this.frame; });
        this.maxFrames = maxFrames;
        this.frame = 0;
        this.index = -1;
    }
    /**
     * Prompt the Scheduler to execute all of its queued actions, therefore
     * clearing its queue.
     * @return {void}
     */
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.VirtualTimeScheduler = VirtualTimeScheduler;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var VirtualAction = (function (_super) {
    __extends(VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) { index = scheduler.index += 1; }
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.index = index;
        this.active = true;
        this.index = scheduler.index = index;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        // If an action is rescheduled, we save allocations by mutating its state,
        // pushing it to the end of the scheduler queue, and recycling the action.
        // But since the VirtualTimeScheduler is used for testing, VirtualActions
        // must be immutable so they can be inspected later.
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(AsyncAction_1.AsyncAction));
exports.VirtualAction = VirtualAction;
//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsapAction_1 = __webpack_require__(467);
var AsapScheduler_1 = __webpack_require__(468);
/**
 *
 * Asap Scheduler
 *
 * <span class="informal">Perform task as fast as it can be performed asynchronously</span>
 *
 * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task
 * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing
 * code to end and then it will try to execute given task as fast as possible.
 *
 * `asap` scheduler will do its best to minimize time between end of currently executing code
 * and start of scheduled task. This makes it best candidate for performing so called "deferring".
 * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves
 * some (although minimal) unwanted delay.
 *
 * Note that using `asap` scheduler does not necessarily mean that your task will be first to process
 * after currently executing code. In particular, if some task was also scheduled with `asap` before,
 * that task will execute first. That being said, if you need to schedule task asynchronously, but
 * as soon as possible, `asap` scheduler is your best bet.
 *
 * @example <caption>Compare async and asap scheduler</caption>
 *
 * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...
 * Rx.Scheduler.asap.schedule(() => console.log('asap'));
 *
 * // Logs:
 * // "asap"
 * // "async"
 * // ... but 'asap' goes first!
 *
 * @static true
 * @name asap
 * @owner Scheduler
 */
exports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
//# sourceMappingURL=asap.js.map

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var QueueAction_1 = __webpack_require__(469);
var QueueScheduler_1 = __webpack_require__(470);
/**
 *
 * Queue Scheduler
 *
 * <span class="informal">Put every next task on a queue, instead of executing it immediately</span>
 *
 * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.
 *
 * When used without delay, it schedules given task synchronously - executes it right when
 * it is scheduled. However when called recursively, that is when inside the scheduled task,
 * another task is scheduled with queue scheduler, instead of executing immediately as well,
 * that task will be put on a queue and wait for current one to finish.
 *
 * This means that when you execute task with `queue` scheduler, you are sure it will end
 * before any other task scheduled with that scheduler will start.
 *
 * @examples <caption>Schedule recursively first, then do something</caption>
 *
 * Rx.Scheduler.queue.schedule(() => {
 *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue
 *
 *   console.log('first');
 * });
 *
 * // Logs:
 * // "first"
 * // "second"
 *
 *
 * @example <caption>Reschedule itself recursively</caption>
 *
 * Rx.Scheduler.queue.schedule(function(state) {
 *   if (state !== 0) {
 *     console.log('before', state);
 *     this.schedule(state - 1); // `this` references currently executing Action,
 *                               // which we reschedule with new state
 *     console.log('after', state);
 *   }
 * }, 0, 3);
 *
 * // In scheduler that runs recursively, you would expect:
 * // "before", 3
 * // "before", 2
 * // "before", 1
 * // "after", 1
 * // "after", 2
 * // "after", 3
 *
 * // But with queue it logs:
 * // "before", 3
 * // "after", 3
 * // "before", 2
 * // "after", 2
 * // "before", 1
 * // "after", 1
 *
 *
 * @static true
 * @name queue
 * @owner Scheduler
 */
exports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
//# sourceMappingURL=queue.js.map

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog = (function () {
    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {
        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }
        this.subscribedFrame = subscribedFrame;
        this.unsubscribedFrame = unsubscribedFrame;
    }
    return SubscriptionLog;
}());
exports.SubscriptionLog = SubscriptionLog;
//# sourceMappingURL=SubscriptionLog.js.map

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog_1 = __webpack_require__(157);
var SubscriptionLoggable = (function () {
    function SubscriptionLoggable() {
        this.subscriptions = [];
    }
    SubscriptionLoggable.prototype.logSubscribedFrame = function () {
        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));
        return this.subscriptions.length - 1;
    };
    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {
        var subscriptionLogs = this.subscriptions;
        var oldSubscriptionLog = subscriptionLogs[index];
        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());
    };
    return SubscriptionLoggable;
}());
exports.SubscriptionLoggable = SubscriptionLoggable;
//# sourceMappingURL=SubscriptionLoggable.js.map

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when duetime elapses.
 *
 * @see {@link timeout}
 *
 * @class TimeoutError
 */
var TimeoutError = (function (_super) {
    __extends(TimeoutError, _super);
    function TimeoutError() {
        var err = _super.call(this, 'Timeout has occurred');
        this.name = err.name = 'TimeoutError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return TimeoutError;
}(Error));
exports.TimeoutError = TimeoutError;
//# sourceMappingURL=TimeoutError.js.map

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this);
        this.errors = errors;
        var err = Error.call(this, errors ?
            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
        this.name = err.name = 'UnsubscriptionError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function applyMixins(derivedCtor, baseCtors) {
    for (var i = 0, len = baseCtors.length; i < len; i++) {
        var baseCtor = baseCtors[i];
        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
            var name_1 = propertyKeys[j];
            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
        }
    }
}
exports.applyMixins = applyMixins;
//# sourceMappingURL=applyMixins.js.map

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function identity(x) {
    return x;
}
exports.identity = identity;
//# sourceMappingURL=identity.js.map

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArrayLike.js.map

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;
//# sourceMappingURL=isObject.js.map

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isPromise(value) {
    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
exports.isPromise = isPromise;
//# sourceMappingURL=isPromise.js.map

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(484);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62)))

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
//modules
var core_module_1 = __webpack_require__(16);
//services
var collectionconfigservice_1 = __webpack_require__(524);
var collectionservice_1 = __webpack_require__(525);
//controllers
var collections_1 = __webpack_require__(519);
var createcollection_1 = __webpack_require__(521);
var confirmationcontroller_1 = __webpack_require__(520);
var entity_createcollection_1 = __webpack_require__(522);
//directives
var swcollection_1 = __webpack_require__(498);
var swaddfilterbuttons_1 = __webpack_require__(497);
var swdisplayoptions_1 = __webpack_require__(513);
var swdisplayitem_1 = __webpack_require__(511);
var swdisplayitemaggregate_1 = __webpack_require__(512);
var swcollectiontable_1 = __webpack_require__(499);
var swcolumnitem_1 = __webpack_require__(500);
var swconditioncriteria_1 = __webpack_require__(501);
var swcriteria_1 = __webpack_require__(502);
var swcriteriaboolean_1 = __webpack_require__(503);
var swcriteriadate_1 = __webpack_require__(504);
var swcriteriamanytomany_1 = __webpack_require__(505);
var swcriteriamanytoone_1 = __webpack_require__(506);
var swcriterianumber_1 = __webpack_require__(507);
var swcriteriaonetomany_1 = __webpack_require__(508);
var swcriteriarelatedobject_1 = __webpack_require__(509);
var swcriteriastring_1 = __webpack_require__(510);
var sweditfilteritem_1 = __webpack_require__(514);
var swfiltergroups_1 = __webpack_require__(516);
var swfilteritem_1 = __webpack_require__(517);
var swfiltergroupitem_1 = __webpack_require__(515);
var swrestrictionconfig_1 = __webpack_require__(518);
//filters
var aggregatefilter_1 = __webpack_require__(523);
var collectionmodule = angular.module('hibachi.collection', [core_module_1.coremodule.name])
    .config([function () {
    }]).run([function () {
    }])
    //constants
    .constant('collectionPartialsPath', 'collection/components/')
    //controllers
    .controller('collections', collections_1.CollectionController)
    .controller('confirmationController', confirmationcontroller_1.ConfirmationController)
    .controller('createCollection', createcollection_1.CreateCollection)
    .controller('entity_createcollection', entity_createcollection_1.CollectionCreateController)
    //services
    .factory('collectionConfigService', ['rbkeyService', '$hibachi', 'utilityService', 'observerService', function (rbkeyService, $hibachi, utilityService, observerService) { return new collectionconfigservice_1.CollectionConfig(rbkeyService, $hibachi, utilityService, observerService); }])
    .service('collectionService', collectionservice_1.CollectionService)
    //directives
    .directive('swRestrictionConfig', swrestrictionconfig_1.SWRestrictionConfig.Factory())
    .directive('swCollection', swcollection_1.SWCollection.Factory())
    .directive('swAddFilterButtons', swaddfilterbuttons_1.SWAddFilterButtons.Factory())
    .directive('swDisplayOptions', swdisplayoptions_1.SWDisplayOptions.Factory())
    .directive('swDisplayItem', swdisplayitem_1.SWDisplayItem.Factory())
    .directive('swDisplayItemAggregate', swdisplayitemaggregate_1.SWDisplayItemAggregate.Factory())
    .directive('swCollectionTable', swcollectiontable_1.SWCollectionTable.Factory())
    .directive('swColumnItem', swcolumnitem_1.SWColumnItem.Factory())
    .directive('swConditionCriteria', swconditioncriteria_1.SWConditionCriteria.Factory())
    .directive('swCriteria', swcriteria_1.SWCriteria.Factory())
    .directive('swCriteriaBoolean', swcriteriaboolean_1.SWCriteriaBoolean.Factory())
    .directive('swCriteriaDate', swcriteriadate_1.SWCriteriaDate.Factory())
    .directive('swCriteriaManyToMany', swcriteriamanytomany_1.SWCriteriaManyToMany.Factory())
    .directive('swCriteriaManyToOne', swcriteriamanytoone_1.SWCriteriaManyToOne.Factory())
    .directive('swCriteriaNumber', swcriterianumber_1.SWCriteriaNumber.Factory())
    .directive('swCriteriaOneToMany', swcriteriaonetomany_1.SWCriteriaOneToMany.Factory())
    .directive('swCriteriaRelatedObject', swcriteriarelatedobject_1.SWCriteriaRelatedObject.Factory())
    .directive('swCriteriaString', swcriteriastring_1.SWCriteriaString.Factory())
    .directive('swEditFilterItem', sweditfilteritem_1.SWEditFilterItem.Factory())
    .directive('swFilterGroups', swfiltergroups_1.SWFilterGroups.Factory())
    .directive('swFilterItem', swfilteritem_1.SWFilterItem.Factory())
    .directive('swFilterGroupItem', swfiltergroupitem_1.SWFilterGroupItem.Factory())
    //filters
    .filter('aggregateFilter', ['$filter', aggregatefilter_1.AggregateFilter.Factory]);
exports.collectionmodule = collectionmodule;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var BaseObject = /** @class */ (function () {
    //@ngInject
    function BaseObject($injector) {
        var _this = this;
        this.getService = function (serviceName) {
            //return;
            if (_this.$injector.has(serviceName)) {
                //returns a generic service
                return _this.$injector.get(serviceName);
            }
        };
        this.getHibachiScope = function () {
            return _this.getService('publicService');
        };
        this.getAppConfig = function () {
            return _this.getService('appConfig');
        };
        this.$injector = $injector;
        var constructorString = this.constructor.toString();
        this.className = constructorString.match(/\w+/g)[1];
    }
    return BaseObject;
}());
exports.BaseObject = BaseObject;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var basetransient_1 = __webpack_require__(60);
var Request = /** @class */ (function (_super) {
    __extends(Request, _super);
    function Request(url, data, method, headers, $injector) {
        var _this = _super.call(this, $injector) || this;
        _this.loading = true;
        _this.errors = {};
        _this.processResponse = function (response) {
            _this.loading = false;
            if (response.errors) {
                _this.errors = response.errors;
            }
            if (response.messages) {
                _this.messages = response.messages;
            }
        };
        //returns hibachiAction value from url and data;
        _this.getAction = function () {
            var config = _this.getAppConfig();
            //typically hibachiAction
            var actionName = config.action;
            var params = _this.utilityService.getQueryParamsFromUrl(_this.url);
            if (params[actionName]) {
                return params[actionName];
            }
            if (_this.data && _this.data[actionName]) {
                return _this.data[actionName];
            }
            if (_this.url.indexOf('api/scope/') > 0) {
                return _this.extractPublicAction(_this.url);
            }
        };
        _this.extractPublicAction = function (url) {
            //get in between api/scope and / or ? or end of word
            var regex = /\api\/scope\/(.*?)(?=\/|\?|$)/;
            var arr = regex.exec(url);
            return arr[1];
        };
        _this.processSuccess = function (response) {
            _this.processResponse(response);
        };
        _this.processError = function (response) {
            _this.processResponse(response);
        };
        /** used to turn data into a correct format for the post */
        _this.toFormParams = function (data) {
            if (data) {
                return $.param(data);
            }
            else {
                return "";
            }
            //return data = this.serializeData(data) || "";
        };
        _this.serializeData = function (data) {
            // If this is not an object, defer to native stringification.
            if (!angular.isObject(data)) {
                return ((data == null) ? "" : data.toString());
            }
            var buffer = [];
            // Serialize each key in the object.
            for (var name in data) {
                if (!data.hasOwnProperty(name)) {
                    continue;
                }
                var value = data[name];
                buffer.push(encodeURIComponent(name) + "=" + encodeURIComponent((value == null) ? "" : value));
            }
            // Serialize the buffer and clean it up for transportation.
            var source = buffer.join("&").replace(/%20/g, "+");
            return (source);
        };
        _this.headers = headers;
        _this.$q = _this.getService('$q');
        _this.$http = _this.getService('$http');
        _this.$window = _this.getService('$window');
        _this.url = url;
        _this.data = data;
        _this.method = method;
        _this.utilityService = _this.getService('utilityService');
        if (!method) {
            if (data == undefined) {
                method = "get";
            }
            else {
                method = "post";
            }
        }
        var deferred = _this.$q.defer();
        if (method == "post") {
            if (_this.headers['Content-Type'] !== "application/json") {
                data = _this.toFormParams(data);
            }
            //post
            var promise = _this.$http({
                url: url, data: data, headers: _this.headers, method: 'post'
            })
                .success(function (result) {
                _this.processSuccess(result);
                deferred.resolve(result);
            }).error(function (response) {
                _this.processError(response);
                deferred.reject(response);
            });
            _this.promise = deferred.promise;
        }
        else {
            //get
            _this.$http({ url: url, method: 'get' })
                .success(function (result) {
                _this.processSuccess(result);
                deferred.resolve(result);
            }).error(function (reason) {
                _this.processError(reason);
                deferred.reject(reason);
            });
            _this.promise = deferred.promise;
        }
        return _this;
    }
    return Request;
}(basetransient_1.BaseTransient));
exports.Request = Request;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_1 = __webpack_require__(191);
var IStore = /** @class */ (function () {
    //@ngInject
    function IStore(initialState, reducer, middleware) {
        var _this = this;
        this.initialState = initialState;
        this.reducer = reducer;
        this.middleware = middleware;
        this.dispatch = function (action) { return _this.actionStream$.next((action)); };
        this.getInstance = function () {
            return _this.store$;
        };
        this.actionStream$ = new rxjs_1.Subject();
        this.store$ = this.actionStream$.startWith(initialState).scan(reducer);
        if (middleware) {
            this.store$;
        }
        return this;
    }
    return IStore;
}());
exports.IStore = IStore;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
//services
var dialogservice_1 = __webpack_require__(612);
//controllers
var pagedialog_1 = __webpack_require__(611);
var dialogmodule = angular.module('hibachi.dialog', []).config(function () {
})
    //services
    .service('dialogService', dialogservice_1.DialogService)
    //controllers
    .controller('pageDialog', pagedialog_1.PageDialogController)
    //filters
    //constants
    .constant('dialogPartials', 'dialog/components/');
exports.dialogmodule = dialogmodule;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWPropertyDisplayController = /** @class */ (function () {
    //@ngInject
    function SWPropertyDisplayController($filter, utilityService, $injector, metadataService, observerService, listingService) {
        var _this = this;
        this.$filter = $filter;
        this.utilityService = utilityService;
        this.$injector = $injector;
        this.metadataService = metadataService;
        this.observerService = observerService;
        this.listingService = listingService;
        this.saved = false;
        this.$onInit = function () {
            var bindToControllerProps = _this.$injector.get('swPropertyDisplayDirective')[0].bindToController;
            for (var i in bindToControllerProps) {
                if (!_this[i] && _this.swForm && _this.swForm[i]) {
                    _this[i] = _this.swForm[i];
                }
            }
            _this.errors = {};
            _this.edited = false;
            _this.edit = _this.edit || _this.editing;
            _this.editing = _this.editing || _this.edit;
            _this.errorName = _this.errorName || _this.name;
            _this.initialValue = _this.object[_this.property];
            _this.propertyDisplayID = _this.utilityService.createID(32);
            if (angular.isUndefined(_this.showSave)) {
                _this.showSave = true;
            }
            if (angular.isUndefined(_this.inListingDisplay)) {
                _this.inListingDisplay = false;
            }
            if (angular.isUndefined(_this.rowSaveEnabled)) {
                _this.rowSaveEnabled = _this.inListingDisplay;
            }
            if (angular.isDefined(_this.revertToValue) && angular.isUndefined(_this.showRevert)) {
                _this.showRevert = true;
            }
            if (angular.isDefined(_this.revertToValue) && angular.isUndefined(_this.revertText)) {
                _this.revertText = _this.revertToValue;
            }
            if (angular.isUndefined(_this.showRevert)) {
                _this.showRevert = false;
            }
            if (angular.isUndefined(_this.rawFileTarget)) {
                _this.rawFileTarget = _this.property;
            }
            if (angular.isUndefined(_this.editing)) {
                _this.editing = false;
            }
            if (angular.isUndefined(_this.editable)) {
                _this.editable = true;
            }
            if (angular.isUndefined(_this.isHidden)) {
                _this.isHidden = false;
            }
            if (angular.isUndefined(_this.noValidate)) {
                _this.noValidate = false;
            }
            if (angular.isUndefined(_this.inModal)) {
                _this.inModal = false;
            }
            if (angular.isUndefined(_this.optionsArguments)) {
                _this.optionsArguments = {};
            }
            if ((_this.fieldType !== 'hidden' &&
                angular.isUndefined(_this.inListingDisplay)) ||
                (angular.isDefined(_this.inListingDisplay) && !_this.inListingDisplay)) {
                _this.showLabel = true;
            }
            else {
                _this.showLabel = false;
            }
            if (angular.isDefined(_this.pageRecord) && angular.isUndefined(_this.pageRecord.edited)) {
                _this.pageRecord.edited = false;
            }
            _this.applyFilter = function (model, filter) {
                try {
                    return _this.$filter(filter)(model);
                }
                catch (e) {
                    return model;
                }
            };
            //swfproperty logic
            if (angular.isUndefined(_this.fieldType) && _this.object && _this.object.metaData) {
                _this.fieldType = _this.metadataService.getPropertyFieldType(_this.object, _this.propertyIdentifier);
            }
            if (angular.isUndefined(_this.title) && _this.object && _this.object.metaData) {
                _this.labelText = _this.metadataService.getPropertyTitle(_this.object, _this.propertyIdentifier);
            }
            _this.labelText = _this.labelText || _this.title;
            _this.title = _this.title || _this.labelText;
            _this.fieldType = _this.fieldType || "text";
            _this.class = _this.class || "form-control";
            _this.fieldAttributes = _this.fieldAttributes || "";
            _this.label = _this.label || "true";
            _this.labelText = _this.labelText || "";
            _this.labelClass = _this.labelClass || "";
            _this.name = _this.name || "unnamed";
            _this.value = _this.value || _this.initialValue;
            _this.object = _this.object || _this.swForm.object; //this is the process object
            /** handle options */
            if (_this.options && angular.isString(_this.options)) {
                var optionsArray = [];
                optionsArray = _this.options.toString().split(",");
                angular.forEach(optionsArray, function (o) {
                    var newOption = {
                        name: "",
                        value: ""
                    };
                    newOption.name = o;
                    newOption.value = o;
                    _this.optionValues.push(newOption);
                });
            }
            /** handle turning the options into an array of objects */
            /** handle setting the default value for the yes / no element  */
            if (_this.fieldType == "yesno" && (_this.value && angular.isString(_this.value))) {
                _this.selected == _this.value;
            }
            if (angular.isUndefined(_this.hint) && _this.object && _this.object.metaData) {
                _this.hint = _this.metadataService.getPropertyHintByObjectAndPropertyIdentifier(_this.object, _this.propertyIdentifier);
            }
            if ((_this.hasOnChangeCallback || _this.inListingDisplay || _this.onChangeEvent) &&
                (angular.isDefined(_this.swForm) && angular.isDefined(_this.name))) {
                _this.swInputOnChangeEvent = _this.swForm.name + _this.name + 'change';
                _this.observerService.attach(_this.onChange, _this.swInputOnChangeEvent);
            }
        };
        this.onChange = function (result) {
            _this.edited = true;
            if (_this.saved) {
                _this.saved = false;
            }
            if (_this.hasOnChangeCallback) {
                _this.onChangeCallback(result);
            }
            if (_this.inListingDisplay && _this.rowSaveEnabled) {
                _this.listingService.markEdited(_this.listingID, _this.pageRecordIndex, _this.propertyDisplayID, _this.save);
            }
            if (angular.isDefined(_this.onChangeEvent)) {
                _this.observerService.notify(_this.onChangeEvent, result);
            }
        };
        this.clear = function () {
            if (_this.reverted) {
                _this.reverted = false;
                _this.showRevert = true;
            }
            _this.edited = false;
            _this.object.data[_this.property] = _this.initialValue;
            if (_this.inListingDisplay && _this.rowSaveEnabled) {
                _this.listingService.markUnedited(_this.listingID, _this.pageRecordIndex, _this.propertyDisplayID);
            }
        };
        this.revert = function () {
            _this.showRevert = false;
            _this.reverted = true;
            _this.object.data[_this.property] = _this.revertToValue;
            _this.onChange();
        };
        this.save = function () {
            //do this eagerly to hide save will reverse if theres an error
            _this.edited = false;
            _this.saved = true;
            if (!_this.inModal) {
                _this.object.$$save().then(function (response) {
                    if (_this.hasSaveCallback) {
                        _this.saveCallback(response);
                    }
                }, function (reason) {
                    _this.edited = true;
                    _this.saved = false;
                });
            }
            else if (_this.hasModalCallback) {
                _this.modalCallback();
            }
        };
    }
    return SWPropertyDisplayController;
}());
exports.SWPropertyDisplayController = SWPropertyDisplayController;
var SWPropertyDisplay = /** @class */ (function () {
    //@ngInject
    function SWPropertyDisplay($compile, scopeService, coreFormPartialsPath, hibachiPathBuilder, swpropertyPartialPath) {
        var _this = this;
        this.$compile = $compile;
        this.scopeService = scopeService;
        this.coreFormPartialsPath = coreFormPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.swpropertyPartialPath = swpropertyPartialPath;
        this.require = { swForm: "?^swForm", form: "?^form" };
        this.restrict = 'AE';
        this.scope = {};
        this.bindToController = {
            //swfproperty scope
            name: "@?",
            errorName: "@?",
            class: "@?",
            edit: "@?",
            valueObject: "=?",
            valueObjectProperty: "=?",
            propertyIdentifier: "@?",
            valueOptions: "=?",
            fieldAttributes: "@?",
            label: "@?",
            labelText: "@?",
            labelClass: "@?",
            errorText: "@?",
            errorClass: "@?",
            formTemplate: "@?",
            eventAnnouncers: "@",
            hideErrors: '=?',
            value: "@?",
            //swpropertyscope
            property: "@?",
            object: "=?",
            editable: "=?",
            editing: "=?",
            isHidden: "=?",
            title: "=?",
            hint: "@?",
            options: "=?",
            optionsArguments: "=?",
            eagerLoadOptions: "=?",
            isDirty: "=?",
            onChangeCallback: "&?onChange",
            onChangeEvent: "@?",
            saveCallback: "&?",
            fieldType: "@?",
            rawFileTarget: "@?",
            binaryFileTarget: "@?",
            noValidate: "=?",
            inListingDisplay: "=?",
            inModal: "=?",
            modalCallback: "&?",
            hasModalCallback: "=?",
            rowSaveEnabled: "=?",
            revertToValue: "=?",
            revertText: "@?",
            showRevert: "=?",
            showSave: "=?",
            placeholderText: "@",
            placeholderRbKey: "@",
            inputAttributes: "@?",
            optionValues: "=?",
            eventListeners: "=?",
            context: "@?"
        };
        this.controller = SWPropertyDisplayController;
        this.controllerAs = "swPropertyDisplay";
        this.templateUrlPath = "propertydisplay.html";
        this.link = function ($scope, element, attrs, formController) {
            $scope.frmController = formController;
            $scope.swfPropertyDisplay = $scope.swPropertyDisplay;
            if (angular.isDefined(attrs.onChange)) {
                $scope.swPropertyDisplay.hasOnChangeCallback = true;
            }
            else {
                $scope.swPropertyDisplay.hasOnChangeCallback = false;
            }
            if (angular.isDefined(attrs.saveCallback)) {
                $scope.swPropertyDisplay.hasSaveCallback = true;
            }
            else {
                $scope.swPropertyDisplay.hasSaveCallback = false;
            }
            if (angular.isDefined($scope.swPropertyDisplay.inListingDisplay) && $scope.swPropertyDisplay.inListingDisplay) {
                var currentScope = _this.scopeService.getRootParentScope($scope, "pageRecord");
                if (angular.isDefined(currentScope["pageRecord"])) {
                    $scope.swPropertyDisplay.pageRecord = currentScope["pageRecord"];
                }
                var currentScope = _this.scopeService.getRootParentScope($scope, "pageRecordKey");
                if (angular.isDefined(currentScope["pageRecordKey"])) {
                    $scope.swPropertyDisplay.pageRecordIndex = currentScope["pageRecordKey"];
                }
                var currentScope = _this.scopeService.getRootParentScope($scope, "swListingDisplay");
                if (angular.isDefined(currentScope["swListingDisplay"])) {
                    $scope.swPropertyDisplay.listingID = currentScope["swListingDisplay"].tableID;
                }
            }
            if (angular.isDefined($scope.swPropertyDisplay.inModal) && $scope.swPropertyDisplay.inModal) {
                var modalScope = _this.scopeService.getRootParentScope($scope, "swModalLauncher");
                $scope.swPropertyDisplay.modalName = modalScope.swModalLauncher.modalName;
                if (angular.isFunction(modalScope.swModalLauncher.launchModal)) {
                    $scope.swPropertyDisplay.modalCallback = modalScope.swModalLauncher.launchModal;
                    $scope.swPropertyDisplay.hasModalCallback = true;
                }
            }
        };
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath) + swpropertyPartialPath;
    }
    SWPropertyDisplay.Factory = function (swpropertyClass, swpropertyPartialPath) {
        var directive = function ($compile, scopeService, coreFormPartialsPath, hibachiPathBuilder) { return new swpropertyClass($compile, scopeService, coreFormPartialsPath, hibachiPathBuilder, 
        //not an inejctable don't add to $inject. This is in the form.module Factory implementation
        swpropertyPartialPath); };
        directive.$inject = ['$compile', 'scopeService', 'coreFormPartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    SWPropertyDisplay.$inject = ['coreFormPartialsPath', 'hibachiPathBuilder'];
    return SWPropertyDisplay;
}());
exports.SWPropertyDisplay = SWPropertyDisplay;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/// <reference path='../typings/hibachiTypescript.d.ts' />
/// <reference path='../typings/tsd.d.ts' />
/*jshint browser:true */
var basebootstrap_1 = __webpack_require__(488);
var hibachi_module_1 = __webpack_require__(634);
var logger_module_1 = __webpack_require__(651);
//custom bootstrapper
var bootstrapper = /** @class */ (function (_super) {
    __extends(bootstrapper, _super);
    function bootstrapper() {
        var _this = this;
        var angular = _this = _super.call(this, [hibachi_module_1.hibachimodule.name, logger_module_1.loggermodule.name]) || this;
        angular.bootstrap();
        return _this;
    }
    return bootstrapper;
}(basebootstrap_1.BaseBootStrapper));
module.exports = new bootstrapper();


/***/ }),
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */
/***/ (function(module, exports) {

(function() {
  var base64map
      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

  crypt = {
    // Bit-wise rotation left
    rotl: function(n, b) {
      return (n << b) | (n >>> (32 - b));
    },

    // Bit-wise rotation right
    rotr: function(n, b) {
      return (n << (32 - b)) | (n >>> b);
    },

    // Swap big-endian to little-endian and vice versa
    endian: function(n) {
      // If number given, swap endian
      if (n.constructor == Number) {
        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
      }

      // Else, assume array and swap all items
      for (var i = 0; i < n.length; i++)
        n[i] = crypt.endian(n[i]);
      return n;
    },

    // Generate an array of any length of random bytes
    randomBytes: function(n) {
      for (var bytes = []; n > 0; n--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },

    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << (24 - b % 32);
      return words;
    },

    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a hex string
    bytesToHex: function(bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 0xF).toString(16));
      }
      return hex.join('');
    },

    // Convert a hex string to a byte array
    hexToBytes: function(hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },

    // Convert a byte array to a base-64 string
    bytesToBase64: function(bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));
          else
            base64.push('=');
      }
      return base64.join('');
    },

    // Convert a base-64 string to a byte array
    base64ToBytes: function(base64) {
      // Remove non-base-64 characters
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, '');

      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;
          imod4 = ++i % 4) {
        if (imod4 == 0) continue;
        bytes.push(((base64map.indexOf(base64.charAt(i - 1))
            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))
            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));
      }
      return bytes;
    }
  };

  module.exports = crypt;
})();


/***/ }),
/* 188 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 189 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(1);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerSubscriber = (function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        _super.call(this);
        this.parent = parent;
        this.outerValue = outerValue;
        this.outerIndex = outerIndex;
        this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(Subscriber_1.Subscriber));
exports.InnerSubscriber = InnerSubscriber;
//# sourceMappingURL=InnerSubscriber.js.map

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-unused-variable */
// Subject imported before Observable to bypass circular dependency issue since
// Subject extends Observable and Observable references Subject in it's
// definition
var Subject_1 = __webpack_require__(6);
exports.Subject = Subject_1.Subject;
exports.AnonymousSubject = Subject_1.AnonymousSubject;
/* tslint:enable:no-unused-variable */
var Observable_1 = __webpack_require__(0);
exports.Observable = Observable_1.Observable;
// statics
/* tslint:disable:no-use-before-declare */
__webpack_require__(193);
__webpack_require__(194);
__webpack_require__(195);
__webpack_require__(196);
__webpack_require__(197);
__webpack_require__(200);
__webpack_require__(201);
__webpack_require__(202);
__webpack_require__(203);
__webpack_require__(204);
__webpack_require__(205);
__webpack_require__(206);
__webpack_require__(207);
__webpack_require__(208);
__webpack_require__(209);
__webpack_require__(214);
__webpack_require__(210);
__webpack_require__(211);
__webpack_require__(212);
__webpack_require__(213);
__webpack_require__(215);
__webpack_require__(218);
__webpack_require__(216);
__webpack_require__(217);
__webpack_require__(219);
//dom
__webpack_require__(198);
__webpack_require__(199);
//operators
__webpack_require__(222);
__webpack_require__(223);
__webpack_require__(224);
__webpack_require__(225);
__webpack_require__(226);
__webpack_require__(227);
__webpack_require__(228);
__webpack_require__(229);
__webpack_require__(230);
__webpack_require__(231);
__webpack_require__(232);
__webpack_require__(233);
__webpack_require__(234);
__webpack_require__(240);
__webpack_require__(235);
__webpack_require__(236);
__webpack_require__(237);
__webpack_require__(238);
__webpack_require__(239);
__webpack_require__(241);
__webpack_require__(242);
__webpack_require__(243);
__webpack_require__(244);
__webpack_require__(247);
__webpack_require__(248);
__webpack_require__(249);
__webpack_require__(245);
__webpack_require__(250);
__webpack_require__(251);
__webpack_require__(252);
__webpack_require__(253);
__webpack_require__(254);
__webpack_require__(255);
__webpack_require__(256);
__webpack_require__(257);
__webpack_require__(220);
__webpack_require__(221);
__webpack_require__(258);
__webpack_require__(259);
__webpack_require__(246);
__webpack_require__(260);
__webpack_require__(261);
__webpack_require__(262);
__webpack_require__(263);
__webpack_require__(264);
__webpack_require__(265);
__webpack_require__(266);
__webpack_require__(267);
__webpack_require__(268);
__webpack_require__(269);
__webpack_require__(270);
__webpack_require__(271);
__webpack_require__(272);
__webpack_require__(273);
__webpack_require__(274);
__webpack_require__(275);
__webpack_require__(276);
__webpack_require__(277);
__webpack_require__(279);
__webpack_require__(278);
__webpack_require__(280);
__webpack_require__(281);
__webpack_require__(282);
__webpack_require__(283);
__webpack_require__(284);
__webpack_require__(285);
__webpack_require__(286);
__webpack_require__(287);
__webpack_require__(288);
__webpack_require__(289);
__webpack_require__(290);
__webpack_require__(291);
__webpack_require__(292);
__webpack_require__(293);
__webpack_require__(294);
__webpack_require__(295);
__webpack_require__(296);
__webpack_require__(297);
__webpack_require__(298);
__webpack_require__(299);
__webpack_require__(300);
__webpack_require__(301);
__webpack_require__(302);
__webpack_require__(303);
__webpack_require__(304);
__webpack_require__(305);
__webpack_require__(306);
__webpack_require__(307);
__webpack_require__(308);
__webpack_require__(309);
__webpack_require__(310);
__webpack_require__(311);
__webpack_require__(312);
__webpack_require__(313);
__webpack_require__(314);
__webpack_require__(315);
__webpack_require__(316);
__webpack_require__(317);
__webpack_require__(318);
__webpack_require__(319);
__webpack_require__(320);
__webpack_require__(321);
/* tslint:disable:no-unused-variable */
var Subscription_1 = __webpack_require__(5);
exports.Subscription = Subscription_1.Subscription;
var Subscriber_1 = __webpack_require__(1);
exports.Subscriber = Subscriber_1.Subscriber;
var AsyncSubject_1 = __webpack_require__(28);
exports.AsyncSubject = AsyncSubject_1.AsyncSubject;
var ReplaySubject_1 = __webpack_require__(29);
exports.ReplaySubject = ReplaySubject_1.ReplaySubject;
var BehaviorSubject_1 = __webpack_require__(65);
exports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;
var ConnectableObservable_1 = __webpack_require__(68);
exports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;
var Notification_1 = __webpack_require__(17);
exports.Notification = Notification_1.Notification;
var EmptyError_1 = __webpack_require__(38);
exports.EmptyError = EmptyError_1.EmptyError;
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
var ObjectUnsubscribedError_1 = __webpack_require__(39);
exports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;
var TimeoutError_1 = __webpack_require__(159);
exports.TimeoutError = TimeoutError_1.TimeoutError;
var UnsubscriptionError_1 = __webpack_require__(160);
exports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;
var timeInterval_1 = __webpack_require__(75);
exports.TimeInterval = timeInterval_1.TimeInterval;
var timestamp_1 = __webpack_require__(56);
exports.Timestamp = timestamp_1.Timestamp;
var TestScheduler_1 = __webpack_require__(474);
exports.TestScheduler = TestScheduler_1.TestScheduler;
var VirtualTimeScheduler_1 = __webpack_require__(154);
exports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;
var AjaxObservable_1 = __webpack_require__(71);
exports.AjaxResponse = AjaxObservable_1.AjaxResponse;
exports.AjaxError = AjaxObservable_1.AjaxError;
exports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;
var pipe_1 = __webpack_require__(58);
exports.pipe = pipe_1.pipe;
var asap_1 = __webpack_require__(155);
var async_1 = __webpack_require__(4);
var queue_1 = __webpack_require__(156);
var animationFrame_1 = __webpack_require__(471);
var rxSubscriber_1 = __webpack_require__(37);
var iterator_1 = __webpack_require__(24);
var observable_1 = __webpack_require__(36);
var _operators = __webpack_require__(462);
exports.operators = _operators;
/* tslint:enable:no-unused-variable */
/**
 * @typedef {Object} Rx.Scheduler
 * @property {Scheduler} queue Schedules on a queue in the current event frame
 * (trampoline scheduler). Use this for iteration operations.
 * @property {Scheduler} asap Schedules on the micro task queue, which uses the
 * fastest transport mechanism available, either Node.js' `process.nextTick()`
 * or Web Worker MessageChannel or setTimeout or others. Use this for
 * asynchronous conversions.
 * @property {Scheduler} async Schedules work with `setInterval`. Use this for
 * time-based operations.
 * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.
 * Use this for synchronizing with the platform's painting
 */
var Scheduler = {
    asap: asap_1.asap,
    queue: queue_1.queue,
    animationFrame: animationFrame_1.animationFrame,
    async: async_1.async
};
exports.Scheduler = Scheduler;
/**
 * @typedef {Object} Rx.Symbol
 * @property {Symbol|string} rxSubscriber A symbol to use as a property name to
 * retrieve an "Rx safe" Observer from an object. "Rx safety" can be defined as
 * an object that has all of the traits of an Rx Subscriber, including the
 * ability to add and remove subscriptions to the subscription chain and
 * guarantees involving event triggering (can't "next" after unsubscription,
 * etc).
 * @property {Symbol|string} observable A symbol to use as a property name to
 * retrieve an Observable as defined by the [ECMAScript "Observable" spec](https://github.com/zenparsing/es-observable).
 * @property {Symbol|string} iterator The ES6 symbol to use as a property name
 * to retrieve an iterator from an object.
 */
var Symbol = {
    rxSubscriber: rxSubscriber_1.rxSubscriber,
    observable: observable_1.observable,
    iterator: iterator_1.iterator
};
exports.Symbol = Symbol;
//# sourceMappingURL=Rx.js.map

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */
var Scheduler = (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    /**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };
    return Scheduler;
}());
exports.Scheduler = Scheduler;
//# sourceMappingURL=Scheduler.js.map

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindCallback_1 = __webpack_require__(340);
Observable_1.Observable.bindCallback = bindCallback_1.bindCallback;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindNodeCallback_1 = __webpack_require__(341);
Observable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(342);
Observable_1.Observable.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(18);
Observable_1.Observable.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defer_1 = __webpack_require__(343);
Observable_1.Observable.defer = defer_1.defer;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ajax_1 = __webpack_require__(345);
Observable_1.Observable.ajax = ajax_1.ajax;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var webSocket_1 = __webpack_require__(346);
Observable_1.Observable.webSocket = webSocket_1.webSocket;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var empty_1 = __webpack_require__(347);
Observable_1.Observable.empty = empty_1.empty;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var forkJoin_1 = __webpack_require__(348);
Observable_1.Observable.forkJoin = forkJoin_1.forkJoin;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var from_1 = __webpack_require__(72);
Observable_1.Observable.from = from_1.from;
//# sourceMappingURL=from.js.map

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEvent_1 = __webpack_require__(349);
Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEventPattern_1 = __webpack_require__(350);
Observable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromPromise_1 = __webpack_require__(351);
Observable_1.Observable.fromPromise = fromPromise_1.fromPromise;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var generate_1 = __webpack_require__(352);
Observable_1.Observable.generate = generate_1.generate;
//# sourceMappingURL=generate.js.map

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var if_1 = __webpack_require__(353);
Observable_1.Observable.if = if_1._if;
//# sourceMappingURL=if.js.map

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var interval_1 = __webpack_require__(354);
Observable_1.Observable.interval = interval_1.interval;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(30);
Observable_1.Observable.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var never_1 = __webpack_require__(355);
Observable_1.Observable.never = never_1.never;
//# sourceMappingURL=never.js.map

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var of_1 = __webpack_require__(73);
Observable_1.Observable.of = of_1.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(356);
Observable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairs_1 = __webpack_require__(357);
Observable_1.Observable.pairs = pairs_1.pairs;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(43);
Observable_1.Observable.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var range_1 = __webpack_require__(358);
Observable_1.Observable.range = range_1.range;
//# sourceMappingURL=range.js.map

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throw_1 = __webpack_require__(359);
Observable_1.Observable.throw = throw_1._throw;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timer_1 = __webpack_require__(74);
Observable_1.Observable.timer = timer_1.timer;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var using_1 = __webpack_require__(360);
Observable_1.Observable.using = using_1.using;
//# sourceMappingURL=using.js.map

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(361);
Observable_1.Observable.zip = zip_1.zip;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var audit_1 = __webpack_require__(362);
Observable_1.Observable.prototype.audit = audit_1.audit;
//# sourceMappingURL=audit.js.map

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var auditTime_1 = __webpack_require__(363);
Observable_1.Observable.prototype.auditTime = auditTime_1.auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var buffer_1 = __webpack_require__(364);
Observable_1.Observable.prototype.buffer = buffer_1.buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferCount_1 = __webpack_require__(365);
Observable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferTime_1 = __webpack_require__(366);
Observable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferToggle_1 = __webpack_require__(367);
Observable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferWhen_1 = __webpack_require__(368);
Observable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var catch_1 = __webpack_require__(369);
Observable_1.Observable.prototype.catch = catch_1._catch;
Observable_1.Observable.prototype._catch = catch_1._catch;
//# sourceMappingURL=catch.js.map

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineAll_1 = __webpack_require__(370);
Observable_1.Observable.prototype.combineAll = combineAll_1.combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(371);
Observable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(372);
Observable_1.Observable.prototype.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatAll_1 = __webpack_require__(373);
Observable_1.Observable.prototype.concatAll = concatAll_1.concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMap_1 = __webpack_require__(374);
Observable_1.Observable.prototype.concatMap = concatMap_1.concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMapTo_1 = __webpack_require__(375);
Observable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var count_1 = __webpack_require__(376);
Observable_1.Observable.prototype.count = count_1.count;
//# sourceMappingURL=count.js.map

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounce_1 = __webpack_require__(377);
Observable_1.Observable.prototype.debounce = debounce_1.debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounceTime_1 = __webpack_require__(378);
Observable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defaultIfEmpty_1 = __webpack_require__(379);
Observable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delay_1 = __webpack_require__(380);
Observable_1.Observable.prototype.delay = delay_1.delay;
//# sourceMappingURL=delay.js.map

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delayWhen_1 = __webpack_require__(381);
Observable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var dematerialize_1 = __webpack_require__(382);
Observable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinct_1 = __webpack_require__(383);
Observable_1.Observable.prototype.distinct = distinct_1.distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilChanged_1 = __webpack_require__(384);
Observable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilKeyChanged_1 = __webpack_require__(385);
Observable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var do_1 = __webpack_require__(386);
Observable_1.Observable.prototype.do = do_1._do;
Observable_1.Observable.prototype._do = do_1._do;
//# sourceMappingURL=do.js.map

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var elementAt_1 = __webpack_require__(387);
Observable_1.Observable.prototype.elementAt = elementAt_1.elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var every_1 = __webpack_require__(388);
Observable_1.Observable.prototype.every = every_1.every;
//# sourceMappingURL=every.js.map

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaust_1 = __webpack_require__(389);
Observable_1.Observable.prototype.exhaust = exhaust_1.exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaustMap_1 = __webpack_require__(390);
Observable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var expand_1 = __webpack_require__(391);
Observable_1.Observable.prototype.expand = expand_1.expand;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var filter_1 = __webpack_require__(392);
Observable_1.Observable.prototype.filter = filter_1.filter;
//# sourceMappingURL=filter.js.map

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var finally_1 = __webpack_require__(393);
Observable_1.Observable.prototype.finally = finally_1._finally;
Observable_1.Observable.prototype._finally = finally_1._finally;
//# sourceMappingURL=finally.js.map

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var find_1 = __webpack_require__(394);
Observable_1.Observable.prototype.find = find_1.find;
//# sourceMappingURL=find.js.map

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var findIndex_1 = __webpack_require__(395);
Observable_1.Observable.prototype.findIndex = findIndex_1.findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var first_1 = __webpack_require__(396);
Observable_1.Observable.prototype.first = first_1.first;
//# sourceMappingURL=first.js.map

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var groupBy_1 = __webpack_require__(397);
Observable_1.Observable.prototype.groupBy = groupBy_1.groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ignoreElements_1 = __webpack_require__(398);
Observable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var isEmpty_1 = __webpack_require__(399);
Observable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var last_1 = __webpack_require__(400);
Observable_1.Observable.prototype.last = last_1.last;
//# sourceMappingURL=last.js.map

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var let_1 = __webpack_require__(401);
Observable_1.Observable.prototype.let = let_1.letProto;
Observable_1.Observable.prototype.letBind = let_1.letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var map_1 = __webpack_require__(402);
Observable_1.Observable.prototype.map = map_1.map;
//# sourceMappingURL=map.js.map

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mapTo_1 = __webpack_require__(403);
Observable_1.Observable.prototype.mapTo = mapTo_1.mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var materialize_1 = __webpack_require__(404);
Observable_1.Observable.prototype.materialize = materialize_1.materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var max_1 = __webpack_require__(405);
Observable_1.Observable.prototype.max = max_1.max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(406);
Observable_1.Observable.prototype.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeAll_1 = __webpack_require__(407);
Observable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMap_1 = __webpack_require__(408);
Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMapTo_1 = __webpack_require__(409);
Observable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;
Observable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeScan_1 = __webpack_require__(410);
Observable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var min_1 = __webpack_require__(411);
Observable_1.Observable.prototype.min = min_1.min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var multicast_1 = __webpack_require__(412);
Observable_1.Observable.prototype.multicast = multicast_1.multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(413);
Observable_1.Observable.prototype.observeOn = observeOn_1.observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(414);
Observable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairwise_1 = __webpack_require__(415);
Observable_1.Observable.prototype.pairwise = pairwise_1.pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var partition_1 = __webpack_require__(416);
Observable_1.Observable.prototype.partition = partition_1.partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pluck_1 = __webpack_require__(417);
Observable_1.Observable.prototype.pluck = pluck_1.pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publish_1 = __webpack_require__(418);
Observable_1.Observable.prototype.publish = publish_1.publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishBehavior_1 = __webpack_require__(419);
Observable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishLast_1 = __webpack_require__(420);
Observable_1.Observable.prototype.publishLast = publishLast_1.publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishReplay_1 = __webpack_require__(421);
Observable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(422);
Observable_1.Observable.prototype.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var reduce_1 = __webpack_require__(423);
Observable_1.Observable.prototype.reduce = reduce_1.reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeat_1 = __webpack_require__(424);
Observable_1.Observable.prototype.repeat = repeat_1.repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeatWhen_1 = __webpack_require__(425);
Observable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retry_1 = __webpack_require__(426);
Observable_1.Observable.prototype.retry = retry_1.retry;
//# sourceMappingURL=retry.js.map

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retryWhen_1 = __webpack_require__(427);
Observable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sample_1 = __webpack_require__(428);
Observable_1.Observable.prototype.sample = sample_1.sample;
//# sourceMappingURL=sample.js.map

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sampleTime_1 = __webpack_require__(429);
Observable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var scan_1 = __webpack_require__(430);
Observable_1.Observable.prototype.scan = scan_1.scan;
//# sourceMappingURL=scan.js.map

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sequenceEqual_1 = __webpack_require__(431);
Observable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var share_1 = __webpack_require__(432);
Observable_1.Observable.prototype.share = share_1.share;
//# sourceMappingURL=share.js.map

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var shareReplay_1 = __webpack_require__(433);
Observable_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var single_1 = __webpack_require__(434);
Observable_1.Observable.prototype.single = single_1.single;
//# sourceMappingURL=single.js.map

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skip_1 = __webpack_require__(435);
Observable_1.Observable.prototype.skip = skip_1.skip;
//# sourceMappingURL=skip.js.map

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipLast_1 = __webpack_require__(436);
Observable_1.Observable.prototype.skipLast = skipLast_1.skipLast;
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipUntil_1 = __webpack_require__(437);
Observable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipWhile_1 = __webpack_require__(438);
Observable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var startWith_1 = __webpack_require__(439);
Observable_1.Observable.prototype.startWith = startWith_1.startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var subscribeOn_1 = __webpack_require__(440);
Observable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switch_1 = __webpack_require__(441);
Observable_1.Observable.prototype.switch = switch_1._switch;
Observable_1.Observable.prototype._switch = switch_1._switch;
//# sourceMappingURL=switch.js.map

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMap_1 = __webpack_require__(442);
Observable_1.Observable.prototype.switchMap = switchMap_1.switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMapTo_1 = __webpack_require__(443);
Observable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var take_1 = __webpack_require__(444);
Observable_1.Observable.prototype.take = take_1.take;
//# sourceMappingURL=take.js.map

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeLast_1 = __webpack_require__(445);
Observable_1.Observable.prototype.takeLast = takeLast_1.takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeUntil_1 = __webpack_require__(446);
Observable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeWhile_1 = __webpack_require__(447);
Observable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttle_1 = __webpack_require__(448);
Observable_1.Observable.prototype.throttle = throttle_1.throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttleTime_1 = __webpack_require__(449);
Observable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeInterval_1 = __webpack_require__(75);
Observable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeout_1 = __webpack_require__(450);
Observable_1.Observable.prototype.timeout = timeout_1.timeout;
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeoutWith_1 = __webpack_require__(451);
Observable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timestamp_1 = __webpack_require__(452);
Observable_1.Observable.prototype.timestamp = timestamp_1.timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var toArray_1 = __webpack_require__(453);
Observable_1.Observable.prototype.toArray = toArray_1.toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 313 */
/***/ (function(module, exports) {

// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.
// leaving this module here to prevent breakage.
//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var window_1 = __webpack_require__(454);
Observable_1.Observable.prototype.window = window_1.window;
//# sourceMappingURL=window.js.map

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowCount_1 = __webpack_require__(455);
Observable_1.Observable.prototype.windowCount = windowCount_1.windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowTime_1 = __webpack_require__(456);
Observable_1.Observable.prototype.windowTime = windowTime_1.windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowToggle_1 = __webpack_require__(457);
Observable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowWhen_1 = __webpack_require__(458);
Observable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var withLatestFrom_1 = __webpack_require__(459);
Observable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(460);
Observable_1.Observable.prototype.zip = zip_1.zipProto;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zipAll_1 = __webpack_require__(461);
Observable_1.Observable.prototype.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(42);
var EmptyObservable_1 = __webpack_require__(13);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayLikeObservable = (function (_super) {
    __extends(ArrayLikeObservable, _super);
    function ArrayLikeObservable(arrayLike, scheduler) {
        _super.call(this);
        this.arrayLike = arrayLike;
        this.scheduler = scheduler;
        if (!scheduler && arrayLike.length === 1) {
            this._isScalar = true;
            this.value = arrayLike[0];
        }
    }
    ArrayLikeObservable.create = function (arrayLike, scheduler) {
        var length = arrayLike.length;
        if (length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (length === 1) {
            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);
        }
        else {
            return new ArrayLikeObservable(arrayLike, scheduler);
        }
    };
    ArrayLikeObservable.dispatch = function (state) {
        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;
        if (subscriber.closed) {
            return;
        }
        if (index >= length) {
            subscriber.complete();
            return;
        }
        subscriber.next(arrayLike[index]);
        state.index = index + 1;
        this.schedule(state);
    };
    /** @deprecated internal use only */ ArrayLikeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;
        var length = arrayLike.length;
        if (scheduler) {
            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {
                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < length && !subscriber.closed; i++) {
                subscriber.next(arrayLike[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayLikeObservable;
}(Observable_1.Observable));
exports.ArrayLikeObservable = ArrayLikeObservable;
//# sourceMappingURL=ArrayLikeObservable.js.map

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var AsyncSubject_1 = __webpack_require__(28);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundCallbackObservable = (function (_super) {
    __extends(BoundCallbackObservable, _super);
    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.context = context;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a callback API to a function that returns an Observable.
     *
     * <span class="informal">Give it a function `f` of type `f(x, callback)` and
     * it will return a function `g` that when called as `g(x)` will output an
     * Observable.</span>
     *
     * `bindCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, the
     * last parameter must be a callback function that `func` calls when it is
     * done.
     *
     * The output of `bindCallback` is a function that takes the same parameters
     * as `func`, except the last one (the callback). When the output function
     * is called with arguments it will return an Observable. If function `func`
     * calls its callback with one argument the Observable will emit that value.
     * If on the other hand the callback is called with multiple values the resulting
     * Observable will emit an array with said values as arguments.
     *
     * It is very important to remember that input function `func` is not called
     * when the output function is, but rather when the Observable returned by the output
     * function is subscribed. This means if `func` makes an AJAX request, that request
     * will be made every time someone subscribes to the resulting Observable, but not before.
     *
     * Optionally, a selector function can be passed to `bindObservable`. The selector function
     * takes the same arguments as the callback and returns the value that will be emitted by the Observable.
     * Even though by default multiple arguments passed to callback appear in the stream as an array
     * the selector function will be called with arguments directly, just as the callback would.
     * This means you can imagine the default selector (when one is not provided explicitly)
     * as a function that aggregates all its arguments into an array, or simply returns first argument
     * if there is only one.
     *
     * The last optional parameter - {@link Scheduler} - can be used to control when the call
     * to `func` happens after someone subscribes to Observable, as well as when results
     * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`
     * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,
     * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler
     * and call `subscribe` on the output Observable all function calls that are currently executing
     * will end before `func` is invoked.
     *
     * By default results passed to the callback are emitted immediately after `func` invokes the callback.
     * In particular, if the callback is called synchronously the subscription of the resulting Observable
     * will call the `next` function synchronously as well.  If you want to defer that call,
     * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can
     * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.
     *
     * Note that the Observable created by the output function will always emit a single value
     * and then complete immediately. If `func` calls the callback multiple times, values from subsequent
     * calls will not appear in the stream. If you need to listen for multiple calls,
     *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.
     *
     * If `func` depends on some context (`this` property) and is not already bound the context of `func`
     * will be the context that the output function has at call time. In particular, if `func`
     * is called as a method of some objec and if `func` is not already bound, in order to preserve the context
     * it is recommended that the context of the output function is set to that object as well.
     *
     * If the input function calls its callback in the "node style" (i.e. first argument to callback is
     * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}
     * provides convenient error handling and probably is a better choice.
     * `bindCallback` will treat such functions the same as any other and error parameters
     * (whether passed or not) will always be interpreted as regular callback argument.
     *
     *
     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
     * // Suppose we have jQuery.getJSON('/my/url', callback)
     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);
     * var result = getJSONAsObservable('/my/url');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Receive an array of arguments passed to a callback</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 5
     *   console.log(b); // 'some string'
     *   console.log(c); // {someProperty: 'someValue'}
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);
     * boundSomeFunction().subscribe(values => {
     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]
     * });
     *
     *
     * @example <caption>Use bindCallback with a selector function</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 'a'
     *   console.log(b); // 'b'
     *   console.log(c); // 'c'
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);
     * boundSomeFunction().subscribe(value => {
     *   console.log(value) // 'abc'
     * });
     *
     *
     * @example <caption>Compare behaviour with and without async Scheduler</caption>
     * function iCallMyCallbackSynchronously(cb) {
     *   cb();
     * }
     *
     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);
     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);
     *
     * boundSyncFn().subscribe(() => console.log('I was sync!'));
     * boundAsyncFn().subscribe(() => console.log('I was async!'));
     * console.log('This happened...');
     *
     * // Logs:
     * // I was sync!
     * // This happened...
     * // I was async!
     *
     *
     * @example <caption>Use bindCallback on an object method</caption>
     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);
     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject
     * .subscribe(subscriber);
     *
     *
     * @see {@link bindNodeCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func A function with a callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps them to a value that is emitted on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the callback would deliver.
     * @static true
     * @name bindCallback
     * @owner Observable
     */
    BoundCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundCallbackObservable(func, selector, args, this, scheduler);
        };
    };
    /** @deprecated internal use only */ BoundCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });
        }
    };
    BoundCallbackObservable.dispatch = function (state) {
        var self = this;
        var source = state.source, subscriber = state.subscriber, context = state.context;
        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;
        var subject = source.subject;
        if (!subject) {
            subject = source.subject = new AsyncSubject_1.AsyncSubject();
            var handler = function handlerFn() {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i - 0] = arguments[_i];
                }
                var source = handlerFn.source;
                var selector = source.selector, subject = source.subject;
                if (selector) {
                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                    if (result_2 === errorObject_1.errorObject) {
                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                    }
                    else {
                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                    }
                }
                else {
                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
                }
            };
            // use named function to pass values in without closure
            handler.source = source;
            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));
            if (result === errorObject_1.errorObject) {
                subject.error(errorObject_1.errorObject.e);
            }
        }
        self.add(subject.subscribe(subscriber));
    };
    return BoundCallbackObservable;
}(Observable_1.Observable));
exports.BoundCallbackObservable = BoundCallbackObservable;
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundCallbackObservable.js.map

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var AsyncSubject_1 = __webpack_require__(28);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundNodeCallbackObservable = (function (_super) {
    __extends(BoundNodeCallbackObservable, _super);
    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.context = context;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a Node.js-style callback API to a function that returns an
     * Observable.
     *
     * <span class="informal">It's just like {@link bindCallback}, but the
     * callback is expected to be of type `callback(error, result)`.</span>
     *
     * `bindNodeCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The callback function is expected to follow Node.js conventions,
     * where the first argument to the callback is an error object, signaling
     * whether call was successful. If that object is passed to callback, it means
     * something went wrong.
     *
     * The output of `bindNodeCallback` is a function that takes the same
     * parameters as `func`, except the last one (the callback). When the output
     * function is called with arguments, it will return an Observable.
     * If `func` calls its callback with error parameter present, Observable will
     * error with that value as well. If error parameter is not passed, Observable will emit
     * second parameter. If there are more parameters (third and so on),
     * Observable will emit an array with all arguments, except first error argument.
     *
     * Optionally `bindNodeCallback` accepts selector function, which allows you to
     * make resulting Observable emit value computed by selector, instead of regular
     * callback arguments. It works similarly to {@link bindCallback} selector, but
     * Node.js-style error argument will never be passed to that function.
     *
     * Note that `func` will not be called at the same time output function is,
     * but rather whenever resulting Observable is subscribed. By default call to
     * `func` will happen synchronously after subscription, but that can be changed
     * with proper {@link Scheduler} provided as optional third parameter. Scheduler
     * can also control when values from callback will be emitted by Observable.
     * To find out more, check out documentation for {@link bindCallback}, where
     * Scheduler works exactly the same.
     *
     * As in {@link bindCallback}, context (`this` property) of input function will be set to context
     * of returned function, when it is called.
     *
     * After Observable emits value, it will complete immediately. This means
     * even if `func` calls callback again, values from second and consecutive
     * calls will never appear on the stream. If you need to handle functions
     * that call callbacks multiple times, check out {@link fromEvent} or
     * {@link fromEventPattern} instead.
     *
     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.
     * "Node.js-style" callbacks are just a convention, so if you write for
     * browsers or any other environment and API you use implements that callback style,
     * `bindNodeCallback` can be safely used on that API functions as well.
     *
     * Remember that Error object passed to callback does not have to be an instance
     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.
     * Error parameter of callback function is interpreted as "present", when value
     * of that parameter is truthy. It could be, for example, non-zero number, non-empty
     * string or boolean `true`. In all of these cases resulting Observable would error
     * with that value. This means usually regular style callbacks will fail very often when
     * `bindNodeCallback` is used. If your Observable errors much more often then you
     * would expect, check if callback really is called in Node.js-style and, if not,
     * switch to {@link bindCallback} instead.
     *
     * Note that even if error parameter is technically present in callback, but its value
     * is falsy, it still won't appear in array emitted by Observable or in selector function.
     *
     *
     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
     * import * as fs from 'fs';
     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);
     * var result = readFileAsObservable('./roadNames.txt', 'utf8');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Use on function calling callback with multiple arguments</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // null
     *   console.log(a); // 5
     *   console.log(b); // "some string"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // [5, "some string"]
     * });
     *
     *
     * @example <caption>Use with selector function</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // undefined
     *   console.log(a); // "abc"
     *   console.log(b); // "DEF"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // "abcDEF"
     * });
     *
     *
     * @example <caption>Use on function calling callback in regular style</caption>
     * someFunction(a => {
     *   console.log(a); // 5
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(
     *   value => {}             // never gets called
     *   err => console.log(err) // 5
     *);
     *
     *
     * @see {@link bindCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a Node.js-style callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those to a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the Node.js callback would
     * deliver.
     * @static true
     * @name bindNodeCallback
     * @owner Observable
     */
    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);
        };
    };
    /** @deprecated internal use only */ BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    var err = innerArgs.shift();
                    if (err) {
                        subject.error(err);
                    }
                    else if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });
        }
    };
    return BoundNodeCallbackObservable;
}(Observable_1.Observable));
exports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;
function dispatch(state) {
    var self = this;
    var source = state.source, subscriber = state.subscriber, context = state.context;
    // XXX: cast to `any` to access to the private field in `source`.
    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;
    var subject = source.subject;
    if (!subject) {
        subject = source.subject = new AsyncSubject_1.AsyncSubject();
        var handler = function handlerFn() {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i - 0] = arguments[_i];
            }
            var source = handlerFn.source;
            var selector = source.selector, subject = source.subject;
            var err = innerArgs.shift();
            if (err) {
                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else if (selector) {
                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                if (result_2 === errorObject_1.errorObject) {
                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                }
                else {
                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                }
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        // use named function to pass values in without closure
        handler.source = source;
        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));
        if (result === errorObject_1.errorObject) {
            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
        }
    }
    self.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundNodeCallbackObservable.js.map

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var DeferObservable = (function (_super) {
    __extends(DeferObservable, _super);
    function DeferObservable(observableFactory) {
        _super.call(this);
        this.observableFactory = observableFactory;
    }
    /**
     * Creates an Observable that, on subscribe, calls an Observable factory to
     * make an Observable for each new Observer.
     *
     * <span class="informal">Creates the Observable lazily, that is, only when it
     * is subscribed.
     * </span>
     *
     * <img src="./img/defer.png" width="100%">
     *
     * `defer` allows you to create the Observable only when the Observer
     * subscribes, and create a fresh Observable for each Observer. It waits until
     * an Observer subscribes to it, and then it generates an Observable,
     * typically with an Observable factory function. It does this afresh for each
     * subscriber, so although each subscriber may think it is subscribing to the
     * same Observable, in fact each subscriber gets its own individual
     * Observable.
     *
     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
     * var clicksOrInterval = Rx.Observable.defer(function () {
     *   if (Math.random() > 0.5) {
     *     return Rx.Observable.fromEvent(document, 'click');
     *   } else {
     *     return Rx.Observable.interval(1000);
     *   }
     * });
     * clicksOrInterval.subscribe(x => console.log(x));
     *
     * // Results in the following behavior:
     * // If the result of Math.random() is greater than 0.5 it will listen
     * // for clicks anywhere on the "document"; when document is clicked it
     * // will log a MouseEvent object to the console. If the result is less
     * // than 0.5 it will emit ascending numbers, one every second(1000ms).
     *
     * @see {@link create}
     *
     * @param {function(): SubscribableOrPromise} observableFactory The Observable
     * factory function to invoke for each Observer that subscribes to the output
     * Observable. May also return a Promise, which will be converted on the fly
     * to an Observable.
     * @return {Observable} An Observable whose Observers' subscriptions trigger
     * an invocation of the given Observable factory function.
     * @static true
     * @name defer
     * @owner Observable
     */
    DeferObservable.create = function (observableFactory) {
        return new DeferObservable(observableFactory);
    };
    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {
        return new DeferSubscriber(subscriber, this.observableFactory);
    };
    return DeferObservable;
}(Observable_1.Observable));
exports.DeferObservable = DeferObservable;
var DeferSubscriber = (function (_super) {
    __extends(DeferSubscriber, _super);
    function DeferSubscriber(destination, factory) {
        _super.call(this, destination);
        this.factory = factory;
        this.tryDefer();
    }
    DeferSubscriber.prototype.tryDefer = function () {
        try {
            this._callFactory();
        }
        catch (err) {
            this._error(err);
        }
    };
    DeferSubscriber.prototype._callFactory = function () {
        var result = this.factory();
        if (result) {
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return DeferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=DeferObservable.js.map

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ErrorObservable = (function (_super) {
    __extends(ErrorObservable, _super);
    function ErrorObservable(error, scheduler) {
        _super.call(this);
        this.error = error;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits an error notification.
     *
     * <span class="informal">Just emits 'error', and nothing else.
     * </span>
     *
     * <img src="./img/throw.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the error notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then emit an error.</caption>
     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x === 13 ?
     *     Rx.Observable.throw('Thirteens are bad') :
     *     Rx.Observable.of('a', 'b', 'c')
     * );
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link of}
     *
     * @param {any} error The particular Error to pass to the error notification.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the error notification.
     * @return {Observable} An error Observable: emits only the error notification
     * using the given error argument.
     * @static true
     * @name throw
     * @owner Observable
     */
    ErrorObservable.create = function (error, scheduler) {
        return new ErrorObservable(error, scheduler);
    };
    ErrorObservable.dispatch = function (arg) {
        var error = arg.error, subscriber = arg.subscriber;
        subscriber.error(error);
    };
    /** @deprecated internal use only */ ErrorObservable.prototype._subscribe = function (subscriber) {
        var error = this.error;
        var scheduler = this.scheduler;
        subscriber.syncErrorThrowable = true;
        if (scheduler) {
            return scheduler.schedule(ErrorObservable.dispatch, 0, {
                error: error, subscriber: subscriber
            });
        }
        else {
            subscriber.error(error);
        }
    };
    return ErrorObservable;
}(Observable_1.Observable));
exports.ErrorObservable = ErrorObservable;
//# sourceMappingURL=ErrorObservable.js.map

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var EmptyObservable_1 = __webpack_require__(13);
var isArray_1 = __webpack_require__(11);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ForkJoinObservable = (function (_super) {
    __extends(ForkJoinObservable, _super);
    function ForkJoinObservable(sources, resultSelector) {
        _super.call(this);
        this.sources = sources;
        this.resultSelector = resultSelector;
    }
    /* tslint:enable:max-line-length */
    /**
     * Joins last values emitted by passed Observables.
     *
     * <span class="informal">Wait for Observables to complete and then combine last values they emitted.</span>
     *
     * <img src="./img/forkJoin.png" width="100%">
     *
     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array
     * or directly as arguments. If no input Observables are provided, resulting stream will complete
     * immediately.
     *
     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last
     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting
     * array will have `n` values, where first value is the last thing emitted by the first Observable,
     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will
     * not emit more than once and it will complete after that. If you need to emit combined values not only
     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}
     * or {@link zip} instead.
     *
     * In order for resulting array to have the same length as the number of input Observables, whenever any of
     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well
     * and it will not emit anything either, even if it already has some last values from other Observables.
     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,
     * unless at any point some other Observable completes without emitting value, which brings us back to
     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments
     * have to emit something at least once and complete.
     *
     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables
     * will be immediately unsubscribed.
     *
     * Optionally `forkJoin` accepts project function, that will be called with values which normally
     * would land in emitted array. Whatever is returned by project function, will appear in output
     * Observable instead. This means that default project can be thought of as a function that takes
     * all its arguments and puts them into an array. Note that project function will be called only
     * when output Observable is supposed to emit a result.
     *
     * @example <caption>Use forkJoin with operator emitting immediately</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.of(1, 2, 3, 4),
     *   Rx.Observable.of(5, 6, 7, 8)
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // [4, 8]
     * // "This is how it ends!"
     *
     *
     * @example <caption>Use forkJoin with operator emitting after some time</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete
     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // [2, 3] after 3 seconds
     * // "This is how it ends!" immediately after
     *
     *
     * @example <caption>Use forkJoin with project function</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete
     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete
     *   (n, m) => n + m
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // 5 after 3 seconds
     * // "This is how it ends!" immediately after
     *
     * @see {@link combineLatest}
     * @see {@link zip}
     *
     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments
     * passed directly to the operator.
     * @param {function} [project] Function that takes values emitted by input Observables and returns value
     * that will appear in resulting Observable instead of default array.
     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables
     * or value from project function.
     * @static true
     * @name forkJoin
     * @owner Observable
     */
    ForkJoinObservable.create = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i - 0] = arguments[_i];
        }
        if (sources === null || arguments.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        var resultSelector = null;
        if (typeof sources[sources.length - 1] === 'function') {
            resultSelector = sources.pop();
        }
        // if the first and only other argument besides the resultSelector is an array
        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
        if (sources.length === 1 && isArray_1.isArray(sources[0])) {
            sources = sources[0];
        }
        if (sources.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        return new ForkJoinObservable(sources, resultSelector);
    };
    /** @deprecated internal use only */ ForkJoinObservable.prototype._subscribe = function (subscriber) {
        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);
    };
    return ForkJoinObservable;
}(Observable_1.Observable));
exports.ForkJoinObservable = ForkJoinObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ForkJoinSubscriber = (function (_super) {
    __extends(ForkJoinSubscriber, _super);
    function ForkJoinSubscriber(destination, sources, resultSelector) {
        _super.call(this, destination);
        this.sources = sources;
        this.resultSelector = resultSelector;
        this.completed = 0;
        this.haveValues = 0;
        var len = sources.length;
        this.total = len;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            var source = sources[i];
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);
            if (innerSubscription) {
                innerSubscription.outerIndex = i;
                this.add(innerSubscription);
            }
        }
    }
    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        if (!innerSub._hasValue) {
            innerSub._hasValue = true;
            this.haveValues++;
        }
    };
    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;
        var len = values.length;
        if (!innerSub._hasValue) {
            destination.complete();
            return;
        }
        this.completed++;
        if (this.completed !== len) {
            return;
        }
        if (haveValues === len) {
            var value = resultSelector ? resultSelector.apply(this, values) : values;
            destination.next(value);
        }
        destination.complete();
    };
    return ForkJoinSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=ForkJoinObservable.js.map

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(8);
var isFunction_1 = __webpack_require__(41);
var errorObject_1 = __webpack_require__(7);
var Subscription_1 = __webpack_require__(5);
var toString = Object.prototype.toString;
function isNodeStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isNodeList(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';
}
function isHTMLCollection(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';
}
function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventObservable = (function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector, options) {
        _super.call(this);
        this.sourceObj = sourceObj;
        this.eventName = eventName;
        this.selector = selector;
        this.options = options;
    }
    /* tslint:enable:max-line-length */
    /**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node.js
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * `fromEvent` accepts as a first argument event target, which is an object with methods
     * for registering event handler functions. As a second argument it takes string that indicates
     * type of event we want to listen for. `fromEvent` supports selected types of event targets,
     * which are described in detail below. If your event target does not match any of the ones listed,
     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.
     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event
     * handler functions have different names, but they all accept a string describing event type
     * and function itself, which will be called whenever said event happens.
     *
     * Every time resulting Observable is subscribed, event handler function will be registered
     * to event target on given event type. When that event fires, value
     * passed as a first argument to registered function will be emitted by output Observable.
     * When Observable is unsubscribed, function will be unregistered from event target.
     *
     * Note that if event target calls registered function with more than one argument, second
     * and following arguments will not appear in resulting stream. In order to get access to them,
     * you can pass to `fromEvent` optional project function, which will be called with all arguments
     * passed to event handler. Output Observable will then emit value returned by project function,
     * instead of the usual value.
     *
     * Remember that event targets listed below are checked via duck typing. It means that
     * no matter what kind of object you have and no matter what environment you work in,
     * you can safely use `fromEvent` on that object if it exposes described methods (provided
     * of course they behave as was described above). So for example if Node.js library exposes
     * event target which has the same method names as DOM EventTarget, `fromEvent` is still
     * a good choice.
     *
     * If the API you use is more callback then event handler oriented (subscribed
     * callback function fires only once and thus there is no need to manually
     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}
     * instead.
     *
     * `fromEvent` supports following types of event targets:
     *
     * **DOM EventTarget**
     *
     * This is an object with `addEventListener` and `removeEventListener` methods.
     *
     * In the browser, `addEventListener` accepts - apart from event type string and event
     * handler function arguments - optional third parameter, which is either an object or boolean,
     * both used for additional configuration how and when passed function will be called. When
     * `fromEvent` is used with event target of that type, you can provide this values
     * as third parameter as well.
     *
     * **Node.js EventEmitter**
     *
     * An object with `addListener` and `removeListener` methods.
     *
     * **JQuery-style event target**
     *
     * An object with `on` and `off` methods
     *
     * **DOM NodeList**
     *
     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.
     *
     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes
     * it contains and install event handler function in every of them. When returned Observable
     * is unsubscribed, function will be removed from all Nodes.
     *
     * **DOM HtmlCollection**
     *
     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is
     * installed and removed in each of elements.
     *
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * // Results in:
     * // MouseEvent object logged to console every time a click
     * // occurs on the document.
     *
     *
     * @example <caption>Use addEventListener with capture option</caption>
     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter
     *                                                                          // which will be passed to addEventListener
     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');
     *
     * clicksInDocument.subscribe(() => console.log('document'));
     * clicksInDiv.subscribe(() => console.log('div'));
     *
     * // By default events bubble UP in DOM tree, so normally
     * // when we would click on div in document
     * // "div" would be logged first and then "document".
     * // Since we specified optional `capture` option, document
     * // will catch event when it goes DOWN DOM tree, so console
     * // will log "document" and then "div".
     *
     * @see {@link bindCallback}
     * @see {@link bindNodeCallback}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOM EventTarget, Node.js
     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @param {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */
    FromEventObservable.create = function (target, eventName, options, selector) {
        if (isFunction_1.isFunction(options)) {
            selector = options;
            options = undefined;
        }
        return new FromEventObservable(target, eventName, selector, options);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        else {
            throw new TypeError('Invalid event target');
        }
        subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {
        var sourceObj = this.sourceObj;
        var eventName = this.eventName;
        var options = this.options;
        var selector = this.selector;
        var handler = selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
            if (result === errorObject_1.errorObject) {
                subscriber.error(errorObject_1.errorObject.e);
            }
            else {
                subscriber.next(result);
            }
        } : function (e) { return subscriber.next(e); };
        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);
    };
    return FromEventObservable;
}(Observable_1.Observable));
exports.FromEventObservable = FromEventObservable;
//# sourceMappingURL=FromEventObservable.js.map

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(41);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(5);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventPatternObservable = (function (_super) {
    __extends(FromEventPatternObservable, _super);
    function FromEventPatternObservable(addHandler, removeHandler, selector) {
        _super.call(this);
        this.addHandler = addHandler;
        this.removeHandler = removeHandler;
        this.selector = selector;
    }
    /**
     * Creates an Observable from an API based on addHandler/removeHandler
     * functions.
     *
     * <span class="informal">Converts any addHandler/removeHandler API to an
     * Observable.</span>
     *
     * <img src="./img/fromEventPattern.png" width="100%">
     *
     * Creates an Observable by using the `addHandler` and `removeHandler`
     * functions to add and remove the handlers, with an optional selector
     * function to project the event arguments to a result. The `addHandler` is
     * called when the output Observable is subscribed, and `removeHandler` is
     * called when the Subscription is unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * function addClickHandler(handler) {
     *   document.addEventListener('click', handler);
     * }
     *
     * function removeClickHandler(handler) {
     *   document.removeEventListener('click', handler);
     * }
     *
     * var clicks = Rx.Observable.fromEventPattern(
     *   addClickHandler,
     *   removeClickHandler
     * );
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEvent}
     *
     * @param {function(handler: Function): any} addHandler A function that takes
     * a `handler` function as argument and attaches it somehow to the actual
     * source of events.
     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that
     * takes a `handler` function as argument and removes it in case it was
     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,
     * removeHandler function will forward it.
     * @param {function(...args: any): T} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEventPattern
     * @owner Observable
     */
    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {
        return new FromEventPatternObservable(addHandler, removeHandler, selector);
    };
    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var removeHandler = this.removeHandler;
        var handler = !!this.selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            _this._callSelector(subscriber, args);
        } : function (e) { subscriber.next(e); };
        var retValue = this._callAddHandler(handler, subscriber);
        if (!isFunction_1.isFunction(removeHandler)) {
            return;
        }
        subscriber.add(new Subscription_1.Subscription(function () {
            //TODO: determine whether or not to forward to error handler
            removeHandler(handler, retValue);
        }));
    };
    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {
        try {
            var result = this.selector.apply(this, args);
            subscriber.next(result);
        }
        catch (e) {
            subscriber.error(e);
        }
    };
    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {
        try {
            return this.addHandler(handler) || null;
        }
        catch (e) {
            errorSubscriber.error(e);
        }
    };
    return FromEventPatternObservable;
}(Observable_1.Observable));
exports.FromEventPatternObservable = FromEventPatternObservable;
//# sourceMappingURL=FromEventPatternObservable.js.map

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var isScheduler_1 = __webpack_require__(10);
var selfSelector = function (value) { return value; };
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var GenerateObservable = (function (_super) {
    __extends(GenerateObservable, _super);
    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {
        _super.call(this);
        this.initialState = initialState;
        this.condition = condition;
        this.iterate = iterate;
        this.resultSelector = resultSelector;
        this.scheduler = scheduler;
    }
    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
        if (arguments.length == 1) {
            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);
        }
        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {
            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);
        }
        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);
    };
    /** @deprecated internal use only */ GenerateObservable.prototype._subscribe = function (subscriber) {
        var state = this.initialState;
        if (this.scheduler) {
            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {
                subscriber: subscriber,
                iterate: this.iterate,
                condition: this.condition,
                resultSelector: this.resultSelector,
                state: state });
        }
        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        } while (true);
    };
    GenerateObservable.dispatch = function (state) {
        var subscriber = state.subscriber, condition = state.condition;
        if (subscriber.closed) {
            return;
        }
        if (state.needIterate) {
            try {
                state.state = state.iterate(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        }
        else {
            state.needIterate = true;
        }
        if (condition) {
            var conditionResult = void 0;
            try {
                conditionResult = condition(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            if (!conditionResult) {
                subscriber.complete();
                return;
            }
            if (subscriber.closed) {
                return;
            }
        }
        var value;
        try {
            value = state.resultSelector(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return;
        }
        if (subscriber.closed) {
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        return this.schedule(state);
    };
    return GenerateObservable;
}(Observable_1.Observable));
exports.GenerateObservable = GenerateObservable;
//# sourceMappingURL=GenerateObservable.js.map

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IfObservable = (function (_super) {
    __extends(IfObservable, _super);
    function IfObservable(condition, thenSource, elseSource) {
        _super.call(this);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
    }
    IfObservable.create = function (condition, thenSource, elseSource) {
        return new IfObservable(condition, thenSource, elseSource);
    };
    /** @deprecated internal use only */ IfObservable.prototype._subscribe = function (subscriber) {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        return new IfSubscriber(subscriber, condition, thenSource, elseSource);
    };
    return IfObservable;
}(Observable_1.Observable));
exports.IfObservable = IfObservable;
var IfSubscriber = (function (_super) {
    __extends(IfSubscriber, _super);
    function IfSubscriber(destination, condition, thenSource, elseSource) {
        _super.call(this, destination);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
        this.tryIf();
    }
    IfSubscriber.prototype.tryIf = function () {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        var result;
        try {
            result = condition();
            var source = result ? thenSource : elseSource;
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
            else {
                this._complete();
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return IfSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=IfObservable.js.map

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(26);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(4);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IntervalObservable = (function (_super) {
    __extends(IntervalObservable, _super);
    function IntervalObservable(period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        _super.call(this);
        this.period = period;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(period) || period < 0) {
            this.period = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = async_1.async;
        }
    }
    /**
     * Creates an Observable that emits sequential numbers every specified
     * interval of time, on a specified IScheduler.
     *
     * <span class="informal">Emits incremental numbers periodically in time.
     * </span>
     *
     * <img src="./img/interval.png" width="100%">
     *
     * `interval` returns an Observable that emits an infinite sequence of
     * ascending integers, with a constant interval of time of your choosing
     * between those emissions. The first emission is not sent immediately, but
     * only after the first period has passed. By default, this operator uses the
     * `async` IScheduler to provide a notion of time, but you may pass any
     * IScheduler to it.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
     * var numbers = Rx.Observable.interval(1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link delay}
     *
     * @param {number} [period=0] The interval size in milliseconds (by default)
     * or the time unit determined by the scheduler's clock.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a sequential number each time
     * interval.
     * @static true
     * @name interval
     * @owner Observable
     */
    IntervalObservable.create = function (period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        return new IntervalObservable(period, scheduler);
    };
    IntervalObservable.dispatch = function (state) {
        var index = state.index, subscriber = state.subscriber, period = state.period;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        state.index += 1;
        this.schedule(state, period);
    };
    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var period = this.period;
        var scheduler = this.scheduler;
        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {
            index: index, subscriber: subscriber, period: period
        }));
    };
    return IntervalObservable;
}(Observable_1.Observable));
exports.IntervalObservable = IntervalObservable;
//# sourceMappingURL=IntervalObservable.js.map

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(9);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(24);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IteratorObservable = (function (_super) {
    __extends(IteratorObservable, _super);
    function IteratorObservable(iterator, scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
        if (iterator == null) {
            throw new Error('iterator cannot be null.');
        }
        this.iterator = getIterator(iterator);
    }
    IteratorObservable.create = function (iterator, scheduler) {
        return new IteratorObservable(iterator, scheduler);
    };
    IteratorObservable.dispatch = function (state) {
        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;
        if (hasError) {
            subscriber.error(state.error);
            return;
        }
        var result = iterator.next();
        if (result.done) {
            subscriber.complete();
            return;
        }
        subscriber.next(result.value);
        state.index = index + 1;
        if (subscriber.closed) {
            if (typeof iterator.return === 'function') {
                iterator.return();
            }
            return;
        }
        this.schedule(state);
    };
    /** @deprecated internal use only */ IteratorObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;
        if (scheduler) {
            return scheduler.schedule(IteratorObservable.dispatch, 0, {
                index: index, iterator: iterator, subscriber: subscriber
            });
        }
        else {
            do {
                var result = iterator.next();
                if (result.done) {
                    subscriber.complete();
                    break;
                }
                else {
                    subscriber.next(result.value);
                }
                if (subscriber.closed) {
                    if (typeof iterator.return === 'function') {
                        iterator.return();
                    }
                    break;
                }
            } while (true);
        }
    };
    return IteratorObservable;
}(Observable_1.Observable));
exports.IteratorObservable = IteratorObservable;
var StringIterator = (function () {
    function StringIterator(str, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = str.length; }
        this.str = str;
        this.idx = idx;
        this.len = len;
    }
    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };
    StringIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.str.charAt(this.idx++)
        } : {
            done: true,
            value: undefined
        };
    };
    return StringIterator;
}());
var ArrayIterator = (function () {
    function ArrayIterator(arr, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = toLength(arr); }
        this.arr = arr;
        this.idx = idx;
        this.len = len;
    }
    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };
    ArrayIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.arr[this.idx++]
        } : {
            done: true,
            value: undefined
        };
    };
    return ArrayIterator;
}());
function getIterator(obj) {
    var i = obj[iterator_1.iterator];
    if (!i && typeof obj === 'string') {
        return new StringIterator(obj);
    }
    if (!i && obj.length !== undefined) {
        return new ArrayIterator(obj);
    }
    if (!i) {
        throw new TypeError('object is not iterable');
    }
    return obj[iterator_1.iterator]();
}
var maxSafeInteger = Math.pow(2, 53) - 1;
function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
        return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
        return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
        return 0;
    }
    if (len > maxSafeInteger) {
        return maxSafeInteger;
    }
    return len;
}
function numberIsFinite(value) {
    return typeof value === 'number' && root_1.root.isFinite(value);
}
function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
        return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
        return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
}
//# sourceMappingURL=IteratorObservable.js.map

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var noop_1 = __webpack_require__(57);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var NeverObservable = (function (_super) {
    __extends(NeverObservable, _super);
    function NeverObservable() {
        _super.call(this);
    }
    /**
     * Creates an Observable that emits no items to the Observer.
     *
     * <span class="informal">An Observable that never emits anything.</span>
     *
     * <img src="./img/never.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that emits
     * neither values nor errors nor the completion notification. It can be used
     * for testing purposes or for composing with other Observables. Please note
     * that by never emitting a complete notification, this Observable keeps the
     * subscription from being disposed automatically. Subscriptions need to be
     * manually disposed.
     *
     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
     * function info() {
     *   console.log('Will not be called');
     * }
     * var result = Rx.Observable.never().startWith(7);
     * result.subscribe(x => console.log(x), info, info);
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link of}
     * @see {@link throw}
     *
     * @return {Observable} A "never" Observable: never emits anything.
     * @static true
     * @name never
     * @owner Observable
     */
    NeverObservable.create = function () {
        return new NeverObservable();
    };
    /** @deprecated internal use only */ NeverObservable.prototype._subscribe = function (subscriber) {
        noop_1.noop();
    };
    return NeverObservable;
}(Observable_1.Observable));
exports.NeverObservable = NeverObservable;
//# sourceMappingURL=NeverObservable.js.map

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
function dispatch(state) {
    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;
    if (index === length) {
        subscriber.complete();
        return;
    }
    var key = keys[index];
    subscriber.next([key, obj[key]]);
    state.index = index + 1;
    this.schedule(state);
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PairsObservable = (function (_super) {
    __extends(PairsObservable, _super);
    function PairsObservable(obj, scheduler) {
        _super.call(this);
        this.obj = obj;
        this.scheduler = scheduler;
        this.keys = Object.keys(obj);
    }
    /**
     * Convert an object into an observable sequence of [key, value] pairs
     * using an optional IScheduler to enumerate the object.
     *
     * @example <caption>Converts a javascript object to an Observable</caption>
     * var obj = {
     *   foo: 42,
     *   bar: 56,
     *   baz: 78
     * };
     *
     * var source = Rx.Observable.pairs(obj);
     *
     * var subscription = source.subscribe(
     *   function (x) {
     *     console.log('Next: %s', x);
     *   },
     *   function (err) {
     *     console.log('Error: %s', err);
     *   },
     *   function () {
     *     console.log('Completed');
     *   });
     *
     * @param {Object} obj The object to inspect and turn into an
     * Observable sequence.
     * @param {Scheduler} [scheduler] An optional IScheduler to run the
     * enumeration of the input sequence on.
     * @returns {(Observable<Array<string | T>>)} An observable sequence of
     * [key, value] pairs from the object.
     */
    PairsObservable.create = function (obj, scheduler) {
        return new PairsObservable(obj, scheduler);
    };
    /** @deprecated internal use only */ PairsObservable.prototype._subscribe = function (subscriber) {
        var _a = this, keys = _a.keys, scheduler = _a.scheduler;
        var length = keys.length;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber
            });
        }
        else {
            for (var idx = 0; idx < length; idx++) {
                var key = keys[idx];
                subscriber.next([key, this.obj[key]]);
            }
            subscriber.complete();
        }
    };
    return PairsObservable;
}(Observable_1.Observable));
exports.PairsObservable = PairsObservable;
//# sourceMappingURL=PairsObservable.js.map

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var RangeObservable = (function (_super) {
    __extends(RangeObservable, _super);
    function RangeObservable(start, count, scheduler) {
        _super.call(this);
        this.start = start;
        this._count = count;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits a sequence of numbers within a specified
     * range.
     *
     * <span class="informal">Emits a sequence of numbers in a range.</span>
     *
     * <img src="./img/range.png" width="100%">
     *
     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * IScheduler and just delivers the notifications synchronously, but may use
     * an optional IScheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */
    RangeObservable.create = function (start, count, scheduler) {
        if (start === void 0) { start = 0; }
        if (count === void 0) { count = 0; }
        return new RangeObservable(start, count, scheduler);
    };
    RangeObservable.dispatch = function (state) {
        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    };
    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var start = this.start;
        var count = this._count;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(RangeObservable.dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(start++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
    };
    return RangeObservable;
}(Observable_1.Observable));
exports.RangeObservable = RangeObservable;
//# sourceMappingURL=RangeObservable.js.map

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var asap_1 = __webpack_require__(155);
var isNumeric_1 = __webpack_require__(26);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var SubscribeOnObservable = (function (_super) {
    __extends(SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) { delayTime = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        _super.call(this);
        this.source = source;
        this.delayTime = delayTime;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {
            this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = asap_1.asap;
        }
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) { delay = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    /** @deprecated internal use only */ SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(Observable_1.Observable));
exports.SubscribeOnObservable = SubscribeOnObservable;
//# sourceMappingURL=SubscribeOnObservable.js.map

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(26);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(4);
var isScheduler_1 = __webpack_require__(10);
var isDate_1 = __webpack_require__(40);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var TimerObservable = (function (_super) {
    __extends(TimerObservable, _super);
    function TimerObservable(dueTime, period, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        _super.call(this);
        this.period = -1;
        this.dueTime = 0;
        if (isNumeric_1.isNumeric(period)) {
            this.period = Number(period) < 1 && 1 || Number(period);
        }
        else if (isScheduler_1.isScheduler(period)) {
            scheduler = period;
        }
        if (!isScheduler_1.isScheduler(scheduler)) {
            scheduler = async_1.async;
        }
        this.scheduler = scheduler;
        this.dueTime = isDate_1.isDate(dueTime) ?
            (+dueTime - this.scheduler.now()) :
            dueTime;
    }
    /**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` IScheduler to provide a notion of time, but you
     * may pass any IScheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */
    TimerObservable.create = function (initialDelay, period, scheduler) {
        if (initialDelay === void 0) { initialDelay = 0; }
        return new TimerObservable(initialDelay, period, scheduler);
    };
    TimerObservable.dispatch = function (state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        var action = this;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        action.schedule(state, period);
    };
    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;
        return scheduler.schedule(TimerObservable.dispatch, dueTime, {
            index: index, period: period, subscriber: subscriber
        });
    };
    return TimerObservable;
}(Observable_1.Observable));
exports.TimerObservable = TimerObservable;
//# sourceMappingURL=TimerObservable.js.map

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(2);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var UsingObservable = (function (_super) {
    __extends(UsingObservable, _super);
    function UsingObservable(resourceFactory, observableFactory) {
        _super.call(this);
        this.resourceFactory = resourceFactory;
        this.observableFactory = observableFactory;
    }
    UsingObservable.create = function (resourceFactory, observableFactory) {
        return new UsingObservable(resourceFactory, observableFactory);
    };
    /** @deprecated internal use only */ UsingObservable.prototype._subscribe = function (subscriber) {
        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;
        var resource;
        try {
            resource = resourceFactory();
            return new UsingSubscriber(subscriber, resource, observableFactory);
        }
        catch (err) {
            subscriber.error(err);
        }
    };
    return UsingObservable;
}(Observable_1.Observable));
exports.UsingObservable = UsingObservable;
var UsingSubscriber = (function (_super) {
    __extends(UsingSubscriber, _super);
    function UsingSubscriber(destination, resource, observableFactory) {
        _super.call(this, destination);
        this.resource = resource;
        this.observableFactory = observableFactory;
        destination.add(resource);
        this.tryUse();
    }
    UsingSubscriber.prototype.tryUse = function () {
        try {
            var source = this.observableFactory.call(this, this.resource);
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return UsingSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=UsingObservable.js.map

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundCallbackObservable_1 = __webpack_require__(323);
exports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundNodeCallbackObservable_1 = __webpack_require__(324);
exports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(10);
var isArray_1 = __webpack_require__(11);
var ArrayObservable_1 = __webpack_require__(12);
var combineLatest_1 = __webpack_require__(31);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable in order and,
 * whenever any Observable emits, collecting an array of the most recent
 * values from each Observable. So if you pass `n` Observables to operator,
 * returned Observable will always emit an array of `n` values, in order
 * corresponding to order of passed Observables (value from the first Observable
 * on the first place and so on).
 *
 * Static version of `combineLatest` accepts either an array of Observables
 * or each Observable can be put directly as an argument. Note that array of
 * Observables is good choice, if you don't know beforehand how many Observables
 * you will combine. Passing empty array will result in Observable that
 * completes immediately.
 *
 * To ensure output array has always the same length, `combineLatest` will
 * actually wait for all input Observables to emit at least once,
 * before it starts emitting results. This means if some Observable emits
 * values before other Observables started emitting, all that values but last
 * will be lost. On the other hand, is some Observable does not emit value but
 * completes, resulting Observable will complete at the same moment without
 * emitting anything, since it will be now impossible to include value from
 * completed Observable in resulting array. Also, if some input Observable does
 * not emit any value and never completes, `combineLatest` will also never emit
 * and never complete, since, again, it will wait for all streams to emit some
 * value.
 *
 * If at least one Observable was passed to `combineLatest` and all passed Observables
 * emitted something, resulting Observable will complete when all combined
 * streams complete. So even if some Observable completes, result of
 * `combineLatest` will still emit values when other Observables do. In case
 * of completed Observable, its value from now on will always be the last
 * emitted value. On the other hand, if any Observable errors, `combineLatest`
 * will error immediately as well, and all other Observables will be unsubscribed.
 *
 * `combineLatest` accepts as optional parameter `project` function, which takes
 * as arguments all values that would normally be emitted by resulting Observable.
 * `project` can return any kind of value, which will be then emitted by Observable
 * instead of default array. Note that `project` does not take as argument that array
 * of values, but values themselves. That means default `project` can be imagined
 * as function that takes all its arguments and puts them into an array.
 *
 *
 * @example <caption>Combine two timer Observables</caption>
 * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now
 * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now
 * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);
 * combinedTimers.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0] after 0.5s
 * // [1, 0] after 1s
 * // [1, 1] after 1.5s
 * // [2, 1] after 2s
 *
 *
 * @example <caption>Combine an array of Observables</caption>
 * const observables = [1, 5, 10].map(
 *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds
 * );
 * const combined = Rx.Observable.combineLatest(observables);
 * combined.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0, 0] immediately
 * // [1, 0, 0] after 1s
 * // [1, 5, 0] after 5s
 * // [1, 5, 10] after 10s
 *
 *
 * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} observable1 An input Observable to combine with other Observables.
 * @param {ObservableInput} observable2 An input Observable to combine with other Observables.
 * More than one input Observables may be given as arguments
 * or an array of Observables may be given as the first argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @static true
 * @name combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    var scheduler = null;
    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DeferObservable_1 = __webpack_require__(325);
exports.defer = DeferObservable_1.DeferObservable.create;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscriber_1 = __webpack_require__(1);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(5);
var root_1 = __webpack_require__(9);
var ReplaySubject_1 = __webpack_require__(29);
var tryCatch_1 = __webpack_require__(8);
var errorObject_1 = __webpack_require__(7);
var assign_1 = __webpack_require__(481);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var WebSocketSubject = (function (_super) {
    __extends(WebSocketSubject, _super);
    function WebSocketSubject(urlConfigOrSource, destination) {
        if (urlConfigOrSource instanceof Observable_1.Observable) {
            _super.call(this, destination, urlConfigOrSource);
        }
        else {
            _super.call(this);
            this.WebSocketCtor = root_1.root.WebSocket;
            this._output = new Subject_1.Subject();
            if (typeof urlConfigOrSource === 'string') {
                this.url = urlConfigOrSource;
            }
            else {
                // WARNING: config object could override important members here.
                assign_1.assign(this, urlConfigOrSource);
            }
            if (!this.WebSocketCtor) {
                throw new Error('no WebSocket constructor can be found');
            }
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    }
    WebSocketSubject.prototype.resultSelector = function (e) {
        return JSON.parse(e.data);
    };
    /**
     * Wrapper around the w3c-compatible WebSocket object provided by the browser.
     *
     * @example <caption>Wraps browser WebSocket</caption>
     *
     * let socket$ = Observable.webSocket('ws://localhost:8081');
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>
     *
     * import { w3cwebsocket } from 'websocket';
     *
     * let socket$ = Observable.webSocket({
     *   url: 'ws://localhost:8081',
     *   WebSocketCtor: w3cwebsocket
     * });
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object
     * @return {WebSocketSubject}
     * @static true
     * @name webSocket
     * @owner Observable
     */
    WebSocketSubject.create = function (urlConfigOrSource) {
        return new WebSocketSubject(urlConfigOrSource);
    };
    WebSocketSubject.prototype.lift = function (operator) {
        var sock = new WebSocketSubject(this, this.destination);
        sock.operator = operator;
        return sock;
    };
    WebSocketSubject.prototype._resetState = function () {
        this.socket = null;
        if (!this.source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
        this._output = new Subject_1.Subject();
    };
    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures
    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
        var self = this;
        return new Observable_1.Observable(function (observer) {
            var result = tryCatch_1.tryCatch(subMsg)();
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                self.next(result);
            }
            var subscription = self.subscribe(function (x) {
                var result = tryCatch_1.tryCatch(messageFilter)(x);
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else if (result) {
                    observer.next(x);
                }
            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
            return function () {
                var result = tryCatch_1.tryCatch(unsubMsg)();
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else {
                    self.next(result);
                }
                subscription.unsubscribe();
            };
        });
    };
    WebSocketSubject.prototype._connectSocket = function () {
        var _this = this;
        var WebSocketCtor = this.WebSocketCtor;
        var observer = this._output;
        var socket = null;
        try {
            socket = this.protocol ?
                new WebSocketCtor(this.url, this.protocol) :
                new WebSocketCtor(this.url);
            this.socket = socket;
            if (this.binaryType) {
                this.socket.binaryType = this.binaryType;
            }
        }
        catch (e) {
            observer.error(e);
            return;
        }
        var subscription = new Subscription_1.Subscription(function () {
            _this.socket = null;
            if (socket && socket.readyState === 1) {
                socket.close();
            }
        });
        socket.onopen = function (e) {
            var openObserver = _this.openObserver;
            if (openObserver) {
                openObserver.next(e);
            }
            var queue = _this.destination;
            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                if (e && e.code) {
                    socket.close(e.code, e.reason);
                }
                else {
                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +
                        'and an optional reason: { code: number, reason: string }'));
                }
                _this._resetState();
            }, function () {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                socket.close();
                _this._resetState();
            });
            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {
                subscription.add(queue.subscribe(_this.destination));
            }
        };
        socket.onerror = function (e) {
            _this._resetState();
            observer.error(e);
        };
        socket.onclose = function (e) {
            _this._resetState();
            var closeObserver = _this.closeObserver;
            if (closeObserver) {
                closeObserver.next(e);
            }
            if (e.wasClean) {
                observer.complete();
            }
            else {
                observer.error(e);
            }
        };
        socket.onmessage = function (e) {
            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                observer.next(result);
            }
        };
    };
    /** @deprecated internal use only */ WebSocketSubject.prototype._subscribe = function (subscriber) {
        var _this = this;
        var source = this.source;
        if (source) {
            return source.subscribe(subscriber);
        }
        if (!this.socket) {
            this._connectSocket();
        }
        var subscription = new Subscription_1.Subscription();
        subscription.add(this._output.subscribe(subscriber));
        subscription.add(function () {
            var socket = _this.socket;
            if (_this._output.observers.length === 0) {
                if (socket && socket.readyState === 1) {
                    socket.close();
                }
                _this._resetState();
            }
        });
        return subscription;
    };
    WebSocketSubject.prototype.unsubscribe = function () {
        var _a = this, source = _a.source, socket = _a.socket;
        if (socket && socket.readyState === 1) {
            socket.close();
            this._resetState();
        }
        _super.prototype.unsubscribe.call(this);
        if (!source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    };
    return WebSocketSubject;
}(Subject_1.AnonymousSubject));
exports.WebSocketSubject = WebSocketSubject;
//# sourceMappingURL=WebSocketSubject.js.map

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AjaxObservable_1 = __webpack_require__(71);
exports.ajax = AjaxObservable_1.AjaxObservable.create;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var WebSocketSubject_1 = __webpack_require__(344);
exports.webSocket = WebSocketSubject_1.WebSocketSubject.create;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var EmptyObservable_1 = __webpack_require__(13);
exports.empty = EmptyObservable_1.EmptyObservable.create;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ForkJoinObservable_1 = __webpack_require__(327);
exports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventObservable_1 = __webpack_require__(328);
exports.fromEvent = FromEventObservable_1.FromEventObservable.create;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventPatternObservable_1 = __webpack_require__(329);
exports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PromiseObservable_1 = __webpack_require__(70);
exports.fromPromise = PromiseObservable_1.PromiseObservable.create;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var GenerateObservable_1 = __webpack_require__(330);
exports.generate = GenerateObservable_1.GenerateObservable.create;
//# sourceMappingURL=generate.js.map

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IfObservable_1 = __webpack_require__(331);
exports._if = IfObservable_1.IfObservable.create;
//# sourceMappingURL=if.js.map

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IntervalObservable_1 = __webpack_require__(332);
exports.interval = IntervalObservable_1.IntervalObservable.create;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var NeverObservable_1 = __webpack_require__(334);
exports.never = NeverObservable_1.NeverObservable.create;
//# sourceMappingURL=never.js.map

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var onErrorResumeNext_1 = __webpack_require__(51);
exports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PairsObservable_1 = __webpack_require__(335);
exports.pairs = PairsObservable_1.PairsObservable.create;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var RangeObservable_1 = __webpack_require__(336);
exports.range = RangeObservable_1.RangeObservable.create;
//# sourceMappingURL=range.js.map

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ErrorObservable_1 = __webpack_require__(326);
exports._throw = ErrorObservable_1.ErrorObservable.create;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var UsingObservable_1 = __webpack_require__(339);
exports.using = UsingObservable_1.UsingObservable.create;
//# sourceMappingURL=using.js.map

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(35);
exports.zip = zip_1.zipStatic;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audit_1 = __webpack_require__(44);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return audit_1.audit(durationSelector)(this);
}
exports.audit = audit;
//# sourceMappingURL=audit.js.map

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var auditTime_1 = __webpack_require__(76);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return auditTime_1.auditTime(duration, scheduler)(this);
}
exports.auditTime = auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var buffer_1 = __webpack_require__(77);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return buffer_1.buffer(closingNotifier)(this);
}
exports.buffer = buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferCount_1 = __webpack_require__(78);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return bufferCount_1.bufferCount(bufferSize, startBufferEvery)(this);
}
exports.bufferCount = bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var isScheduler_1 = __webpack_require__(10);
var bufferTime_1 = __webpack_require__(79);
/* tslint:enable:max-line-length */
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return bufferTime_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);
}
exports.bufferTime = bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferToggle_1 = __webpack_require__(80);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return bufferToggle_1.bufferToggle(openings, closingSelector)(this);
}
exports.bufferToggle = bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferWhen_1 = __webpack_require__(81);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return bufferWhen_1.bufferWhen(closingSelector)(this);
}
exports.bufferWhen = bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var catchError_1 = __webpack_require__(82);
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @method catch
 * @name catch
 * @owner Observable
 */
function _catch(selector) {
    return catchError_1.catchError(selector)(this);
}
exports._catch = _catch;
//# sourceMappingURL=catch.js.map

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineAll_1 = __webpack_require__(83);
/**
 * Converts a higher-order Observable into a first-order Observable by waiting
 * for the outer Observable to complete, then applying {@link combineLatest}.
 *
 * <span class="informal">Flattens an Observable-of-Observables by applying
 * {@link combineLatest} when the Observable-of-Observables completes.</span>
 *
 * <img src="./img/combineAll.png" width="100%">
 *
 * Takes an Observable of Observables, and collects all Observables from it.
 * Once the outer Observable completes, it subscribes to all collected
 * Observables and combines their values using the {@link combineLatest}
 * strategy, such that:
 * - Every time an inner Observable emits, the output Observable emits.
 * - When the returned observable emits, it emits all of the latest values by:
 *   - If a `project` function is provided, it is called with each recent value
 *     from each inner Observable in whatever order they arrived, and the result
 *     of the `project` function is what is emitted by the output Observable.
 *   - If there is no `project` function, an array of all of the most recent
 *     values is emitted by the output Observable.
 *
 * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev =>
 *   Rx.Observable.interval(Math.random()*2000).take(3)
 * ).take(2);
 * var result = higherOrder.combineAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 * @see {@link mergeAll}
 *
 * @param {function} [project] An optional function to map the most recent
 * values from each inner Observable into a new result. Takes each of the most
 * recent values from each collected inner Observable as arguments, in order.
 * @return {Observable} An Observable of projected results or arrays of recent
 * values.
 * @method combineAll
 * @owner Observable
 */
function combineAll(project) {
    return combineAll_1.combineAll(project)(this);
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineLatest_1 = __webpack_require__(31);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return combineLatest_1.combineLatest.apply(void 0, observables)(this);
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concat_1 = __webpack_require__(84);
var concat_2 = __webpack_require__(18);
exports.concatStatic = concat_2.concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return concat_1.concat.apply(void 0, observables)(this);
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatAll_1 = __webpack_require__(45);
/* tslint:enable:max-line-length */
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return concatAll_1.concatAll()(this);
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMap_1 = __webpack_require__(46);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return concatMap_1.concatMap(project, resultSelector)(this);
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMapTo_1 = __webpack_require__(85);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return concatMapTo_1.concatMapTo(innerObservable, resultSelector)(this);
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var count_1 = __webpack_require__(86);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return count_1.count(predicate)(this);
}
exports.count = count;
//# sourceMappingURL=count.js.map

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var debounce_1 = __webpack_require__(87);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return debounce_1.debounce(durationSelector)(this);
}
exports.debounce = debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var debounceTime_1 = __webpack_require__(88);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return debounceTime_1.debounceTime(dueTime, scheduler)(this);
}
exports.debounceTime = debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defaultIfEmpty_1 = __webpack_require__(47);
/* tslint:enable:max-line-length */
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return defaultIfEmpty_1.defaultIfEmpty(defaultValue)(this);
}
exports.defaultIfEmpty = defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var delay_1 = __webpack_require__(89);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return delay_1.delay(delay, scheduler)(this);
}
exports.delay = delay;
//# sourceMappingURL=delay.js.map

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var delayWhen_1 = __webpack_require__(90);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    return delayWhen_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);
}
exports.delayWhen = delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dematerialize_1 = __webpack_require__(91);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return dematerialize_1.dematerialize()(this);
}
exports.dematerialize = dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinct_1 = __webpack_require__(92);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(keySelector, flushes) {
    return distinct_1.distinct(keySelector, flushes)(this);
}
exports.distinct = distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilChanged_1 = __webpack_require__(48);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);
}
exports.distinctUntilChanged = distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilKeyChanged_1 = __webpack_require__(93);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilKeyChanged_1.distinctUntilKeyChanged(key, compare)(this);
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tap_1 = __webpack_require__(141);
/* tslint:enable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */
function _do(nextOrObserver, error, complete) {
    return tap_1.tap(nextOrObserver, error, complete)(this);
}
exports._do = _do;
//# sourceMappingURL=do.js.map

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var elementAt_1 = __webpack_require__(94);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return elementAt_1.elementAt(index, defaultValue)(this);
}
exports.elementAt = elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var every_1 = __webpack_require__(95);
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return every_1.every(predicate, thisArg)(this);
}
exports.every = every;
//# sourceMappingURL=every.js.map

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var exhaust_1 = __webpack_require__(96);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return exhaust_1.exhaust()(this);
}
exports.exhaust = exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var exhaustMap_1 = __webpack_require__(97);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return exhaustMap_1.exhaustMap(project, resultSelector)(this);
}
exports.exhaustMap = exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var expand_1 = __webpack_require__(98);
/* tslint:enable:max-line-length */
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return expand_1.expand(project, concurrent, scheduler)(this);
}
exports.expand = expand;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var filter_1 = __webpack_require__(49);
/* tslint:enable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return filter_1.filter(predicate, thisArg)(this);
}
exports.filter = filter;
//# sourceMappingURL=filter.js.map

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var finalize_1 = __webpack_require__(99);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function _finally(callback) {
    return finalize_1.finalize(callback)(this);
}
exports._finally = _finally;
//# sourceMappingURL=finally.js.map

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var find_1 = __webpack_require__(50);
/* tslint:enable:max-line-length */
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    return find_1.find(predicate, thisArg)(this);
}
exports.find = find;
//# sourceMappingURL=find.js.map

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var findIndex_1 = __webpack_require__(100);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return findIndex_1.findIndex(predicate, thisArg)(this);
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var first_1 = __webpack_require__(101);
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return first_1.first(predicate, resultSelector, defaultValue)(this);
}
exports.first = first;
//# sourceMappingURL=first.js.map

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var groupBy_1 = __webpack_require__(102);
exports.GroupedObservable = groupBy_1.GroupedObservable;
/* tslint:enable:max-line-length */
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return groupBy_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);
}
exports.groupBy = groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ignoreElements_1 = __webpack_require__(103);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return ignoreElements_1.ignoreElements()(this);
}
exports.ignoreElements = ignoreElements;
;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isEmpty_1 = __webpack_require__(104);
/**
 * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.
 *
 * <img src="./img/isEmpty.png" width="100%">
 *
 * @return {Observable} An Observable that emits a Boolean.
 * @method isEmpty
 * @owner Observable
 */
function isEmpty() {
    return isEmpty_1.isEmpty()(this);
}
exports.isEmpty = isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var last_1 = __webpack_require__(105);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - The condition any source emitted item has to satisfy.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return last_1.last(predicate, resultSelector, defaultValue)(this);
}
exports.last = last;
//# sourceMappingURL=last.js.map

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @param func
 * @return {Observable<R>}
 * @method let
 * @owner Observable
 */
function letProto(func) {
    return func(this);
}
exports.letProto = letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var map_1 = __webpack_require__(19);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    return map_1.map(project, thisArg)(this);
}
exports.map = map;
//# sourceMappingURL=map.js.map

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mapTo_1 = __webpack_require__(106);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return mapTo_1.mapTo(value)(this);
}
exports.mapTo = mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var materialize_1 = __webpack_require__(107);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return materialize_1.materialize()(this);
}
exports.materialize = materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var max_1 = __webpack_require__(108);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    return max_1.max(comparer)(this);
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var merge_1 = __webpack_require__(109);
var merge_2 = __webpack_require__(30);
exports.mergeStatic = merge_2.merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {ObservableInput} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} An Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return merge_1.merge.apply(void 0, observables)(this);
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeAll_1 = __webpack_require__(32);
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeAll_1.mergeAll(concurrent)(this);
}
exports.mergeAll = mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);
}
exports.mergeMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMapTo_1 = __webpack_require__(110);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMapTo_1.mergeMapTo(innerObservable, resultSelector, concurrent)(this);
}
exports.mergeMapTo = mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeScan_1 = __webpack_require__(111);
/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeScan_1.mergeScan(accumulator, seed, concurrent)(this);
}
exports.mergeScan = mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var min_1 = __webpack_require__(112);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    return min_1.min(comparer)(this);
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var multicast_1 = __webpack_require__(15);
/* tslint:enable:max-line-length */
/**
 * Allows source Observable to be subscribed only once with a Subject of choice,
 * while still sharing its values between multiple subscribers.
 *
 * <span class="informal">Subscribe to Observable once, but send its values to multiple subscribers.</span>
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * `multicast` is an operator that works in two modes.
 *
 * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject
 * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be
 * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that
 * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when
 * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription
 * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,
 * even though usually it would send a request per every subscriber. Since it sends a request at the moment of
 * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.
 *
 * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,
 * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source
 * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,
 * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count
 * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least
 * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a
 * ConnectableObservable, use `refCount`.
 *
 * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.
 * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable
 * as well, which should be the input stream modified by any operators you want. Note that in this
 * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If
 * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.
 * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,
 * if inside the selector function you subscribe to the input Observable multiple times, actual source stream
 * will be subscribed only once. So if you have a chain of operators that use some Observable many times,
 * but you want to subscribe to that Observable only once, this is the mode you would use.
 *
 * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the
 * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject
 * has some special properties, Observable returned by `multicast` will have them as well. If you want to use
 * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},
 * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},
 * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually
 * just wrappers around `multicast`, with a specific Subject hardcoded inside.
 *
 * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,
 * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.
 *
 * @example <caption>Use ConnectableObservable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const connectableSeconds = seconds.multicast(new Subject());
 *
 * connectableSeconds.subscribe(value => console.log('first: ' + value));
 * connectableSeconds.subscribe(value => console.log('second: ' + value));
 *
 * // At this point still nothing happens, even though we subscribed twice.
 *
 * connectableSeconds.connect();
 *
 * // From now on `seconds` are being logged to the console,
 * // twice per every second. `seconds` Observable was however only subscribed once,
 * // so under the hood Observable.interval had only one clock started.
 *
 * @example <caption>Use selector</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds
 *     .multicast(
 *         () => new Subject(),
 *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.
 *                                         // Because we are inside selector, `seconds` is subscribed once,
 *     )                                   // thus starting only one clock used internally by Observable.interval.
 *     .subscribe();
 *
 * @see {@link publish}
 * @see {@link publishLast}
 * @see {@link publishBehavior}
 * @see {@link publishReplay}
 * @see {@link share}
 * @see {@link shareReplay}
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through
 * which the source sequence's elements will be multicast to the selector function input Observable or
 * ConnectableObservable returned by the operator.
 * @param {Function} [selector] - Optional selector function that can use the input stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the input source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector
 * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.
 *
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    return multicast_1.multicast(subjectOrSubjectFactory, selector)(this);
}
exports.multicast = multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var observeOn_1 = __webpack_require__(33);
/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return observeOn_1.observeOn(scheduler, delay)(this);
}
exports.observeOn = observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var onErrorResumeNext_1 = __webpack_require__(51);
/* tslint:enable:max-line-length */
/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, nextSources)(this);
}
exports.onErrorResumeNext = onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var pairwise_1 = __webpack_require__(113);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return pairwise_1.pairwise()(this);
}
exports.pairwise = pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var partition_1 = __webpack_require__(114);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return partition_1.partition(predicate, thisArg)(this);
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var pluck_1 = __webpack_require__(115);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    return pluck_1.pluck.apply(void 0, properties)(this);
}
exports.pluck = pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publish_1 = __webpack_require__(116);
/* tslint:enable:max-line-length */
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return publish_1.publish(selector)(this);
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishBehavior_1 = __webpack_require__(117);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return publishBehavior_1.publishBehavior(value)(this);
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishLast_1 = __webpack_require__(118);
/**
 * @return {ConnectableObservable<T>}
 * @method publishLast
 * @owner Observable
 */
function publishLast() {
    //TODO(benlesh): correct type-flow through here.
    return publishLast_1.publishLast()(this);
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishReplay_1 = __webpack_require__(119);
/* tslint:enable:max-line-length */
/**
 * @param bufferSize
 * @param windowTime
 * @param selectorOrScheduler
 * @param scheduler
 * @return {Observable<T> | ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */
function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    return publishReplay_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var race_1 = __webpack_require__(120);
// NOTE: to support backwards compatability with 5.4.* and lower
var race_2 = __webpack_require__(43);
exports.raceStatic = race_2.race;
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return race_1.race.apply(void 0, observables)(this);
}
exports.race = race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(21);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        return reduce_1.reduce(accumulator, seed)(this);
    }
    return reduce_1.reduce(accumulator)(this);
}
exports.reduce = reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var repeat_1 = __webpack_require__(121);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    return repeat_1.repeat(count)(this);
}
exports.repeat = repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var repeatWhen_1 = __webpack_require__(122);
/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return repeatWhen_1.repeatWhen(notifier)(this);
}
exports.repeatWhen = repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var retry_1 = __webpack_require__(123);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return retry_1.retry(count)(this);
}
exports.retry = retry;
//# sourceMappingURL=retry.js.map

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var retryWhen_1 = __webpack_require__(124);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return retryWhen_1.retryWhen(notifier)(this);
}
exports.retryWhen = retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var sample_1 = __webpack_require__(125);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return sample_1.sample(notifier)(this);
}
exports.sample = sample;
//# sourceMappingURL=sample.js.map

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var sampleTime_1 = __webpack_require__(126);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return sampleTime_1.sampleTime(period, scheduler)(this);
}
exports.sampleTime = sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var scan_1 = __webpack_require__(53);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    if (arguments.length >= 2) {
        return scan_1.scan(accumulator, seed)(this);
    }
    return scan_1.scan(accumulator)(this);
}
exports.scan = scan;
//# sourceMappingURL=scan.js.map

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var sequenceEqual_1 = __webpack_require__(127);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return sequenceEqual_1.sequenceEqual(compareTo, comparor)(this);
}
exports.sequenceEqual = sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var share_1 = __webpack_require__(128);
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 *
 * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.
 * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.
 * Observable.of("test").publish().refCount() will not re-emit "test" on new subscriptions, Observable.of("test").share() will
 * re-emit "test" to new subscriptions.
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */
function share() {
    return share_1.share()(this);
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shareReplay_1 = __webpack_require__(129);
/**
 * @method shareReplay
 * @owner Observable
 */
function shareReplay(bufferSize, windowTime, scheduler) {
    return shareReplay_1.shareReplay(bufferSize, windowTime, scheduler)(this);
}
exports.shareReplay = shareReplay;
;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var single_1 = __webpack_require__(130);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return single_1.single(predicate)(this);
}
exports.single = single;
//# sourceMappingURL=single.js.map

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skip_1 = __webpack_require__(131);
/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(count) {
    return skip_1.skip(count)(this);
}
exports.skip = skip;
//# sourceMappingURL=skip.js.map

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipLast_1 = __webpack_require__(132);
/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */
function skipLast(count) {
    return skipLast_1.skipLast(count)(this);
}
exports.skipLast = skipLast;
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipUntil_1 = __webpack_require__(133);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return skipUntil_1.skipUntil(notifier)(this);
}
exports.skipUntil = skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipWhile_1 = __webpack_require__(134);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return skipWhile_1.skipWhile(predicate)(this);
}
exports.skipWhile = skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var startWith_1 = __webpack_require__(135);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    return startWith_1.startWith.apply(void 0, array)(this);
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var subscribeOn_1 = __webpack_require__(463);
/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return subscribeOn_1.subscribeOn(scheduler, delay)(this);
}
exports.subscribeOn = subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchAll_1 = __webpack_require__(136);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * subscribing to only the most recently emitted of those inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * previous inner Observable once a new one appears.</span>
 *
 * <img src="./img/switch.png" width="100%">
 *
 * `switch` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable subscribes to the inner Observable and
 * begins emitting the items emitted by that. So far, it behaves
 * like {@link mergeAll}. However, when a new inner Observable is emitted,
 * `switch` unsubscribes from the earlier-emitted inner Observable and
 * subscribes to the new inner Observable and begins emitting items from it. It
 * continues to behave like this for subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * // Each click event is mapped to an Observable that ticks every second
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var switched = higherOrder.switch();
 * // The outcome is that `switched` is essentially a timer that restarts
 * // on every click. The interval Observables from older clicks do not merge
 * // with the current interval Observable.
 * switched.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switchMap}
 * @see {@link switchMapTo}
 * @see {@link zipAll}
 *
 * @return {Observable<T>} An Observable that emits the items emitted by the
 * Observable most recently emitted by the source Observable.
 * @method switch
 * @name switch
 * @owner Observable
 */
function _switch() {
    return switchAll_1.switchAll()(this);
}
exports._switch = _switch;
//# sourceMappingURL=switch.js.map

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMap_1 = __webpack_require__(54);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return switchMap_1.switchMap(project, resultSelector)(this);
}
exports.switchMap = switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMapTo_1 = __webpack_require__(137);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return switchMapTo_1.switchMapTo(innerObservable, resultSelector)(this);
}
exports.switchMapTo = switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var take_1 = __webpack_require__(138);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    return take_1.take(count)(this);
}
exports.take = take;
//# sourceMappingURL=take.js.map

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeLast_1 = __webpack_require__(55);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    return takeLast_1.takeLast(count)(this);
}
exports.takeLast = takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeUntil_1 = __webpack_require__(139);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value, the output Observable stops mirroring the source Observable
 * and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return takeUntil_1.takeUntil(notifier)(this);
}
exports.takeUntil = takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeWhile_1 = __webpack_require__(140);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return takeWhile_1.takeWhile(predicate)(this);
}
exports.takeWhile = takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var throttle_1 = __webpack_require__(34);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector, config) {
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return throttle_1.throttle(durationSelector, config)(this);
}
exports.throttle = throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var throttle_1 = __webpack_require__(34);
var throttleTime_1 = __webpack_require__(142);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return throttleTime_1.throttleTime(duration, scheduler, config)(this);
}
exports.throttleTime = throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var timeout_1 = __webpack_require__(144);
/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */
function timeout(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeout_1.timeout(due, scheduler)(this);
}
exports.timeout = timeout;
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var timeoutWith_1 = __webpack_require__(145);
/* tslint:enable:max-line-length */
/**
 *
 * Errors if Observable does not emit a value in given time span, in case of which
 * subscribes to the second Observable.
 *
 * <span class="informal">It's a version of `timeout` operator that let's you specify fallback Observable.</span>
 *
 * <img src="./img/timeoutWith.png" width="100%">
 *
 * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,
 * still accepting as a first argument either a number or a Date, which control - respectively -
 * when values of source Observable should be emitted or when it should complete.
 *
 * The only difference is that it accepts a second, required parameter. This parameter
 * should be an Observable which will be subscribed when source Observable fails any timeout check.
 * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting
 * values from second Observable. Note that this fallback Observable is not checked for timeouts
 * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second
 * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that
 * stream completes, it completes as well.
 *
 * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided
 * here - as a third, optional parameter. It still is used to schedule timeout checks and -
 * as a consequence - when second Observable will be subscribed, since subscription happens
 * immediately after failing check.
 *
 * @example <caption>Add fallback observable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const minutes = Rx.Observable.interval(60 * 1000);
 *
 * seconds.timeoutWith(900, minutes)
 *     .subscribe(
 *         value => console.log(value), // After 900ms, will start emitting `minutes`,
 *                                      // since first value of `seconds` will not arrive fast enough.
 *         err => console.log(err) // Would be called after 900ms in case of `timeout`,
 *                                 // but here will never be called.
 *     );
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable
 *                          passed as a second parameter.
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeoutWith_1.timeoutWith(due, withObservable, scheduler)(this);
}
exports.timeoutWith = timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var timestamp_1 = __webpack_require__(56);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timestamp_1.timestamp(scheduler)(this);
}
exports.timestamp = timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toArray_1 = __webpack_require__(146);
/**
 * Collects all source emissions and emits them as an array when the source completes.
 *
 * <span class="informal">Get all values inside an array when the source completes</span>
 *
 * <img src="./img/toArray.png" width="100%">
 *
 * `toArray` will wait until the source Observable completes
 * before emitting the array containing all emissions.
 * When the source Observable errors no array will be emitted.
 *
 * @example <caption>Create array from input</caption>
 * const input = Rx.Observable.interval(100).take(4);
 *
 * input.toArray()
 *   .subscribe(arr => console.log(arr)); // [0,1,2,3]
 *
 * @see {@link buffer}
 *
 * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}
 * @method toArray
 * @owner Observable
 */
function toArray() {
    return toArray_1.toArray()(this);
}
exports.toArray = toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var window_1 = __webpack_require__(147);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return window_1.window(windowBoundaries)(this);
}
exports.window = window;
//# sourceMappingURL=window.js.map

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowCount_1 = __webpack_require__(148);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return windowCount_1.windowCount(windowSize, startWindowEvery)(this);
}
exports.windowCount = windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(4);
var isNumeric_1 = __webpack_require__(26);
var isScheduler_1 = __webpack_require__(10);
var windowTime_1 = __webpack_require__(149);
function windowTime(windowTimeSpan) {
    var scheduler = async_1.async;
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (isScheduler_1.isScheduler(arguments[3])) {
        scheduler = arguments[3];
    }
    if (isScheduler_1.isScheduler(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (isNumeric_1.isNumeric(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (isScheduler_1.isScheduler(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (isNumeric_1.isNumeric(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return windowTime_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);
}
exports.windowTime = windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowToggle_1 = __webpack_require__(150);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return windowToggle_1.windowToggle(openings, closingSelector)(this);
}
exports.windowToggle = windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowWhen_1 = __webpack_require__(151);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return windowWhen_1.windowWhen(closingSelector)(this);
}
exports.windowWhen = windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var withLatestFrom_1 = __webpack_require__(152);
/* tslint:enable:max-line-length */
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    return withLatestFrom_1.withLatestFrom.apply(void 0, args)(this);
}
exports.withLatestFrom = withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(35);
/* tslint:enable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zipProto() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return zip_1.zip.apply(void 0, observables)(this);
}
exports.zipProto = zipProto;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zipAll_1 = __webpack_require__(153);
/**
 * @param project
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method zipAll
 * @owner Observable
 */
function zipAll(project) {
    return zipAll_1.zipAll(project)(this);
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audit_1 = __webpack_require__(44);
exports.audit = audit_1.audit;
var auditTime_1 = __webpack_require__(76);
exports.auditTime = auditTime_1.auditTime;
var buffer_1 = __webpack_require__(77);
exports.buffer = buffer_1.buffer;
var bufferCount_1 = __webpack_require__(78);
exports.bufferCount = bufferCount_1.bufferCount;
var bufferTime_1 = __webpack_require__(79);
exports.bufferTime = bufferTime_1.bufferTime;
var bufferToggle_1 = __webpack_require__(80);
exports.bufferToggle = bufferToggle_1.bufferToggle;
var bufferWhen_1 = __webpack_require__(81);
exports.bufferWhen = bufferWhen_1.bufferWhen;
var catchError_1 = __webpack_require__(82);
exports.catchError = catchError_1.catchError;
var combineAll_1 = __webpack_require__(83);
exports.combineAll = combineAll_1.combineAll;
var combineLatest_1 = __webpack_require__(31);
exports.combineLatest = combineLatest_1.combineLatest;
var concat_1 = __webpack_require__(84);
exports.concat = concat_1.concat;
var concatAll_1 = __webpack_require__(45);
exports.concatAll = concatAll_1.concatAll;
var concatMap_1 = __webpack_require__(46);
exports.concatMap = concatMap_1.concatMap;
var concatMapTo_1 = __webpack_require__(85);
exports.concatMapTo = concatMapTo_1.concatMapTo;
var count_1 = __webpack_require__(86);
exports.count = count_1.count;
var debounce_1 = __webpack_require__(87);
exports.debounce = debounce_1.debounce;
var debounceTime_1 = __webpack_require__(88);
exports.debounceTime = debounceTime_1.debounceTime;
var defaultIfEmpty_1 = __webpack_require__(47);
exports.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
var delay_1 = __webpack_require__(89);
exports.delay = delay_1.delay;
var delayWhen_1 = __webpack_require__(90);
exports.delayWhen = delayWhen_1.delayWhen;
var dematerialize_1 = __webpack_require__(91);
exports.dematerialize = dematerialize_1.dematerialize;
var distinct_1 = __webpack_require__(92);
exports.distinct = distinct_1.distinct;
var distinctUntilChanged_1 = __webpack_require__(48);
exports.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
var distinctUntilKeyChanged_1 = __webpack_require__(93);
exports.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
var elementAt_1 = __webpack_require__(94);
exports.elementAt = elementAt_1.elementAt;
var every_1 = __webpack_require__(95);
exports.every = every_1.every;
var exhaust_1 = __webpack_require__(96);
exports.exhaust = exhaust_1.exhaust;
var exhaustMap_1 = __webpack_require__(97);
exports.exhaustMap = exhaustMap_1.exhaustMap;
var expand_1 = __webpack_require__(98);
exports.expand = expand_1.expand;
var filter_1 = __webpack_require__(49);
exports.filter = filter_1.filter;
var finalize_1 = __webpack_require__(99);
exports.finalize = finalize_1.finalize;
var find_1 = __webpack_require__(50);
exports.find = find_1.find;
var findIndex_1 = __webpack_require__(100);
exports.findIndex = findIndex_1.findIndex;
var first_1 = __webpack_require__(101);
exports.first = first_1.first;
var groupBy_1 = __webpack_require__(102);
exports.groupBy = groupBy_1.groupBy;
var ignoreElements_1 = __webpack_require__(103);
exports.ignoreElements = ignoreElements_1.ignoreElements;
var isEmpty_1 = __webpack_require__(104);
exports.isEmpty = isEmpty_1.isEmpty;
var last_1 = __webpack_require__(105);
exports.last = last_1.last;
var map_1 = __webpack_require__(19);
exports.map = map_1.map;
var mapTo_1 = __webpack_require__(106);
exports.mapTo = mapTo_1.mapTo;
var materialize_1 = __webpack_require__(107);
exports.materialize = materialize_1.materialize;
var max_1 = __webpack_require__(108);
exports.max = max_1.max;
var merge_1 = __webpack_require__(109);
exports.merge = merge_1.merge;
var mergeAll_1 = __webpack_require__(32);
exports.mergeAll = mergeAll_1.mergeAll;
var mergeMap_1 = __webpack_require__(20);
exports.mergeMap = mergeMap_1.mergeMap;
var mergeMap_2 = __webpack_require__(20);
exports.flatMap = mergeMap_2.mergeMap;
var mergeMapTo_1 = __webpack_require__(110);
exports.mergeMapTo = mergeMapTo_1.mergeMapTo;
var mergeScan_1 = __webpack_require__(111);
exports.mergeScan = mergeScan_1.mergeScan;
var min_1 = __webpack_require__(112);
exports.min = min_1.min;
var multicast_1 = __webpack_require__(15);
exports.multicast = multicast_1.multicast;
var observeOn_1 = __webpack_require__(33);
exports.observeOn = observeOn_1.observeOn;
var onErrorResumeNext_1 = __webpack_require__(51);
exports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
var pairwise_1 = __webpack_require__(113);
exports.pairwise = pairwise_1.pairwise;
var partition_1 = __webpack_require__(114);
exports.partition = partition_1.partition;
var pluck_1 = __webpack_require__(115);
exports.pluck = pluck_1.pluck;
var publish_1 = __webpack_require__(116);
exports.publish = publish_1.publish;
var publishBehavior_1 = __webpack_require__(117);
exports.publishBehavior = publishBehavior_1.publishBehavior;
var publishLast_1 = __webpack_require__(118);
exports.publishLast = publishLast_1.publishLast;
var publishReplay_1 = __webpack_require__(119);
exports.publishReplay = publishReplay_1.publishReplay;
var race_1 = __webpack_require__(120);
exports.race = race_1.race;
var reduce_1 = __webpack_require__(21);
exports.reduce = reduce_1.reduce;
var repeat_1 = __webpack_require__(121);
exports.repeat = repeat_1.repeat;
var repeatWhen_1 = __webpack_require__(122);
exports.repeatWhen = repeatWhen_1.repeatWhen;
var retry_1 = __webpack_require__(123);
exports.retry = retry_1.retry;
var retryWhen_1 = __webpack_require__(124);
exports.retryWhen = retryWhen_1.retryWhen;
var refCount_1 = __webpack_require__(52);
exports.refCount = refCount_1.refCount;
var sample_1 = __webpack_require__(125);
exports.sample = sample_1.sample;
var sampleTime_1 = __webpack_require__(126);
exports.sampleTime = sampleTime_1.sampleTime;
var scan_1 = __webpack_require__(53);
exports.scan = scan_1.scan;
var sequenceEqual_1 = __webpack_require__(127);
exports.sequenceEqual = sequenceEqual_1.sequenceEqual;
var share_1 = __webpack_require__(128);
exports.share = share_1.share;
var shareReplay_1 = __webpack_require__(129);
exports.shareReplay = shareReplay_1.shareReplay;
var single_1 = __webpack_require__(130);
exports.single = single_1.single;
var skip_1 = __webpack_require__(131);
exports.skip = skip_1.skip;
var skipLast_1 = __webpack_require__(132);
exports.skipLast = skipLast_1.skipLast;
var skipUntil_1 = __webpack_require__(133);
exports.skipUntil = skipUntil_1.skipUntil;
var skipWhile_1 = __webpack_require__(134);
exports.skipWhile = skipWhile_1.skipWhile;
var startWith_1 = __webpack_require__(135);
exports.startWith = startWith_1.startWith;
/**
 * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be
 * treeshaken. Currently if this export is added back, it
 * forces apps to bring in asap scheduler along with
 * Immediate, root, and other supporting code.
 */
// export { subscribeOn } from './operators/subscribeOn';
var switchAll_1 = __webpack_require__(136);
exports.switchAll = switchAll_1.switchAll;
var switchMap_1 = __webpack_require__(54);
exports.switchMap = switchMap_1.switchMap;
var switchMapTo_1 = __webpack_require__(137);
exports.switchMapTo = switchMapTo_1.switchMapTo;
var take_1 = __webpack_require__(138);
exports.take = take_1.take;
var takeLast_1 = __webpack_require__(55);
exports.takeLast = takeLast_1.takeLast;
var takeUntil_1 = __webpack_require__(139);
exports.takeUntil = takeUntil_1.takeUntil;
var takeWhile_1 = __webpack_require__(140);
exports.takeWhile = takeWhile_1.takeWhile;
var tap_1 = __webpack_require__(141);
exports.tap = tap_1.tap;
var throttle_1 = __webpack_require__(34);
exports.throttle = throttle_1.throttle;
var throttleTime_1 = __webpack_require__(142);
exports.throttleTime = throttleTime_1.throttleTime;
var timeInterval_1 = __webpack_require__(143);
exports.timeInterval = timeInterval_1.timeInterval;
var timeout_1 = __webpack_require__(144);
exports.timeout = timeout_1.timeout;
var timeoutWith_1 = __webpack_require__(145);
exports.timeoutWith = timeoutWith_1.timeoutWith;
var timestamp_1 = __webpack_require__(56);
exports.timestamp = timestamp_1.timestamp;
var toArray_1 = __webpack_require__(146);
exports.toArray = toArray_1.toArray;
var window_1 = __webpack_require__(147);
exports.window = window_1.window;
var windowCount_1 = __webpack_require__(148);
exports.windowCount = windowCount_1.windowCount;
var windowTime_1 = __webpack_require__(149);
exports.windowTime = windowTime_1.windowTime;
var windowToggle_1 = __webpack_require__(150);
exports.windowToggle = windowToggle_1.windowToggle;
var windowWhen_1 = __webpack_require__(151);
exports.windowWhen = windowWhen_1.windowWhen;
var withLatestFrom_1 = __webpack_require__(152);
exports.withLatestFrom = withLatestFrom_1.withLatestFrom;
var zip_1 = __webpack_require__(35);
exports.zip = zip_1.zip;
var zipAll_1 = __webpack_require__(153);
exports.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=operators.js.map

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscribeOnObservable_1 = __webpack_require__(337);
/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
exports.subscribeOn = subscribeOn;
var SubscribeOnOperator = (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(5);
/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        _super.call(this);
    }
    /**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;
//# sourceMappingURL=Action.js.map

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
var AnimationFrame_1 = __webpack_require__(475);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AnimationFrameAction = (function (_super) {
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If an animation frame has already been requested, don't request another
        // one. If an animation frame hasn't been requested yet, request one. Return
        // the current animation frame request id.
        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested animation frame and
        // set the scheduled flag to undefined so the next AnimationFrameAction will
        // request its own.
        if (scheduler.actions.length === 0) {
            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AnimationFrameAction;
}(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var AnimationFrameScheduler = (function (_super) {
    __extends(AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        _super.apply(this, arguments);
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AnimationFrameScheduler = AnimationFrameScheduler;
//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Immediate_1 = __webpack_require__(477);
var AsyncAction_1 = __webpack_require__(22);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsapAction = (function (_super) {
    __extends(AsapAction, _super);
    function AsapAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If a microtask has already been scheduled, don't schedule another
        // one. If a microtask hasn't been scheduled yet, schedule one now. Return
        // the current scheduled microtask id.
        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested microtask and
        // set the scheduled flag to undefined so the next AsapAction will schedule
        // its own.
        if (scheduler.actions.length === 0) {
            Immediate_1.Immediate.clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AsapAction;
}(AsyncAction_1.AsyncAction));
exports.AsapAction = AsapAction;
//# sourceMappingURL=AsapAction.js.map

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var AsapScheduler = (function (_super) {
    __extends(AsapScheduler, _super);
    function AsapScheduler() {
        _super.apply(this, arguments);
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AsapScheduler = AsapScheduler;
//# sourceMappingURL=AsapScheduler.js.map

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Otherwise flush the scheduler starting with this action.
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        _super.apply(this, arguments);
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;
//# sourceMappingURL=QueueScheduler.js.map

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AnimationFrameAction_1 = __webpack_require__(465);
var AnimationFrameScheduler_1 = __webpack_require__(466);
/**
 *
 * Animation Frame Scheduler
 *
 * <span class="informal">Perform task when `window.requestAnimationFrame` would fire</span>
 *
 * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler
 * behaviour.
 *
 * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.
 * It makes sure scheduled task will happen just before next browser content repaint,
 * thus performing animations as efficiently as possible.
 *
 * @example <caption>Schedule div height animation</caption>
 * const div = document.querySelector('.some-div');
 *
 * Rx.Scheduler.schedule(function(height) {
 *   div.style.height = height + "px";
 *
 *   this.schedule(height + 1);  // `this` references currently executing Action,
 *                               // which we reschedule with new state
 * }, 0, 0);
 *
 * // You will see .some-div element growing in height
 *
 *
 * @static true
 * @name animationFrame
 * @owner Scheduler
 */
exports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
//# sourceMappingURL=animationFrame.js.map

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(5);
var SubscriptionLoggable_1 = __webpack_require__(158);
var applyMixins_1 = __webpack_require__(161);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ColdObservable = (function (_super) {
    __extends(ColdObservable, _super);
    function ColdObservable(messages, scheduler) {
        _super.call(this, function (subscriber) {
            var observable = this;
            var index = observable.logSubscribedFrame();
            subscriber.add(new Subscription_1.Subscription(function () {
                observable.logUnsubscribedFrame(index);
            }));
            observable.scheduleMessages(subscriber);
            return subscriber;
        });
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    ColdObservable.prototype.scheduleMessages = function (subscriber) {
        var messagesLength = this.messages.length;
        for (var i = 0; i < messagesLength; i++) {
            var message = this.messages[i];
            subscriber.add(this.scheduler.schedule(function (_a) {
                var message = _a.message, subscriber = _a.subscriber;
                message.notification.observe(subscriber);
            }, message.frame, { message: message, subscriber: subscriber }));
        }
    };
    return ColdObservable;
}(Observable_1.Observable));
exports.ColdObservable = ColdObservable;
applyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=ColdObservable.js.map

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(6);
var Subscription_1 = __webpack_require__(5);
var SubscriptionLoggable_1 = __webpack_require__(158);
var applyMixins_1 = __webpack_require__(161);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var HotObservable = (function (_super) {
    __extends(HotObservable, _super);
    function HotObservable(messages, scheduler) {
        _super.call(this);
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    /** @deprecated internal use only */ HotObservable.prototype._subscribe = function (subscriber) {
        var subject = this;
        var index = subject.logSubscribedFrame();
        subscriber.add(new Subscription_1.Subscription(function () {
            subject.logUnsubscribedFrame(index);
        }));
        return _super.prototype._subscribe.call(this, subscriber);
    };
    HotObservable.prototype.setup = function () {
        var subject = this;
        var messagesLength = subject.messages.length;
        /* tslint:disable:no-var-keyword */
        for (var i = 0; i < messagesLength; i++) {
            (function () {
                var message = subject.messages[i];
                /* tslint:enable */
                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);
            })();
        }
    };
    return HotObservable;
}(Subject_1.Subject));
exports.HotObservable = HotObservable;
applyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=HotObservable.js.map

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Notification_1 = __webpack_require__(17);
var ColdObservable_1 = __webpack_require__(472);
var HotObservable_1 = __webpack_require__(473);
var SubscriptionLog_1 = __webpack_require__(157);
var VirtualTimeScheduler_1 = __webpack_require__(154);
var defaultMaxFrame = 750;
var TestScheduler = (function (_super) {
    __extends(TestScheduler, _super);
    function TestScheduler(assertDeepEqual) {
        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);
        this.assertDeepEqual = assertDeepEqual;
        this.hotObservables = [];
        this.coldObservables = [];
        this.flushTests = [];
    }
    TestScheduler.prototype.createTime = function (marbles) {
        var indexOf = marbles.indexOf('|');
        if (indexOf === -1) {
            throw new Error('marble diagram for time should have a completion marker "|"');
        }
        return indexOf * TestScheduler.frameTimeFactor;
    };
    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {
        if (marbles.indexOf('^') !== -1) {
            throw new Error('cold observable cannot have subscription offset "^"');
        }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('cold observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var cold = new ColdObservable_1.ColdObservable(messages, this);
        this.coldObservables.push(cold);
        return cold;
    };
    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {
        if (marbles.indexOf('!') !== -1) {
            throw new Error('hot observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var subject = new HotObservable_1.HotObservable(messages, this);
        this.hotObservables.push(subject);
        return subject;
    };
    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {
        var _this = this;
        var messages = [];
        observable.subscribe(function (value) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });
        }, function (err) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });
        }, function () {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });
        });
        return messages;
    };
    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {
        var _this = this;
        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }
        var actual = [];
        var flushTest = { actual: actual, ready: false };
        var unsubscriptionFrame = TestScheduler
            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;
        var subscription;
        this.schedule(function () {
            subscription = observable.subscribe(function (x) {
                var value = x;
                // Support Observable-of-Observables
                if (x instanceof Observable_1.Observable) {
                    value = _this.materializeInnerObservable(value, _this.frame);
                }
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });
            }, function (err) {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });
            }, function () {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });
            });
        }, 0);
        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);
        }
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles, values, errorValue) {
                flushTest.ready = true;
                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);
            }
        };
    };
    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {
        var flushTest = { actual: actualSubscriptionLogs, ready: false };
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles) {
                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;
                flushTest.ready = true;
                flushTest.expected = marblesArray.map(function (marbles) {
                    return TestScheduler.parseMarblesAsSubscriptions(marbles);
                });
            }
        };
    };
    TestScheduler.prototype.flush = function () {
        var hotObservables = this.hotObservables;
        while (hotObservables.length > 0) {
            hotObservables.shift().setup();
        }
        _super.prototype.flush.call(this);
        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });
        while (readyFlushTests.length > 0) {
            var test = readyFlushTests.shift();
            this.assertDeepEqual(test.actual, test.expected);
        }
    };
    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {
        if (typeof marbles !== 'string') {
            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);
        }
        var len = marbles.length;
        var groupStart = -1;
        var subscriptionFrame = Number.POSITIVE_INFINITY;
        var unsubscriptionFrame = Number.POSITIVE_INFINITY;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '^':
                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    subscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                case '!':
                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                default:
                    throw new Error('there can only be \'^\' and \'!\' markers in a ' +
                        'subscription marble diagram. Found instead \'' + c + '\'.');
            }
        }
        if (unsubscriptionFrame < 0) {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);
        }
        else {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);
        }
    };
    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {
        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('conventional marble diagrams cannot have the ' +
                'unsubscription marker "!"');
        }
        var len = marbles.length;
        var testMessages = [];
        var subIndex = marbles.indexOf('^');
        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);
        var getValue = typeof values !== 'object' ?
            function (x) { return x; } :
            function (x) {
                // Support Observable-of-Observables
                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {
                    return values[x].messages;
                }
                return values[x];
            };
        var groupStart = -1;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor + frameOffset;
            var notification = void 0;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '|':
                    notification = Notification_1.Notification.createComplete();
                    break;
                case '^':
                    break;
                case '#':
                    notification = Notification_1.Notification.createError(errorValue || 'error');
                    break;
                default:
                    notification = Notification_1.Notification.createNext(getValue(c));
                    break;
            }
            if (notification) {
                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });
            }
        }
        return testMessages;
    };
    return TestScheduler;
}(VirtualTimeScheduler_1.VirtualTimeScheduler));
exports.TestScheduler = TestScheduler;
//# sourceMappingURL=TestScheduler.js.map

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
var RequestAnimationFrameDefinition = (function () {
    function RequestAnimationFrameDefinition(root) {
        if (root.requestAnimationFrame) {
            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);
        }
        else if (root.mozRequestAnimationFrame) {
            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);
        }
        else if (root.webkitRequestAnimationFrame) {
            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);
        }
        else if (root.msRequestAnimationFrame) {
            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);
        }
        else if (root.oRequestAnimationFrame) {
            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);
        }
        else {
            this.cancelAnimationFrame = root.clearTimeout.bind(root);
            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };
        }
    }
    return RequestAnimationFrameDefinition;
}());
exports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;
exports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);
//# sourceMappingURL=AnimationFrame.js.map

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FastMap = (function () {
    function FastMap() {
        this.values = {};
    }
    FastMap.prototype.delete = function (key) {
        this.values[key] = null;
        return true;
    };
    FastMap.prototype.set = function (key, value) {
        this.values[key] = value;
        return this;
    };
    FastMap.prototype.get = function (key) {
        return this.values[key];
    };
    FastMap.prototype.forEach = function (cb, thisArg) {
        var values = this.values;
        for (var key in values) {
            if (values.hasOwnProperty(key) && values[key] !== null) {
                cb.call(thisArg, values[key], key);
            }
        }
    };
    FastMap.prototype.clear = function () {
        this.values = {};
    };
    return FastMap;
}());
exports.FastMap = FastMap;
//# sourceMappingURL=FastMap.js.map

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(clearImmediate, setImmediate) {/**
Some credit for this helper goes to http://github.com/YuzuJS/setImmediate
*/

var root_1 = __webpack_require__(9);
var ImmediateDefinition = (function () {
    function ImmediateDefinition(root) {
        this.root = root;
        if (root.setImmediate && typeof root.setImmediate === 'function') {
            this.setImmediate = root.setImmediate.bind(root);
            this.clearImmediate = root.clearImmediate.bind(root);
        }
        else {
            this.nextHandle = 1;
            this.tasksByHandle = {};
            this.currentlyRunningATask = false;
            // Don't get fooled by e.g. browserify environments.
            if (this.canUseProcessNextTick()) {
                // For Node.js before 0.9
                this.setImmediate = this.createProcessNextTickSetImmediate();
            }
            else if (this.canUsePostMessage()) {
                // For non-IE10 modern browsers
                this.setImmediate = this.createPostMessageSetImmediate();
            }
            else if (this.canUseMessageChannel()) {
                // For web workers, where supported
                this.setImmediate = this.createMessageChannelSetImmediate();
            }
            else if (this.canUseReadyStateChange()) {
                // For IE 6–8
                this.setImmediate = this.createReadyStateChangeSetImmediate();
            }
            else {
                // For older browsers
                this.setImmediate = this.createSetTimeoutSetImmediate();
            }
            var ci = function clearImmediate(handle) {
                delete clearImmediate.instance.tasksByHandle[handle];
            };
            ci.instance = this;
            this.clearImmediate = ci;
        }
    }
    ImmediateDefinition.prototype.identify = function (o) {
        return this.root.Object.prototype.toString.call(o);
    };
    ImmediateDefinition.prototype.canUseProcessNextTick = function () {
        return this.identify(this.root.process) === '[object process]';
    };
    ImmediateDefinition.prototype.canUseMessageChannel = function () {
        return Boolean(this.root.MessageChannel);
    };
    ImmediateDefinition.prototype.canUseReadyStateChange = function () {
        var document = this.root.document;
        return Boolean(document && 'onreadystatechange' in document.createElement('script'));
    };
    ImmediateDefinition.prototype.canUsePostMessage = function () {
        var root = this.root;
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `root.postMessage` means something completely different and can't be used for this purpose.
        if (root.postMessage && !root.importScripts) {
            var postMessageIsAsynchronous_1 = true;
            var oldOnMessage = root.onmessage;
            root.onmessage = function () {
                postMessageIsAsynchronous_1 = false;
            };
            root.postMessage('', '*');
            root.onmessage = oldOnMessage;
            return postMessageIsAsynchronous_1;
        }
        return false;
    };
    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    ImmediateDefinition.prototype.partiallyApplied = function (handler) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var fn = function result() {
            var _a = result, handler = _a.handler, args = _a.args;
            if (typeof handler === 'function') {
                handler.apply(undefined, args);
            }
            else {
                (new Function('' + handler))();
            }
        };
        fn.handler = handler;
        fn.args = args;
        return fn;
    };
    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {
        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);
        return this.nextHandle++;
    };
    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
        var root = this.root;
        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';
        var onGlobalMessage = function globalMessageHandler(event) {
            var instance = globalMessageHandler.instance;
            if (event.source === root &&
                typeof event.data === 'string' &&
                event.data.indexOf(messagePrefix) === 0) {
                instance.runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };
        onGlobalMessage.instance = this;
        root.addEventListener('message', onGlobalMessage, false);
        var fn = function setImmediate() {
            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.postMessage(messagePrefix + handle, '*');
            return handle;
        };
        fn.instance = this;
        fn.messagePrefix = messagePrefix;
        return fn;
    };
    ImmediateDefinition.prototype.runIfPresent = function (handle) {
        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'
        // So if we're currently running a task, we'll need to delay this invocation.
        if (this.currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // 'too much recursion' error.
            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);
        }
        else {
            var task = this.tasksByHandle[handle];
            if (task) {
                this.currentlyRunningATask = true;
                try {
                    task();
                }
                finally {
                    this.clearImmediate(handle);
                    this.currentlyRunningATask = false;
                }
            }
        }
    };
    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {
        var _this = this;
        var channel = new this.root.MessageChannel();
        channel.port1.onmessage = function (event) {
            var handle = event.data;
            _this.runIfPresent(handle);
        };
        var fn = function setImmediate() {
            var _a = setImmediate, channel = _a.channel, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
        fn.channel = channel;
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var root = instance.root;
            var doc = root.document;
            var html = doc.documentElement;
            var handle = instance.addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement('script');
            script.onreadystatechange = function () {
                instance.runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    return ImmediateDefinition;
}());
exports.ImmediateDefinition = ImmediateDefinition;
exports.Immediate = new ImmediateDefinition(root_1.root);
//# sourceMappingURL=Immediate.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(166).clearImmediate, __webpack_require__(166).setImmediate))

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
var MapPolyfill_1 = __webpack_require__(479);
exports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();
//# sourceMappingURL=Map.js.map

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var MapPolyfill = (function () {
    function MapPolyfill() {
        this.size = 0;
        this._values = [];
        this._keys = [];
    }
    MapPolyfill.prototype.get = function (key) {
        var i = this._keys.indexOf(key);
        return i === -1 ? undefined : this._values[i];
    };
    MapPolyfill.prototype.set = function (key, value) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            this._keys.push(key);
            this._values.push(value);
            this.size++;
        }
        else {
            this._values[i] = value;
        }
        return this;
    };
    MapPolyfill.prototype.delete = function (key) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            return false;
        }
        this._values.splice(i, 1);
        this._keys.splice(i, 1);
        this.size--;
        return true;
    };
    MapPolyfill.prototype.clear = function () {
        this._keys.length = 0;
        this._values.length = 0;
        this.size = 0;
    };
    MapPolyfill.prototype.forEach = function (cb, thisArg) {
        for (var i = 0; i < this.size; i++) {
            cb.call(thisArg, this._values[i], this._keys[i]);
        }
    };
    return MapPolyfill;
}());
exports.MapPolyfill = MapPolyfill;
//# sourceMappingURL=MapPolyfill.js.map

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
function minimalSetImpl() {
    // THIS IS NOT a full impl of Set, this is just the minimum
    // bits of functionality we need for this library.
    return (function () {
        function MinimalSet() {
            this._values = [];
        }
        MinimalSet.prototype.add = function (value) {
            if (!this.has(value)) {
                this._values.push(value);
            }
        };
        MinimalSet.prototype.has = function (value) {
            return this._values.indexOf(value) !== -1;
        };
        Object.defineProperty(MinimalSet.prototype, "size", {
            get: function () {
                return this._values.length;
            },
            enumerable: true,
            configurable: true
        });
        MinimalSet.prototype.clear = function () {
            this._values.length = 0;
        };
        return MinimalSet;
    }());
}
exports.minimalSetImpl = minimalSetImpl;
exports.Set = root_1.root.Set || minimalSetImpl();
//# sourceMappingURL=Set.js.map

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(9);
function assignImpl(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    var len = sources.length;
    for (var i = 0; i < len; i++) {
        var source = sources[i];
        for (var k in source) {
            if (source.hasOwnProperty(k)) {
                target[k] = source[k];
            }
        }
    }
    return target;
}
exports.assignImpl = assignImpl;
;
function getAssign(root) {
    return root.Object.assign || assignImpl;
}
exports.getAssign = getAssign;
exports.assign = getAssign(root_1.root);
//# sourceMappingURL=assign.js.map

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
exports.not = not;
//# sourceMappingURL=not.js.map

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subscriber_1 = __webpack_require__(1);
var rxSubscriber_1 = __webpack_require__(37);
var Observer_1 = __webpack_require__(66);
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
            return nextOrObserver[rxSubscriber_1.rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;
//# sourceMappingURL=toSubscriber.js.map

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62), __webpack_require__(189)))

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var AlertController = /** @class */ (function () {
    //@ngInject
    function AlertController($scope, alertService) {
        $scope.$id = "alertController";
        $scope.alerts = alertService.getAlerts();
    }
    return AlertController;
}());
exports.AlertController = AlertController;


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
//model
var Alert = /** @class */ (function () {
    function Alert(msg, type, fade, dismissable) {
        this.fade = false;
        this.dismissable = false;
        this.msg = msg;
        this.type = type;
        this.fade = fade;
        this.dismissable = dismissable;
    }
    return Alert;
}());
exports.Alert = Alert;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
//import Alert = require('../model/alert');
var alert_1 = __webpack_require__(486);
var AlertService = /** @class */ (function () {
    function AlertService($timeout, alerts) {
        var _this = this;
        this.$timeout = $timeout;
        this.alerts = alerts;
        this.newAlert = function () {
            return new alert_1.Alert();
        };
        this.get = function () {
            return _this.alerts || [];
        };
        this.addAlert = function (alert) {
            _this.alerts.push(alert);
            _this.$timeout(function () {
                if (!alert.dismissable) {
                    _this.removeAlert(alert);
                }
            }, 3500);
        };
        this.addAlerts = function (alerts) {
            angular.forEach(alerts, function (alert) {
                _this.addAlert(alert);
            });
        };
        this.removeAlert = function (alert) {
            var index = _this.alerts.indexOf(alert, 0);
            if (index != undefined) {
                _this.alerts.splice(index, 1);
            }
        };
        this.getAlerts = function () {
            return _this.alerts;
        };
        this.formatMessagesToAlerts = function (messages) {
            var alerts = [];
            if (messages && messages.length) {
                for (var message in messages) {
                    var alert = new alert_1.Alert(messages[message].message, messages[message].messageType);
                    alerts.push(alert);
                    if (alert.type === 'success' || alert.type === 'error') {
                        _this.$timeout(function () {
                            alert.fade = true;
                        }, 3500);
                        alert.dismissable = false;
                    }
                    else {
                        alert.fade = false;
                        alert.dismissable = true;
                    }
                }
            }
            return alerts;
        };
        this.removeOldestAlert = function () {
            _this.alerts.splice(0, 1);
        };
        this.alerts = [];
    }
    AlertService.$inject = [
        '$timeout'
    ];
    return AlertService;
}());
exports.AlertService = AlertService;


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../typings/hibachiTypescript.d.ts' />
/// <reference path='../typings/tsd.d.ts' />
var core_module_1 = __webpack_require__(16);
var md5 = __webpack_require__(64);
//generic bootstrapper
var BaseBootStrapper = /** @class */ (function () {
    function BaseBootStrapper(myApplication) {
        var _this = this;
        this._resourceBundle = {};
        this.getInstantiationKey = function (baseURL) {
            return _this.$q(function (resolve, reject) {
                if (hibachiConfig.instantiationKey) {
                    resolve(hibachiConfig.instantiationKey);
                }
                else {
                    _this.$http.get(baseURL + '?' + hibachiConfig.action + '=api:main.getInstantiationKey').then(function (resp) { return resolve(resp.data.data.instantiationKey); });
                }
            });
        };
        this.getData = function (invalidCache) {
            var promises = {};
            for (var i in invalidCache) {
                var invalidCacheName = invalidCache[i];
                var functionName = invalidCacheName.charAt(0).toUpperCase() + invalidCacheName.slice(1);
                promises[invalidCacheName] = _this['get' + functionName + 'Data']();
            }
            return _this.$q.all(promises);
        };
        this.getAttributeCacheKeyData = function () {
            var urlString = "";
            if (!hibachiConfig) {
                hibachiConfig = {};
            }
            if (!hibachiConfig.baseURL) {
                hibachiConfig.baseURL = '';
            }
            urlString += hibachiConfig.baseURL;
            if (urlString.length && urlString.slice(-1) !== '/') {
                urlString += '/';
            }
            return _this.$http.get(urlString + '?' + hibachiConfig.action + '=api:main.getAttributeModel')
                .then(function (resp) {
                core_module_1.coremodule.constant('attributeMetaData', resp.data.data);
                //for safari private mode which has no localStorage
                try {
                    localStorage.setItem('attributeMetaData', JSON.stringify(resp.data.data));
                    localStorage.setItem('attributeChecksum', md5(JSON.stringify(resp.data.data)));
                }
                catch (e) { }
                _this.attributeMetaData = resp.data.data;
            });
        };
        this.getInstantiationKeyData = function () {
            if (!_this.instantiationKey) {
                var d = new Date();
                var n = d.getTime();
                _this.instantiationKey = n.toString();
            }
            var urlString = "";
            if (!hibachiConfig) {
                hibachiConfig = {};
            }
            if (!hibachiConfig.baseURL) {
                hibachiConfig.baseURL = '';
            }
            urlString += hibachiConfig.baseURL;
            if (hibachiConfig.baseURL.length && hibachiConfig.baseURL.charAt(hibachiConfig.baseURL.length - 1) != '/') {
                urlString += '/';
            }
            return _this.$http.get(urlString + '/custom/config/config.json?instantiationKey=' + _this.instantiationKey)
                .then(function (resp) {
                var appConfig = resp.data.data;
                if (hibachiConfig.baseURL.length) {
                    appConfig.baseURL = urlString;
                }
                core_module_1.coremodule.constant('appConfig', resp.data.data);
                try {
                    localStorage.setItem('appConfig', JSON.stringify(resp.data.data));
                }
                catch (e) { }
                _this.appConfig = appConfig;
                return _this.getResourceBundles();
            });
        };
        this.getResourceBundle = function (locale) {
            var deferred = _this.$q.defer();
            var locale = locale || _this.appConfig.rbLocale;
            if (_this._resourceBundle[locale]) {
                return _this._resourceBundle[locale];
            }
            var urlString = _this.appConfig.baseURL + '/custom/config/resourceBundles/' + locale + '.json?instantiationKey=' + _this.appConfig.instantiationKey;
            _this.$http({
                url: urlString,
                method: "GET"
            }).success(function (response, status, headersGetter) {
                _this._resourceBundle[locale] = response;
                deferred.resolve(response);
            }).error(function (response, status) {
                if (status === 404) {
                    _this._resourceBundle[locale] = {};
                    deferred.resolve(response);
                }
                else {
                    deferred.reject(response);
                }
            });
            return deferred.promise;
        };
        this.getResourceBundles = function () {
            var localeListArray = _this.appConfig.rbLocale.split('_');
            var rbPromise;
            var rbPromises = [];
            rbPromise = _this.getResourceBundle(_this.appConfig.rbLocale);
            rbPromises.push(rbPromise);
            if (localeListArray.length === 2) {
                rbPromise = _this.getResourceBundle(localeListArray[0]);
                rbPromises.push(rbPromise);
            }
            if (localeListArray[0] !== 'en') {
                //this.getResourceBundle('en_us');
                _this.getResourceBundle('en');
            }
            return _this.$q.all(rbPromises).then(function (data) {
                core_module_1.coremodule.constant('resourceBundles', _this._resourceBundle);
            }, function (error) {
                //can enter here due to 404
                core_module_1.coremodule.constant('resourceBundles', _this._resourceBundle);
            });
        };
        this.myApplication = myApplication;
        return angular.lazy(this.myApplication).resolve(['$http', '$q', function ($http, $q) {
                _this.$http = $http;
                _this.$q = $q;
                var baseURL = hibachiConfig.baseURL;
                if (!baseURL) {
                    baseURL = '';
                }
                if (baseURL.length && baseURL.slice(-1) !== '/') {
                    baseURL += '/';
                }
                return _this.getInstantiationKey(baseURL).then(function (instantiationKey) {
                    _this.instantiationKey = instantiationKey;
                    var invalidCache = [];
                    try {
                        var hashedData = localStorage.getItem('attributeChecksum');
                        if (hashedData !== null && hibachiConfig.attributeCacheKey === hashedData.toUpperCase()) {
                            core_module_1.coremodule.constant('attributeMetaData', JSON.parse(localStorage.getItem('attributeMetaData')));
                        }
                        else {
                            invalidCache.push('attributeCacheKey');
                        }
                    }
                    catch (e) {
                        invalidCache.push('attributeCacheKey');
                    }
                    try {
                        _this.appConfig = JSON.parse(localStorage.getItem('appConfig'));
                        if (hibachiConfig.instantiationKey === _this.appConfig.instantiationKey) {
                            core_module_1.coremodule.constant('appConfig', _this.appConfig);
                            return _this.getResourceBundles();
                        }
                        else {
                            invalidCache.push('instantiationKey');
                        }
                    }
                    catch (e) {
                        invalidCache.push('instantiationKey');
                    }
                    return _this.getData(invalidCache);
                });
            }]);
    }
    return BaseBootStrapper;
}());
exports.BaseBootStrapper = BaseBootStrapper;


/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../typings/tsd.d.ts" />
/// <reference path="../../typings/hibachiTypescript.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
//modules
var core_module_1 = __webpack_require__(16);
//services
//components
var swcardlayout_1 = __webpack_require__(493);
var swcardview_1 = __webpack_require__(496);
var swcardheader_1 = __webpack_require__(491);
var swcardbody_1 = __webpack_require__(490);
var swcardicon_1 = __webpack_require__(492);
var swcardprogressbar_1 = __webpack_require__(495);
var swcardlistitem_1 = __webpack_require__(494);
var cardmodule = angular.module('hibachi.card', [core_module_1.coremodule.name])
    .config([function () {
    }]).run([function () {
    }])
    //constants
    .constant('cardPartialsPath', 'card/components/')
    //components
    .directive('swCardLayout', swcardlayout_1.SWCardLayout.Factory())
    .directive('swCardView', swcardview_1.SWCardView.Factory())
    .directive('swCardHeader', swcardheader_1.SWCardHeader.Factory())
    .directive('swCardBody', swcardbody_1.SWCardBody.Factory())
    .directive('swCardIcon', swcardicon_1.SWCardIcon.Factory())
    .directive('swCardProgressBar', swcardprogressbar_1.SWCardProgressBar.Factory())
    .directive('swCardListItem', swcardlistitem_1.SWCardListItem.Factory());
exports.cardmodule = cardmodule;


/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardBodyController = /** @class */ (function () {
    //@ngInject
    function SWCardBodyController($log) {
        this.$log = $log;
        this.$onInit = function () {
        };
    }
    return SWCardBodyController;
}());
exports.SWCardBodyController = SWCardBodyController;
var SWCardBody = /** @class */ (function () {
    //@ngInject
    function SWCardBody(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardBodyController;
        this.controllerAs = 'SwCardBodyController';
        this.scope = {};
        this.bindToController = {};
        this.transclude = true;
        this.require = "^SWCardView";
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardbody.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardBody.Factory = function () {
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardBody(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardBody;
}());
exports.SWCardBody = SWCardBody;


/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardHeaderController = /** @class */ (function () {
    //@ngInject
    function SWCardHeaderController($log) {
        this.$log = $log;
        this.$onInit = function () {
        };
    }
    return SWCardHeaderController;
}());
exports.SWCardHeaderController = SWCardHeaderController;
var SWCardHeader = /** @class */ (function () {
    //@ngInject
    function SWCardHeader(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardHeaderController;
        this.controllerAs = 'SwCardHeaderController';
        this.scope = {};
        this.bindToController = {
            addBorder: '@?'
        };
        this.transclude = true;
        this.require = "^SWCardView";
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardheader.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardHeader.Factory = function () {
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardHeader(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardHeader;
}());
exports.SWCardHeader = SWCardHeader;


/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardIconController = /** @class */ (function () {
    //@ngInject
    function SWCardIconController($log) {
        this.$log = $log;
        this.iconMultiplier = "1x";
        this.$onInit = function () {
        };
    }
    return SWCardIconController;
}());
exports.SWCardIconController = SWCardIconController;
var SWCardIcon = /** @class */ (function () {
    //@ngInject
    function SWCardIcon(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardIconController;
        this.controllerAs = 'SwCardIconController';
        this.scope = {};
        this.bindToController = {
            iconName: "@?",
            iconMultiplier: "@?"
        };
        this.transclude = true;
        this.require = "^SWCardView";
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardicon.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardIcon.Factory = function () {
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardIcon(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardIcon;
}());
exports.SWCardIcon = SWCardIcon;


/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardLayoutController = /** @class */ (function () {
    //@ngInject
    function SWCardLayoutController($log) {
        this.$log = $log;
        this.$onInit = function () {
        };
        console.log("This card class", this.cardClass);
    }
    return SWCardLayoutController;
}());
exports.SWCardLayoutController = SWCardLayoutController;
var SWCardLayout = /** @class */ (function () {
    //@ngInject
    function SWCardLayout(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardLayoutController;
        this.controllerAs = 'SwCardLayoutController';
        this.scope = {};
        this.bindToController = {
            cardClass: "@?"
        };
        this.transclude = {
            cardView: '?swCardView',
        };
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardlayout.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardLayout.Factory = function () {
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardLayout(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardLayout;
}());
exports.SWCardLayout = SWCardLayout;


/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardListItemController = /** @class */ (function () {
    //@ngInject
    function SWCardListItemController($log) {
        this.$log = $log;
        this.strong = 'false';
        this.style = 'padding-top:5px;padding-bottom:5px';
        this.$onInit = function () { };
    }
    return SWCardListItemController;
}());
exports.SWCardListItemController = SWCardListItemController;
var SWCardListItem = /** @class */ (function () {
    //@ngInject
    function SWCardListItem(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardListItemController;
        this.controllerAs = 'SwCardListItemController';
        this.scope = {};
        this.bindToController = {
            title: "@?",
            value: "@?",
            strong: "@?",
            style: "@?"
        };
        this.transclude = true;
        this.require = "^SWCardView";
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardlistitem.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardListItem.Factory = function () {
        console.log("Getting new list item");
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardListItem(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardListItem;
}());
exports.SWCardListItem = SWCardListItem;


/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardProgressBarController = /** @class */ (function () {
    //@ngInject
    function SWCardProgressBarController($log) {
        this.$log = $log;
        this.valueMin = 0;
        this.valueMax = 100;
        this.valueNow = 0;
        this.$onInit = function () { };
    }
    return SWCardProgressBarController;
}());
exports.SWCardProgressBarController = SWCardProgressBarController;
var SWCardProgressBar = /** @class */ (function () {
    //@ngInject
    function SWCardProgressBar(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardProgressBarController;
        this.scope = {};
        this.controllerAs = 'SwCardProgressBarController';
        this.bindToController = {
            valueMin: "@?",
            valueMax: "@?",
            valueNow: "@?"
        };
        this.transclude = true;
        this.require = "^SWCardView";
        /**
         * This is a wrapper class for the card components that allow you to define the columns.
         */
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardprogressbar.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardProgressBar.Factory = function () {
        var component = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardProgressBar(cardPartialsPath, hibachiPathBuilder); };
        component.$inject = ['cardPartialsPath', 'hibachiPathBuilder'];
        return component;
    };
    return SWCardProgressBar;
}());
exports.SWCardProgressBar = SWCardProgressBar;


/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCardViewController = /** @class */ (function () {
    //@ngInject
    function SWCardViewController($log) {
        this.$log = $log;
        this.cardSize = 'md';
    }
    return SWCardViewController;
}());
exports.SWCardViewController = SWCardViewController;
var SWCardView = /** @class */ (function () {
    //@ngInject
    function SWCardView(cardPartialsPath, hibachiPathBuilder) {
        this.controller = SWCardViewController;
        this.scope = {};
        this.controllerAs = 'SwCardViewController';
        this.bindToController = {
            cardTitle: "@?",
            cardBody: "@?",
            cardSize: "@?" //sm, md, lg
        };
        this.transclude = {
            cardIcon: '?swCardIcon',
            cardHeader: '?swCardHeader',
            cardBody: '?swCardBody',
            listItem: '?swCardListItem',
            progressBar: '?swCardProgressBar'
        };
        this.templateUrl = "";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(cardPartialsPath + '/cardview.html');
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWCardView.Factory = function () {
        var directive = function (cardPartialsPath, hibachiPathBuilder) { return new SWCardView(cardPartialsPath, hibachiPathBuilder); };
        directive.$inject = ["cardPartialsPath", 'hibachiPathBuilder'];
        return directive;
    };
    return SWCardView;
}());
exports.SWCardView = SWCardView;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWAddFilterButtons = /** @class */ (function () {
    //@ngInject
    function SWAddFilterButtons(collectionService, collectionPartialsPath, hibachiPathBuilder) {
        return {
            require: '^swFilterGroups',
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "addfilterbuttons.html",
            scope: {
                itemInUse: "=",
                readOnly: "="
            },
            link: function (scope, element, attrs, filterGroupsController) {
                scope.filterGroupItem = filterGroupsController.getFilterGroupItem();
                scope.addFilterItem = function () {
                    collectionService.newFilterItem(filterGroupsController.getFilterGroupItem(), filterGroupsController.setItemInUse);
                };
                scope.addFilterGroupItem = function () {
                    collectionService.newFilterItem(filterGroupsController.getFilterGroupItem(), filterGroupsController.setItemInUse, true);
                };
            }
        };
    }
    SWAddFilterButtons.Factory = function () {
        var directive = function (collectionService, collectionPartialsPath, hibachiPathBuilder) { return new SWAddFilterButtons(collectionService, collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'collectionService',
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWAddFilterButtons;
}());
exports.SWAddFilterButtons = SWAddFilterButtons;


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCollection = /** @class */ (function () {
    //@ngInject
    function SWCollection(hibachiPathBuilder, collectionPartialsPath) {
        return {
            restrict: 'A',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "collection.html",
            link: function (scope, $element, $attrs) {
                scope.tabsUniqueID = Math.floor(Math.random() * 999);
                scope.toggleCogOpen = $attrs.toggleoption;
                //Toggles open/close of filters and display options
                scope.toggleFiltersAndOptions = function () {
                    if (scope.toggleCogOpen === false) {
                        scope.toggleCogOpen = true;
                    }
                    else {
                        scope.toggleCogOpen = false;
                    }
                };
            }
        };
    }
    SWCollection.Factory = function () {
        var directive = function (hibachiPathBuilder, collectionPartialsPath) { return new SWCollection(hibachiPathBuilder, collectionPartialsPath); };
        directive.$inject = [
            'hibachiPathBuilder',
            'collectionPartialsPath'
        ];
        return directive;
    };
    return SWCollection;
}());
exports.SWCollection = SWCollection;


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCollectionTable = /** @class */ (function () {
    //@ngInject
    function SWCollectionTable($log, hibachiPathBuilder, collectionPartialsPath, selectionService, $hibachi, $filter, $injector) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "collectiontable.html",
            scope: {
                collection: "=",
                collectionConfig: "=",
                isRadio: "=?",
                //angularLink:true || false
                angularLinks: "=?"
            },
            link: function (scope, element, attrs) {
                if (angular.isUndefined(scope.angularLinks)) {
                    scope.angularLinks = false;
                }
                if (scope.collection.collectionObject) {
                    scope.collectionObject = $hibachi['new' + scope.collection.collectionObject]();
                }
                else if (scope.collectionConfig.baseEntityName) {
                    scope.collectionObject = scope.collectionConfig.baseEntityName;
                }
                var escapeRegExp = function (str) {
                    return str.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
                };
                scope.replaceAll = function (str, find, replace) {
                    return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);
                };
                /*
                 * Handles setting the key on the data.
                 * */
                angular.forEach(scope.collectionConfig.columns, function (column) {
                    $log.debug("Config Key : " + column);
                    column.key = column.propertyIdentifier.replace(/\./g, '_').replace(scope.collectionConfig.baseEntityAlias + '_', '');
                });
                scope.addSelection = function (selectionid, selection) {
                    selectionService.addSelection(selectionid, selection);
                };
                scope.getCellValue = function (pageRecord, column) {
                    var value = '';
                    if (angular.isDefined(column.aggregate)) {
                        value = pageRecord[column.aggregate.aggregateAlias];
                    }
                    else if (column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias, '').charAt(0) == '.') {
                        value = pageRecord[column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias + '.', '')];
                    }
                    else {
                        value = pageRecord[column.propertyIdentifier.replace(scope.collectionConfig.baseEntityAlias + '_', '').replace(/\./g, '_')];
                    }
                    var type = 'none';
                    if (angular.isDefined(column.type) && column.type != 'none') {
                        type = column.type;
                    }
                    if (type == 'none' && angular.isDefined(column.ormtype) && column.ormtype != 'none') {
                        type = column.ormtype;
                    }
                    if (type != 'none' && $injector.has(type + 'Filter')) {
                        return $filter(type)(value);
                    }
                    else {
                        return value;
                    }
                };
            }
        };
    }
    SWCollectionTable.Factory = function () {
        var directive = function ($log, hibachiPathBuilder, collectionPartialsPath, selectionService, $hibachi, $filter, $injector) { return new SWCollectionTable($log, hibachiPathBuilder, collectionPartialsPath, selectionService, $hibachi, $filter, $injector); };
        directive.$inject = [
            '$log',
            'hibachiPathBuilder',
            'collectionPartialsPath',
            'selectionService',
            '$hibachi',
            '$filter',
            '$injector'
        ];
        return directive;
    };
    return SWCollectionTable;
}());
exports.SWCollectionTable = SWCollectionTable;


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWColumnItem = /** @class */ (function () {
    //@ngInject
    function SWColumnItem($log, hibachiPathBuilder, collectionPartialsPath, observerService) {
        return {
            restrict: 'A',
            require: {
                swDisplayOptions: "?^swDisplayOptions",
                swListingControls: "?^swListingControls"
            },
            scope: {
                column: "=",
                columns: "=",
                columnIndex: "=",
                saveCollection: "&?",
                propertiesList: "<",
                orderBy: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "columnitem.html",
            link: function (scope, element, attrs, controller, observerService) {
                if (!scope.saveCollection && controller.swListingControls) {
                    scope.saveCollection = function () {
                        controller.swListingControls.collectionConfig.columns = scope.columns;
                        controller.swDisplayOptions.columns = scope.columns;
                        controller.swListingControls.saveCollection();
                    };
                }
                scope.editingDisplayTitle = false;
                scope.editDisplayTitle = function () {
                    if (angular.isUndefined(scope.column.displayTitle) || !scope.column.displayTitle.length) {
                        scope.column.displayTitle = scope.column.title;
                    }
                    scope.previousDisplayTitle = scope.column.displayTitle;
                    scope.editingDisplayTitle = true;
                };
                scope.saveDisplayTitle = function () {
                    scope.saveCollection();
                    scope.editingDisplayTitle = false;
                };
                scope.cancelDisplayTitle = function () {
                    scope.column.displayTitle = scope.previousDisplayTitle;
                    scope.editingDisplayTitle = false;
                };
                if (angular.isUndefined(scope.column.sorting)) {
                    scope.column.sorting = {
                        active: false,
                        sortOrder: 'asc',
                        priority: 0
                    };
                }
                scope.toggleVisible = function (column) {
                    if (angular.isUndefined(column.isVisible)) {
                        column.isVisible = false;
                    }
                    column.isVisible = !column.isVisible;
                    scope.saveCollection();
                };
                scope.toggleSearchable = function (column) {
                    if (angular.isUndefined(column.isSearchable)) {
                        column.isSearchable = false;
                    }
                    column.isSearchable = !column.isSearchable;
                    scope.saveCollection();
                };
                scope.toggleExportable = function (column) {
                    $log.debug('toggle exporable');
                    if (angular.isUndefined(column.isExportable)) {
                        column.isExportable = false;
                    }
                    column.isExportable = !column.isExportable;
                    scope.saveCollection();
                };
                var compareByPriority = function (a, b) {
                    if (a.sorting && b.sorting && angular.isDefined(a.sorting) && angular.isDefined(a.sorting.priority)) {
                        if (a.sorting.priority < b.sorting.priority) {
                            return -1;
                        }
                        if (a.sorting.priority > b.sorting.priority) {
                            return 1;
                        }
                    }
                    return 0;
                };
                var updateOrderBy = function () {
                    if (angular.isDefined(scope.columns)) {
                        var columnsCopy = angular.copy(scope.columns);
                        columnsCopy.sort(compareByPriority);
                        scope.orderBy = [];
                        angular.forEach(columnsCopy, function (column) {
                            if (angular.isDefined(column.sorting) && column.sorting.active === true) {
                                var orderBy = {
                                    propertyIdentifier: column.propertyIdentifier,
                                    direction: column.sorting.sortOrder
                                };
                                if (column.aggregate && column.aggregate.aggregateFunction) {
                                    var aggregateFunction = column.aggregate.aggregateFunction.toUpperCase();
                                    if (aggregateFunction == 'AVERAGE') {
                                        aggregateFunction = 'AVG';
                                    }
                                    orderBy.propertyIdentifier = aggregateFunction + '(' + column.propertyIdentifier + ')';
                                }
                                scope.orderBy.push(orderBy);
                            }
                        });
                    }
                };
                scope.toggleSortable = function (column) {
                    $log.debug('toggle sortable');
                    if (angular.isUndefined(column.sorting)) {
                        column.sorting = {
                            active: true,
                            sortOrder: 'asc',
                            priority: 0
                        };
                    }
                    if (column.sorting.active === true) {
                        if (column.sorting.sortOrder === 'asc') {
                            column.sorting.sortOrder = 'desc';
                        }
                        else {
                            removeSorting(column);
                            column.sorting.active = false;
                        }
                    }
                    else {
                        column.sorting.active = true;
                        column.sorting.sortOrder = 'asc';
                        column.sorting.priority = getActivelySorting().length;
                    }
                    updateOrderBy();
                    scope.saveCollection();
                };
                var removeSorting = function (column, saving) {
                    if (column.sorting.active === true) {
                        for (var i in scope.columns) {
                            if (scope.columns[i].sorting.active === true && scope.columns[i].sorting.priority > column.sorting.priority) {
                                scope.columns[i].sorting.priority = scope.columns[i].sorting.priority - 1;
                            }
                        }
                        column.sorting.priority = 0;
                    }
                    if (!saving) {
                        updateOrderBy();
                        scope.saveCollection();
                    }
                };
                scope.prioritize = function (column) {
                    if (column.sorting.priority === 1) {
                        var activelySorting = getActivelySorting();
                        for (var i in scope.columns) {
                            if (scope.columns[i].sorting.active === true) {
                                scope.columns[i].sorting.priority = scope.columns[i].sorting.priority - 1;
                            }
                        }
                        column.sorting.priority = activelySorting.length;
                    }
                    else {
                        for (var i in scope.columns) {
                            if (scope.columns[i].sorting.active === true && scope.columns[i].sorting.priority === column.sorting.priority - 1) {
                                scope.columns[i].sorting.priority = scope.columns[i].sorting.priority + 1;
                            }
                        }
                        column.sorting.priority -= 1;
                    }
                    updateOrderBy();
                    scope.saveCollection();
                };
                var getActivelySorting = function () {
                    var activelySorting = [];
                    for (var i in scope.columns) {
                        if (scope.columns[i].sorting.active === true) {
                            activelySorting.push(scope.columns[i]);
                        }
                    }
                    return activelySorting;
                };
                scope.removeColumn = function (columnIndex) {
                    if (scope.columns[columnIndex].isDeletable) {
                        removeSorting(scope.columns[columnIndex], true);
                        controller.swDisplayOptions.removeColumn(columnIndex);
                        updateOrderBy();
                        scope.saveCollection();
                    }
                };
            }
        };
    }
    SWColumnItem.Factory = function () {
        var directive = function ($log, hibachiPathBuilder, collectionPartialsPath, observerService) { return new SWColumnItem($log, hibachiPathBuilder, collectionPartialsPath, observerService); };
        directive.$inject = [
            '$log',
            'hibachiPathBuilder',
            'collectionPartialsPath',
            'observerService'
        ];
        return directive;
    };
    return SWColumnItem;
}());
exports.SWColumnItem = SWColumnItem;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWConditionCriteria = /** @class */ (function () {
    //@ngInject
    function SWConditionCriteria($http, $compile, $templateCache, $log, $hibachi, $filter, collectionPartialsPath, metadataService, hibachiPathBuilder) {
        /* Template info begin*/
        var getTemplate = function (selectedFilterProperty) {
            var template = '';
            var templatePath = '';
            if (angular.isUndefined(selectedFilterProperty.ormtype) && angular.isUndefined(selectedFilterProperty.fieldtype)) {
                templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteria.html";
            }
            else {
                var criteriaormtype = selectedFilterProperty.ormtype;
                var criteriafieldtype = selectedFilterProperty.fieldtype;
                /*TODO: convert all switches to object literals*/
                switch (criteriaormtype) {
                    case 'boolean':
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriaboolean.html";
                        break;
                    case 'string':
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriastring.html";
                        break;
                    case 'timestamp':
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriadate.html";
                        break;
                    case 'big_decimal':
                    case 'integer':
                    case 'float':
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criterianumber.html";
                        break;
                }
                switch (criteriafieldtype) {
                    case "many-to-one":
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriamanytoone.html";
                        break;
                    case "many-to-many":
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriamanytomany.html";
                        break;
                    case "one-to-many":
                        templatePath = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "criteriaonetomany.html";
                        break;
                }
            }
            var templateLoader = $http.get(templatePath, { cache: $templateCache });
            return templateLoader;
        };
        /* Template info end*/
        /* Options info begin */
        var getStringOptions = function (type) {
            var stringOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type == 'filter') {
                stringOptions = [
                    {
                        display: "Equals",
                        comparisonOperator: "="
                    },
                    {
                        display: "Doesn't Equal",
                        comparisonOperator: "<>"
                    },
                    {
                        display: "Contains",
                        comparisonOperator: "like",
                        pattern: "%w%"
                    },
                    {
                        display: "Doesn't Contain",
                        comparisonOperator: "not like",
                        pattern: "%w%"
                    },
                    {
                        display: "Starts With",
                        comparisonOperator: "like",
                        pattern: "w%"
                    },
                    {
                        display: "Doesn't Start With",
                        comparisonOperator: "not like",
                        pattern: "w%"
                    },
                    {
                        display: "Ends With",
                        comparisonOperator: "like",
                        pattern: "%w"
                    },
                    {
                        display: "Doesn't End With",
                        comparisonOperator: "not like",
                        pattern: "%w"
                    },
                    {
                        display: "In List",
                        comparisonOperator: "in"
                    },
                    {
                        display: "Not In List",
                        comparisonOperator: "not in"
                    },
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
                if (type === 'condition') {
                    stringOptions = [
                        {
                            display: "Equals",
                            comparisonOperator: "="
                        },
                        {
                            display: "In List",
                            comparisonOperator: "in"
                        },
                        {
                            display: "Defined",
                            comparisonOperator: "is not",
                            value: "null"
                        },
                        {
                            display: "Not Defined",
                            comparisonOperator: "is",
                            value: "null"
                        }
                    ];
                }
            }
            return stringOptions;
        };
        var getBooleanOptions = function (type) {
            var booleanOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type === 'filter' || type === 'condition') {
                booleanOptions = [
                    {
                        display: "True",
                        comparisonOperator: "=",
                        value: "True"
                    },
                    {
                        display: "False",
                        comparisonOperator: "=",
                        value: "False"
                    },
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
            }
            return booleanOptions;
        };
        var getDateOptions = function (type) {
            var dateOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type === 'filter') {
                dateOptions = [
                    {
                        display: "Date",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'exactDate',
                        }
                    },
                    {
                        display: "In Range",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'range'
                        }
                    },
                    {
                        display: "Not In Range",
                        comparisonOperator: "not between",
                        dateInfo: {
                            type: 'range'
                        }
                    },
                    {
                        display: "Today",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'd',
                            measureCount: 0,
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "Yesterday",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'd',
                            measureCount: -1,
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "This Week",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'w',
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "This Month",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'm',
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "This Quarter",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'q',
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "This Year",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'y',
                            behavior: 'toDate'
                        }
                    },
                    {
                        display: "Last N Hour(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'h',
                            measureTypeDisplay: 'Hours'
                        }
                    },
                    {
                        display: "Last N Day(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'd',
                            measureTypeDisplay: 'Days'
                        }
                    },
                    {
                        display: "Last N Week(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'w',
                            measureTypeDisplay: 'Weeks'
                        }
                    },
                    {
                        display: "Last N Month(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'm',
                            measureTypeDisplay: 'Months'
                        }
                    },
                    {
                        display: "Last N Quarter(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'q',
                            measureTypeDisplay: 'Quarters'
                        }
                    },
                    {
                        display: "Last N Year(s)",
                        comparisonOperator: "between",
                        dateInfo: {
                            type: 'calculation',
                            measureType: 'y',
                            measureTypeDisplay: 'Years'
                        }
                    },
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
            }
            if (type === 'condition') {
                dateOptions = [
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
            }
            return dateOptions;
        };
        var getNumberOptions = function (type) {
            var numberOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type == 'filter') {
                numberOptions = [
                    {
                        display: "Equals",
                        comparisonOperator: "="
                    },
                    {
                        display: "Doesn't Equal",
                        comparisonOperator: "<>"
                    },
                    {
                        display: "In Range",
                        comparisonOperator: "between",
                        type: "range"
                    },
                    {
                        display: "Not In Range",
                        comparisonOperator: "not between",
                        type: "range"
                    },
                    {
                        display: "Greater Than",
                        comparisonOperator: ">"
                    },
                    {
                        display: "Greater Than Or Equal",
                        comparisonOperator: ">="
                    },
                    {
                        display: "Less Than",
                        comparisonOperator: "<"
                    },
                    {
                        display: "Less Than Or Equal",
                        comparisonOperator: "<="
                    },
                    {
                        display: "In List",
                        comparisonOperator: "in"
                    },
                    {
                        display: "Not In List",
                        comparisonOperator: "not in"
                    },
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
            }
            if (type === 'condition') {
                numberOptions = [
                    {
                        display: "Equals",
                        comparisonOperator: "="
                    },
                    {
                        display: "Doesn't Equal",
                        comparisonOperator: "<>"
                    },
                    {
                        display: "Greater Than",
                        comparisonOperator: ">"
                    },
                    {
                        display: "Greater Than Or Equal",
                        comparisonOperator: ">="
                    },
                    {
                        display: "Less Than",
                        comparisonOperator: "<"
                    },
                    {
                        display: "Less Than Or Equal",
                        comparisonOperator: "<="
                    },
                    {
                        display: "In List",
                        comparisonOperator: "in"
                    },
                    {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                ];
            }
            return numberOptions;
        };
        var getOneToManyOptions = function (type) {
            var oneToManyOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type == 'filter') {
                oneToManyOptions = [
                    {
                        display: "All Exist In Collection",
                        comparisonOperator: "All"
                    },
                    {
                        display: "None Exist In Collection",
                        comparisonOperator: "None"
                    },
                    {
                        display: "Some Exist In Collection",
                        comparisonOperator: "One"
                    }
                ];
            }
            if (type === 'condition') {
                oneToManyOptions = [];
            }
            return oneToManyOptions;
        };
        var getManyToManyOptions = function (type) {
            var manyToManyOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type == 'filter') {
                manyToManyOptions = [
                    {
                        display: "All Exist In Collection",
                        comparisonOperator: "All"
                    },
                    {
                        display: "None Exist In Collection",
                        comparisonOperator: "None"
                    },
                    {
                        display: "Some Exist In Collection",
                        comparisonOperator: "One"
                    },
                    {
                        display: "Empty",
                        comparisonOperator: "is",
                        value: "null"
                    },
                    {
                        display: "Not Empty",
                        comparisonOperator: "is not",
                        value: "null"
                    }
                ];
            }
            if (type === 'condition') {
                manyToManyOptions = [
                    {
                        display: "Empty",
                        comparisonOperator: "is",
                        value: "null"
                    },
                    {
                        display: "Not Empty",
                        comparisonOperator: "is not",
                        value: "null"
                    }
                ];
            }
            return manyToManyOptions;
        };
        var getManyToOneOptions = function (type) {
            var manyToOneOptions = [];
            if (angular.isUndefined(type)) {
                type = 'filter';
            }
            if (type == 'filter') {
                manyToOneOptions = {
                    drillEntity: {},
                    hasEntity: {
                        display: "Defined",
                        comparisonOperator: "is not",
                        value: "null"
                    },
                    notHasEntity: {
                        display: "Not Defined",
                        comparisonOperator: "is",
                        value: "null"
                    }
                };
            }
            return manyToOneOptions;
        };
        /* Options info end */
        var linker = function (scope, element, attrs) {
            /*show the user the value without % symbols as these are reserved*/
            scope.$watch('selectedFilterProperty.criteriaValue', function (criteriaValue) {
                if (angular.isDefined(criteriaValue)) {
                    scope.selectedFilterProperty.criteriaValue = $filter('likeFilter')(criteriaValue);
                }
            });
            scope.$watch('selectedFilterProperty', function (selectedFilterProperty) {
                if (angular.isDefined(selectedFilterProperty)) {
                    $log.debug('watchSelectedFilterProperty');
                    $log.debug(scope.selectedFilterProperty);
                    /*prepopulate if we have a comparison operator and value*/
                    if (selectedFilterProperty === null) {
                        return;
                    }
                    if (angular.isDefined(selectedFilterProperty.ormtype)) {
                        switch (scope.selectedFilterProperty.ormtype) {
                            case "boolean":
                                scope.conditionOptions = getBooleanOptions();
                                break;
                            case "string":
                                scope.conditionOptions = getStringOptions();
                                scope.selectedConditionChanged = function (selectedFilterProperty) {
                                    //scope.selectedFilterProperty.criteriaValue = '';
                                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                        selectedFilterProperty.showCriteriaValue = false;
                                    }
                                    else {
                                        selectedFilterProperty.showCriteriaValue = true;
                                    }
                                };
                                break;
                            case "timestamp":
                                scope.conditionOptions = getDateOptions();
                                scope.today = function () {
                                    if (angular.isDefined(scope.selectedFilterProperty)) {
                                        scope.selectedFilterProperty.criteriaRangeStart = new Date().getTime();
                                        scope.selectedFilterProperty.criteriaRangeEnd = new Date().getTime();
                                    }
                                };
                                scope.clear = function () {
                                    scope.selectedFilterProperty.criteriaRangeStart = null;
                                    scope.selectedFilterProperty.criteriaRangeEnd = null;
                                };
                                scope.openCalendarStart = function ($event) {
                                    $event.preventDefault();
                                    $event.stopPropagation();
                                    scope.openedCalendarStart = true;
                                };
                                scope.openCalendarEnd = function ($event) {
                                    $event.preventDefault();
                                    $event.stopPropagation();
                                    scope.openedCalendarEnd = true;
                                };
                                scope.formats = [
                                    'dd-MMMM-yyyy',
                                    'yyyy/MM/dd',
                                    'dd.MM.yyyy',
                                    'shortDate'
                                ];
                                scope.format = scope.formats[1];
                                scope.selectedConditionChanged = function (selectedFilterProperty) {
                                    $log.debug('selectedConditionChanged Begin');
                                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                                    //check whether condition is checking for null values in date
                                    if (angular.isDefined(selectedCondition.dateInfo)) {
                                        //is condition a calculation
                                        if (selectedCondition.dateInfo.type === 'calculation') {
                                            selectedCondition.showCriteriaStart = true;
                                            selectedCondition.showCriteriaEnd = true;
                                            selectedCondition.disableCriteriaStart = true;
                                            selectedCondition.disableCriteriaEnd = true;
                                            //if item is a calculation of an N number of measure display the measure and number input
                                            if (angular.isUndefined(selectedCondition.dateInfo.behavior)) {
                                                $log.debug('Not toDate');
                                                selectedCondition.showNumberOf = true;
                                                selectedCondition.conditionDisplay = 'Number of ' + selectedCondition.dateInfo.measureTypeDisplay + ' :';
                                            }
                                            else {
                                                $log.debug('toDate');
                                                var today = Date.parse('today');
                                                var todayEOD = today.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = todayEOD;
                                                //get this Measure to date
                                                switch (selectedCondition.dateInfo.measureType) {
                                                    case 'd':
                                                        var dateBOD = Date.parse('today').add(selectedCondition.dateInfo.measureCount).days();
                                                        dateBOD.setHours(0, 0, 0, 0);
                                                        selectedFilterProperty.criteriaRangeStart = dateBOD.getTime();
                                                        break;
                                                    case 'w':
                                                        var firstDayOfWeek = Date.today().last().monday();
                                                        selectedFilterProperty.criteriaRangeStart = firstDayOfWeek.getTime();
                                                        break;
                                                    case 'm':
                                                        var firstDayOfMonth = Date.today().moveToFirstDayOfMonth();
                                                        selectedFilterProperty.criteriaRangeStart = firstDayOfMonth.getTime();
                                                        break;
                                                    case 'q':
                                                        var month = Date.parse('today').toString('MM');
                                                        var year = Date.parse('today').toString('yyyy');
                                                        var quarterMonth = (Math.floor(month / 3) * 3);
                                                        var firstDayOfQuarter = new Date(year, quarterMonth, 1);
                                                        selectedFilterProperty.criteriaRangeStart = firstDayOfQuarter.getTime();
                                                        break;
                                                    case 'y':
                                                        var year = Date.parse('today').toString('yyyy');
                                                        var firstDayOfYear = new Date(year, 0, 1);
                                                        selectedFilterProperty.criteriaRangeStart = firstDayOfYear.getTime();
                                                        break;
                                                }
                                            }
                                        }
                                        if (selectedCondition.dateInfo.type === 'range') {
                                            selectedCondition.showCriteriaStart = true;
                                            selectedCondition.showCriteriaEnd = true;
                                            selectedCondition.disableCriteriaStart = false;
                                            selectedCondition.disableCriteriaEnd = false;
                                            selectedCondition.showNumberOf = false;
                                        }
                                        if (selectedCondition.dateInfo.type === 'exactDate') {
                                            selectedCondition.showCriteriaEnd = false;
                                            selectedCondition.disableCriteriaStart = false;
                                            selectedCondition.disableCriteriaEnd = true;
                                            if (!selectedCondition.dateInfo.measureType) {
                                                selectedCondition.conditionDisplay = '';
                                                selectedCondition.showCriteriaStart = true;
                                                selectedCondition.showNumberOf = false;
                                                selectedFilterProperty.criteriaRangeStart = new Date(selectedFilterProperty.criteriaRangeStart).setHours(0, 0, 0, 0);
                                                selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeStart).setHours(23, 59, 59, 999);
                                            }
                                            else {
                                                selectedCondition.conditionDisplay = 'How many ' + selectedCondition.dateInfo.measureTypeDisplay + ' ago?';
                                                selectedCondition.showCriteriaStart = false;
                                                selectedCondition.showNumberOf = true;
                                            }
                                        }
                                    }
                                    else {
                                        selectedCondition.showCriteriaStart = false;
                                        selectedCondition.showCriteriaEnd = false;
                                        selectedCondition.showNumberOf = false;
                                        selectedCondition.conditionDisplay = '';
                                    }
                                    $log.debug('selectedConditionChanged End');
                                    $log.debug('selectedConditionChanged Result');
                                    $log.debug(selectedCondition);
                                    $log.debug(selectedFilterProperty);
                                };
                                scope.criteriaRangeChanged = function (selectedFilterProperty) {
                                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                                    if (selectedCondition.dateInfo.type === 'calculation') {
                                        var measureCount = selectedFilterProperty.criteriaNumberOf;
                                        switch (selectedCondition.dateInfo.measureType) {
                                            case 'h':
                                                var today = Date.parse('today');
                                                selectedFilterProperty.criteriaRangeEnd = today.getTime();
                                                var todayXHoursAgo = Date.parse('today').add(-(measureCount)).hours();
                                                selectedFilterProperty.criteriaRangeStart = todayXHoursAgo.getTime();
                                                break;
                                            case 'd':
                                                var lastFullDay = Date.parse('today').add(-1).days();
                                                lastFullDay.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = lastFullDay.getTime();
                                                var lastXDaysAgo = Date.parse('today').add(-(measureCount)).days();
                                                selectedFilterProperty.criteriaRangeStart = lastXDaysAgo.getTime();
                                                break;
                                            case 'w':
                                                var lastFullWeekEnd = Date.today().last().sunday();
                                                lastFullWeekEnd.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = lastFullWeekEnd.getTime();
                                                var lastXWeeksAgo = Date.today().last().sunday().add(-(measureCount)).weeks();
                                                selectedFilterProperty.criteriaRangeStart = lastXWeeksAgo.getTime();
                                                break;
                                            case 'm':
                                                var lastFullMonthEnd = Date.today().add(-1).months().moveToLastDayOfMonth();
                                                lastFullMonthEnd.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = lastFullMonthEnd.getTime();
                                                var lastXMonthsAgo = Date.today().add(-1).months().moveToLastDayOfMonth().add(-(measureCount)).months();
                                                selectedFilterProperty.criteriaRangeStart = lastXMonthsAgo.getTime();
                                                break;
                                            case 'q':
                                                var currentQuarter = Math.floor((Date.parse('today').getMonth() / 3));
                                                var firstDayOfCurrentQuarter = new Date(Date.parse('today').getFullYear(), currentQuarter * 3, 1);
                                                var lastDayOfPreviousQuarter = firstDayOfCurrentQuarter.add(-1).days();
                                                lastDayOfPreviousQuarter.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = lastDayOfPreviousQuarter.getTime();
                                                var lastXQuartersAgo = new Date(Date.parse('today').getFullYear(), currentQuarter * 3, 1);
                                                lastXQuartersAgo.add(-(measureCount * 3)).months();
                                                selectedFilterProperty.criteriaRangeStart = lastXQuartersAgo.getTime();
                                                break;
                                            case 'y':
                                                var lastFullYearEnd = new Date(new Date().getFullYear(), 11, 31).add(-1).years();
                                                lastFullYearEnd.setHours(23, 59, 59, 999);
                                                selectedFilterProperty.criteriaRangeEnd = lastFullYearEnd.getTime();
                                                var lastXYearsAgo = new Date(new Date().getFullYear(), 11, 31).add(-(measureCount) - 1).years();
                                                selectedFilterProperty.criteriaRangeStart = lastXYearsAgo.getTime();
                                                break;
                                        }
                                    }
                                    if (selectedCondition.dateInfo.type === 'exactDate') {
                                        selectedFilterProperty.criteriaRangeStart = selectedFilterProperty.criteriaRangeStart.setHours(0, 0, 0, 0);
                                        selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeStart).setHours(23, 59, 59, 999);
                                    }
                                    if (selectedCondition.dateInfo.type === 'range') {
                                        if (angular.isDefined(selectedFilterProperty.criteriaRangeStart)) {
                                            selectedFilterProperty.criteriaRangeStart = new Date(selectedFilterProperty.criteriaRangeStart).setHours(0, 0, 0, 0);
                                        }
                                        if (angular.isDefined(selectedFilterProperty.criteriaRangeEnd)) {
                                            selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeEnd).setHours(23, 59, 59, 999);
                                        }
                                    }
                                    $log.debug('criteriaRangeChanged');
                                    $log.debug(selectedCondition);
                                    $log.debug(selectedFilterProperty);
                                };
                                break;
                            case "big_decimal":
                            case "integer":
                            case "float":
                                scope.conditionOptions = getNumberOptions();
                                scope.criteriaRangeChanged = function (selectedFilterProperty) {
                                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                                };
                                scope.selectedConditionChanged = function (selectedFilterProperty) {
                                    selectedFilterProperty.showCriteriaValue = true;
                                    //check whether the type is a range
                                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.type)) {
                                        selectedFilterProperty.showCriteriaValue = false;
                                        selectedFilterProperty.selectedCriteriaType.showCriteriaStart = true;
                                        selectedFilterProperty.selectedCriteriaType.showCriteriaEnd = true;
                                    }
                                    //is null or is not null
                                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                        selectedFilterProperty.showCriteriaValue = false;
                                    }
                                };
                                break;
                        }
                    }
                    if (angular.isDefined(scope.selectedFilterProperty.fieldtype)) {
                        switch (scope.selectedFilterProperty.fieldtype) {
                            case "many-to-one":
                                scope.conditionOptions = getManyToOneOptions(scope.comparisonType);
                                $log.debug('many-to-one');
                                $log.debug(scope.selectedFilterProperty);
                                $log.debug(scope.filterPropertiesList);
                                if (angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])) {
                                    var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(scope.selectedFilterProperty.cfc);
                                    filterPropertiesPromise.then(function (value) {
                                        scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier] = value;
                                        metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier], scope.selectedFilterProperty.propertyIdentifier);
                                    }, function (reason) {
                                    });
                                }
                                break;
                            case "many-to-many":
                            case "one-to-many":
                                scope.manyToManyOptions = getManyToManyOptions();
                                scope.oneToManyOptions = getOneToManyOptions();
                                var existingCollectionsPromise = $hibachi.getExistingCollectionsByBaseEntity(selectedFilterProperty.cfc);
                                existingCollectionsPromise.then(function (value) {
                                    scope.collectionOptions = value.data;
                                    if (angular.isDefined(scope.workflowCondition.collectionID)) {
                                        for (var i in scope.collectionOptions) {
                                            if (scope.collectionOptions[i].collectionID === scope.workflowCondition.collectionID) {
                                                scope.selectedFilterProperty.selectedCollection = scope.collectionOptions[i];
                                            }
                                        }
                                        for (var i in scope.oneToManyOptions) {
                                            if (scope.oneToManyOptions[i].comparisonOperator === scope.workflowCondition.criteria) {
                                                scope.selectedFilterProperty.selectedCriteriaType = scope.oneToManyOptions[i];
                                            }
                                        }
                                    }
                                });
                                break;
                        }
                    }
                    $log.debug('workflowCondition');
                    $log.debug(scope.workflowCondition);
                    angular.forEach(scope.conditionOptions, function (conditionOption) {
                        if (conditionOption.display == scope.workflowCondition.conditionDisplay) {
                            scope.selectedFilterProperty.selectedCriteriaType = conditionOption;
                            scope.selectedFilterProperty.criteriaValue = scope.workflowCondition.value;
                            if (angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType.dateInfo)
                                && angular.isDefined(scope.workflowCondition.value)
                                && scope.workflowCondition.value.length) {
                                var dateRangeArray = scope.workflowCondition.value.split("-");
                                scope.selectedFilterProperty.criteriaRangeStart = new Date(parseInt(dateRangeArray[0]));
                                scope.selectedFilterProperty.criteriaRangeEnd = new Date(parseInt(dateRangeArray[1]));
                            }
                            if (angular.isDefined(scope.workflowCondition.criteriaNumberOf)) {
                                scope.selectedFilterProperty.criteriaNumberOf = scope.workflowCondition.criteriaNumberOf;
                            }
                            if (angular.isDefined(scope.selectedConditionChanged)) {
                                scope.selectedConditionChanged(scope.selectedFilterProperty);
                            }
                        }
                    });
                    $log.debug('templateLoader');
                    $log.debug(selectedFilterProperty);
                    var templateLoader = getTemplate(selectedFilterProperty);
                    var promise = templateLoader.success(function (html) {
                        element.html(html);
                        $compile(element.contents())(scope);
                    });
                }
            });
            scope.selectedCriteriaChanged = function (selectedCriteria) {
                $log.debug(selectedCriteria);
                //update breadcrumbs as array of filterpropertylist keys
                $log.debug(scope.selectedFilterProperty);
                var breadCrumb = {
                    entityAlias: scope.selectedFilterProperty.name,
                    cfc: scope.selectedFilterProperty.cfc,
                    propertyIdentifier: scope.selectedFilterProperty.propertyIdentifier
                };
                scope.workflowCondition.breadCrumbs.push(breadCrumb);
                //populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
                scope.selectedFilterPropertyChanged({ selectedFilterProperty: scope.selectedFilterProperty.selectedCriteriaType });
                //update criteria to display the condition of the new critera we have selected
            };
        };
        return {
            restrict: 'A',
            scope: {
                workflowCondition: "=",
                selectedFilterProperty: "=",
                filterPropertiesList: "=",
                selectedFilterPropertyChanged: "&"
            },
            link: linker
        };
    }
    SWConditionCriteria.Factory = function () {
        var directive = function ($http, $compile, $templateCache, $log, $hibachi, $filter, collectionPartialsPath, metadataService, hibachiPathBuilder) { return new SWConditionCriteria($http, $compile, $templateCache, $log, $hibachi, $filter, collectionPartialsPath, metadataService, hibachiPathBuilder); };
        directive.$inject = [
            '$http',
            '$compile',
            '$templateCache',
            '$log',
            '$hibachi',
            '$filter',
            'collectionPartialsPath',
            'metadataService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWConditionCriteria;
}());
exports.SWConditionCriteria = SWConditionCriteria;


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCriteria = /** @class */ (function () {
    function SWCriteria(collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            scope: {
                filterItem: "=",
                selectedFilterProperty: "=",
                filterPropertiesList: "=",
                selectedFilterPropertyChanged: "&",
                comparisonType: "=",
                collectionConfig: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteria.html',
            link: function (scope, element, attrs) {
            }
        };
    }
    SWCriteria.Factory = function () {
        var directive = function (collectionPartialsPath, hibachiPathBuilder) { return new SWCriteria(collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWCriteria;
}());
exports.SWCriteria = SWCriteria;


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaBoolean = /** @class */ (function () {
    function SWCriteriaBoolean(collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriaboolean.html',
            link: function (scope, element, attrs) {
                var getBooleanOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    var booleanOptions = [];
                    if (type === 'filter') {
                        booleanOptions = [
                            {
                                display: "True",
                                comparisonOperator: "=",
                                value: "True"
                            },
                            {
                                display: "False",
                                comparisonOperator: "=",
                                value: "False"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "is not",
                                value: "null"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "is",
                                value: "null"
                            }
                        ];
                    }
                    else if (type === 'condition') {
                        booleanOptions = [
                            {
                                display: "True",
                                comparisonOperator: "eq",
                                value: "True"
                            },
                            {
                                display: "False",
                                comparisonOperator: "eq",
                                value: "False"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "null",
                                value: "False"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "null",
                                value: "True"
                            }
                        ];
                    }
                    return booleanOptions;
                };
                scope.conditionOptions = getBooleanOptions(scope.comparisonType);
                angular.forEach(scope.conditionOptions, function (conditionOption) {
                    if (conditionOption.display == scope.filterItem.conditionDisplay) {
                        scope.selectedFilterProperty.selectedCriteriaType = conditionOption;
                        scope.selectedFilterProperty.criteriaValue = scope.filterItem.value;
                        if (angular.isDefined(scope.selectedConditionChanged)) {
                            scope.selectedConditionChanged(scope.selectedFilterProperty);
                        }
                    }
                });
            }
        };
    }
    SWCriteriaBoolean.Factory = function () {
        var directive = function (collectionPartialsPath, hibachiPathBuilder) { return new SWCriteriaBoolean(collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWCriteriaBoolean;
}());
exports.SWCriteriaBoolean = SWCriteriaBoolean;


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaDate = /** @class */ (function () {
    function SWCriteriaDate($log, collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriadate.html',
            link: function (scope, element, attrs) {
                var getDateOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    var dateOptions = [];
                    if (type === 'filter') {
                        dateOptions = [
                            {
                                display: "Date",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                }
                            },
                            {
                                display: "In Range",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'range'
                                }
                            },
                            {
                                display: "Not In Range",
                                comparisonOperator: "not between",
                                dateInfo: {
                                    type: 'range'
                                }
                            },
                            {
                                display: "Today",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'd',
                                    measureCount: 0,
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "Yesterday",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'd',
                                    measureCount: -1,
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "This Week",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'w',
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "This Month",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'm',
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "This Quarter",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'q',
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "This Year",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'y',
                                    behavior: 'toDate'
                                }
                            },
                            {
                                display: "Last N Hour(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'h',
                                    measureTypeDisplay: 'Hours'
                                }
                            },
                            {
                                display: "Last N Day(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'd',
                                    measureTypeDisplay: 'Days'
                                }
                            },
                            {
                                display: "Last N Week(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'w',
                                    measureTypeDisplay: 'Weeks'
                                }
                            },
                            {
                                display: "Last N Month(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'm',
                                    measureTypeDisplay: 'Months'
                                }
                            },
                            {
                                display: "Last N Quarter(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'q',
                                    measureTypeDisplay: 'Quarters'
                                }
                            },
                            {
                                display: "Last N Year(s)",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'calculation',
                                    measureType: 'y',
                                    measureTypeDisplay: 'Years'
                                }
                            },
                            {
                                display: "Exact N Day(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'd',
                                    measureTypeDisplay: 'Days'
                                }
                            },
                            {
                                display: "Exact N Month(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'm',
                                    measureTypeDisplay: 'Months'
                                }
                            },
                            {
                                display: "Exact N Year(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'y',
                                    measureTypeDisplay: 'Years'
                                }
                            },
                            {
                                display: "Exact N Day(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'd',
                                    measureTypeDisplay: 'Days'
                                }
                            },
                            {
                                display: "Exact N Month(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'm',
                                    measureTypeDisplay: 'Months'
                                }
                            },
                            {
                                display: "Exact N Year(s) Ago",
                                comparisonOperator: "between",
                                dateInfo: {
                                    type: 'exactDate',
                                    measureType: 'y',
                                    measureTypeDisplay: 'Years'
                                }
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "is not",
                                value: "null"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "is",
                                value: "null"
                            }
                        ];
                    }
                    else if (type === 'condition') {
                        dateOptions = [
                            {
                                display: "Equals",
                                comparisonOperator: "eq"
                            },
                            {
                                display: "Doesn't Equal",
                                comparisonOperator: "neq"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "null",
                                value: "False"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "null",
                                value: "True"
                            }
                        ];
                    }
                    return dateOptions;
                };
                scope.conditionOptions = getDateOptions(scope.comparisonType);
                scope.today = function () {
                    if (angular.isDefined(scope.selectedFilterProperty)) {
                        scope.selectedFilterProperty.criteriaRangeStart = new Date().getTime();
                        scope.selectedFilterProperty.criteriaRangeEnd = new Date().getTime();
                    }
                };
                scope.clear = function () {
                    scope.selectedFilterProperty.criteriaRangeStart = null;
                    scope.selectedFilterProperty.criteriaRangeEnd = null;
                };
                scope.openCalendarStart = function ($event) {
                    $event.preventDefault();
                    $event.stopPropagation();
                    scope.openedCalendarStart = true;
                };
                scope.openCalendarEnd = function ($event) {
                    $event.preventDefault();
                    $event.stopPropagation();
                    scope.openedCalendarEnd = true;
                };
                scope.formats = [
                    'dd-MMMM-yyyy',
                    'yyyy/MM/dd',
                    'dd.MM.yyyy',
                    'shortDate'
                ];
                scope.format = scope.formats[1];
                scope.selectedConditionChanged = function (selectedFilterProperty) {
                    $log.debug('selectedConditionChanged Begin');
                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                    //check whether condition is checking for null values in date
                    if (angular.isDefined(selectedCondition.dateInfo)) {
                        //is condition a calculation
                        if (selectedCondition.dateInfo.type === 'calculation') {
                            selectedCondition.showCriteriaStart = true;
                            selectedCondition.showCriteriaEnd = true;
                            selectedCondition.disableCriteriaStart = true;
                            selectedCondition.disableCriteriaEnd = true;
                            //if item is a calculation of an N number of measure display the measure and number input
                            if (angular.isUndefined(selectedCondition.dateInfo.behavior)) {
                                $log.debug('Not toDate');
                                selectedCondition.showNumberOf = true;
                                selectedCondition.conditionDisplay = 'Number of ' + selectedCondition.dateInfo.measureTypeDisplay + ' :';
                            }
                            else {
                                $log.debug('toDate');
                                var today = Date.parse('today');
                                var todayEOD = today.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = todayEOD;
                                //get this Measure to date
                                switch (selectedCondition.dateInfo.measureType) {
                                    case 'd':
                                        var dateBOD = Date.parse('today').add(selectedCondition.dateInfo.measureCount).days();
                                        dateBOD.setHours(0, 0, 0, 0);
                                        selectedFilterProperty.criteriaRangeStart = dateBOD.getTime();
                                        break;
                                    case 'w':
                                        var firstDayOfWeek = Date.today().last().monday();
                                        selectedFilterProperty.criteriaRangeStart = firstDayOfWeek.getTime();
                                        break;
                                    case 'm':
                                        var firstDayOfMonth = Date.today().moveToFirstDayOfMonth();
                                        selectedFilterProperty.criteriaRangeStart = firstDayOfMonth.getTime();
                                        break;
                                    case 'q':
                                        var month = Date.parse('today').toString('MM');
                                        var year = Date.parse('today').toString('yyyy');
                                        var quarterMonth = (Math.floor(month / 3) * 3);
                                        var firstDayOfQuarter = new Date(year, quarterMonth, 1);
                                        selectedFilterProperty.criteriaRangeStart = firstDayOfQuarter.getTime();
                                        break;
                                    case 'y':
                                        var year = Date.parse('today').toString('yyyy');
                                        var firstDayOfYear = new Date(year, 0, 1);
                                        selectedFilterProperty.criteriaRangeStart = firstDayOfYear.getTime();
                                        break;
                                }
                            }
                        }
                        if (selectedCondition.dateInfo.type === 'range') {
                            selectedCondition.showCriteriaStart = true;
                            selectedCondition.showCriteriaEnd = true;
                            selectedCondition.disableCriteriaStart = false;
                            selectedCondition.disableCriteriaEnd = false;
                            selectedCondition.showNumberOf = false;
                        }
                        if (selectedCondition.dateInfo.type === 'exactDate') {
                            selectedCondition.showCriteriaStart = true;
                            selectedCondition.showCriteriaEnd = false;
                            selectedCondition.disableCriteriaStart = false;
                            selectedCondition.disableCriteriaEnd = true;
                            if (!selectedCondition.dateInfo.measureType) {
                                selectedCondition.conditionDisplay = '';
                                selectedCondition.showCriteriaStart = true;
                                selectedCondition.showNumberOf = false;
                                selectedFilterProperty.criteriaRangeStart = new Date(selectedFilterProperty.criteriaRangeStart).setHours(0, 0, 0, 0);
                                selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeStart).setHours(23, 59, 59, 999);
                            }
                            else {
                                selectedCondition.conditionDisplay = 'How many ' + selectedCondition.dateInfo.measureTypeDisplay + ' ago?';
                                selectedCondition.showCriteriaStart = false;
                                selectedCondition.showNumberOf = true;
                            }
                        }
                    }
                    else {
                        selectedCondition.showCriteriaStart = false;
                        selectedCondition.showCriteriaEnd = false;
                        selectedCondition.showNumberOf = false;
                        selectedCondition.conditionDisplay = '';
                    }
                    $log.debug('selectedConditionChanged End');
                    $log.debug('selectedConditionChanged Result');
                    $log.debug(selectedCondition);
                    $log.debug(selectedFilterProperty);
                };
                scope.criteriaRangeChanged = function (selectedFilterProperty) {
                    $log.debug('criteriaRangeChanged');
                    $log.debug(selectedFilterProperty);
                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                    if (selectedCondition.dateInfo.type === 'calculation') {
                        var measureCount = selectedFilterProperty.criteriaNumberOf;
                        switch (selectedCondition.dateInfo.measureType) {
                            case 'h':
                                var today = Date.parse('today');
                                selectedFilterProperty.criteriaRangeEnd = today.getTime();
                                var todayXHoursAgo = Date.parse('today').add(-(measureCount)).hours();
                                selectedFilterProperty.criteriaRangeStart = todayXHoursAgo.getTime();
                                break;
                            case 'd':
                                var lastFullDay = Date.parse('today').add(-1).days();
                                lastFullDay.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = lastFullDay.getTime();
                                var lastXDaysAgo = Date.parse('today').add(-(measureCount)).days();
                                selectedFilterProperty.criteriaRangeStart = lastXDaysAgo.getTime();
                                break;
                            case 'w':
                                var lastFullWeekEnd = Date.today().last().sunday();
                                lastFullWeekEnd.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = lastFullWeekEnd.getTime();
                                var lastXWeeksAgo = Date.today().last().sunday().add(-(measureCount)).weeks();
                                selectedFilterProperty.criteriaRangeStart = lastXWeeksAgo.getTime();
                                break;
                            case 'm':
                                var lastFullMonthEnd = Date.today().add(-1).months().moveToLastDayOfMonth();
                                lastFullMonthEnd.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = lastFullMonthEnd.getTime();
                                var lastXMonthsAgo = Date.today().add(-1).months().moveToLastDayOfMonth().add(-(measureCount)).months();
                                selectedFilterProperty.criteriaRangeStart = lastXMonthsAgo.getTime();
                                break;
                            case 'q':
                                var currentQuarter = Math.floor((Date.parse('today').getMonth() / 3));
                                var firstDayOfCurrentQuarter = new Date(Date.parse('today').getFullYear(), currentQuarter * 3, 1);
                                var lastDayOfPreviousQuarter = firstDayOfCurrentQuarter.add(-1).days();
                                lastDayOfPreviousQuarter.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = lastDayOfPreviousQuarter.getTime();
                                var lastXQuartersAgo = new Date(Date.parse('today').getFullYear(), currentQuarter * 3, 1);
                                lastXQuartersAgo.add(-(measureCount * 3)).months();
                                selectedFilterProperty.criteriaRangeStart = lastXQuartersAgo.getTime();
                                break;
                            case 'y':
                                var lastFullYearEnd = new Date(new Date().getFullYear(), 11, 31).add(-1).years();
                                lastFullYearEnd.setHours(23, 59, 59, 999);
                                selectedFilterProperty.criteriaRangeEnd = lastFullYearEnd.getTime();
                                var lastXYearsAgo = new Date(new Date().getFullYear(), 11, 31).add(-(measureCount) - 1).years();
                                selectedFilterProperty.criteriaRangeStart = lastXYearsAgo.getTime();
                                break;
                        }
                    }
                    if (selectedCondition.dateInfo.type === 'exactDate' && angular.isDefined(selectedFilterProperty.criteriaRangeStart) && angular.isDefined(selectedFilterProperty.criteriaRangeStart.setHours)) {
                        selectedFilterProperty.criteriaRangeStart = selectedFilterProperty.criteriaRangeStart.setHours(0, 0, 0, 0);
                        selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeStart).setHours(23, 59, 59, 999);
                    }
                    if (selectedCondition.dateInfo.type === 'range') {
                        if (angular.isDefined(selectedFilterProperty.criteriaRangeStart) && angular.isDefined(selectedFilterProperty.criteriaRangeStart)) {
                            selectedFilterProperty.criteriaRangeStart = new Date(selectedFilterProperty.criteriaRangeStart).setHours(0, 0, 0, 0);
                        }
                        if (angular.isDefined(selectedFilterProperty.criteriaRangeEnd) && angular.isDefined(selectedFilterProperty.criteriaRangeStart)) {
                            selectedFilterProperty.criteriaRangeEnd = new Date(selectedFilterProperty.criteriaRangeEnd).setHours(23, 59, 59, 999);
                        }
                    }
                    $log.debug('criteriaRangeChanged');
                    $log.debug(selectedCondition);
                    $log.debug(selectedFilterProperty);
                };
                if (angular.isUndefined(scope.filterItem.$$isNew) || scope.filterItem.$$isNew === false) {
                    angular.forEach(scope.conditionOptions, function (conditionOption) {
                        if (conditionOption.display == scope.filterItem.conditionDisplay) {
                            scope.selectedFilterProperty.selectedCriteriaType = conditionOption;
                            scope.selectedFilterProperty.criteriaValue = scope.filterItem.value;
                            if (angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType.dateInfo)
                                && angular.isDefined(scope.filterItem.value)
                                && scope.filterItem.value.length) {
                                var dateRangeArray = scope.filterItem.value.split("-");
                                var rangeStart = new Date(parseInt(dateRangeArray[0])).toUTCString();
                                rangeStart = rangeStart.split(' ').slice(0, 5).join(' ');
                                var rangeEnd = new Date(parseInt(dateRangeArray[1])).toUTCString();
                                rangeEnd = rangeEnd.split(' ').slice(0, 5).join(' ');
                                scope.selectedFilterProperty.criteriaRangeStart = rangeStart;
                                scope.selectedFilterProperty.criteriaRangeEnd = rangeEnd;
                            }
                            if (angular.isDefined(scope.selectedConditionChanged)) {
                                scope.selectedConditionChanged(scope.selectedFilterProperty);
                            }
                        }
                    });
                }
                else {
                    scope.selectedFilterProperty.criteriaValue = '';
                    scope.selectedFilterProperty.criteriaRangeStart = '';
                    scope.selectedFilterProperty.criteriaRangeEnd = '';
                }
            }
        };
    }
    SWCriteriaDate.Factory = function () {
        var directive = function ($log, collectionPartialsPath, hibachiPathBuilder) { return new SWCriteriaDate($log, collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWCriteriaDate;
}());
exports.SWCriteriaDate = SWCriteriaDate;


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaManyToMany = /** @class */ (function () {
    function SWCriteriaManyToMany($log, $hibachi, collectionPartialsPath, dialogService, observerService, hibachiPathBuilder, rbkeyService) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriamanytomany.html',
            link: function (scope, element, attrs) {
                scope.data = {};
                scope.collectionOptionsOpen = false;
                scope.toggleCollectionOptions = function (flag) {
                    scope.collectionOptionsOpen = (!angular.isUndefined(flag)) ? flag : !scope.collectionOptionsOpen;
                };
                scope.selectCollection = function (collection) {
                    scope.toggleCollectionOptions();
                    scope.selectedFilterProperty.selectedCollection = collection;
                    scope.selectedFilterProperty.selectedCriteriaType = scope.manyToManyOptions[2];
                };
                scope.cleanSelection = function () {
                    scope.toggleCollectionOptions(false);
                    scope.data.collectionName = "";
                    scope.selectedFilterProperty.selectedCollection = null;
                };
                var getManyToManyOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    $log.debug('type', type);
                    var manyToManyOptions = [];
                    if (type == 'filter') {
                        manyToManyOptions = [
                            {
                                display: "All Exist In Collection",
                                comparisonOperator: "All"
                            },
                            {
                                display: "None Exist In Collection",
                                comparisonOperator: "None"
                            },
                            {
                                display: "Some Exist In Collection",
                                comparisonOperator: "One"
                            },
                            {
                                display: "Empty",
                                comparisonOperator: "is",
                                value: "null"
                            },
                            {
                                display: "Not Empty",
                                comparisonOperator: "is not",
                                value: "null"
                            }
                        ];
                    }
                    else if (type === 'condition') {
                        manyToManyOptions = [];
                    }
                    return manyToManyOptions;
                };
                scope.manyToManyOptions = getManyToManyOptions(scope.comparisonType);
                var existingCollectionsPromise = $hibachi.getExistingCollectionsByBaseEntity(scope.selectedFilterProperty.cfc);
                existingCollectionsPromise.then(function (value) {
                    scope.collectionOptions = value.data;
                    if (angular.isDefined(scope.filterItem.collectionID)) {
                        for (var i in scope.collectionOptions) {
                            if (scope.collectionOptions[i].collectionID === scope.filterItem.collectionID) {
                                scope.selectedFilterProperty.selectedCollection = scope.collectionOptions[i];
                            }
                        }
                        for (var i in scope.manyToManyOptions) {
                            if (scope.manyToManyOptions[i].comparisonOperator === scope.filterItem.criteria) {
                                scope.selectedFilterProperty.selectedCriteriaType = scope.manyToManyOptions[i];
                            }
                        }
                    }
                });
                function populateUI(collection) {
                    scope.collectionOptions.push(collection);
                    scope.selectedFilterProperty.selectedCollection = collection;
                    scope.selectedFilterProperty.selectedCriteriaType = scope.manyToManyOptions[2];
                }
                observerService.attach(populateUI, 'addCollection', 'addCollection');
                scope.selectedCriteriaChanged = function (selectedCriteria) {
                    $log.debug(selectedCriteria);
                    //update breadcrumbs as array of filterpropertylist keys
                    $log.debug(scope.selectedFilterProperty);
                    var breadCrumb = {
                        entityAlias: scope.selectedFilterProperty.name,
                        cfc: scope.selectedFilterProperty.cfc,
                        propertyIdentifier: scope.selectedFilterProperty.propertyIdentifier,
                        rbKey: rbkeyService.getRBKey('entity.' + scope.selectedFilterProperty.cfc.replace('_', ''))
                    };
                    scope.filterItem.breadCrumbs.push(breadCrumb);
                    //populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
                    scope.selectedFilterPropertyChanged({ selectedFilterProperty: scope.selectedFilterProperty.selectedCriteriaType });
                    //update criteria to display the condition of the new critera we have selected
                };
                scope.addNewCollection = function () {
                    dialogService.addPageDialog('org/Hibachi/client/src/collection/components/criteriacreatecollection', {
                        entityName: scope.selectedFilterProperty.cfc,
                        collectionName: scope.data.collectionName,
                        parentEntity: scope.collectionConfig.baseEntityName
                    });
                    scope.cleanSelection();
                };
                scope.viewSelectedCollection = function () {
                    dialogService.addPageDialog('org/Hibachi/client/src/collection/components/criteriacreatecollection', {
                        entityName: 'collection',
                        entityId: scope.selectedFilterProperty.selectedCollection.collectionID,
                        parentEntity: scope.collectionConfig.baseEntityName
                    });
                };
            }
        };
    }
    SWCriteriaManyToMany.Factory = function () {
        var directive = function ($log, $hibachi, $filter, collectionPartialsPath, collectionService, metadataService, dialogService, observerService, hibachiPathBuilder, rbkeyService) { return new SWCriteriaManyToMany($log, $hibachi, collectionPartialsPath, dialogService, observerService, hibachiPathBuilder, rbkeyService); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'collectionPartialsPath',
            'dialogService',
            'observerService',
            'hibachiPathBuilder',
            'rbkeyService',
        ];
        return directive;
    };
    return SWCriteriaManyToMany;
}());
exports.SWCriteriaManyToMany = SWCriteriaManyToMany;


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaManyToOne = /** @class */ (function () {
    function SWCriteriaManyToOne($log, $hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder, rbkeyService) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriamanytoone.html',
            link: function (scope, element, attrs) {
                var getManyToOneOptions = function () {
                    var manyToOneOptions = {
                        drillEntity: {},
                        hasEntity: {
                            display: "Defined",
                            comparisonOperator: "is not",
                            value: "null"
                        },
                        notHasEntity: {
                            display: "Not Defined",
                            comparisonOperator: "is",
                            value: "null"
                        }
                    };
                    return manyToOneOptions;
                };
                scope.manyToOneOptions = getManyToOneOptions();
                scope.conditionOptions = getManyToOneOptions();
                $log.debug('many-to-one');
                $log.debug(scope.selectedFilterProperty);
                $log.debug(scope.filterPropertiesList);
                scope.$watch('selectedFilterProperty', function (selectedFilterProperty) {
                    if (angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])) {
                        var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(selectedFilterProperty.cfc);
                        filterPropertiesPromise.then(function (value) {
                            scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier] = value;
                            metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier], scope.selectedFilterProperty.propertyIdentifier);
                        }, function (reason) {
                        });
                    }
                    scope.selectedCriteriaChanged = function (selectedCriteria) {
                        $log.debug(selectedCriteria);
                        $log.debug('changed');
                        //update breadcrumbs as array of filterpropertylist keys
                        $log.debug(scope.selectedFilterProperty);
                        var breadCrumb = {
                            entityAlias: scope.selectedFilterProperty.name,
                            cfc: scope.selectedFilterProperty.cfc,
                            propertyIdentifier: scope.selectedFilterProperty.propertyIdentifier,
                            rbKey: rbkeyService.getRBKey('entity.' + scope.selectedFilterProperty.cfc.replace('_', ''))
                        };
                        $log.debug('breadcrumb');
                        $log.debug(breadCrumb);
                        $log.debug(scope.filterItem.breadCrumbs);
                        scope.filterItem.breadCrumbs.push(breadCrumb);
                        //populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
                        scope.selectedFilterPropertyChanged({ selectedFilterProperty: scope.selectedFilterProperty.selectedCriteriaType });
                        //update criteria to display the condition of the new critera we have selected
                        $log.debug(scope.selectedFilterProperty);
                    };
                });
            }
        };
    }
    SWCriteriaManyToOne.Factory = function () {
        var directive = function ($log, $hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder, rbkeyService) { return new SWCriteriaManyToOne($log, $hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder, rbkeyService); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'collectionPartialsPath',
            'metadataService',
            'hibachiPathBuilder',
            'rbkeyService'
        ];
        return directive;
    };
    return SWCriteriaManyToOne;
}());
exports.SWCriteriaManyToOne = SWCriteriaManyToOne;
// 'use strict';
// angular.module('slatwalladmin')
// .directive('swCriteriaManyToOne', [
// 	'$log',
// 	'$hibachi',
// 	'$filter',
// 	'collectionPartialsPath',
// 	'collectionService',
// 	'metadataService',
// 	function(
// 		$log,
// 		$hibachi,
// 		$filter,
// 		collectionPartialsPath,
// 		collectionService,
// 		metadataService
// 	){
// 		return {
// 			restrict: 'E',
// 			templateUrl:collectionPartialsPath+'criteriamanytoone.html',
// 			link: function(scope, element, attrs){
// 				var getManyToOneOptions = function(){
// 			    	var manyToOneOptions = {
// 			            drillEntity:{},
// 						hasEntity:{
// 							display:"Defined",
// 							comparisonOperator:"is not",
// 							value:"null"
// 						},
// 						notHasEntity:{
// 							display:"Not Defined",
// 							comparisonOperator:"is",
// 							value:"null"
// 						}
// 			    	};
// 			    	return manyToOneOptions;
// 			    };
// 			    scope.manyToOneOptions = getManyToOneOptions();
// 			    scope.conditionOptions = getManyToOneOptions();
// 				$log.debug('many-to-one');
// 				$log.debug(scope.selectedFilterProperty);
// 				$log.debug(scope.filterPropertiesList);
// 				scope.$watch('selectedFilterProperty',function(selectedFilterProperty){
// 					if(angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])){
// 						var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(selectedFilterProperty.cfc);
// 						filterPropertiesPromise.then(function(value){
// 							scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier] = value;
// 							metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier],scope.selectedFilterProperty.propertyIdentifier);
// 						}, function(reason){
// 						});
// 					}
// 					scope.selectedCriteriaChanged = function(selectedCriteria){
// 						$log.debug(selectedCriteria);
// 						$log.debug('changed');
// 						//update breadcrumbs as array of filterpropertylist keys
// 						$log.debug(scope.selectedFilterProperty);
// 						var breadCrumb = {
// 								entityAlias:scope.selectedFilterProperty.name,
// 								cfc:scope.selectedFilterProperty.cfc,
// 								propertyIdentifier:scope.selectedFilterProperty.propertyIdentifier,
// 								rbKey:rbkeyService.getRBKey('entity.'+scope.selectedFilterProperty.cfc.replace('_',''))
// 						};
// 						$log.debug('breadcrumb');
// 						$log.debug(breadCrumb);
// 						$log.debug(scope.filterItem.breadCrumbs);
// 						scope.filterItem.breadCrumbs.push(breadCrumb);
// 						//populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
// 						scope.selectedFilterPropertyChanged({selectedFilterProperty:scope.selectedFilterProperty.selectedCriteriaType});
// 						//update criteria to display the condition of the new critera we have selected
// 						$log.debug(scope.selectedFilterProperty);
// 					};
// 				});
// 			}
// 		};
// 	}
// ]);


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaNumber = /** @class */ (function () {
    function SWCriteriaNumber($log, collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criterianumber.html',
            link: function (scope, element, attrs) {
                var getNumberOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    var numberOptions = [];
                    if (type === 'filter') {
                        numberOptions = [
                            {
                                display: "Equals",
                                comparisonOperator: "="
                            },
                            {
                                display: "Doesn't Equal",
                                comparisonOperator: "<>"
                            },
                            {
                                display: "In Range",
                                comparisonOperator: "between",
                                type: "range"
                            },
                            {
                                display: "Not In Range",
                                comparisonOperator: "not between",
                                type: "range"
                            },
                            {
                                display: "Greater Than",
                                comparisonOperator: ">"
                            },
                            {
                                display: "Greater Than Or Equal",
                                comparisonOperator: ">="
                            },
                            {
                                display: "Less Than",
                                comparisonOperator: "<"
                            },
                            {
                                display: "Less Than Or Equal",
                                comparisonOperator: "<="
                            },
                            {
                                display: "In List",
                                comparisonOperator: "in"
                            },
                            {
                                display: "Not In List",
                                comparisonOperator: "not in"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "is not",
                                value: "null"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "is",
                                value: "null"
                            }
                        ];
                    }
                    else if (type === 'condition') {
                        numberOptions = [
                            {
                                display: "Equals",
                                comparisonOperator: "eq"
                            },
                            {
                                display: "Greater Than",
                                comparisonOperator: "gt"
                            },
                            {
                                display: "Greater Than Or Equal",
                                comparisonOperator: "gte"
                            },
                            {
                                display: "Less Than",
                                comparisonOperator: "lt"
                            },
                            {
                                display: "Less Than Or Equal",
                                comparisonOperator: "lte"
                            },
                            {
                                display: "Doesn't Equal",
                                comparisonOperator: "neq"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "null",
                                value: "False"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "null",
                                value: "True"
                            }
                        ];
                    }
                    return numberOptions;
                };
                scope.$watch('selectedFilterProperty.criteriaValue', function (criteriaValue) {
                    if (angular.isDefined(criteriaValue)) {
                        scope.selectedFilterProperty.criteriaValue = criteriaValue;
                        $log.debug(scope.selectedFilterProperty);
                    }
                });
                scope.conditionOptions = getNumberOptions(scope.comparisonType);
                scope.criteriaRangeChanged = function (selectedFilterProperty) {
                    var selectedCondition = selectedFilterProperty.selectedCriteriaType;
                };
                scope.selectedConditionChanged = function (selectedFilterProperty) {
                    selectedFilterProperty.showCriteriaValue = true;
                    //check whether the type is a range
                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.type)) {
                        selectedFilterProperty.showCriteriaValue = false;
                        selectedFilterProperty.selectedCriteriaType.showCriteriaStart = true;
                        selectedFilterProperty.selectedCriteriaType.showCriteriaEnd = true;
                    }
                    //is null or is not null
                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                        selectedFilterProperty.showCriteriaValue = false;
                    }
                };
                angular.forEach(scope.conditionOptions, function (conditionOption) {
                    $log.debug('populate');
                    if (conditionOption.display == scope.filterItem.conditionDisplay) {
                        scope.selectedFilterProperty.selectedCriteriaType = conditionOption;
                        $log.debug(scope.filterItem);
                        if (scope.filterItem.comparisonOperator === 'between' || scope.filterItem.comparisonOperator === 'not between') {
                            var criteriaRangeArray = scope.filterItem.value.split('-');
                            $log.debug(criteriaRangeArray);
                            scope.selectedFilterProperty.criteriaRangeStart = parseInt(criteriaRangeArray[0]);
                            scope.selectedFilterProperty.criteriaRangeEnd = parseInt(criteriaRangeArray[1]);
                        }
                        else {
                            scope.selectedFilterProperty.criteriaValue = scope.filterItem.value;
                        }
                        if (angular.isDefined(scope.filterItem.criteriaNumberOf)) {
                            scope.selectedFilterProperty.criteriaNumberOf = scope.filterItem.criteriaNumberOf;
                        }
                        if (angular.isDefined(scope.selectedConditionChanged)) {
                            scope.selectedConditionChanged(scope.selectedFilterProperty);
                        }
                    }
                });
            }
        };
    }
    SWCriteriaNumber.Factory = function () {
        var directive = function ($log, collectionPartialsPath, hibachiPathBuilder) { return new SWCriteriaNumber($log, collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWCriteriaNumber;
}());
exports.SWCriteriaNumber = SWCriteriaNumber;


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaOneToMany = /** @class */ (function () {
    function SWCriteriaOneToMany($log, $hibachi, collectionPartialsPath, dialogService, observerService, hibachiPathBuilder, rbkeyService) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriaonetomany.html',
            link: function (scope, element, attrs) {
                scope.data = {};
                scope.collectionOptionsOpen = false;
                scope.toggleCollectionOptions = function (flag) {
                    scope.collectionOptionsOpen = (!angular.isUndefined(flag)) ? flag : !scope.collectionOptionsOpen;
                };
                scope.selectCollection = function (collection) {
                    scope.toggleCollectionOptions();
                    scope.selectedFilterProperty.selectedCollection = collection;
                    scope.selectedFilterProperty.selectedCriteriaType = scope.oneToManyOptions[2];
                };
                scope.cleanSelection = function () {
                    scope.toggleCollectionOptions(false);
                    scope.data.collectionName = "";
                    scope.selectedFilterProperty.selectedCollection = null;
                };
                var getOneToManyOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    var oneToManyOptions = [];
                    if (type == 'filter') {
                        oneToManyOptions = [
                            {
                                display: "All Exist In Collection",
                                comparisonOperator: "All"
                            },
                            {
                                display: "None Exist In Collection",
                                comparisonOperator: "None"
                            },
                            {
                                display: "Some Exist In Collection",
                                comparisonOperator: "One"
                            }
                            /*,
                             {
                             display:"Empty",
                             comparisonOperator:"is",
                             value:"null"
                             },
                             {
                             display:"Not Empty",
                             comparisonOperator:"is not",
                             value:"null"
                             }*/
                        ];
                    }
                    else if (type === 'condition') {
                        oneToManyOptions = [];
                    }
                    return oneToManyOptions;
                };
                $log.debug('onetomany');
                $log.debug(scope.selectedFilterProperty);
                scope.oneToManyOptions = getOneToManyOptions(scope.comparisonType);
                var existingCollectionsPromise = $hibachi.getExistingCollectionsByBaseEntity(scope.selectedFilterProperty.cfc);
                existingCollectionsPromise.then(function (value) {
                    scope.collectionOptions = value.data;
                    if (angular.isDefined(scope.filterItem.collectionID)) {
                        for (var i in scope.collectionOptions) {
                            if (scope.collectionOptions[i].collectionID === scope.filterItem.collectionID) {
                                scope.selectedFilterProperty.selectedCollection = scope.collectionOptions[i];
                            }
                        }
                        for (var i in scope.oneToManyOptions) {
                            if (scope.oneToManyOptions[i].comparisonOperator === scope.filterItem.criteria) {
                                scope.selectedFilterProperty.selectedCriteriaType = scope.oneToManyOptions[i];
                            }
                        }
                    }
                });
                function populateUI(collection) {
                    scope.collectionOptions.push(collection);
                    scope.selectedFilterProperty.selectedCollection = collection;
                    scope.selectedFilterProperty.selectedCriteriaType = scope.oneToManyOptions[2];
                }
                observerService.attach(populateUI, 'addCollection', 'addCollection');
                scope.selectedCriteriaChanged = function (selectedCriteria) {
                    $log.debug(selectedCriteria);
                    //update breadcrumbs as array of filterpropertylist keys
                    $log.debug(scope.selectedFilterProperty);
                    var breadCrumb = {
                        entityAlias: scope.selectedFilterProperty.name,
                        cfc: scope.selectedFilterProperty.cfc,
                        propertyIdentifier: scope.selectedFilterProperty.propertyIdentifier,
                        rbKey: rbkeyService.getRBKey('entity.' + scope.selectedFilterProperty.cfc.replace('_', '')),
                        filterProperty: scope.selectedFilterProperty
                    };
                    scope.filterItem.breadCrumbs.push(breadCrumb);
                    $log.debug('criteriaChanged');
                    //$log.debug(selectedFilterPropertyChanged);
                    $log.debug(scope.selectedFilterProperty);
                    //populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
                    scope.selectedFilterPropertyChanged({ selectedFilterProperty: scope.selectedFilterProperty.selectedCriteriaType });
                    //update criteria to display the condition of the new critera we have selected
                };
                scope.addNewCollection = function () {
                    dialogService.addPageDialog('org/Hibachi/client/src/collection/components/criteriacreatecollection', {
                        entityName: scope.selectedFilterProperty.cfc,
                        collectionName: scope.data.collectionName,
                        parentEntity: scope.collectionConfig.baseEntityName
                    });
                    scope.cleanSelection();
                };
                scope.viewSelectedCollection = function () {
                    scope.toggleCollectionOptions();
                    dialogService.addPageDialog('org/Hibachi/client/src/collection/components/criteriacreatecollection', {
                        entityName: 'collection',
                        entityId: scope.selectedFilterProperty.selectedCollection.collectionID,
                        parentEntity: scope.collectionConfig.baseEntityName
                    });
                };
            }
        };
    }
    SWCriteriaOneToMany.Factory = function () {
        var directive = function ($log, $hibachi, collectionPartialsPath, dialogService, observerService, hibachiPathBuilder, rbkeyService) { return new SWCriteriaOneToMany($log, $hibachi, collectionPartialsPath, dialogService, observerService, hibachiPathBuilder, rbkeyService); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'collectionPartialsPath',
            'dialogService',
            'observerService',
            'hibachiPathBuilder',
            'rbkeyService'
        ];
        return directive;
    };
    return SWCriteriaOneToMany;
}());
exports.SWCriteriaOneToMany = SWCriteriaOneToMany;


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaRelatedObject = /** @class */ (function () {
    function SWCriteriaRelatedObject($log, $hibachi, $filter, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriarelatedobject.html',
            link: function (scope, element, attrs) {
                var getRelatedObjectOptions = function () {
                    var relatedObjectOptions = {
                        drillEntity: null,
                        hasEntity: {
                            display: "Defined",
                            comparisonOperator: "is not",
                            value: "null"
                        },
                        notHasEntity: {
                            display: "Not Defined",
                            comparisonOperator: "is",
                            value: "null"
                        },
                        aggregate: {
                            aggregate: ""
                        }
                    };
                    return relatedObjectOptions;
                };
                scope.aggregate = {};
                scope.aggregate.selectedAggregate = '';
                scope.aggregateOptions = ['Average', 'Count', 'Sum', 'Min', 'Max'];
                scope.selectAggregate = function (aggregate) {
                    scope.selectedFilterProperty.selectedCriteriaType.aggregate = aggregate;
                };
                scope.relatedObjectOptions = getRelatedObjectOptions();
                scope.conditionOptions = getRelatedObjectOptions();
                $log.debug('many-to-one');
                $log.debug(scope.selectedFilterProperty);
                $log.debug(scope.filterPropertiesList);
                scope.$watch('selectedFilterProperty', function (selectedFilterProperty) {
                    if (angular.isUndefined(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier])) {
                        var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(selectedFilterProperty.cfc);
                        filterPropertiesPromise.then(function (value) {
                            scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier] = value;
                            metadataService.formatPropertiesList(scope.filterPropertiesList[scope.selectedFilterProperty.propertyIdentifier], scope.selectedFilterProperty.propertyIdentifier);
                        }, function (reason) {
                        });
                    }
                    scope.selectedCriteriaChanged = function (selectedCriteria, selectedAggregate) {
                        var breadCrumb = {
                            entityAlias: scope.selectedFilterProperty.name,
                            cfc: scope.selectedFilterProperty.cfc,
                            propertyIdentifier: scope.selectedFilterProperty.propertyIdentifier,
                            rbKey: rbkeyService.getRBKey('entity.' + scope.selectedFilterProperty.cfc.replace('_', ''))
                        };
                        $log.debug('breadcrumb');
                        $log.debug(breadCrumb);
                        $log.debug(scope.filterItem.breadCrumbs);
                        scope.filterItem.breadCrumbs.push(breadCrumb);
                        if (selectedAggregate) {
                            scope.selectedFilterProperty.selectedCriteriaType.ormtype = 'integer';
                            scope.selectedFilterProperty.selectedCriteriaType.aggregate = selectedAggregate;
                        }
                        //populate editfilterinfo with the current level of the filter property we are inspecting by pointing to the new scope key
                        scope.selectedFilterPropertyChanged({ selectedFilterProperty: scope.selectedFilterProperty.selectedCriteriaType });
                        //update criteria to display the condition of the new critera we have selected
                        $log.debug(scope.selectedFilterProperty);
                    };
                });
            }
        };
    }
    SWCriteriaRelatedObject.Factory = function () {
        var directive = function ($log, $hibachi, $filter, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService) { return new SWCriteriaRelatedObject($log, $hibachi, $filter, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService); };
        directive.$inject = [
            '$log',
            '$hibachi',
            '$filter',
            'collectionPartialsPath',
            'collectionService',
            'metadataService',
            'hibachiPathBuilder',
            'rbkeyService'
        ];
        return directive;
    };
    return SWCriteriaRelatedObject;
}());
exports.SWCriteriaRelatedObject = SWCriteriaRelatedObject;


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWCriteriaString = /** @class */ (function () {
    function SWCriteriaString(collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'criteriastring.html',
            link: function (scope, element, attrs) {
                var getStringOptions = function (type) {
                    if (angular.isUndefined(type)) {
                        type = 'filter';
                    }
                    var stringOptions = [];
                    if (type === 'filter') {
                        stringOptions = [
                            {
                                display: "Equals",
                                comparisonOperator: "="
                            },
                            {
                                display: "Doesn't Equal",
                                comparisonOperator: "<>"
                            },
                            {
                                display: "Contains",
                                comparisonOperator: "like",
                                pattern: "%w%"
                            },
                            {
                                display: "Doesn't Contain",
                                comparisonOperator: "not like",
                                pattern: "%w%"
                            },
                            {
                                display: "Starts With",
                                comparisonOperator: "like",
                                pattern: "w%"
                            },
                            {
                                display: "Doesn't Start With",
                                comparisonOperator: "not like",
                                pattern: "w%"
                            },
                            {
                                display: "Ends With",
                                comparisonOperator: "like",
                                pattern: "%w"
                            },
                            {
                                display: "Doesn't End With",
                                comparisonOperator: "not like",
                                pattern: "%w"
                            },
                            {
                                display: "In List",
                                comparisonOperator: "in"
                            },
                            {
                                display: "Not In List",
                                comparisonOperator: "not in"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "is not",
                                value: "null"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "is",
                                value: "null"
                            }
                        ];
                    }
                    else if (type === 'condition') {
                        stringOptions = [
                            {
                                display: "Equals",
                                comparisonOperator: "eq"
                            },
                            {
                                display: "Doesn't Equal",
                                comparisonOperator: "neq"
                            },
                            {
                                display: "Defined",
                                comparisonOperator: "null",
                                value: "False"
                            },
                            {
                                display: "Not Defined",
                                comparisonOperator: "null",
                                value: "True"
                            }
                        ];
                    }
                    return stringOptions;
                };
                //initialize values
                scope.conditionOptions = getStringOptions(scope.comparisonType);
                scope.inListArray = [];
                if (angular.isDefined(scope.filterItem.value)) {
                    scope.inListArray = scope.filterItem.value.split(',');
                }
                scope.newListItem = '';
                //declare functions
                scope.addToValueInListFormat = function (inListItem) {
                    // Adds item into array
                    scope.inListArray.push(inListItem);
                    //set value field to the user generated list
                    scope.filterItem.value = scope.inListArray.toString();
                    scope.filterItem.displayValue = scope.inListArray.toString().replace(/,/g, ', ');
                    scope.newListItem = '';
                };
                scope.removelistItem = function (argListIndex) {
                    scope.inListArray.splice(argListIndex, 1);
                    scope.filterItem.value = scope.inListArray.toString();
                    scope.filterItem.displayValue = scope.inListArray.toString().replace(/,/g, ', ');
                };
                scope.clearField = function () {
                    scope.newListItem = '';
                };
                scope.selectedConditionChanged = function (selectedFilterProperty) {
                    //scope.selectedFilterProperty.criteriaValue = '';
                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                        selectedFilterProperty.showCriteriaValue = false;
                    }
                    else {
                        if (selectedFilterProperty.selectedCriteriaType.comparisonOperator === 'in' || selectedFilterProperty.selectedCriteriaType.comparisonOperator === 'not in') {
                            selectedFilterProperty.showCriteriaValue = false;
                            scope.comparisonOperatorInAndNotInFlag = true;
                        }
                        else {
                            selectedFilterProperty.showCriteriaValue = true;
                        }
                    }
                };
                scope.$watch('filterItem.value', function (criteriaValue) {
                    //remove percents for like values
                    if (angular.isDefined(scope.filterItem) && angular.isDefined(scope.filterItem.value)) {
                        scope.filterItem.value = scope.filterItem.value.replace('%', '');
                    }
                });
                scope.$watch('selectedFilterProperty', function (selectedFilterProperty) {
                    if (angular.isDefined(selectedFilterProperty)) {
                        angular.forEach(scope.conditionOptions, function (conditionOption) {
                            if (conditionOption.display == scope.filterItem.conditionDisplay) {
                                scope.selectedFilterProperty.selectedCriteriaType = conditionOption;
                                scope.selectedFilterProperty.criteriaValue = scope.filterItem.value;
                                if (angular.isDefined(scope.selectedConditionChanged)) {
                                    scope.selectedConditionChanged(scope.selectedFilterProperty);
                                }
                            }
                        });
                    }
                });
            }
        };
    }
    SWCriteriaString.Factory = function () {
        var directive = function (collectionPartialsPath, hibachiPathBuilder) { return new SWCriteriaString(collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWCriteriaString;
}());
exports.SWCriteriaString = SWCriteriaString;


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDisplayItem = /** @class */ (function () {
    //@ngInject
    function SWDisplayItem($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder) {
        return {
            require: '?^swDisplayOptions',
            restrict: 'A',
            scope: {
                selectedProperty: "=",
                propertiesList: "=",
                breadCrumbs: "=",
                selectedPropertyChanged: "&"
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "displayitem.html",
            link: function (scope, element, attrs, displayOptionsController) {
                scope.showDisplayItem = false;
                scope.selectedDisplayOptionChanged = function (selectedDisplayOption) {
                    var breadCrumb = {
                        entityAlias: scope.selectedProperty.name,
                        cfc: scope.selectedProperty.cfc,
                        propertyIdentifier: scope.selectedProperty.propertyIdentifier
                    };
                    scope.breadCrumbs.push(breadCrumb);
                    scope.selectedPropertyChanged({ selectedProperty: selectedDisplayOption });
                };
                scope.$watch('selectedProperty', function (selectedProperty) {
                    if (angular.isDefined(selectedProperty)) {
                        if (angular.isUndefined(scope.propertiesList[selectedProperty.propertyIdentifier])) {
                            var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(selectedProperty.cfc);
                            filterPropertiesPromise.then(function (value) {
                                metadataService.setPropertiesList(value, selectedProperty.propertyIdentifier);
                                scope.propertiesList[selectedProperty.propertyIdentifier] = metadataService.getPropertiesListByBaseEntityAlias(selectedProperty.propertyIdentifier);
                                metadataService.formatPropertiesList(scope.propertiesList[selectedProperty.propertyIdentifier], selectedProperty.propertyIdentifier);
                            }, function (reason) {
                            });
                        }
                    }
                });
            }
        };
    }
    SWDisplayItem.Factory = function () {
        var directive = function ($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder) { return new SWDisplayItem($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder); };
        directive.$inject = [
            '$hibachi',
            'collectionPartialsPath',
            'metadataService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDisplayItem;
}());
exports.SWDisplayItem = SWDisplayItem;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDisplayItemAggregate = /** @class */ (function () {
    //@ngInject
    function SWDisplayItemAggregate($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder) {
        return {
            require: '^swDisplayOptions',
            restrict: 'A',
            scope: {
                selectedProperty: "=",
                propertiesList: "=",
                breadCrumbs: "=",
                selectedPropertyChanged: "&"
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "displayitemaggregate.html",
            link: function (scope, element, attrs, displayOptionsController) {
                scope.showDisplayItem = false;
                scope.aggregate = {};
                scope.aggregate.selectedAggregate = '';
                scope.aggregateOptions = [
                    { id: 'average', value: 'Average' },
                    { id: 'count', value: 'Count' },
                    { id: 'sum', value: 'Sum' },
                    { id: 'min', value: 'Min' },
                    { id: 'max', value: 'Max' }
                ];
                scope.selectAggregate = function (aggregate) {
                    if (aggregate == 'count') {
                        scope.selectedProperty.aggregate = aggregate;
                        scope.selectedPropertyChanged({ selectedProperty: scope.selectedProperty });
                    }
                    else {
                        scope.aggregate.currentObject = scope.selectedProperty.cfc;
                    }
                };
                scope.selectedDisplayOptionChanged = function (selectedDisplayOption) {
                    selectedDisplayOption.aggregate = scope.aggregate.selectedAggregate;
                    selectedDisplayOption.aggregateObject = scope.aggregate.currentObject;
                    scope.selectedPropertyChanged({ selectedProperty: selectedDisplayOption });
                };
                scope.$watch('selectedProperty', function (selectedProperty) {
                    if (angular.isDefined(selectedProperty)) {
                        if (angular.isUndefined(scope.propertiesList[selectedProperty.propertyIdentifier])) {
                            var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(selectedProperty.cfc);
                            filterPropertiesPromise.then(function (value) {
                                metadataService.setPropertiesList(value, selectedProperty.propertyIdentifier);
                                scope.propertiesList[selectedProperty.propertyIdentifier] = metadataService.getPropertiesListByBaseEntityAlias(selectedProperty.propertyIdentifier);
                                metadataService.formatPropertiesList(scope.propertiesList[selectedProperty.propertyIdentifier], selectedProperty.propertyIdentifier);
                            }, function (reason) {
                            });
                        }
                        scope.showDisplayItem = true;
                    }
                });
            }
        };
    }
    SWDisplayItemAggregate.Factory = function () {
        var directive = function ($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder) { return new SWDisplayItemAggregate($hibachi, collectionPartialsPath, metadataService, hibachiPathBuilder); };
        directive.$inject = [
            '$hibachi',
            'collectionPartialsPath',
            'metadataService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDisplayItemAggregate;
}());
exports.SWDisplayItemAggregate = SWDisplayItemAggregate;


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDisplayOptions = /** @class */ (function () {
    //@ngInject
    function SWDisplayOptions($log, $hibachi, hibachiPathBuilder, collectionPartialsPath, rbkeyService) {
        return {
            restrict: 'E',
            require: {
                swListingDisplay: "?^swListingDisplay",
                swListingControls: "?^swListingControls"
            },
            transclude: true,
            scope: {
                orderBy: "<",
                columns: '=',
                joins: "<",
                groupBys: "<",
                propertiesList: "<",
                saveCollection: "&?",
                baseEntityAlias: "<?",
                baseEntityName: "<?",
                listingName: "@?"
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "displayoptions.html",
            controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {
                    this.removeColumn = function (columnIndex) {
                        if ($scope.columns.length) {
                            $scope.columns.splice(columnIndex, 1);
                        }
                    };
                }],
            link: function (scope, element, $attrs, controllers, observerService) {
                scope.breadCrumbs = [{
                        entityAlias: scope.baseEntityAlias,
                        cfc: scope.baseEntityAlias,
                        propertyIdentifier: scope.baseEntityAlias
                    }];
                scope.getPropertiesList = function () {
                    return scope.propertiesList;
                };
                scope.addDisplayDialog = {
                    isOpen: false,
                    toggleDisplayDialog: function () {
                        scope.addDisplayDialog.isOpen = !scope.addDisplayDialog.isOpen;
                    }
                };
                var getTitleFromProperty = function (selectedProperty) {
                    var baseEntityCfcName = scope.baseEntityName.replace('Slatwall', '').charAt(0).toLowerCase() + scope.baseEntityName.replace('Slatwall', '').slice(1);
                    var propertyIdentifier = selectedProperty.propertyIdentifier;
                    var title = '';
                    var propertyIdentifierArray = propertyIdentifier.replace(/^_/, '').split(/[._]+/);
                    var currentEntity;
                    var currentEntityInstance;
                    var prefix = 'entity.';
                    if (selectedProperty.$$group == "attribute") {
                        return selectedProperty.displayPropertyIdentifier;
                    }
                    angular.forEach(propertyIdentifierArray, function (propertyIdentifierItem, key) {
                        //pass over the initial item
                        if (key !== 0) {
                            if (key === 1) {
                                currentEntityInstance = $hibachi['new' + scope.baseEntityName.replace('Slatwall', '')]();
                                currentEntity = currentEntityInstance.metaData[propertyIdentifierArray[key]];
                                title += rbkeyService.getRBKey(prefix + baseEntityCfcName + '.' + propertyIdentifierItem);
                            }
                            else {
                                var currentEntityInstance = $hibachi['new' + currentEntity.cfc.charAt(0).toUpperCase() + currentEntity.cfc.slice(1)]();
                                currentEntity = currentEntityInstance.metaData[propertyIdentifierArray[key]];
                                title += rbkeyService.getRBKey(prefix + currentEntityInstance.metaData.className + '.' + currentEntity.name);
                            }
                            if (key < propertyIdentifierArray.length - 1) {
                                title += ' | ';
                            }
                        }
                    });
                    return title;
                };
                scope.addColumn = function (closeDialog) {
                    var selectedProperty = scope.selectedProperty;
                    if (angular.isDefined(scope.selectedAggregate)) {
                        selectedProperty = scope.selectedAggregate;
                    }
                    if (selectedProperty.$$group === 'simple' || 'attribute' || 'compareCollections') {
                        $log.debug(scope.columns);
                        if (angular.isDefined(selectedProperty)) {
                            var column = {
                                title: getTitleFromProperty(selectedProperty),
                                propertyIdentifier: selectedProperty.propertyIdentifier,
                                isVisible: true,
                                isDeletable: true,
                                isSearchable: true,
                                isExportable: true
                            };
                            //only add attributeid if the selectedProperty is attributeid
                            if (angular.isDefined(selectedProperty.attributeID)) {
                                column['attributeID'] = selectedProperty.attributeID;
                                column['attributeSetObject'] = selectedProperty.attributeSetObject;
                            }
                            if (angular.isDefined(selectedProperty.ormtype)) {
                                column['ormtype'] = selectedProperty.ormtype;
                            }
                            if ((!column['type'] || column['type'] == 'none') && selectedProperty.hb_formattype) {
                                column['type'] = selectedProperty.hb_formattype;
                            }
                            else {
                                column['type'] = 'none';
                            }
                            if (angular.isDefined(selectedProperty.aggregate)) {
                                column['ormtype'] = 'string';
                                column['aggregate'] = {
                                    aggregateFunction: selectedProperty.aggregate.toUpperCase(),
                                    aggregateAlias: selectedProperty.propertyIdentifier.split(/[._]+/).pop() + selectedProperty.aggregate.charAt(0).toUpperCase() + selectedProperty.aggregate.slice(1)
                                };
                                column['title'] += ' ' + rbkeyService.getRBKey('define.' + column['aggregate']['aggregateFunction']);
                            }
                            scope.columns.push(column);
                            if ((selectedProperty.propertyIdentifier.match(/_/g) || []).length > 1) {
                                var PIlimit = selectedProperty.propertyIdentifier.length;
                                if (selectedProperty.propertyIdentifier.indexOf('.') != -1) {
                                    PIlimit = selectedProperty.propertyIdentifier.indexOf('.');
                                }
                                var propertyIdentifierJoins = selectedProperty.propertyIdentifier.substring(1, PIlimit);
                                var propertyIdentifierParts = propertyIdentifierJoins.split('_');
                                var current_collection = $hibachi.getEntityExample(scope.baseEntityName);
                                var _propertyIdentifier = '';
                                var joins = [];
                                if (angular.isDefined(scope.joins)) {
                                    joins = scope.joins;
                                }
                                for (var i = 1; i < propertyIdentifierParts.length; i++) {
                                    if (angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]]) && ('cfc' in current_collection.metaData[propertyIdentifierParts[i]])) {
                                        current_collection = $hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc);
                                        _propertyIdentifier += '_' + propertyIdentifierParts[i];
                                        var newJoin = {
                                            associationName: _propertyIdentifier.replace(/_([^_]+)$/, '.$1').substring(1),
                                            alias: '_' + propertyIdentifierParts[0] + _propertyIdentifier
                                        };
                                        var joinFound = false;
                                        for (var j = 0; j < joins.length; j++) {
                                            if (joins[j].alias === newJoin.alias) {
                                                joinFound = true;
                                                break;
                                            }
                                        }
                                        if (!joinFound) {
                                            joins.push(newJoin);
                                        }
                                    }
                                }
                                scope.joins = joins;
                                if (angular.isUndefined(scope.groupBys) || scope.groupBys.split(',').length != scope.columns.length) {
                                    var groupbyArray = angular.isUndefined(scope.groupBys) ? [] : scope.groupBys.split(',');
                                    for (var col = 0; col < scope.columns.length; col++) {
                                        if ('attributeID' in scope.columns[col])
                                            continue;
                                        if (groupbyArray.indexOf(scope.columns[col].propertyIdentifier) == -1) {
                                            groupbyArray.push(scope.columns[col].propertyIdentifier);
                                        }
                                    }
                                    scope.groupBys = groupbyArray.join(',');
                                }
                            }
                            if (controllers.swListingControls) {
                                controllers.swListingControls.columnIsControllableMap[column.propertyIdentifier] = true;
                            }
                            scope.saveCollection();
                            if (angular.isDefined(closeDialog) && closeDialog === true) {
                                scope.addDisplayDialog.toggleDisplayDialog();
                                scope.selectBreadCrumb(0);
                            }
                        }
                    }
                };
                scope.selectBreadCrumb = function (breadCrumbIndex) {
                    //splice out array items above index
                    var removeCount = scope.breadCrumbs.length - 1 - breadCrumbIndex;
                    scope.breadCrumbs.splice(breadCrumbIndex + 1, removeCount);
                    scope.selectedPropertyChanged(null);
                };
                var unbindBaseEntityAlias = scope.$watch('baseEntityAlias', function (newValue, oldValue) {
                    if (newValue !== oldValue) {
                        scope.breadCrumbs = [{
                                entityAlias: scope.baseEntityAlias,
                                cfc: scope.baseEntityAlias,
                                propertyIdentifier: scope.baseEntityAlias
                            }];
                        unbindBaseEntityAlias();
                    }
                });
                scope.selectedPropertyChanged = function (selectedProperty, aggregate) {
                    // drill down or select field?
                    if (!aggregate) {
                        scope.selectedProperty = selectedProperty;
                        scope.selectedAggregate = undefined;
                    }
                    else {
                        scope.selectedAggregate = selectedProperty;
                    }
                };
                jQuery(function ($) {
                    var panelList = angular.element(element).children('ul');
                    panelList.sortable({
                        // Only make the .panel-heading child elements support dragging.
                        // Omit this to make then entire <li>...</li> draggable.
                        handle: '.s-pannel-name',
                        update: function (event, ui) {
                            var tempColumnsArray = [];
                            $('.s-pannel-name', panelList).each(function (index, elem) {
                                var newIndex = $(elem).attr('j-column-index');
                                var columnItem = scope.columns[newIndex];
                                tempColumnsArray.push(columnItem);
                            });
                            scope.columns = tempColumnsArray;
                            scope.saveCollection();
                        }
                    });
                });
                if (!scope.saveCollection && controllers.swListingControls) {
                    scope.saveCollection = function () {
                        controllers.swListingControls.collectionConfig.columns = scope.columns;
                        if (controllers.swListingDisplay) {
                            controllers.swListingDisplay.columns = scope.columns;
                        }
                        controllers.swListingControls.saveCollection();
                    };
                }
                if (controllers.swListingDisplay) {
                    scope.getCollection = controllers.swListingDisplay.getCollection;
                }
                /*var unbindBaseEntityAlaisWatchListener = scope.$watch('baseEntityAlias',function(){
                 $("select").selectBoxIt();
                 unbindBaseEntityAlaisWatchListener();
                 });*/
            }
        };
    }
    SWDisplayOptions.Factory = function () {
        var directive = function ($log, $hibachi, hibachiPathBuilder, collectionPartialsPath, rbkeyService) { return new SWDisplayOptions($log, $hibachi, hibachiPathBuilder, collectionPartialsPath, rbkeyService); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'hibachiPathBuilder',
            'collectionPartialsPath',
            'rbkeyService'
        ];
        return directive;
    };
    return SWDisplayOptions;
}());
exports.SWDisplayOptions = SWDisplayOptions;


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWEditFilterItem = /** @class */ (function () {
    function SWEditFilterItem($log, $filter, $timeout, $hibachi, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService, observerService, utilityService) {
        return {
            require: {
                swFilterGroups: '^swFilterGroups',
                swListingControls: '?^swListingControls'
            },
            restrict: 'E',
            scope: {
                collectionConfig: "=",
                filterItem: "=",
                filterPropertiesList: "=",
                saveCollection: "&?",
                removeFilterItem: "&",
                filterItemIndex: "=",
                comparisonType: "=",
                simple: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "editfilteritem.html",
            link: function (scope, element, attrs, filterGroupsController) {
                if (!scope.saveCollection && filterGroupsController.swListingControls) {
                    scope.saveCollection = function () {
                        filterGroupsController.swListingControls.collectionConfig = scope.collectionConfig;
                        filterGroupsController.swListingControls.saveCollection();
                    };
                }
                function daysBetween(first, second) {
                    // Copy date parts of the timestamps, discarding the time parts.
                    var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());
                    var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());
                    // Do the math.
                    var millisecondsPerDay = 1000 * 60 * 60 * 24;
                    var millisBetween = two.getTime() - one.getTime();
                    var days = millisBetween / millisecondsPerDay;
                    // Round down.
                    return Math.floor(days);
                }
                if (angular.isUndefined(scope.filterItem.breadCrumbs)) {
                    scope.filterItem.breadCrumbs = [];
                    if (scope.filterItem.propertyIdentifier === "") {
                        scope.filterItem.breadCrumbs = [
                            {
                                rbKey: rbkeyService.getRBKey('entity.' + scope.collectionConfig.baseEntityAlias.replace('_', '')),
                                entityAlias: scope.collectionConfig.baseEntityAlias,
                                cfc: scope.collectionConfig.baseEntityAlias,
                                propertyIdentifier: scope.collectionConfig.baseEntityAlias
                            }
                        ];
                    }
                    else {
                        var entityAliasArrayFromString = scope.filterItem.propertyIdentifier.split('.');
                        entityAliasArrayFromString.pop();
                        for (var i in entityAliasArrayFromString) {
                            var breadCrumb = {
                                rbKey: rbkeyService.getRBKey('entity.' + scope.collectionConfig.baseEntityAlias.replace('_', '')),
                                entityAlias: entityAliasArrayFromString[i],
                                cfc: entityAliasArrayFromString[i],
                                propertyIdentifier: entityAliasArrayFromString[i]
                            };
                            scope.filterItem.breadCrumbs.push(breadCrumb);
                        }
                    }
                }
                else {
                    angular.forEach(scope.filterItem.breadCrumbs, function (breadCrumb, key) {
                        if (angular.isUndefined(scope.filterPropertiesList[breadCrumb.propertyIdentifier])) {
                            var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(breadCrumb.cfc);
                            filterPropertiesPromise.then(function (value) {
                                metadataService.setPropertiesList(value, breadCrumb.propertyIdentifier);
                                scope.filterPropertiesList[breadCrumb.propertyIdentifier] = metadataService.getPropertiesListByBaseEntityAlias(breadCrumb.propertyIdentifier);
                                metadataService.formatPropertiesList(scope.filterPropertiesList[breadCrumb.propertyIdentifier], breadCrumb.propertyIdentifier);
                                var entityAliasArrayFromString = scope.filterItem.propertyIdentifier.split('.');
                                entityAliasArrayFromString.pop();
                                entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();
                                if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {
                                    for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {
                                        var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];
                                        if (filterProperty.propertyIdentifier === scope.filterItem.propertyIdentifier) {
                                            //selectItem from drop down
                                            scope.selectedFilterProperty = filterProperty;
                                            //decorate with value and comparison Operator so we can use it in the Condition section
                                            scope.selectedFilterProperty.value = scope.filterItem.value;
                                            scope.selectedFilterProperty.comparisonOperator = scope.filterItem.comparisonOperator;
                                        }
                                    }
                                }
                            });
                        }
                        else {
                            var entityAliasArrayFromString = scope.filterItem.propertyIdentifier.split('.');
                            entityAliasArrayFromString.pop();
                            entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();
                            if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {
                                for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {
                                    var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];
                                    if (filterProperty.propertyIdentifier === scope.filterItem.propertyIdentifier) {
                                        //selectItem from drop down
                                        scope.selectedFilterProperty = filterProperty;
                                        //decorate with value and comparison Operator so we can use it in the Condition section
                                        scope.selectedFilterProperty.value = scope.filterItem.value;
                                        scope.selectedFilterProperty.comparisonOperator = scope.filterItem.comparisonOperator;
                                    }
                                }
                            }
                        }
                    });
                }
                if (angular.isUndefined(scope.filterItem.$$isClosed)) {
                    scope.filterItem.$$isClosed = true;
                }
                scope.filterGroupItem = filterGroupsController.swFilterGroups.getFilterGroupItem();
                scope.togglePrepareForFilterGroup = function () {
                    scope.filterItem.$$prepareForFilterGroup = !scope.filterItem.$$prepareForFilterGroup;
                };
                //public functions
                scope.selectBreadCrumb = function (breadCrumbIndex) {
                    //splice out array items above index
                    var removeCount = scope.filterItem.breadCrumbs.length - 1 - breadCrumbIndex;
                    scope.filterItem.breadCrumbs.splice(breadCrumbIndex + 1, removeCount);
                    $log.debug('selectBreadCrumb');
                    $log.debug(scope.selectedFilterProperty);
                    //scope.selectedFilterPropertyChanged(scope.filterItem.breadCrumbs[scope.filterItem.breadCrumbs.length -1].filterProperty);
                    scope.selectedFilterPropertyChanged(null);
                };
                scope.selectedFilterPropertyChanged = function (selectedFilterProperty) {
                    $log.debug('selectedFilterProperty');
                    $log.debug(selectedFilterProperty);
                    if (angular.isDefined(scope.selectedFilterProperty) && scope.selectedFilterProperty === null) {
                        scope.selectedFilterProperty = {};
                    }
                    if (angular.isDefined(scope.selectedFilterProperty) && angular.isDefined(scope.selectedFilterProperty.selectedCriteriaType)) {
                        delete scope.selectedFilterProperty.selectedCriteriaType;
                    }
                    if (angular.isDefined(scope.filterItem.value)) {
                        delete scope.filterItem.value;
                    }
                    scope.selectedFilterProperty.showCriteriaValue = false;
                    scope.selectedFilterProperty = selectedFilterProperty;
                };
                scope.addFilterItem = function () {
                    collectionService.newFilterItem(filterGroupsController.swFilterGroups.getFilterGroupItem(), filterGroupsController.swFilterGroups.setItemInUse);
                    this.observerService.notify('collectionConfigUpdated', {
                        collectionConfig: collectionService
                    });
                };
                scope.cancelFilterItem = function () {
                    $log.debug('cancelFilterItem');
                    $log.debug(scope.filterItemIndex);
                    //scope.deselectItems(scope.filterGroupItem[filterItemIndex]);
                    scope.filterItem.setItemInUse(false);
                    scope.filterItem.$$isClosed = true;
                    for (var siblingIndex in scope.filterItem.$$siblingItems) {
                        scope.filterItem.$$siblingItems[siblingIndex].$$disabled = false;
                    }
                    if (scope.filterItem.$$isNew === true) {
                        observerService.notify('filterItemAction', { action: 'remove', filterItemIndex: scope.filterItemIndex });
                        scope.removeFilterItem({ filterItemIndex: scope.filterItemIndex });
                    }
                    else {
                        observerService.notify('filterItemAction', { action: 'close', filterItemIndex: scope.filterItemIndex });
                    }
                };
                scope.saveFilter = function (selectedFilterProperty, filterItem, callback) {
                    var _this = this;
                    $log.debug('saveFilter begin');
                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType) && angular.equals({}, selectedFilterProperty.selectedCriteriaType)) {
                        return;
                    }
                    if ((selectedFilterProperty.propertyIdentifier.match(/_/g) || []).length > 1) {
                        var propertyIdentifierStart = (selectedFilterProperty.propertyIdentifier.charAt(0) == '_') ? 1 : 0;
                        var propertyIdentifierEnd = (selectedFilterProperty.propertyIdentifier.indexOf('.') == -1) ? selectedFilterProperty.propertyIdentifier.length : selectedFilterProperty.propertyIdentifier.indexOf('.');
                        var propertyIdentifierJoins = selectedFilterProperty.propertyIdentifier.substring(propertyIdentifierStart, propertyIdentifierEnd);
                        var propertyIdentifierParts = propertyIdentifierJoins.split('_');
                        var current_collection = $hibachi.getEntityExample(scope.collectionConfig.baseEntityName);
                        var _propertyIdentifier = '';
                        var joins = [];
                        if (angular.isDefined(scope.collectionConfig.joins)) {
                            joins = scope.collectionConfig.joins;
                        }
                        for (var i = 1; i < propertyIdentifierParts.length; i++) {
                            if (angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]]) && ('cfc' in current_collection.metaData[propertyIdentifierParts[i]])) {
                                current_collection = $hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc);
                                _propertyIdentifier += '_' + propertyIdentifierParts[i];
                                var newJoin = {
                                    associationName: _propertyIdentifier.replace(/_([^_]+)$/, '.$1').substring(1),
                                    alias: '_' + propertyIdentifierParts[0] + _propertyIdentifier
                                };
                                var joinFound = false;
                                for (var j = 0; j < joins.length; j++) {
                                    if (joins[j].alias === newJoin.alias) {
                                        joinFound = true;
                                        break;
                                    }
                                }
                                if (!joinFound) {
                                    joins.push(newJoin);
                                }
                            }
                        }
                        scope.collectionConfig.joins = joins;
                        if (angular.isDefined(scope.collectionConfig.columns) && (angular.isUndefined(scope.collectionConfig.groupBys) || scope.collectionConfig.groupBys.split(',').length != scope.collectionConfig.columns.length)) {
                            var groupbyArray = angular.isUndefined(scope.collectionConfig.groupBys) ? [] : scope.collectionConfig.groupBys.split(',');
                            for (var column = 0; column < scope.collectionConfig.columns.length; column++) {
                                if (groupbyArray.indexOf(scope.collectionConfig.columns[column].propertyIdentifier) == -1) {
                                    groupbyArray.push(scope.collectionConfig.columns[column].propertyIdentifier);
                                }
                            }
                            scope.collectionConfig.groupBys = groupbyArray.join(',');
                        }
                    }
                    if (angular.isDefined(selectedFilterProperty) && angular.isDefined(selectedFilterProperty.selectedCriteriaType)) {
                        //populate filterItem with selectedFilterProperty values
                        filterItem.$$isNew = false;
                        filterItem.propertyIdentifier = selectedFilterProperty.propertyIdentifier;
                        filterItem.displayPropertyIdentifier = selectedFilterProperty.displayPropertyIdentifier;
                        switch (selectedFilterProperty.ormtype) {
                            case 'boolean':
                                filterItem.comparisonOperator = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                                filterItem.value = selectedFilterProperty.selectedCriteriaType.value;
                                filterItem.displayValue = filterItem.value;
                                break;
                            case 'string':
                                if (angular.isDefined(selectedFilterProperty.attributeID)) {
                                    filterItem.attributeID = selectedFilterProperty.attributeID;
                                    filterItem.attributeSetObject = selectedFilterProperty.attributeSetObject;
                                }
                                filterItem.comparisonOperator = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                                //retrieving implied value or user input | ex. implied:prop is null, user input:prop = "Name"
                                if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                    filterItem.value = selectedFilterProperty.selectedCriteriaType.value.toString();
                                    //if has a pattern then we need to evaluate where to add % for like statement
                                }
                                else if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.pattern)) {
                                    filterItem.pattern = selectedFilterProperty.selectedCriteriaType.pattern;
                                }
                                filterItem.displayValue = filterItem.value;
                                break;
                            //TODO:simplify timestamp and big decimal to leverage reusable function for null, range, and value
                            case 'timestamp':
                                //retrieving implied value or user input | ex. implied:prop is null, user input:prop = "Name"
                                filterItem.comparisonOperator = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                                //is it null or a range
                                if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                    filterItem.value = selectedFilterProperty.selectedCriteriaType.value;
                                    filterItem.displayValue = filterItem.value;
                                }
                                else {
                                    if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.dateInfo.type) && selectedFilterProperty.selectedCriteriaType.dateInfo.type === 'calculation') {
                                        var _daysBetween = daysBetween(new Date(selectedFilterProperty.criteriaRangeStart), new Date(selectedFilterProperty.criteriaRangeEnd));
                                        filterItem.value = _daysBetween;
                                        filterItem.displayValue = selectedFilterProperty.selectedCriteriaType.display;
                                        if (angular.isDefined(selectedFilterProperty.criteriaNumberOf)) {
                                            filterItem.criteriaNumberOf = selectedFilterProperty.criteriaNumberOf;
                                        }
                                    }
                                    else if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.dateInfo.type) && selectedFilterProperty.selectedCriteriaType.dateInfo.type === 'exactDate') {
                                        if (angular.isUndefined(selectedFilterProperty.selectedCriteriaType.dateInfo.measureType)) {
                                            filterItem.value = selectedFilterProperty.criteriaRangeStart + '-' + selectedFilterProperty.criteriaRangeEnd;
                                            filterItem.displayValue = $filter('date')(angular.copy(selectedFilterProperty.criteriaRangeStart), 'MM/dd/yyyy @ h:mma') + '-' + $filter('date')(angular.copy(selectedFilterProperty.criteriaRangeEnd), 'MM/dd/yyyy @ h:mma');
                                        }
                                        else {
                                            filterItem.measureType = selectedFilterProperty.selectedCriteriaType.dateInfo.measureType;
                                            filterItem.measureCriteria = selectedFilterProperty.selectedCriteriaType.dateInfo.type;
                                            filterItem.criteriaNumberOf = "0";
                                            if (angular.isDefined(selectedFilterProperty.criteriaNumberOf)) {
                                                filterItem.criteriaNumberOf = selectedFilterProperty.criteriaNumberOf;
                                            }
                                            filterItem.value = filterItem.criteriaNumberOf;
                                            filterItem.displayValue = filterItem.criteriaNumberOf;
                                            switch (filterItem.measureType) {
                                                case 'd':
                                                    filterItem.displayValue += ' Day';
                                                    break;
                                                case 'm':
                                                    filterItem.displayValue += ' Month';
                                                    break;
                                                case 'y':
                                                    filterItem.displayValue += ' Year';
                                                    break;
                                            }
                                            filterItem.displayValue += ((filterItem.criteriaNumberOf > 1) ? 's' : '') + ' Ago';
                                        }
                                    }
                                    else {
                                        var dateValueString = utilityService.removeTimeOffset(selectedFilterProperty.criteriaRangeStart) + '-' + utilityService.removeTimeOffset(selectedFilterProperty.criteriaRangeEnd);
                                        filterItem.value = dateValueString;
                                        var formattedDateValueString = $filter('date')(angular.copy(selectedFilterProperty.criteriaRangeStart), 'MM/dd/yyyy @ h:mma') + '-' + $filter('date')(angular.copy(selectedFilterProperty.criteriaRangeEnd), 'MM/dd/yyyy @ h:mma');
                                        filterItem.displayValue = formattedDateValueString;
                                        if (angular.isDefined(selectedFilterProperty.criteriaNumberOf)) {
                                            filterItem.criteriaNumberOf = selectedFilterProperty.criteriaNumberOf;
                                        }
                                    }
                                }
                                break;
                            case 'big_decimal':
                            case 'integer':
                            case 'float':
                                filterItem.comparisonOperator = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                                //is null, is not null
                                if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                    filterItem.value = selectedFilterProperty.selectedCriteriaType.value;
                                }
                                else {
                                    if (angular.isUndefined(selectedFilterProperty.selectedCriteriaType.type)) {
                                        filterItem.value = selectedFilterProperty.criteriaValue;
                                    }
                                    else {
                                        var decimalValueString = selectedFilterProperty.criteriaRangeStart + '-' + selectedFilterProperty.criteriaRangeEnd;
                                        filterItem.value = decimalValueString;
                                    }
                                }
                                if (angular.isDefined(selectedFilterProperty.aggregate)) {
                                    filterItem.aggregate = selectedFilterProperty.aggregate;
                                }
                                filterItem.displayValue = filterItem.value;
                                break;
                        }
                        switch (selectedFilterProperty.fieldtype) {
                            case 'one-to-many':
                            case 'many-to-many':
                            case 'many-to-one':
                                filterItem.comparisonOperator = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                                //is null, is not null
                                if (angular.isDefined(selectedFilterProperty.selectedCriteriaType.value)) {
                                    filterItem.value = selectedFilterProperty.selectedCriteriaType.value;
                                }
                                filterItem.displayValue = filterItem.value;
                                break;
                            //case 'one-to-many':
                            //
                            //case 'many-to-many':
                            //    filterItem.collectionID = selectedFilterProperty.selectedCollection.collectionID;
                            //    filterItem.displayValue = selectedFilterProperty.selectedCollection.collectionName;
                            //    filterItem.criteria = selectedFilterProperty.selectedCriteriaType.comparisonOperator;
                            //
                            //    break;
                        }
                        if (angular.isUndefined(filterItem.displayValue)) {
                            filterItem.displayValue = filterItem.value;
                        }
                        if (angular.isDefined(selectedFilterProperty.ormtype)) {
                            filterItem.ormtype = selectedFilterProperty.ormtype;
                        }
                        if (angular.isDefined(selectedFilterProperty.fieldtype)) {
                            filterItem.fieldtype = selectedFilterProperty.fieldtype;
                        }
                        for (var siblingIndex in filterItem.$$siblingItems) {
                            filterItem.$$siblingItems[siblingIndex].$$disabled = false;
                        }
                        filterItem.conditionDisplay = selectedFilterProperty.selectedCriteriaType.display;
                        //if the add to New group checkbox has been checked then we need to transplant the filter item into a filter group
                        if (filterItem.$$prepareForFilterGroup === true) {
                            collectionService.transplantFilterItemIntoFilterGroup(filterGroupsController.swFilterGroups.getFilterGroupItem(), filterItem);
                        }
                        //persist Config and
                        scope.saveCollection();
                        $log.debug(selectedFilterProperty);
                        $log.debug(filterItem);
                        var timeoutpromise = $timeout(function () {
                            callback();
                        });
                        timeoutpromise.then(function () {
                            observerService.notify('filterItemAction', { action: 'add', filterItemIndex: scope.filterItemIndex, collectionConfig: _this.collectionConfig });
                        });
                        $log.debug('saveFilter end');
                    }
                };
            }
        };
    }
    SWEditFilterItem.Factory = function () {
        var directive = function ($log, $filter, $timeout, $hibachi, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService, observerService, utilityService) { return new SWEditFilterItem($log, $filter, $timeout, $hibachi, collectionPartialsPath, collectionService, metadataService, hibachiPathBuilder, rbkeyService, observerService, utilityService); };
        directive.$inject = [
            '$log',
            '$filter',
            '$timeout',
            '$hibachi',
            'collectionPartialsPath',
            'collectionService',
            'metadataService',
            'hibachiPathBuilder',
            'rbkeyService',
            'observerService',
            'utilityService'
        ];
        return directive;
    };
    return SWEditFilterItem;
}());
exports.SWEditFilterItem = SWEditFilterItem;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWFilterGroupItem = /** @class */ (function () {
    function SWFilterGroupItem($http, $compile, $templateCache, $log, collectionService, collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            require: "^swFilterGroups",
            scope: {
                collectionConfig: "=",
                filterGroupItem: "=",
                siblingItems: "=",
                filterPropertiesList: "=",
                filterGroupItemIndex: "=",
                saveCollection: "&",
                comparisonType: "="
            },
            link: function (scope, element, attrs, filterGroupsController) {
                var Partial = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "filtergroupitem.html";
                var templateLoader = $http.get(Partial, { cache: $templateCache });
                var promise = templateLoader.success(function (html) {
                    element.html(html);
                }).then(function (response) {
                    element.replaceWith($compile(element.html())(scope));
                });
                //for(item in filterGroupItem){}
                scope.filterGroupItem.setItemInUse = filterGroupsController.setItemInUse;
                scope.filterGroupItem.$$index = scope.filterGroupItemIndex;
                scope.removeFilterGroupItem = function () {
                    filterGroupsController.removeFilterGroupItem(scope.filterGroupItemIndex);
                };
                scope.filterGroupItem.removeFilterGroupItem = scope.removeFilterGroupItem;
                scope.filterGroupItem.$$disabled = false;
                if (angular.isUndefined(scope.filterGroupItem.$$isClosed)) {
                    scope.filterGroupItem.$$isClosed = true;
                }
                scope.filterGroupItem.$$siblingItems = scope.siblingItems;
                scope.selectFilterGroupItem = function (filterGroupItem) {
                    collectionService.selectFilterGroupItem(filterGroupItem);
                };
                scope.logicalOperatorChanged = function (logicalOperatorValue) {
                    $log.debug('logicalOperatorChanged');
                    $log.debug(logicalOperatorValue);
                    scope.filterGroupItem.logicalOperator = logicalOperatorValue;
                    filterGroupsController.saveCollection();
                };
            }
        };
    }
    SWFilterGroupItem.Factory = function () {
        var directive = function ($http, $compile, $templateCache, $log, collectionService, collectionPartialsPath, hibachiPathBuilder) { return new SWFilterGroupItem($http, $compile, $templateCache, $log, collectionService, collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$http',
            '$compile',
            '$templateCache',
            '$log',
            'collectionService',
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFilterGroupItem;
}());
exports.SWFilterGroupItem = SWFilterGroupItem;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWFilterGroups = /** @class */ (function () {
    function SWFilterGroups($log, collectionPartialsPath, hibachiPathBuilder, observerService) {
        return {
            restrict: 'EA',
            scope: {
                collectionConfig: "=?",
                filterGroupItem: "=?",
                filterPropertiesList: "=?",
                saveCollection: "&",
                filterGroup: "=?",
                comparisonType: "=?",
                simple: "=",
                readOnly: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "filtergroups.html",
            controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {
                    //if the filter group comparisontype is not specified, then assume we are doing filters
                    if (!angular.isDefined($scope.comparisonType)) {
                        $scope.comparisonType = 'filter';
                    }
                    $scope.itemInUse = false;
                    $log.debug('collectionConfig');
                    $log.debug($scope.collectionConfig);
                    this.getFilterGroup = function () {
                        return $scope.filterGroup;
                    };
                    this.getFilterGroupItem = function () {
                        return $scope.filterGroupItem;
                    };
                    this.setItemInUse = function (booleanValue) {
                        $scope.itemInUse = booleanValue;
                    };
                    this.getItemInUse = function () {
                        return $scope.itemInUse;
                    };
                    this.saveCollection = function () {
                        $scope.saveCollection();
                    };
                    $scope.deselectItems = function (filterItem) {
                        for (var i in filterItem.$$siblingItems) {
                            filterItem.$$siblingItems[i].$$disabled = false;
                        }
                    };
                    this.removeFilterItem = function (filterItemIndex) {
                        if (angular.isDefined(filterItemIndex)) {
                            $scope.deselectItems($scope.filterGroupItem[filterItemIndex]);
                            $scope.filterGroupItem[filterItemIndex].setItemInUse(false);
                            //remove item
                            $log.debug('removeFilterItem');
                            $log.debug(filterItemIndex);
                            $scope.filterGroupItem.splice(filterItemIndex, 1);
                            //make sure first item has no logical operator if it exists
                            if ($scope.filterGroupItem.length) {
                                delete $scope.filterGroupItem[0].logicalOperator;
                            }
                            $log.debug('removeFilterItem');
                            $log.debug(filterItemIndex);
                            $scope.saveCollection();
                        }
                    };
                    this.removeFilterGroupItem = function (filterGroupItemIndex) {
                        //remove Item
                        $scope.deselectItems($scope.filterGroupItem[filterGroupItemIndex]);
                        $scope.filterGroupItem[filterGroupItemIndex].setItemInUse(false);
                        $scope.filterGroupItem.splice(filterGroupItemIndex, 1);
                        //make sure first item has no logical operator if it exists
                        if ($scope.filterGroupItem.length) {
                            delete $scope.filterGroupItem[0].logicalOperator;
                        }
                        $log.debug('removeFilterGroupItem');
                        $log.debug(filterGroupItemIndex);
                        $scope.saveCollection();
                    };
                }]
        };
    }
    SWFilterGroups.Factory = function () {
        var directive = function ($log, collectionPartialsPath, hibachiPathBuilder, observerService) { return new SWFilterGroups($log, collectionPartialsPath, hibachiPathBuilder, observerService); };
        directive.$inject = [
            '$log',
            'collectionPartialsPath',
            'hibachiPathBuilder',
            'observerService'
        ];
        return directive;
    };
    return SWFilterGroups;
}());
exports.SWFilterGroups = SWFilterGroups;


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWFilterItem = /** @class */ (function () {
    function SWFilterItem($log, collectionService, collectionPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            require: '^swFilterGroups',
            scope: {
                collectionConfig: "=",
                filterItem: "=",
                siblingItems: "=",
                filterPropertiesList: "=",
                filterItemIndex: "=",
                saveCollection: "&",
                comparisonType: "=",
                simple: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + "filteritem.html",
            link: function (scope, element, attrs, filterGroupsController) {
                scope.baseEntityAlias = scope.collectionConfig.baseEntityAlias;
                if (angular.isUndefined(scope.filterItem.$$isClosed)) {
                    scope.filterItem.$$isClosed = true;
                }
                if (angular.isUndefined(scope.filterItem.$$disabled)) {
                    scope.filterItem.$$disabled = false;
                }
                if (angular.isUndefined(scope.filterItem.siblingItems)) {
                    scope.filterItem.$$siblingItems = scope.siblingItems;
                }
                scope.filterItem.setItemInUse = filterGroupsController.setItemInUse;
                scope.selectFilterItem = function (filterItem) {
                    collectionService.selectFilterItem(filterItem);
                };
                scope.removeFilterItem = function () {
                    filterGroupsController.removeFilterItem(scope.filterItemIndex, filterGroupsController.getFilterGroupItem());
                };
                scope.filterGroupItem = filterGroupsController.getFilterGroupItem();
                scope.logicalOperatorChanged = function (logicalOperatorValue) {
                    $log.debug('logicalOperatorChanged');
                    $log.debug(logicalOperatorValue);
                    scope.filterItem.logicalOperator = logicalOperatorValue;
                    filterGroupsController.saveCollection();
                };
            }
        };
    }
    SWFilterItem.Factory = function () {
        var directive = function ($log, collectionService, collectionPartialsPath, hibachiPathBuilder) { return new SWFilterItem($log, collectionService, collectionPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'collectionService',
            'collectionPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFilterItem;
}());
exports.SWFilterItem = SWFilterItem;


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWRestrictionConfigController = /** @class */ (function () {
    //@ngInject
    function SWRestrictionConfigController($timeout, collectionConfigService, $hibachi, observerService) {
        var _this = this;
        this.$timeout = $timeout;
        this.collectionConfigService = collectionConfigService;
        this.$hibachi = $hibachi;
        this.observerService = observerService;
        this.$onDestroy = function () {
            _this.observerService.detachByEvent('saveCollection');
        };
        this.setCollectionConfig = function (payload) {
            _this.permissionRecordRestriction.data.collectionConfig = angular.toJson(payload.collectionConfig.getCollectionConfig());
            _this.permissionRecordRestriction.forms['permissionRecordRestrictionForm'].collectionConfig.$setViewValue(payload.collectionConfig.getCollectionConfig());
            _this.permissionRecordRestriction.forms['permissionRecordRestrictionForm'].$setDirty(true);
            _this.permissionRecordRestriction.$$save();
        };
        var permissionRecordRestrictionRequest = this.$hibachi.getPermissionRecordRestriction(this.permissionRecordRestrictionId);
        permissionRecordRestrictionRequest.promise.then(function () {
            var collectionConfig = _this.collectionConfigService.newCollectionConfig();
            _this.permissionRecordRestriction = permissionRecordRestrictionRequest.value;
            collectionConfig.loadJson(_this.permissionRecordRestriction.collectionConfig);
            _this.collectionConfig = collectionConfig;
        });
        observerService.attach(this.setCollectionConfig, 'saveCollection');
    }
    return SWRestrictionConfigController;
}());
var SWRestrictionConfig = /** @class */ (function () {
    //@ngInject
    function SWRestrictionConfig(hibachiPathBuilder, collectionPartialsPath) {
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {
            permissionRecordRestrictionId: "@?"
        };
        this.controller = SWRestrictionConfigController;
        this.controllerAs = "swRestrictionConfig";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(collectionPartialsPath) + 'restrictionconfig.html';
    }
    SWRestrictionConfig.Factory = function () {
        var directive = function (hibachiPathBuilder, collectionPartialsPath) { return new SWRestrictionConfig(hibachiPathBuilder, collectionPartialsPath); };
        directive.$inject = ['hibachiPathBuilder', 'collectionPartialsPath'];
        return directive;
    };
    return SWRestrictionConfig;
}());
exports.SWRestrictionConfig = SWRestrictionConfig;


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var CollectionController = /** @class */ (function () {
    //@ngInject
    function CollectionController($scope, $attrs, $log, $timeout, $hibachi, collectionService, metadataService, selectionService, paginationService, collectionConfigService, appConfig, observerService) {
        $scope.saveCollection = function (collectionData) {
            var data = {
                collectionID: $attrs.collectionId,
                collectionConfig: collectionData.collectionConfig
            };
            var saveCollectionPromise = $hibachi.saveEntity('Collection', $attrs.collectionId, data, 'save');
            saveCollectionPromise.then(function (value) {
            }, function (reason) {
            });
        };
        observerService.attach($scope.saveCollection, 'swPaginationUpdate', $attrs.tableId);
    }
    return CollectionController;
}());
exports.CollectionController = CollectionController;
// 'use strict';
// angular.module('slatwalladmin')
// //using $location to get url params, this will probably change to using routes eventually
// .controller('collections', [
// 	'$scope',
// '$location',
// '$log',
// '$timeout',
// '$hibachi',
// 'collectionService',
// 'metadataService',
// 'selectionService',
// 'paginationService',
// 	function(
// 		$scope,
// $location,
// $log,
// $timeout,
// $hibachi,
// collectionService,
// metadataService,
// selectionService,
// paginationService
// 	){
//
// 	}
// ]);


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var ConfirmationController = /** @class */ (function () {
    //@ngInject
    function ConfirmationController($scope, $log, $modalInstance) {
        $scope.deleteEntity = function (entity) {
            $log.debug("Deleting an entity.");
            $log.debug($scope.entity);
            this.close();
        };
        $scope.fireCallback = function (callbackFunction) {
            callbackFunction();
            this.close();
        };
        /**
        * Closes the modal window
        */
        $scope.close = function () {
            $modalInstance.close();
        };
        /**
        * Cancels the modal window
        */
        $scope.cancel = function () {
            $modalInstance.dismiss("cancel");
        };
    }
    return ConfirmationController;
}());
exports.ConfirmationController = ConfirmationController;


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var CreateCollection = /** @class */ (function () {
    //@ngInject
    function CreateCollection($scope, $log, $timeout, $hibachi, collectionService, metadataService, paginationService, dialogService, observerService, selectionService, collectionConfigService, rbkeyService, $window) {
        $window.scrollTo(0, 0);
        $scope.params = dialogService.getCurrentDialog().params;
        $scope.readOnly = angular.isDefined($scope.params.readOnly) && $scope.params.readOnly == true;
        $scope.myCollection = collectionConfigService.newCollectionConfig($scope.params.entityName);
        var hibachiConfig = $hibachi.getConfig();
        if ($scope.params.entityName == 'Type' && angular.isUndefined($scope.params.entityId) && angular.isDefined($scope.params.parentEntity)) {
            $scope.params.parentEntity = $scope.params.parentEntity.replace(new RegExp('^' + hibachiConfig.applicationKey, 'i'), '');
            var systemCode = $scope.params.parentEntity.charAt(0).toLowerCase() + $scope.params.parentEntity.slice(1) + 'Type';
            $scope.myCollection.addFilter('parentType.systemCode', systemCode);
        }
        $scope.keywords = '';
        $scope.paginator = paginationService.createPagination();
        //$scope.isRadio = true;
        $scope.hideEditView = true;
        //$scope.closeSaving = true;
        $scope.hasSelection = selectionService.getSelectionCount;
        $scope.idsSelected = selectionService.getSelections;
        $scope.unselectAll = function () {
            selectionService.clearSelections('collectionSelection');
            $scope.getCollection();
        };
        $scope.newCollection = $hibachi.newCollection();
        $scope.newCollection.data.collectionCode = $scope.params.entityName + "-" + new Date().valueOf();
        $scope.newCollection.data.collectionObject = $scope.params.entityName;
        if (angular.isDefined($scope.params.entityId)) {
            $scope.newCollection.data.collectionID = $scope.params.entityId;
            $timeout(function () {
                $scope.newCollection.forms['form.createCollection'].$setDirty();
            });
        }
        if (angular.isDefined($scope.params.collectionName)) {
            $scope.newCollection.data.collectionName = $scope.params.collectionName;
            $timeout(function () {
                $scope.newCollection.forms['form.createCollection'].$setDirty();
            });
        }
        $scope.saveCollection = function () {
            $scope.myCollection.loadJson($scope.collectionConfig);
            $scope.getCollection();
        };
        $scope.getCollection = function () {
            $scope.closeSaving = true;
            $scope.myCollection.setPageShow($scope.paginator.getPageShow());
            $scope.myCollection.setCurrentPage($scope.paginator.getCurrentPage());
            $scope.myCollection.setKeywords($scope.keywords);
            var collectionOptions;
            if (angular.isDefined($scope.params.entityId)) {
                collectionOptions = {
                    id: $scope.params.entityId,
                    currentPage: $scope.paginator.getCurrentPage(),
                    pageShow: $scope.paginator.getPageShow(),
                    keywords: $scope.keywords
                };
            }
            else {
                collectionOptions = $scope.myCollection.getOptions();
            }
            $log.debug($scope.myCollection.getOptions());
            var collectionListingPromise = $hibachi.getEntity($scope.myCollection.getEntityName(), collectionOptions);
            collectionListingPromise.then(function (value) {
                if (angular.isDefined($scope.params.entityId)) {
                    $scope.newCollection.data.collectionName = value.collectionName;
                }
                $scope.collection = value;
                $scope.collection.collectionObject = $scope.myCollection.baseEntityName;
                $scope.collectionInitial = angular.copy($scope.collection);
                $scope.paginator.setRecordsCount($scope.collection.recordsCount);
                $scope.paginator.setPageRecordsInfo($scope.collection);
                if (angular.isUndefined($scope.myCollection.columns)) {
                    var colConfig = angular.fromJson(value.collectionConfig);
                    colConfig.baseEntityName = colConfig.baseEntityName.replace(new RegExp('^' + hibachiConfig.applicationKey, 'i'), '');
                    $scope.myCollection.loadJson(colConfig);
                }
                if (angular.isUndefined($scope.collectionConfig)) {
                    var tempCollectionConfig = collectionConfigService.newCollectionConfig();
                    tempCollectionConfig.loadJson(value.collectionConfig);
                    $scope.collectionConfig = tempCollectionConfig.getCollectionConfig();
                }
                if (angular.isUndefined($scope.collectionConfig.filterGroups) || !$scope.collectionConfig.filterGroups.length) {
                    $scope.collectionConfig.filterGroups = [
                        {
                            filterGroup: []
                        }
                    ];
                }
                collectionService.setFilterCount(filterItemCounter());
                $scope.loadingCollection = false;
                $scope.closeSaving = false;
            }, function (reason) {
            });
            return collectionListingPromise;
        };
        $scope.paginator.collection = $scope.newCollection;
        $scope.paginator.getCollection = $scope.getCollection;
        var unbindCollectionObserver = $scope.$watch('collection', function (newValue, oldValue) {
            if (newValue !== oldValue) {
                if (angular.isUndefined($scope.filterPropertiesList)) {
                    $scope.filterPropertiesList = {};
                    var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName($scope.collectionConfig.baseEntityAlias);
                    filterPropertiesPromise.then(function (value) {
                        metadataService.setPropertiesList(value, $scope.collectionConfig.baseEntityAlias);
                        $scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias] = metadataService.getPropertiesListByBaseEntityAlias($scope.collectionConfig.baseEntityAlias);
                        metadataService.formatPropertiesList($scope.filterPropertiesList[$scope.collectionConfig.baseEntityAlias], $scope.collectionConfig.baseEntityAlias);
                    });
                }
                unbindCollectionObserver();
            }
        });
        var filterItemCounter = function (filterGroupArray) {
            var filterItemCount = 0;
            if (!angular.isDefined(filterGroupArray)) {
                filterGroupArray = $scope.collectionConfig.filterGroups[0].filterGroup;
            }
            //Start out loop
            for (var index in filterGroupArray) {
                //If filter isn't new then increment the count
                if (!filterGroupArray[index].$$isNew && !angular.isDefined(filterGroupArray[index].filterGroup)) {
                    filterItemCount++;
                    // If there are nested filter groups run introspectively
                }
                else if (angular.isDefined(filterGroupArray[index].filterGroup)) {
                    //Call function recursively
                    filterItemCount += filterItemCounter(filterGroupArray[index].filterGroup);
                    //Otherwise make like the foo fighters and "Break Out!"
                }
                else {
                    break;
                }
            }
            return filterItemCount;
        };
        $scope.getCollection();
        $scope.copyExistingCollection = function () {
            $scope.collection.collectionConfig = $scope.selectedExistingCollection;
        };
        $scope.setSelectedExistingCollection = function (selectedExistingCollection) {
            $scope.selectedExistingCollection = selectedExistingCollection;
        };
        $scope.setSelectedFilterProperty = function (selectedFilterProperty) {
            $scope.selectedFilterProperty = selectedFilterProperty;
        };
        $scope.loadingCollection = false;
        var searchPromise;
        $scope.searchCollection = function () {
            if (searchPromise) {
                $timeout.cancel(searchPromise);
            }
            searchPromise = $timeout(function () {
                //$log.debug('search with keywords');
                //$log.debug($scope.keywords);
                //Set current page here so that the pagination does not break when getting collection
                $scope.paginator.setCurrentPage(1);
                $scope.loadingCollection = true;
            }, 500);
        };
        $scope.filterCount = collectionService.getFilterCount;
        //
        $scope.hideExport = true;
        $scope.saveNewCollection = function ($index) {
            if ($scope.closeSaving)
                return;
            $scope.closeSaving = true;
            if (!angular.isUndefined(selectionService.getSelections('collectionSelection'))
                && (selectionService.getSelections('collectionSelection').length > 0)) {
                $scope.collectionConfig.filterGroups[0].filterGroup = [
                    {
                        "displayPropertyIdentifier": rbkeyService.getRBKey("entity." + $scope.myCollection.baseEntityName.toLowerCase() + "." + $scope.myCollection.collection.$$getIDName().toLowerCase()),
                        "propertyIdentifier": $scope.myCollection.baseEntityAlias + "." + $scope.myCollection.collection.$$getIDName(),
                        "comparisonOperator": "in",
                        "value": selectionService.getSelections('collectionSelection').join(),
                        "displayValue": selectionService.getSelections('collectionSelection').join(),
                        "ormtype": "string",
                        "fieldtype": "id",
                        "conditionDisplay": "In List"
                    }
                ];
            }
            $scope.newCollection.data.collectionConfig = $scope.collectionConfig;
            if ($scope.newCollection.data.collectionConfig.baseEntityName.lastIndexOf(hibachiConfig.applicationKey, 0) !== 0) {
                $scope.newCollection.data.collectionConfig.baseEntityName = hibachiConfig.applicationKey + $scope.newCollection.data.collectionConfig.baseEntityName;
            }
            $scope.newCollection.$$save().then(function () {
                observerService.notify('addCollection', $scope.newCollection.data);
                selectionService.clearSelection('collectionSelection');
                dialogService.removePageDialog($index);
                $scope.closeSaving = false;
            }, function () {
                $scope.closeSaving = false;
            });
        };
    }
    return CreateCollection;
}());
exports.CreateCollection = CreateCollection;


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var CollectionCreateController = /** @class */ (function () {
    //@ngInject
    function CollectionCreateController($scope, collectionConfigService) {
        var _this = this;
        this.$scope = $scope;
        this.collectionConfigService = collectionConfigService;
        this.$scope.entity_createcollectionCtrl = {};
        this.$scope.entity_createcollectionCtrl.baseCollections = [];
        this.collection = this.collectionConfigService.newCollectionConfig('Collection');
        this.collection.setDisplayProperties('collectionID,collectionName');
        this.getBaseCollections('Access');
        //on select change get collection
        this.$scope.entity_createcollectionCtrl.collectionObjectChanged = function () {
            _this.getBaseCollections(_this.$scope.entity_createcollectionCtrl.selectedOption);
        };
    }
    CollectionCreateController.prototype.getBaseCollections = function (baseCollectionObject) {
        var _this = this;
        this.collection.clearFilters();
        this.collection.addFilter('collectionObject', baseCollectionObject);
        this.collection.setPageShow(50);
        this.collection.getEntity().then(function (res) {
            _this.$scope.entity_createcollectionCtrl.baseCollections = res.pageRecords;
        });
    };
    return CollectionCreateController;
}());
exports.CollectionCreateController = CollectionCreateController;


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var AggregateFilter = /** @class */ (function () {
    function AggregateFilter() {
    }
    //@ngInject
    AggregateFilter.Factory = function ($filter) {
        return function (property) {
            return property.filter(function (item) {
                if (item.fieldtype && item.fieldtype !== 'id') {
                    return false;
                }
                if (item.ormtype && ['big_decimal', 'double', 'float', 'integer'].indexOf(item.ormtype) < 0) {
                    return false;
                }
                return true;
            });
        };
    };
    return AggregateFilter;
}());
exports.AggregateFilter = AggregateFilter;


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var Column = /** @class */ (function () {
    function Column(propertyIdentifier, title, isVisible, isDeletable, isSearchable, isExportable, persistent, ormtype, attributeID, attributeSetObject, type) {
        if (isVisible === void 0) { isVisible = true; }
        if (isDeletable === void 0) { isDeletable = true; }
        if (isSearchable === void 0) { isSearchable = true; }
        if (isExportable === void 0) { isExportable = true; }
        this.propertyIdentifier = propertyIdentifier;
        this.title = title;
        this.isVisible = isVisible;
        this.isDeletable = isDeletable;
        this.isSearchable = isSearchable;
        this.isExportable = isExportable;
        this.persistent = persistent;
        this.ormtype = ormtype;
        this.attributeID = attributeID;
        this.attributeSetObject = attributeSetObject;
        this.type = type;
    }
    return Column;
}());
exports.Column = Column;
var Filter = /** @class */ (function () {
    function Filter(propertyIdentifier, value, comparisonOperator, logicalOperator, displayPropertyIdentifier, displayValue, hidden, pattern) {
        if (hidden === void 0) { hidden = false; }
        this.propertyIdentifier = propertyIdentifier;
        this.value = value;
        this.comparisonOperator = comparisonOperator;
        this.logicalOperator = logicalOperator;
        this.displayPropertyIdentifier = displayPropertyIdentifier;
        this.displayValue = displayValue;
        this.hidden = hidden;
        this.pattern = pattern;
    }
    return Filter;
}());
exports.Filter = Filter;
var CollectionFilter = /** @class */ (function () {
    function CollectionFilter(propertyIdentifier, displayPropertyIdentifier, displayValue, collectionID, criteria, fieldtype, readOnly) {
        if (readOnly === void 0) { readOnly = false; }
        this.propertyIdentifier = propertyIdentifier;
        this.displayPropertyIdentifier = displayPropertyIdentifier;
        this.displayValue = displayValue;
        this.collectionID = collectionID;
        this.criteria = criteria;
        this.fieldtype = fieldtype;
        this.readOnly = readOnly;
    }
    return CollectionFilter;
}());
exports.CollectionFilter = CollectionFilter;
var Join = /** @class */ (function () {
    function Join(associationName, alias) {
        this.associationName = associationName;
        this.alias = alias;
    }
    return Join;
}());
exports.Join = Join;
var OrderBy = /** @class */ (function () {
    function OrderBy(propertyIdentifier, direction) {
        this.propertyIdentifier = propertyIdentifier;
        this.direction = direction;
    }
    return OrderBy;
}());
exports.OrderBy = OrderBy;
var CollectionConfig = /** @class */ (function () {
    // @ngInject
    function CollectionConfig(rbkeyService, $hibachi, utilityService, observerService, baseEntityName, baseEntityAlias, columns, keywordColumns, filterGroups, keywordFilterGroups, joins, orderBy, groupBys, id, currentPage, pageShow, keywords, allRecords, dirtyRead, isDistinct) {
        if (keywordColumns === void 0) { keywordColumns = []; }
        if (filterGroups === void 0) { filterGroups = [{ filterGroup: [] }]; }
        if (keywordFilterGroups === void 0) { keywordFilterGroups = [{ filterGroup: [] }]; }
        if (currentPage === void 0) { currentPage = 1; }
        if (pageShow === void 0) { pageShow = 10; }
        if (keywords === void 0) { keywords = ''; }
        if (allRecords === void 0) { allRecords = false; }
        if (dirtyRead === void 0) { dirtyRead = false; }
        if (isDistinct === void 0) { isDistinct = false; }
        var _this = this;
        this.rbkeyService = rbkeyService;
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        this.observerService = observerService;
        this.baseEntityName = baseEntityName;
        this.baseEntityAlias = baseEntityAlias;
        this.columns = columns;
        this.keywordColumns = keywordColumns;
        this.filterGroups = filterGroups;
        this.keywordFilterGroups = keywordFilterGroups;
        this.joins = joins;
        this.orderBy = orderBy;
        this.groupBys = groupBys;
        this.id = id;
        this.currentPage = currentPage;
        this.pageShow = pageShow;
        this.keywords = keywords;
        this.allRecords = allRecords;
        this.dirtyRead = dirtyRead;
        this.isDistinct = isDistinct;
        this.clearFilterGroups = function () {
            _this.filterGroups = [{ filterGroup: [] }];
            _this.keywordFilterGroups = [{ filterGroup: [] }];
            return _this;
        };
        this.newCollectionConfig = function (baseEntityName, baseEntityAlias) {
            return new CollectionConfig(_this.rbkeyService, _this.$hibachi, _this.utilityService, _this.observerService, baseEntityName, baseEntityAlias);
        };
        this.loadJson = function (jsonCollection) {
            //if json then make a javascript object else use the javascript object
            //if coldfusion has double encoded the json keep calling fromJson until it becomes an object
            while (angular.isString(jsonCollection)) {
                jsonCollection = angular.fromJson(jsonCollection);
            }
            _this.baseEntityAlias = jsonCollection.baseEntityAlias;
            _this.baseEntityName = jsonCollection.baseEntityName;
            if (angular.isDefined(jsonCollection.filterGroups)) {
                _this.validateFilter(jsonCollection.filterGroups);
                _this.filterGroups = jsonCollection.filterGroups;
            }
            _this.columns = jsonCollection.columns;
            _this.joins = jsonCollection.joins;
            _this.keywords = jsonCollection.keywords;
            _this.orderBy = jsonCollection.orderBy;
            _this.groupBys = jsonCollection.groupBys;
            _this.pageShow = jsonCollection.pageShow;
            _this.allRecords = jsonCollection.allRecords;
            if (jsonCollection.dirtyRead) {
                _this.dirtyRead = jsonCollection.dirtyRead;
            }
            _this.isDistinct = jsonCollection.isDistinct;
            _this.currentPage = jsonCollection.currentPage || 1;
            _this.pageShow = jsonCollection.pageShow || 10;
            _this.keywords = jsonCollection.keywords;
            return _this;
        };
        this.clone = function () {
            return _this.newCollectionConfig(_this.baseEntityName, _this.baseEntityAlias).loadJson(JSON.parse(JSON.stringify(_this.getCollectionConfig())));
        };
        this.loadFilterGroups = function (filterGroupsConfig) {
            if (filterGroupsConfig === void 0) { filterGroupsConfig = [{ filterGroup: [] }]; }
            _this.filterGroups = filterGroupsConfig;
            return _this;
        };
        this.loadColumns = function (columns) {
            _this.columns = columns;
            return _this;
        };
        this.getCollectionConfig = function (validate) {
            if (validate === void 0) { validate = true; }
            if (validate) {
                _this.validateFilter(_this.filterGroups);
            }
            return {
                baseEntityAlias: _this.baseEntityAlias,
                baseEntityName: _this.baseEntityName,
                columns: _this.columns,
                keywordColumns: _this.keywordColumns,
                filterGroups: _this.filterGroups,
                joins: _this.joins,
                groupBys: _this.groupBys,
                currentPage: _this.currentPage,
                pageShow: _this.pageShow,
                keywords: _this.keywords,
                defaultColumns: (!_this.columns || !_this.columns.length),
                allRecords: _this.allRecords,
                dirtyRead: _this.dirtyRead,
                isDistinct: _this.isDistinct,
                orderBy: _this.orderBy
            };
        };
        this.getEntityName = function () {
            return _this.baseEntityName.charAt(0).toUpperCase() + _this.baseEntityName.slice(1);
        };
        this.getOptions = function () {
            _this.validateFilter(_this.filterGroups);
            var columns = _this.columns;
            if (_this.keywords && _this.keywords.length && _this.keywordFilterGroups[0].filterGroup.length > 0) {
                var filters = _this.keywordFilterGroups;
            }
            else {
                var filters = _this.filterGroups;
            }
            var options = {
                columnsConfig: angular.toJson(columns),
                filterGroupsConfig: angular.toJson(filters),
                joinsConfig: angular.toJson(_this.joins),
                orderByConfig: angular.toJson(_this.orderBy),
                groupBysConfig: angular.toJson(_this.groupBys),
                currentPage: _this.currentPage,
                pageShow: _this.pageShow,
                keywords: _this.keywords,
                defaultColumns: (!_this.columns || !_this.columns.length),
                allRecords: _this.allRecords,
                dirtyRead: _this.dirtyRead,
                isDistinct: _this.isDistinct
            };
            if (angular.isDefined(_this.id)) {
                options['id'] = _this.id;
            }
            return options;
        };
        this.debug = function () {
            return _this;
        };
        this.formatPropertyIdentifier = function (propertyIdentifier, addJoin) {
            if (addJoin === void 0) { addJoin = false; }
            //if already starts with alias, strip it out
            if (propertyIdentifier.lastIndexOf(_this.baseEntityAlias, 0) === 0) {
                propertyIdentifier = propertyIdentifier.slice(_this.baseEntityAlias.length + 1);
            }
            var _propertyIdentifier = _this.baseEntityAlias;
            if (addJoin === true) {
                _propertyIdentifier += _this.processJoin(propertyIdentifier);
            }
            else {
                _propertyIdentifier += '.' + propertyIdentifier;
            }
            return _propertyIdentifier;
        };
        this.processJoin = function (propertyIdentifier) {
            var _propertyIdentifier = '', propertyIdentifierParts = propertyIdentifier.split('.'), current_collection = _this.collection;
            for (var i = 0; i < propertyIdentifierParts.length; i++) {
                if (angular.isDefined(current_collection.metaData[propertyIdentifierParts[i]]) && ('cfc' in current_collection.metaData[propertyIdentifierParts[i]])) {
                    current_collection = _this.$hibachi.getEntityExample(current_collection.metaData[propertyIdentifierParts[i]].cfc);
                    _propertyIdentifier += '_' + propertyIdentifierParts[i];
                    _this.addJoin(new Join(_propertyIdentifier.replace(/_([^_]+)$/, '.$1').substring(1), _this.baseEntityAlias + _propertyIdentifier));
                }
                else {
                    _propertyIdentifier += '.' + propertyIdentifierParts[i];
                }
            }
            return _propertyIdentifier;
        };
        this.addJoin = function (join) {
            if (!_this.joins) {
                _this.joins = [];
            }
            var joinFound = false;
            angular.forEach(_this.joins, function (configJoin) {
                if (configJoin.alias === join.alias) {
                    joinFound = true;
                }
            });
            if (!joinFound) {
                _this.joins.push(join);
            }
            return _this;
        };
        this.addAlias = function (propertyIdentifier) {
            var parts = propertyIdentifier.split('.');
            if (parts.length > 1 && parts[0] !== _this.baseEntityAlias) {
                return _this.baseEntityAlias + '.' + propertyIdentifier;
            }
            return propertyIdentifier;
        };
        this.addColumn = function (column, title, options) {
            if (title === void 0) { title = ''; }
            if (options === void 0) { options = {}; }
            if (!_this.columns || options.aggregate != null || _this.utilityService.ArrayFindByPropertyValue(_this.columns, 'propertyIdentifier', column) === -1) {
                var isVisible = true, isDeletable = true, isSearchable = true, isExportable = true, persistent, type = 'none', ormtype = 'string', lastProperty = column.split('.').pop(), isKeywordColumn = true, isOnlyKeywordColumn = false;
                var lastEntity = _this.$hibachi.getEntityExample(_this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName, column));
                if (angular.isUndefined(lastEntity)) {
                    throw ("You have passed an incorrect entity name to a collection config");
                }
                if (angular.isUndefined(_this.columns)) {
                    _this.columns = [];
                }
                //hide id columns
                if (angular.isDefined(options['isVisible'])) {
                    isVisible = options['isVisible'];
                }
                if (angular.isUndefined(options.isVisible) &&
                    column.substring(column.length - 2) === "ID") {
                    isVisible = false;
                }
                if (angular.isDefined(options['isDeletable'])) {
                    isDeletable = options['isDeletable'];
                }
                if (angular.isDefined(options['isSearchable'])) {
                    isSearchable = options['isSearchable'];
                }
                if (angular.isDefined(options['isExportable'])) {
                    isExportable = options['isExportable'];
                }
                if (angular.isUndefined(options['isExportable']) && !isVisible) {
                    isExportable = false;
                }
                if (angular.isDefined(options['ormtype'])) {
                    ormtype = options['ormtype'];
                }
                else if (lastEntity.metaData[lastProperty] && lastEntity.metaData[lastProperty].ormtype) {
                    ormtype = lastEntity.metaData[lastProperty].ormtype;
                }
                if (angular.isDefined(options['type']) && options['type'] != 'none') {
                    type = options['type'];
                }
                else if (lastEntity.metaData[lastProperty] && lastEntity.metaData[lastProperty].hb_formattype) {
                    type = lastEntity.metaData[lastProperty].hb_formattype;
                }
                if (angular.isDefined(options['isKeywordColumn'])) {
                    isKeywordColumn = options['isKeywordColumn'];
                }
                if (angular.isDefined(options['isOnlyKeywordColumn'])) {
                    isOnlyKeywordColumn = options['isOnlyKeywordColumn'];
                }
                if (angular.isDefined(lastEntity.metaData[lastProperty])) {
                    persistent = lastEntity.metaData[lastProperty].persistent;
                }
                var columnObject = new Column(column, title, isVisible, isDeletable, isSearchable, isExportable, persistent, ormtype, options['attributeID'], options['attributeSetObject'], type);
                if (options['aggregate']) {
                    columnObject['aggregate'] = options['aggregate'],
                        columnObject['aggregateAlias'] = title;
                }
                //add any non-conventional options
                for (var key in options) {
                    if (!columnObject[key]) {
                        columnObject[key] = options[key];
                    }
                }
                if (!isOnlyKeywordColumn) {
                    _this.columns.push(columnObject);
                }
                if (isKeywordColumn) {
                    _this.keywordColumns.push(columnObject);
                }
            }
            return _this;
        };
        this.setDisplayProperties = function (propertyIdentifier, title, options) {
            if (title === void 0) { title = ''; }
            if (options === void 0) { options = {}; }
            _this.addDisplayProperty(propertyIdentifier, title, options);
            return _this;
        };
        this.addDisplayAggregate = function (propertyIdentifier, aggregateFunction, aggregateAlias, options) {
            if (angular.isUndefined(aggregateAlias)) {
                aggregateAlias = propertyIdentifier.replace(/\./g, '_') + aggregateFunction;
            }
            var column = {
                propertyIdentifier: _this.formatPropertyIdentifier(propertyIdentifier, true),
                title: _this.rbkeyService.getRBKey("entity." + _this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName, propertyIdentifier) + "." + _this.utilityService.listLast(propertyIdentifier)),
                aggregate: {
                    aggregateFunction: aggregateFunction,
                    aggregateAlias: aggregateAlias
                }
            };
            angular.extend(column, options);
            //Add columns
            _this.addColumn(column.propertyIdentifier, undefined, column);
            return _this;
        };
        this.addGroupBy = function (groupByAlias) {
            if (!_this.groupBys) {
                _this.groupBys = '';
            }
            _this.groupBys = _this.utilityService.listAppendUnique(_this.groupBys, groupByAlias);
            return _this;
        };
        this.addDisplayProperty = function (propertyIdentifier, title, options) {
            if (title === void 0) { title = ''; }
            if (options === void 0) { options = {}; }
            var _DividedColumns = propertyIdentifier.trim().split(',');
            var _DividedTitles = title.trim().split(',');
            var join = propertyIdentifier.split('.').length > 1;
            _DividedColumns.forEach(function (column, index) {
                column = column.trim();
                if (angular.isDefined(_DividedTitles[index]) && _DividedTitles[index].trim() != '') {
                    title = _DividedTitles[index].trim();
                }
                else {
                    title = _this.rbkeyService.getRBKey("entity." + _this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName, column) + "." + _this.utilityService.listLast(column, "."));
                }
                _this.addColumn(_this.formatPropertyIdentifier(column, join), title, options);
            });
            return _this;
        };
        this.addFilter = function (propertyIdentifier, value, comparisonOperator, logicalOperator, hidden, isKeywordFilter, isOnlyKeywordFilter) {
            if (comparisonOperator === void 0) { comparisonOperator = '='; }
            if (hidden === void 0) { hidden = false; }
            if (isKeywordFilter === void 0) { isKeywordFilter = true; }
            if (isOnlyKeywordFilter === void 0) { isOnlyKeywordFilter = false; }
            if (!_this.filterGroups[0].filterGroup.length) {
                logicalOperator = undefined;
            }
            if (propertyIdentifier.split('.').length > 1) {
                _this.processJoin(propertyIdentifier);
            }
            //create filter
            var filter = _this.createFilter(propertyIdentifier, value, comparisonOperator, logicalOperator, hidden);
            if (!isOnlyKeywordFilter) {
                _this.filterGroups[0].filterGroup.push(filter);
            }
            if (isKeywordFilter) {
                _this.keywordFilterGroups[0].filterGroup.push(filter);
            }
            _this.notify('collectionConfigUpdated', {
                collectionConfig: _this
            });
            return _this;
        };
        this.addLikeFilter = function (propertyIdentifier, value, pattern, logicalOperator, displayPropertyIdentifier, hidden) {
            if (pattern === void 0) { pattern = '%w%'; }
            if (hidden === void 0) { hidden = false; }
            //if filterGroups does not exists then set a default
            if (!_this.filterGroups) {
                _this.filterGroups = [{ filterGroup: [] }];
            }
            //if filterGroups is longer than 0 then we at least need to default the logical Operator to AND
            if (_this.filterGroups[0].filterGroup.length && !logicalOperator)
                logicalOperator = 'AND';
            var join = propertyIdentifier.split('.').length > 1;
            if (angular.isUndefined(displayPropertyIdentifier)) {
                displayPropertyIdentifier = _this.rbkeyService.getRBKey("entity." + _this.$hibachi.getLastEntityNameInPropertyIdentifier(_this.baseEntityName, propertyIdentifier) + "." + _this.utilityService.listLast(propertyIdentifier));
            }
            //create filter group
            var filter = new Filter(_this.formatPropertyIdentifier(propertyIdentifier, join), value, 'like', logicalOperator, displayPropertyIdentifier, value, hidden, pattern);
            _this.filterGroups[0].filterGroup.push(filter);
            _this.notify('collectionConfigUpdated', {
                collectionConfig: _this
            });
            return _this;
        };
        this.createFilter = function (propertyIdentifier, value, comparisonOperator, logicalOperator, hidden) {
            if (comparisonOperator === void 0) { comparisonOperator = '='; }
            if (hidden === void 0) { hidden = false; }
            //if filterGroups does not exists then set a default
            if (!_this.filterGroups) {
                _this.filterGroups = [{ filterGroup: [] }];
            }
            //if filterGroups is longer than 0 then we at least need to default the logical Operator to AND
            if (_this.filterGroups[0].filterGroup.length && !logicalOperator)
                logicalOperator = 'AND';
            var join = propertyIdentifier.split('.').length > 1;
            //create filter group
            var filter = new Filter(_this.formatPropertyIdentifier(propertyIdentifier, join), value, comparisonOperator, logicalOperator, propertyIdentifier.split('.').pop(), value, hidden);
            return filter;
        };
        this.addFilterGroup = function (filterGroup) {
            var group = {
                filterGroup: [],
                logicalOperator: 'AND'
            };
            for (var i = 0; i < filterGroup.length; i++) {
                var filter = _this.createFilter(filterGroup[i].propertyIdentifier, filterGroup[i].comparisonValue, filterGroup[i].comparisonOperator, filterGroup[i].logicalOperator, filterGroup[i].hidden);
                group.filterGroup.push(filter);
            }
            _this.filterGroups[0].filterGroup.push(group);
            _this.notify('collectionConfigUpdated', {
                collectionConfig: _this
            });
            return _this;
        };
        this.removeFilter = function (propertyIdentifier, value, comparisonOperator) {
            if (comparisonOperator === void 0) { comparisonOperator = '='; }
            _this.removeFilterHelper(_this.filterGroups, propertyIdentifier, value, comparisonOperator);
            _this.notify('collectionConfigUpdated', {
                collectionConfig: _this
            });
            return _this;
        };
        this.removeFilterByDisplayPropertyIdentifier = function (displayPropertyIdentifier) {
            _this.removeFromFilterGroupsByPropertyIdentifier(_this.filterGroups, displayPropertyIdentifier);
            _this.removeFromFilterGroupsByPropertyIdentifier(_this.keywordFilterGroups, displayPropertyIdentifier);
        };
        this.removeFromFilterGroupsByPropertyIdentifier = function (filterGroups, displayPropertyIdentifier) {
            for (var j = 0; j < filterGroups.length; j++) {
                var filterGroup = filterGroups[j].filterGroup;
                for (var i = 0; i < filterGroup.length; i++) {
                    var filter = filterGroup[i];
                    if (filter.displayPropertyIdentifier == displayPropertyIdentifier) {
                        filterGroup.splice(i, 1);
                        i--;
                    }
                }
            }
        };
        this.removeFilterHelper = function (filter, propertyIdentifier, value, comparisonOperator, currentGroup) {
            if (angular.isUndefined(currentGroup)) {
                currentGroup = filter;
            }
            if (angular.isArray(filter)) {
                angular.forEach(filter, function (key) {
                    _this.removeFilterHelper(key, propertyIdentifier, value, comparisonOperator, filter);
                });
            }
            else if (angular.isArray(filter.filterGroup)) {
                _this.removeFilterHelper(filter.filterGroup, propertyIdentifier, value, comparisonOperator, filter.filterGroup);
            }
            else {
                if (filter.propertyIdentifier == propertyIdentifier && filter.value == value && filter.comparisonOperator == comparisonOperator) {
                    currentGroup.splice(currentGroup.indexOf(filter), 1);
                }
            }
        };
        this.addCollectionFilter = function (propertyIdentifier, displayPropertyIdentifier, displayValue, collectionID, criteria, fieldtype, readOnly) {
            if (criteria === void 0) { criteria = 'One'; }
            if (readOnly === void 0) { readOnly = false; }
            _this.filterGroups[0].filterGroup.push(new CollectionFilter(_this.formatPropertyIdentifier(propertyIdentifier), displayPropertyIdentifier, displayValue, collectionID, criteria, fieldtype, readOnly));
            _this.notify('collectionConfigUpdated', {
                collectionConfig: _this
            });
            return _this;
        };
        //orderByList in this form: "property|direction" concrete: "skuName|ASC"
        this.setOrderBy = function (orderByList) {
            var orderBys = orderByList.split(',');
            angular.forEach(orderBys, function (orderBy) {
                _this.addOrderBy(orderBy);
            });
            return _this;
        };
        this.clearOrderBy = function () {
            _this.orderBy = [];
        };
        this.addOrderBy = function (orderByString, formatPropertyIdentifier) {
            if (formatPropertyIdentifier === void 0) { formatPropertyIdentifier = true; }
            if (!_this.orderBy) {
                _this.orderBy = [];
            }
            var propertyIdentifier = _this.utilityService.listFirst(orderByString, '|');
            if (formatPropertyIdentifier) {
                propertyIdentifier = _this.formatPropertyIdentifier(propertyIdentifier);
            }
            var direction = _this.utilityService.listLast(orderByString, '|');
            var orderBy = {
                propertyIdentifier: propertyIdentifier,
                direction: direction
            };
            _this.orderBy.push(orderBy);
        };
        this.toggleOrderBy = function (formattedPropertyIdentifier, singleColumn) {
            if (singleColumn === void 0) { singleColumn = false; }
            if (!_this.orderBy) {
                _this.orderBy = [];
            }
            var found = false;
            for (var i = _this.orderBy.length - 1; i >= 0; i--) {
                if (_this.orderBy[i].propertyIdentifier == formattedPropertyIdentifier) {
                    found = true;
                    if (_this.orderBy[i].direction.toUpperCase() == "DESC") {
                        _this.orderBy[i].direction = "ASC";
                    }
                    else if (_this.orderBy[i].direction.toUpperCase() == "ASC") {
                        _this.orderBy.splice(i, 1);
                    }
                    break;
                }
            }
            var direction = 'desc';
            if (singleColumn) {
                _this.orderBy = [];
                for (var i = 0; i < _this.columns.length; i++) {
                    if (!_this.columns[i]["sorting"]) {
                        _this.columns[i]["sorting"] = {};
                    }
                    if (angular.isUndefined(_this.columns[i]["sorting"]["active"])) {
                        _this.columns[i]["sorting"]["active"] = false;
                    }
                    if (_this.columns[i]['propertyIdentifier'] == formattedPropertyIdentifier) {
                        _this.columns[i]["sorting"]["active"] = true;
                        _this.columns[i]["sorting"]["priority"] = 1;
                        if (!_this.columns[i]["sorting"]["sortOrder"] || _this.columns[i]["sorting"]["sortOrder"] === 'desc') {
                            _this.columns[i]["sorting"]["sortOrder"] = 'asc';
                            direction = 'asc';
                        }
                        else {
                            _this.columns[i]["sorting"]["sortOrder"] = 'desc';
                            direction = 'desc';
                        }
                    }
                    else if (_this.columns[i]["sorting"] && _this.columns[i]["sorting"]["active"]) {
                        _this.columns[i]["sorting"]["active"] = false;
                        _this.columns[i]["sorting"]["sortOrder"] = 'asc';
                    }
                }
            }
            _this.addOrderBy(formattedPropertyIdentifier + '|' + direction, false);
            _this.notify('swPaginationAction', { type: 'setCurrentPage', payload: 1 });
        };
        this.removeOrderBy = function (formattedPropertyIdentifier) {
            angular.forEach(_this.orderBy, function (orderBy, index) {
                if (orderBy.propertyIdentifier == formattedPropertyIdentifier) {
                    _this.orderBy.splice(index, 1);
                    return true;
                }
            });
            return false;
        };
        this.setCurrentPage = function (pageNumber) {
            _this.currentPage = pageNumber;
            return _this;
        };
        this.getCurrentPage = function () {
            return _this.currentPage;
        };
        this.setPageShow = function (NumberOfPages) {
            _this.pageShow = NumberOfPages;
            return _this;
        };
        this.getPageShow = function () {
            return _this.pageShow;
        };
        this.setAllRecords = function (allFlag) {
            if (allFlag === void 0) { allFlag = false; }
            _this.allRecords = allFlag;
            return _this;
        };
        this.setDistinct = function (flag) {
            if (flag === void 0) { flag = true; }
            _this.isDistinct = flag;
            return _this;
        };
        this.setDirtyRead = function (flag) {
            if (flag === void 0) { flag = false; }
            _this.dirtyRead = flag;
            return _this;
        };
        this.setKeywords = function (keyword) {
            _this.keywords = keyword;
            return _this;
        };
        this.setId = function (id) {
            _this.id = id;
            return _this;
        };
        this.setEventID = function (eventID) {
            _this.eventID = eventID;
            return _this;
        };
        this.hasFilters = function () {
            return (_this.filterGroups.length && _this.filterGroups[0].filterGroup.length);
        };
        this.hasColumns = function () {
            return _this.columns != null && _this.columns.length > 0;
        };
        this.clearFilters = function () {
            _this.filterGroups = [{ filterGroup: [] }];
            return _this;
        };
        this.getEntity = function (id) {
            if (angular.isDefined(id)) {
                _this.setId(id);
            }
            return _this.$hibachi.getEntity(_this.baseEntityName, _this.getOptions());
        };
        this.validateFilter = function (filter, currentGroup) {
            if (angular.isUndefined(currentGroup)) {
                currentGroup = filter;
            }
            if (angular.isArray(filter)) {
                angular.forEach(filter, function (key) {
                    _this.validateFilter(key, filter);
                });
            }
            else if (angular.isArray(filter.filterGroup)) {
                _this.validateFilter(filter.filterGroup, filter.filterGroup);
            }
            else {
                if ((!filter.comparisonOperator || !filter.comparisonOperator.length) && (!filter.propertyIdentifier || !filter.propertyIdentifier.length)) {
                    var index = currentGroup.indexOf(filter);
                    if (index > -1) {
                        _this.notify('filterItemAction', {
                            action: 'remove',
                            filterItemIndex: index
                        });
                        currentGroup.splice(index, 1);
                    }
                }
            }
        };
        this.getColumns = function () {
            if (!_this.columns) {
                _this.columns = [];
            }
            return _this.columns;
        };
        this.setColumns = function (columns) {
            _this.columns = columns;
            return _this;
        };
        this.$hibachi = $hibachi;
        this.rbkeyService = rbkeyService;
        if (angular.isDefined(this.baseEntityName)) {
            this.collection = this.$hibachi.getEntityExample(this.baseEntityName);
            if (angular.isUndefined(this.baseEntityAlias)) {
                this.baseEntityAlias = '_' + this.baseEntityName.toLowerCase();
            }
        }
    }
    Object.defineProperty(CollectionConfig.prototype, "collectionConfigString", {
        get: function () {
            return angular.toJson(this.getCollectionConfig(false));
        },
        enumerable: true,
        configurable: true
    });
    CollectionConfig.prototype.notify = function (name, data) {
        if (angular.isDefined(this.eventID)) {
            this.observerService.notifyById(name, this.eventID, data);
        }
        else {
            this.observerService.notify(name, data);
        }
    };
    return CollectionConfig;
}());
exports.CollectionConfig = CollectionConfig;


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var CollectionService = /** @class */ (function (_super) {
    __extends(CollectionService, _super);
    //@ngInject
    function CollectionService($injector, $hibachi, utilityService, $filter, $log) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Collection') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        _this.$filter = $filter;
        _this.$log = $log;
        _this.get = function () {
            return _this._pageDialogs || [];
        };
        //test
        _this.setFilterCount = function (count) {
            _this.$log.debug('incrementFilterCount');
            _this._filterCount = count;
        };
        _this.getFilterCount = function () {
            return _this._filterCount;
        };
        _this.getColumns = function () {
            return _this._collection.collectionConfig.columns;
        };
        _this.getFilterPropertiesList = function () {
            return _this._filterPropertiesList;
        };
        _this.getFilterPropertiesListByBaseEntityAlias = function (baseEntityAlias) {
            return _this._filterPropertiesList[baseEntityAlias];
        };
        _this.setFilterPropertiesList = function (value, key) {
            if (angular.isUndefined(_this._filterPropertiesList[key])) {
                _this._filterPropertiesList[key] = value;
            }
        };
        _this.stringifyJSON = function (jsonObject) {
            var jsonString = angular.toJson(jsonObject);
            return jsonString;
        };
        _this.removeFilterItem = function (filterItem, filterGroup) {
            filterGroup.pop(filterGroup.indexOf(filterItem));
        };
        _this.selectFilterItem = function (filterItem) {
            if (filterItem.$$isClosed) {
                for (var i in filterItem.$$siblingItems) {
                    filterItem.$$siblingItems[i].$$isClosed = true;
                    filterItem.$$siblingItems[i].$$disabled = true;
                }
                filterItem.$$isClosed = false;
                filterItem.$$disabled = false;
                filterItem.setItemInUse(true);
            }
            else {
                for (var i in filterItem.$$siblingItems) {
                    filterItem.$$siblingItems[i].$$disabled = false;
                }
                filterItem.$$isClosed = true;
                filterItem.setItemInUse(false);
            }
        };
        _this.selectFilterGroupItem = function (filterGroupItem) {
            if (filterGroupItem.$$isClosed) {
                for (var i in filterGroupItem.$$siblingItems) {
                    filterGroupItem.$$siblingItems[i].$$disabled = true;
                }
                filterGroupItem.$$isClosed = false;
                filterGroupItem.$$disabled = false;
            }
            else {
                for (var i in filterGroupItem.$$siblingItems) {
                    filterGroupItem.$$siblingItems[i].$$disabled = false;
                }
                filterGroupItem.$$isClosed = true;
            }
            filterGroupItem.setItemInUse(!filterGroupItem.$$isClosed);
        };
        _this.newFilterItem = function (filterItemGroup, setItemInUse, prepareForFilterGroup) {
            if (angular.isUndefined(prepareForFilterGroup)) {
                prepareForFilterGroup = false;
            }
            var filterItem = {
                displayPropertyIdentifier: "",
                propertyIdentifier: "",
                comparisonOperator: "",
                value: "",
                $$disabled: false,
                $$isClosed: true,
                $$isNew: true,
                $$siblingItems: filterItemGroup,
                setItemInUse: setItemInUse
            };
            if (filterItemGroup.length !== 0) {
                filterItem.logicalOperator = "AND";
            }
            if (prepareForFilterGroup === true) {
                filterItem.$$prepareForFilterGroup = true;
            }
            filterItemGroup.push(filterItem);
            _this.selectFilterItem(filterItem);
            return (filterItemGroup.length - 1);
        };
        _this.newFilterGroupItem = function (filterItemGroup, setItemInUse) {
            var filterGroupItem = {
                filterGroup: [],
                $$disabled: "false",
                $$isClosed: "true",
                $$siblingItems: filterItemGroup,
                $$isNew: "true",
                setItemInUse: setItemInUse
            };
            if (filterItemGroup.length !== 0) {
                filterGroupItem.logicalOperator = "AND";
            }
            filterItemGroup.push(filterGroupItem);
            _this.selectFilterGroupItem(filterGroupItem);
            _this.newFilterItem(filterGroupItem.filterGroup, setItemInUse, undefined);
        };
        _this.transplantFilterItemIntoFilterGroup = function (filterGroup, filterItem) {
            var filterGroupItem = {
                filterGroup: [],
                $$disabled: "false",
                $$isClosed: "true",
                $$isNew: "true"
            };
            if (angular.isDefined(filterItem.logicalOperator)) {
                filterGroupItem.logicalOperator = filterItem.logicalOperator;
                delete filterItem.logicalOperator;
            }
            filterGroupItem.setItemInUse = filterItem.setItemInUse;
            filterGroupItem.$$siblingItems = filterItem.$$siblingItems;
            filterItem.$$siblingItems = [];
            filterGroup.pop(filterGroup.indexOf(filterItem));
            filterItem.$$prepareForFilterGroup = false;
            filterGroupItem.filterGroup.push(filterItem);
            filterGroup.push(filterGroupItem);
        };
        _this.formatFilterPropertiesList = function (filterPropertiesList, propertyIdentifier) {
            _this.$log.debug('format Filter Properties List arguments 2');
            _this.$log.debug(filterPropertiesList);
            _this.$log.debug(propertyIdentifier);
            var simpleGroup = {
                $$group: 'simple',
                displayPropertyIdentifier: '-----------------'
            };
            filterPropertiesList.data.push(simpleGroup);
            var drillDownGroup = {
                $$group: 'drilldown',
                displayPropertyIdentifier: '-----------------'
            };
            filterPropertiesList.data.push(drillDownGroup);
            var compareCollections = {
                $$group: 'compareCollections',
                displayPropertyIdentifier: '-----------------'
            };
            filterPropertiesList.data.push(compareCollections);
            var attributeCollections = {
                $$group: 'attribute',
                displayPropertyIdentifier: '-----------------'
            };
            filterPropertiesList.data.push(attributeCollections);
            for (var i in filterPropertiesList.data) {
                if (angular.isDefined(filterPropertiesList.data[i].ormtype)) {
                    if (angular.isDefined(filterPropertiesList.data[i].attributeID)) {
                        filterPropertiesList.data[i].$$group = 'attribute';
                    }
                    else {
                        filterPropertiesList.data[i].$$group = 'simple';
                    }
                }
                if (angular.isDefined(filterPropertiesList.data[i].fieldtype)) {
                    if (filterPropertiesList.data[i].fieldtype === 'id') {
                        filterPropertiesList.data[i].$$group = 'simple';
                    }
                    if (filterPropertiesList.data[i].fieldtype === 'many-to-one') {
                        filterPropertiesList.data[i].$$group = 'drilldown';
                    }
                    if (filterPropertiesList.data[i].fieldtype === 'many-to-many' || filterPropertiesList.data[i].fieldtype === 'one-to-many') {
                        filterPropertiesList.data[i].$$group = 'compareCollections';
                    }
                }
                filterPropertiesList.data[i].propertyIdentifier = propertyIdentifier + '.' + filterPropertiesList.data[i].name;
            }
            filterPropertiesList.data = _this._orderBy(filterPropertiesList.data, ['-$$group', 'propertyIdentifier'], false);
        };
        _this.orderBy = function (propertiesList, predicate, reverse) {
            return _this._orderBy(propertiesList, predicate, reverse);
        };
        _this.$filter = $filter;
        _this.$log = $log;
        _this._collection = null;
        _this._collectionConfig = null;
        _this._filterPropertiesList = {};
        _this._filterCount = 0;
        _this._orderBy = $filter('orderBy');
        return _this;
    }
    return CollectionService;
}(baseentityservice_1.BaseEntityService));
exports.CollectionService = CollectionService;


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWActionCallerController = /** @class */ (function () {
    //@ngInject
    function SWActionCallerController($scope, $element, $templateRequest, $compile, $timeout, corePartialsPath, utilityService, observerService, $hibachi, rbkeyService, hibachiPathBuilder) {
        var _this = this;
        this.$scope = $scope;
        this.$element = $element;
        this.$templateRequest = $templateRequest;
        this.$compile = $compile;
        this.$timeout = $timeout;
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.observerService = observerService;
        this.$hibachi = $hibachi;
        this.rbkeyService = rbkeyService;
        this.$onInit = function () {
            //Check if is NOT a ngRouter
            if (angular.isUndefined(_this.isAngularRoute)) {
                _this.isAngularRoute = _this.utilityService.isAngularRoute();
            }
            if (!_this.isAngularRoute) {
                _this.actionUrl = _this.$hibachi.buildUrl(_this.action, _this.queryString);
            }
            else {
                _this.actionUrl = '#!/entity/' + _this.action + '/' + _this.queryString.split('=')[1];
            }
            //            this.class = this.utilityService.replaceAll(this.utilityService.replaceAll(this.getAction(),':',''),'.','') + ' ' + this.class;
            _this.type = _this.type || 'link';
            if (angular.isDefined(_this.titleRbKey)) {
                _this.title = _this.rbkeyService.getRBKey(_this.titleRbKey);
            }
            if (angular.isUndefined(_this.text)) {
                _this.text = _this.title;
            }
            if (_this.type == "button") {
                //handle submit.
                /** in order to attach the correct controller to local vm, we need a watch to bind */
                var unbindWatcher = _this.$scope.$watch(function () { return _this.formController; }, function (newValue, oldValue) {
                    if (newValue !== undefined) {
                        _this.formController = newValue;
                    }
                    unbindWatcher();
                });
            }
            //            this.actionItem = this.getActionItem();
            //            this.actionItemEntityName = this.getActionItemEntityName();
            //            this.text = this.getText();
            //            if(this.getDisabled()){
            //                this.getDisabledText();
            //            }else if(this.getConfirm()){
            //                this.getConfirmText();
            //            }
            //
            //            if(this.modalFullWidth && !this.getDisabled()){
            //                this.class = this.class + " modalload-fullwidth";
            //            }
            //
            //            if(this.modal && !this.getDisabled() && !this.modalFullWidth){
            //                this.class = this.class + " modalload";
            //            }
            /*need authentication lookup by api to disable
            <cfif not attributes.hibachiScope.authenticateAction(action=attributes.action)>
                <cfset attributes.class &= " disabled" />
            </cfif>
            */
            if (_this.eventListeners) {
                for (var key in _this.eventListeners) {
                    _this.observerService.attach(_this.eventListeners[key], key);
                }
            }
        };
        this.submit = function () {
            _this.$timeout(function () {
                if (!_this.form) {
                    _this.$scope.$root.slatwall.doAction(_this.action);
                }
                else if (_this.form.$valid) {
                    _this.formController.submit(_this.action);
                }
            });
        };
        this.getAction = function () {
            return _this.action || '';
        };
        this.getActionItem = function () {
            return _this.utilityService.listLast(_this.getAction(), '.');
        };
        this.getActionItemEntityName = function () {
            var firstFourLetters = _this.utilityService.left(_this.actionItem, 4);
            var firstSixLetters = _this.utilityService.left(_this.actionItem, 6);
            var minus4letters = _this.utilityService.right(_this.actionItem, 4);
            var minus6letters = _this.utilityService.right(_this.actionItem, 6);
            var actionItemEntityName = "";
            if (firstFourLetters === 'list' && _this.actionItem.length > 4) {
                actionItemEntityName = minus4letters;
            }
            else if (firstFourLetters === 'edit' && _this.actionItem.length > 4) {
                actionItemEntityName = minus4letters;
            }
            else if (firstFourLetters === 'save' && _this.actionItem.length > 4) {
                actionItemEntityName = minus4letters;
            }
            else if (firstSixLetters === 'create' && _this.actionItem.length > 6) {
                actionItemEntityName = minus6letters;
            }
            else if (firstSixLetters === 'detail' && _this.actionItem.length > 6) {
                actionItemEntityName = minus6letters;
            }
            else if (firstSixLetters === 'delete' && _this.actionItem.length > 6) {
                actionItemEntityName = minus6letters;
            }
            return actionItemEntityName;
        };
        this.getTitle = function () {
            //if title is undefined then use text
            if (angular.isUndefined(_this.title) || !_this.title.length) {
                _this.title = _this.getText();
            }
            return _this.title;
        };
        this.getTextByRBKeyByAction = function (actionItemType, plural) {
            if (plural === void 0) { plural = false; }
            var navRBKey = _this.rbkeyService.getRBKey('admin.define.' + actionItemType + '_nav');
            var entityRBKey = '';
            var replaceKey = '';
            if (plural) {
                entityRBKey = _this.rbkeyService.getRBKey('entity.' + _this.actionItemEntityName + '_plural');
                replaceKey = '${itemEntityNamePlural}';
            }
            else {
                entityRBKey = _this.rbkeyService.getRBKey('entity.' + _this.actionItemEntityName);
                replaceKey = '${itemEntityName}';
            }
            return _this.utilityService.replaceAll(navRBKey, replaceKey, entityRBKey);
        };
        this.getText = function () {
            //if we don't have text then make it up based on rbkeys
            if (angular.isUndefined(_this.text) || (angular.isDefined(_this.text) && !_this.text.length)) {
                _this.text = _this.rbkeyService.getRBKey(_this.utilityService.replaceAll(_this.getAction(), ":", ".") + '_nav');
                var minus8letters = _this.utilityService.right(_this.text, 8);
                //if rbkey is still missing. then can we infer it
                if (minus8letters === '_missing') {
                    var firstFourLetters = _this.utilityService.left(_this.actionItem, 4);
                    var firstSixLetters = _this.utilityService.left(_this.actionItem, 6);
                    var minus4letters = _this.utilityService.right(_this.actionItem, 4);
                    var minus6letters = _this.utilityService.right(_this.actionItem, 6);
                    if (firstFourLetters === 'list' && _this.actionItem.length > 4) {
                        _this.text = _this.getTextByRBKeyByAction('list', true);
                    }
                    else if (firstFourLetters === 'edit' && _this.actionItem.length > 4) {
                        _this.text = _this.getTextByRBKeyByAction('edit', false);
                    }
                    else if (firstFourLetters === 'save' && _this.actionItem.length > 4) {
                        _this.text = _this.getTextByRBKeyByAction('save', false);
                    }
                    else if (firstSixLetters === 'create' && _this.actionItem.length > 6) {
                        _this.text = _this.getTextByRBKeyByAction('create', false);
                    }
                    else if (firstSixLetters === 'detail' && _this.actionItem.length > 6) {
                        _this.text = _this.getTextByRBKeyByAction('detail', false);
                    }
                    else if (firstSixLetters === 'delete' && _this.actionItem.length > 6) {
                        _this.text = _this.getTextByRBKeyByAction('delete', false);
                    }
                }
                if (_this.utilityService.right(_this.text, 8)) {
                    _this.text = _this.rbkeyService.getRBKey(_this.utilityService.replaceAll(_this.getAction(), ":", "."));
                }
            }
            if (!_this.title || (_this.title && !_this.title.length)) {
                _this.title = _this.text;
            }
            return _this.text;
        };
        this.getDisabled = function () {
            //if item is disabled
            if (angular.isDefined(_this.disabled) && _this.disabled) {
                return true;
            }
            else {
                return false;
            }
        };
        this.getDisabledText = function () {
            if (_this.getDisabled()) {
                //and no disabled text specified
                if (angular.isUndefined(_this.disabledtext) || !_this.disabledtext.length) {
                    var disabledrbkey = _this.utilityService.replaceAll(_this.action, ':', '.') + '_disabled';
                    _this.disabledtext = _this.rbkeyService.getRBKey(disabledrbkey);
                }
                //add disabled class
                _this.class += " btn-disabled";
                _this.confirm = false;
                return _this.disabledtext;
            }
            return "";
        };
        this.getConfirm = function () {
            if (angular.isDefined(_this.confirm) && _this.confirm) {
                return true;
            }
            else {
                return false;
            }
        };
        this.getConfirmText = function () {
            if (_this.getConfirm()) {
                if (angular.isUndefined(_this.confirmtext) && _this.confirmtext.length) {
                    var confirmrbkey = _this.utilityService.replaceAll(_this.action, ':', '.') + '_confirm';
                    _this.confirmtext = _this.rbkeyService.getRBKey(confirmrbkey);
                    /*<cfif right(attributes.confirmtext, "8") eq "_missing">
                        <cfset attributes.confirmtext = replace(attributes.hibachiScope.rbKey("admin.define.delete_confirm"),'${itemEntityName}', attributes.hibachiScope.rbKey('entity.#actionItemEntityName#'), "all") />
                    </cfif>*/
                }
                _this.class += " alert-confirm";
                return _this.confirm;
            }
            return "";
        };
        this.$scope = $scope;
        this.$element = $element;
        this.$timeout = $timeout;
        this.$templateRequest = $templateRequest;
        this.$compile = $compile;
        this.rbkeyService = rbkeyService;
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.$templateRequest(this.hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "actioncaller.html").then(function (html) {
            var template = angular.element(html);
            _this.$element.parent().append(template);
            $compile(template)($scope);
            //need to perform init after promise completes
            //this.init();
        });
    }
    return SWActionCallerController;
}());
exports.SWActionCallerController = SWActionCallerController;
var SWActionCaller = /** @class */ (function () {
    function SWActionCaller(partialsPath, utiltiyService, $hibachi) {
        this.partialsPath = partialsPath;
        this.utiltiyService = utiltiyService;
        this.$hibachi = $hibachi;
        this.restrict = 'EA';
        this.scope = {};
        this.bindToController = {
            action: "@",
            text: "@",
            type: "@",
            queryString: "@",
            title: "@?",
            titleRbKey: "@?",
            'class': "@",
            icon: "@",
            iconOnly: "=",
            name: "@",
            confirm: "=",
            confirmtext: "@",
            disabled: "=",
            disabledtext: "@",
            modal: "=",
            modalFullWidth: "=",
            id: "@",
            isAngularRoute: "=?",
            eventListeners: '=?'
        };
        this.require = { formController: "^?swForm", form: "^?form" };
        this.controller = SWActionCallerController;
        this.controllerAs = "swActionCaller";
        this.link = function (scope, element, attrs) {
            if (angular.isDefined(scope.swActionCaller.formController)) {
                scope.formController = scope.swActionCaller.formController;
            }
        };
    }
    SWActionCaller.Factory = function () {
        var directive = function (partialsPath, utiltiyService, $hibachi) { return new SWActionCaller(partialsPath, utiltiyService, $hibachi); };
        directive.$inject = [
            'partialsPath',
            'utilityService',
            '$hibachi'
        ];
        return directive;
    };
    return SWActionCaller;
}());
exports.SWActionCaller = SWActionCaller;


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWActionCallerDropdownController = /** @class */ (function () {
    function SWActionCallerDropdownController() {
        this.title = this.title || '';
        this.icon = this.icon || 'plus';
        this.type = this.type || 'button';
        this.dropdownClass = this.dropdownClass || '';
        this.dropdownId = this.dropdownId || '';
        this.buttonClass = this.buttonClass || 'btn-primary';
    }
    return SWActionCallerDropdownController;
}());
exports.SWActionCallerDropdownController = SWActionCallerDropdownController;
var SWActionCallerDropdown = /** @class */ (function () {
    function SWActionCallerDropdown(corePartialsPath, hibachiPathBuilder) {
        this.corePartialsPath = corePartialsPath;
        this.restrict = 'E';
        this.scope = {};
        this.transclude = true;
        this.bindToController = {
            title: "@",
            icon: "@",
            type: "=",
            dropdownClass: "@",
            dropdownId: "@",
            buttonClass: "@"
        };
        this.controller = SWActionCallerDropdownController;
        this.controllerAs = "swActionCallerDropdown";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + 'actioncallerdropdown.html';
    }
    SWActionCallerDropdown.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWActionCallerDropdown(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ['corePartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWActionCallerDropdown;
}());
exports.SWActionCallerDropdown = SWActionCallerDropdown;


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWClickOutside = /** @class */ (function () {
    //@ngInject
    function SWClickOutside($document, $timeout, utilityService) {
        var _this = this;
        this.$document = $document;
        this.$timeout = $timeout;
        this.utilityService = utilityService;
        this.restrict = 'A';
        this.scope = {
            swClickOutside: '&'
        };
        this.link = function (scope, elem, attr) {
            _this.$document.on('click', function (e) {
                if (!e || !e.target)
                    return;
                //check if our element already hidden
                if (angular.element(elem).hasClass("ng-hide")) {
                    return;
                }
                if (e.target !== elem && elem && elem[0] && !_this.utilityService.isDescendantElement(elem[0], e.target)) {
                    _this.$timeout(function () {
                        scope.swClickOutside();
                    });
                }
            });
        };
        this.$document = $document;
        this.$timeout = $timeout;
        this.utilityService = utilityService;
    }
    SWClickOutside.Factory = function () {
        var directive = function ($document, $timeout, utilityService) { return new SWClickOutside($document, $timeout, utilityService); };
        directive.$inject = [
            '$document', '$timeout', 'utilityService'
        ];
        return directive;
    };
    return SWClickOutside;
}());
exports.SWClickOutside = SWClickOutside;


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCollectionColumnController = /** @class */ (function () {
    function SWCollectionColumnController() {
    }
    return SWCollectionColumnController;
}());
exports.SWCollectionColumnController = SWCollectionColumnController;
var SWCollectionColumn = /** @class */ (function () {
    //@ngInject
    function SWCollectionColumn(scopeService, utilityService) {
        var _this = this;
        this.scopeService = scopeService;
        this.utilityService = utilityService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyIdentifier: "@",
            fallbackPropertyIdentifiers: "@?",
            isVisible: "=?",
            isSearchable: "=?",
            isDeletable: "=?",
            isExportable: "=?",
            isKeywordColumn: "=?",
            isOnlyKeywordColumn: "=?",
            tdclass: "@?",
            hidden: "=?"
        };
        this.controller = SWCollectionColumn;
        this.controllerAs = "swCollectionColumn";
        this.template = "";
        this.link = function (scope, element, attrs) {
            if (angular.isUndefined(scope.swCollectionColumn.isKeywordColumn)) {
                scope.swCollectionColumn.isKeywordColumn = false;
            }
            if (angular.isUndefined(scope.swCollectionColumn.isOnlyKeywordColumn)) {
                scope.swCollectionColumn.isOnlyKeywordColumn = scope.swCollectionColumn.isKeywordColumn;
            }
            if (angular.isUndefined(scope.swCollectionColumn.isVisible)) {
                scope.swCollectionColumn.isVisible = true;
            }
            if (angular.isUndefined(scope.swCollectionColumn.isSearchable)) {
                scope.swCollectionColumn.isSearchable = false;
            }
            if (angular.isUndefined(scope.swCollectionColumn.isDeletable)) {
                scope.swCollectionColumn.isDeletable = false;
            }
            if (angular.isUndefined(scope.swCollectionColumn.isExportable)) {
                scope.swCollectionColumn.isExportable = true;
            }
            var column = {
                propertyIdentifier: scope.swCollectionColumn.propertyIdentifier,
                fallbackPropertyIdentifiers: scope.swCollectionColumn.fallbackPropertyIdentifiers,
                isVisible: scope.swCollectionColumn.isVisible,
                isSearchable: scope.swCollectionColumn.isSearchable,
                isDeletable: scope.swCollectionColumn.isDeletable,
                isExportable: scope.swCollectionColumn.isExportable,
                hidden: scope.swCollectionColumn.hidden,
                tdclass: scope.swCollectionColumn.tdclass,
                isKeywordColumn: scope.swCollectionColumn.isKeywordColumn,
                isOnlyKeywordColumn: scope.swCollectionColumn.isOnlyKeywordColumn
            };
            var currentScope = _this.scopeService.getRootParentScope(scope, "swCollectionConfig");
            if (angular.isDefined(currentScope.swCollectionConfig)) {
                //push directly here because we've already built the column object
                currentScope.swCollectionConfig.columns.push(column);
                currentScope.swCollectionConfig.columnsDeferred.resolve();
            }
            else {
                throw ("Could not find swCollectionConfig in the parent scope from swcollectioncolumn");
            }
        };
    }
    SWCollectionColumn.Factory = function () {
        var directive = function (scopeService, utilityService) { return new SWCollectionColumn(scopeService, utilityService); };
        directive.$inject = [
            'scopeService',
            'utilityService'
        ];
        return directive;
    };
    return SWCollectionColumn;
}());
exports.SWCollectionColumn = SWCollectionColumn;


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCollectionConfigController = /** @class */ (function () {
    //@ngInject
    function SWCollectionConfigController($transclude, $q, collectionConfigService) {
        this.$transclude = $transclude;
        this.$q = $q;
        this.collectionConfigService = collectionConfigService;
        this.filters = [];
        this.columns = [];
        this.orderBys = [];
        this.keywordColumns = [];
        this.columnsDeferred = this.$q.defer();
        this.columnsPromise = this.columnsDeferred.promise;
        this.filtersDeferred = this.$q.defer();
        this.filtersPromise = this.filtersDeferred.promise;
        this.orderBysDeferred = this.$q.defer();
        this.orderBysPromise = this.columnsDeferred.promise;
    }
    return SWCollectionConfigController;
}());
exports.SWCollectionConfigController = SWCollectionConfigController;
var SWCollectionConfig = /** @class */ (function () {
    // @ngInject
    function SWCollectionConfig(collectionConfigService, listingService, scopeService, $q) {
        var _this = this;
        this.collectionConfigService = collectionConfigService;
        this.listingService = listingService;
        this.scopeService = scopeService;
        this.$q = $q;
        this.restrict = 'EA';
        this.scope = true;
        this.transclude = {
            columns: "?swCollectionColumns",
            filters: "?swCollectionFilters",
            orderBys: "?swCollectionOrderBys"
        };
        this.bindToController = {
            allRecords: "=?",
            collectionConfigProperty: "@?",
            distinct: "=?",
            entityName: "@",
            filterFlag: "=?",
            inListingDisplay: "=?",
            multiCollectionConfigProperty: "@?",
            pageShow: "@?",
            parentDirectiveControllerAsName: "@?",
            parentDeferredProperty: "@?"
        };
        this.controller = SWCollectionConfigController;
        this.controllerAs = "swCollectionConfig";
        this.template = " \n        <div ng-transclude=\"columns\"></div>\n        <div ng-transclude=\"filters\"></div>\n        <div ng-transclude=\"orderBys\"></div>\n    ";
        this.link = function (scope, element, attrs) {
            //some automatic configuration for listing display
            if (angular.isUndefined(scope.swCollectionConfig.inListingDisplay)) {
                scope.swCollectionConfig.inListingDisplay = false;
            }
            if (scope.swCollectionConfig.inListingDisplay) {
                scope.swCollectionConfig.parentDirectiveControllerAsName = "swListingDisplay";
                scope.swCollectionConfig.parentDeferredProperty = "singleCollectionDeferred";
            }
            if (angular.isUndefined(scope.swCollectionConfig.entityName)) {
                throw ("You must provide an entityname to swCollectionConfig");
            }
            if (angular.isUndefined(scope.swCollectionConfig.parentDirectiveControllerAsName) && !scope.swCollectionConfig.inListingDisplay) {
                throw ("You must provide the parent directives Controller-As Name to swCollectionConfig");
            }
            if (angular.isUndefined(scope.swCollectionConfig.collectionConfigProperty)) {
                scope.swCollectionConfig.collectionConfigProperty = "collectionConfig";
            }
            if (angular.isUndefined(scope.swCollectionConfig.allRecords)) {
                scope.swCollectionConfig.allRecords = false;
            }
            if (angular.isUndefined(scope.swCollectionConfig.pageShow)) {
                scope.swCollectionConfig.pageShow = 10;
            }
            if (angular.isUndefined(scope.swCollectionConfig.distinct)) {
                scope.swCollectionConfig.distinct = false;
            }
            if (angular.isUndefined(scope.swCollectionConfig.filterFlag)) {
                scope.swCollectionConfig.filterFlag = true; //assume there are filters
            }
            var allCollectionConfigPromises = [];
            var currentScope = scope;
            //we want to wait for all sibling scopes before pushing the collection config
            while (angular.isDefined(currentScope)) {
                if (angular.isDefined(currentScope.swCollectionConfig)) {
                    allCollectionConfigPromises.push(currentScope.swCollectionConfig.columnsPromise);
                    if (scope.swCollectionConfig.filterFlag) {
                        allCollectionConfigPromises.push(currentScope.swCollectionConfig.filtersPromise);
                    }
                }
                currentScope = currentScope.$$nextSibling;
                if (currentScope == null) {
                    break;
                }
            }
            var newCollectionConfig = _this.collectionConfigService.newCollectionConfig(scope.swCollectionConfig.entityName);
            newCollectionConfig.setAllRecords(scope.swCollectionConfig.allRecords);
            newCollectionConfig.setDistinct(scope.swCollectionConfig.distinct);
            newCollectionConfig.setPageShow(scope.swCollectionConfig.pageShow);
            var currentScope = _this.scopeService.getRootParentScope(scope, scope.swCollectionConfig.parentDirectiveControllerAsName);
            if (currentScope[scope.swCollectionConfig.parentDirectiveControllerAsName]) {
                var parentDirective = currentScope[scope.swCollectionConfig.parentDirectiveControllerAsName];
            }
            else {
                throw ("swCollectionConfig was unable to find a parent scope");
            }
            scope.swCollectionConfig.columnsPromise.then(function () {
                angular.forEach(scope.swCollectionConfig.columns, function (column) {
                    newCollectionConfig.addDisplayProperty(column.propertyIdentifier, '', column);
                });
            });
            scope.swCollectionConfig.filtersPromise.then(function () {
                angular.forEach(scope.swCollectionConfig.filters, function (filter) {
                    newCollectionConfig.addFilter(filter.propertyIdentifier, filter.comparisonValue, filter.comparisonOperator, filter.logicalOperator, filter.hidden);
                });
            });
            scope.swCollectionConfig.orderBysPromise.then(function () {
                angular.forEach(scope.swCollectionConfig.orderBys, function (orderBy) {
                    newCollectionConfig.addOrderBy(orderBy);
                });
            });
            _this.$q.all(allCollectionConfigPromises).then(function () {
                if (angular.isDefined(parentDirective)) {
                    if (angular.isDefined(scope.swCollectionConfig.multiCollectionConfigProperty)
                        && angular.isDefined(parentDirective[scope.swCollectionConfig.multiCollectionConfigProperty])) {
                        parentDirective[scope.swCollectionConfig.multiCollectionConfigProperty].push(newCollectionConfig);
                    }
                    else if (angular.isDefined(parentDirective[scope.swCollectionConfig.collectionConfigProperty])) {
                        parentDirective[scope.swCollectionConfig.collectionConfigProperty] = newCollectionConfig;
                    }
                    else {
                        throw ("swCollectionConfig could not locate a collection config property to bind it's collection to");
                    }
                    if (angular.isDefined(parentDirective[scope.swCollectionConfig.parentDeferredProperty])) {
                        parentDirective[scope.swCollectionConfig.parentDeferredProperty].resolve();
                    }
                    else {
                        //throw("SWCollectionConfig cannot resolve rule");
                    }
                }
            }, function (reason) {
                throw ("SWCollectionConfig is having some issues.");
            });
        };
    }
    SWCollectionConfig.Factory = function () {
        var directive = function (collectionConfigService, listingService, scopeService, $q) { return new SWCollectionConfig(collectionConfigService, listingService, scopeService, $q); };
        directive.$inject = [
            'collectionConfigService',
            'listingService',
            'scopeService',
            '$q'
        ];
        return directive;
    };
    return SWCollectionConfig;
}());
exports.SWCollectionConfig = SWCollectionConfig;


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCollectionFilterController = /** @class */ (function () {
    function SWCollectionFilterController() {
    }
    return SWCollectionFilterController;
}());
exports.SWCollectionFilterController = SWCollectionFilterController;
var SWCollectionFilter = /** @class */ (function () {
    //@ngInject
    function SWCollectionFilter(scopeService, utilityService) {
        var _this = this;
        this.scopeService = scopeService;
        this.utilityService = utilityService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyIdentifier: "@",
            comparisonOperator: "@?",
            comparisonValue: "@?",
            logicalOperator: "@?",
            hidden: "@?"
        };
        this.controller = SWCollectionFilterController;
        this.controllerAs = "SWCollectionFilter";
        this.template = "";
        this.link = function (scope, element, attrs) {
            var filter = {
                propertyIdentifier: scope.SWCollectionFilter.propertyIdentifier,
                comparisonOperator: scope.SWCollectionFilter.comparisonOperator,
                comparisonValue: scope.SWCollectionFilter.comparisonValue,
                logicalOperator: scope.SWCollectionFilter.logicalOperator,
                hidden: scope.SWCollectionFilter.hidden
            };
            var currentScope = _this.scopeService.getRootParentScope(scope, "swCollectionConfig");
            if (angular.isDefined(currentScope.swCollectionConfig)) {
                currentScope.swCollectionConfig.filters.push(filter);
                currentScope.swCollectionConfig.filtersDeferred.resolve();
            }
            else {
                throw ("could not find swCollectionConfig in the parent scope from swcollectionfilter");
            }
        };
    }
    SWCollectionFilter.Factory = function () {
        var directive = function (scopeService, utilityService) { return new SWCollectionFilter(scopeService, utilityService); };
        directive.$inject = [
            'scopeService',
            'utilityService'
        ];
        return directive;
    };
    return SWCollectionFilter;
}());
exports.SWCollectionFilter = SWCollectionFilter;


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWCollectionOrderByController = /** @class */ (function () {
    function SWCollectionOrderByController() {
    }
    return SWCollectionOrderByController;
}());
exports.SWCollectionOrderByController = SWCollectionOrderByController;
var SWCollectionOrderBy = /** @class */ (function () {
    //@ngInject
    function SWCollectionOrderBy(scopeService) {
        var _this = this;
        this.scopeService = scopeService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            orderBy: "@"
        };
        this.controller = SWCollectionOrderByController;
        this.controllerAs = "SWCollectionOrderBy";
        this.template = "";
        this.link = function (scope, element, attrs) {
            var orderBy = scope.SWCollectionOrderBy.orderBy;
            var currentScope = _this.scopeService.getRootParentScope(scope, "swCollectionConfig");
            if (angular.isDefined(currentScope.swCollectionConfig)) {
                currentScope.swCollectionConfig.orderBys.push(orderBy);
                currentScope.swCollectionConfig.orderBysDeferred.resolve();
            }
            else {
                throw ("could not find swCollectionConfig in the parent scope from swcollectionorderby");
            }
        };
    }
    SWCollectionOrderBy.Factory = function () {
        var directive = function (scopeService) { return new SWCollectionOrderBy(scopeService); };
        directive.$inject = [
            'scopeService'
        ];
        return directive;
    };
    return SWCollectionOrderBy;
}());
exports.SWCollectionOrderBy = SWCollectionOrderBy;


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWColumnSorter = /** @class */ (function () {
    //@ngInject
    function SWColumnSorter(observerService, corePartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'AE',
            scope: {
                column: "=",
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "columnsorter.html",
            link: function (scope, element, attrs) {
                var orderBy = {
                    "propertyIdentifier": scope.column.propertyIdentifier,
                };
                scope.sortAsc = function () {
                    orderBy.direction = 'Asc';
                    this.observerService.notify('sortByColumn', orderBy);
                };
                scope.sortDesc = function () {
                    orderBy.direction = 'Desc';
                    observerService.notify('sortByColumn', orderBy);
                };
            }
        };
    }
    SWColumnSorter.Factory = function () {
        var directive = function (observerService, corePartialsPath, hibachiPathBuilder) { return new SWColumnSorter(observerService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'observerService',
            'corePartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWColumnSorter;
}());
exports.SWColumnSorter = SWColumnSorter;


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/**
 * <------------------------------------------------------------------------------------------------------------------------------------>
 *   This directive can be used to prompt the user with a confirmation dialog.
 *
 *   Example Usage 1:
 *   <a swconfirm
 *   						use-rb-key=true
 * 							yes-text="define.yes"
 * 							no-text="define.no"
 * 							confirm-text="define.confirm"
 * 							message-text="define.delete.message"
 * 							callback="someFunction()">
 *   </a>
 *   Alternate Version (No Rbkeys):
 *   <a swconfirm
 *   						use-rb-key=false
 * 							yes-text="Sure"
 * 							no-text="Not Sure!"
 * 							confirm-text="Sure"
 * 							message-text="Are you sure?"
 * 							callback="sure()">
 *   </a>
 *
 *   Note: Because the template is dynamic, the following keywords can not be used anywhere in the text for this modal as we interpolate
 *   those.
 *
 *   [yes] [no] [confirm] [message] [callback]
 *
 *   The above words in upper-case can be used - just not those words inside square brackets.
 *   Note: Your callback function on-confirm should return true;
 *<------------------------------------------------------------------------------------------------------------------------------------->
 */
Object.defineProperty(exports, "__esModule", { value: true });
var SWConfirm = /** @class */ (function () {
    //@ngInject
    function SWConfirm($log, $modal) {
        var buildConfirmationModal = function (simple, useRbKey, confirmText, messageText, noText, yesText) {
            /* Keys */
            var confirmKey = "[confirm]";
            var messageKey = "[message]";
            var noKey = "[no]";
            var yesKey = "[yes]";
            var swRbKey = "sw-rbkey=";
            /* Values */
            var confirmVal = "<confirm>";
            var messageVal = "<message>";
            var noVal = "<no>";
            var yesVal = "<yes>";
            /* Parse Tags */
            var startTag = "\"'";
            var endTag = "'\"";
            var startParen = "'";
            var endParen = "'";
            var empty = "";
            /* Modal String */
            var parsedKeyString = "";
            var finishedString = "";
            //Figure out which version of this tag we are using
            var templateString = "<div>" +
                "<div class='modal-header'><a class='close' data-dismiss='modal' ng-click='cancel()'>×</a><h3 [confirm]><confirm></h3></div>" +
                "<div class='modal-body' [message]>" + "<message>" + "</div>" +
                "<div class='modal-footer'>" +
                "<button class='btn btn-sm btn-default btn-inverse' ng-click='cancel()' [no]><no></button>" +
                "<button class='btn btn-sm btn-default btn-primary' ng-click='fireCallback(callback)' [yes]><yes></button></div></div></div>";
            /* Use RbKeys or Not? */
            if (useRbKey === "true") {
                $log.debug("Using RbKey? " + useRbKey);
                /* Then decorate the template with the keys. */
                confirmText = swRbKey + startTag + confirmText + endTag;
                messageText = swRbKey + startTag + messageText + endTag;
                yesText = swRbKey + startTag + yesText + endTag;
                noText = swRbKey + startTag + noText + endTag;
                parsedKeyString = templateString.replace(confirmKey, confirmText)
                    .replace(messageText, messageText)
                    .replace(noKey, noText)
                    .replace(yesKey, yesText);
                $log.debug(finishedString);
                finishedString = parsedKeyString.replace(confirmKey, empty)
                    .replace(messageVal, empty)
                    .replace(noVal, empty)
                    .replace(yesVal, empty);
                $log.debug(finishedString);
                return finishedString;
            }
            else {
                /* Then decorate the template without the keys. */
                $log.debug("Using RbKey? " + useRbKey);
                parsedKeyString = templateString.replace(confirmVal, confirmText)
                    .replace(messageVal, messageText)
                    .replace(noVal, noText)
                    .replace(yesVal, yesText);
                finishedString = parsedKeyString.replace(confirmKey, empty)
                    .replace(messageKey, empty)
                    .replace(noKey, empty)
                    .replace(yesKey, empty);
                $log.debug(finishedString);
                return finishedString;
            }
        };
        return {
            restrict: 'EA',
            scope: {
                callback: "&",
                entity: "="
            },
            link: function (scope, element, attr) {
                /* Grab the template and build the modal on click */
                $log.debug("Modal is: ");
                $log.debug($modal);
                element.bind('click', function () {
                    /* Default Values */
                    var useRbKey = attr.useRbKey || "false";
                    var simple = attr.simple || false;
                    var yesText = attr.yesText || "define.yes";
                    var noText = attr.noText || "define.no";
                    var confirmText = attr.confirmText || "define.delete";
                    var messageText = attr.messageText || "define.delete_message";
                    var templateString = buildConfirmationModal(simple, useRbKey, confirmText, messageText, noText, yesText);
                    var modalInstance = $modal.open({
                        template: templateString,
                        controller: 'confirmationController',
                        scope: scope
                    });
                    /**
                        * Handles the result - callback or dismissed
                        */
                    modalInstance.result.then(function (result) {
                        $log.debug("Result:" + result);
                        return true;
                    }, function () {
                        //There was an error
                    });
                }); //<--end bind
            }
        };
    }
    SWConfirm.Factory = function () {
        var directive = function ($log, $modal) { return new SWConfirm($log, $modal); };
        directive.$inject = ['$log', '$modal'];
        return directive;
    };
    return SWConfirm;
}());
exports.SWConfirm = SWConfirm;


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDirective = /** @class */ (function () {
    //@ngInject
    function SWDirective($compile, utilityService) {
        return {
            restrict: 'AE',
            //replace:true,
            scope: {
                variables: "=",
                directiveTemplate: "="
            },
            controllerAs: "swDirective",
            link: function (scope, element, attrs) {
                var tempVariables = {};
                angular.forEach(scope.variables, function (value, key) {
                    if (key.toString().charAt(0) != "$" && value !== " ") {
                        tempVariables[utilityService.keyToAttributeString(key)] = value;
                    }
                });
                scope.variables = tempVariables;
                var template = '<' + scope.directiveTemplate + ' ';
                if (angular.isDefined(scope.variables)) {
                    angular.forEach(scope.variables, function (value, key) {
                        if (!angular.isString(value) && !angular.isNumber(value)) {
                            template += ' ' + key + '="swDirective.' + 'variables.' + key + '" ';
                        }
                        else {
                            template += ' ' + key + '="' + value + '" ';
                        }
                    });
                }
                template += '>';
                template += '</' + scope.directiveTemplate + '>';
                // Render the template.
                element.html($compile(template)(scope));
            }
        };
    }
    SWDirective.Factory = function () {
        var directive = function ($compile, utilityService) { return new SWDirective($compile, utilityService); };
        directive.$inject = [
            '$compile',
            'utilityService'
        ];
        return directive;
    };
    return SWDirective;
}());
exports.SWDirective = SWDirective;


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWDraggableController = /** @class */ (function () {
    //@ngInject
    function SWDraggableController() {
        if (angular.isUndefined(this.draggable)) {
            this.draggable = false;
        }
    }
    return SWDraggableController;
}());
var SWDraggable = /** @class */ (function () {
    //@ngInject
    function SWDraggable(corePartialsPath, utilityService, draggableService, hibachiPathBuilder) {
        var _this = this;
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.draggableService = draggableService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'EA';
        this.scope = {};
        this.bindToController = {
            //all fields required
            draggable: "=",
            draggableRecord: "=",
            draggableKey: "="
        };
        this.controller = SWDraggableController;
        this.controllerAs = "swDraggable";
        this.link = function (scope, element, attrs) {
            scope.$watch('swDraggable.draggable', function (newValue, oldValue) {
                angular.element(element).attr("draggable", newValue);
                var id = angular.element(element).attr("id");
                if (!id) {
                    id = _this.utilityService.createID(32);
                }
                if (newValue) {
                    element.bind("dragstart", function (e) {
                        e = e.originalEvent || e;
                        e.stopPropagation();
                        if (!scope.swDraggable.draggable)
                            return false;
                        element.addClass("s-dragging");
                        scope.swDraggable.draggableRecord.draggableStartKey = scope.swDraggable.draggableKey;
                        e.dataTransfer.setData("application/json", angular.toJson(scope.swDraggable.draggableRecord));
                        e.dataTransfer.effectAllowed = "move";
                        e.dataTransfer.setDragImage(element[0], 0, 0);
                    });
                    element.bind("dragend", function (e) {
                        e = e.originalEvent || e;
                        e.stopPropagation();
                        element.removeClass("s-dragging");
                    });
                }
                else {
                    element.unbind("dragstart");
                    element.unbind("dragged");
                }
            });
        };
    }
    SWDraggable.Factory = function () {
        var directive = function (corePartialsPath, utilityService, draggableService, hibachiPathBuilder) { return new SWDraggable(corePartialsPath, utilityService, draggableService, hibachiPathBuilder); };
        directive.$inject = [
            'corePartialsPath',
            'utilityService',
            'draggableService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDraggable;
}());
exports.SWDraggable = SWDraggable;


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWDraggableContainerController = /** @class */ (function () {
    //@ngInject
    function SWDraggableContainerController(draggableService) {
        this.draggableService = draggableService;
        if (angular.isUndefined(this.draggable)) {
            this.draggable = false;
        }
    }
    return SWDraggableContainerController;
}());
var SWDraggableContainer = /** @class */ (function () {
    //@ngInject
    function SWDraggableContainer($timeout, corePartialsPath, utilityService, listingService, observerService, draggableService, hibachiPathBuilder) {
        var _this = this;
        this.$timeout = $timeout;
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.listingService = listingService;
        this.observerService = observerService;
        this.draggableService = draggableService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'EA';
        this.scope = {};
        this.bindToController = {
            draggable: "=?",
            draggableRecords: "=?",
            dropEventName: "@?",
            listingId: "@?"
        };
        this.controller = SWDraggableContainerController;
        this.controllerAs = "swDraggableContainer";
        this.link = function (scope, element, attrs) {
            scope.$watch('swDraggableContainer.draggable', function (newValue, oldValue) {
                angular.element(element).attr("draggable", newValue);
                var placeholderElement = angular.element("<tr class='s-placeholder'><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td>placeholder</td><td></td></tr>"); //temporarirly hardcoding tds so it will show up
                var id = angular.element(element).attr("id");
                if (!id) {
                    id = _this.utilityService.createID(32);
                }
                var listNode = element[0];
                var placeholderNode = placeholderElement[0];
                placeholderElement.remove();
                if (newValue) {
                    element.on('drop', function (e) {
                        e = e.originalEvent || e;
                        e.preventDefault();
                        if (!_this.draggableService.isDropAllowed(e))
                            return true;
                        var record = e.dataTransfer.getData("application/json") || e.dataTransfer.getData("text/plain");
                        var parsedRecord = JSON.parse(record);
                        var index = Array.prototype.indexOf.call(listNode.children, placeholderNode);
                        if (index < parsedRecord.draggableStartKey) {
                            parsedRecord.draggableStartKey++;
                        }
                        _this.$timeout(function () {
                            scope.swDraggableContainer.draggableRecords.splice(index, 0, parsedRecord);
                            scope.swDraggableContainer.draggableRecords.splice(parsedRecord.draggableStartKey, 1);
                        }, 0);
                        if (angular.isDefined(scope.swDraggableContainer.listingId)) {
                            _this.listingService.notifyListingPageRecordsUpdate(scope.swDraggableContainer.listingId);
                        }
                        else if (angular.isDefined(scope.swDraggableContainer.dropEventName)) {
                            _this.observerService.notify(scope.swDraggableContainer.dropEventName);
                        }
                        placeholderElement.remove();
                        e.stopPropagation();
                        return false;
                    });
                    element.on('dragenter', function (e) {
                        e = e.originalEvent || e;
                        if (!_this.draggableService.isDropAllowed(e))
                            return true;
                        e.preventDefault();
                    });
                    element.on('dragleave', function (e) {
                        e = e.originalEvent || e;
                        if (e.pageX != 0 || e.pageY != 0) {
                            return false;
                        }
                        return false;
                    });
                    element.on('dragover', function (e) {
                        e = e.originalEvent || e;
                        e.stopPropagation();
                        if (placeholderNode.parentNode != listNode) {
                            element.append(placeholderElement);
                        }
                        if (e.target !== listNode) {
                            var listItemNode = e.target;
                            while (listItemNode.parentNode !== listNode && listItemNode.parentNode) {
                                listItemNode = listItemNode.parentNode;
                            }
                            if (listItemNode.parentNode === listNode && listItemNode !== placeholderNode) {
                                if (_this.draggableService.isMouseInFirstHalf(e, listItemNode)) {
                                    listNode.insertBefore(placeholderNode, listItemNode);
                                }
                                else {
                                    listNode.insertBefore(placeholderNode, listItemNode.nextSibling);
                                }
                            }
                        }
                        element.addClass("s-dragged-over");
                        return false;
                    });
                }
            });
        };
    }
    SWDraggableContainer.Factory = function () {
        var directive = function ($timeout, corePartialsPath, utilityService, listingService, observerService, draggableService, hibachiPathBuilder) { return new SWDraggableContainer($timeout, corePartialsPath, utilityService, listingService, observerService, draggableService, hibachiPathBuilder); };
        directive.$inject = [
            '$timeout',
            'corePartialsPath',
            'utilityService',
            'listingService',
            'observerService',
            'draggableService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDraggableContainer;
}());
exports.SWDraggableContainer = SWDraggableContainer;


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWEntityActionBarController = /** @class */ (function () {
    //@ngInject
    function SWEntityActionBarController(rbkeyService) {
        var _this = this;
        this.rbkeyService = rbkeyService;
        this.init = function () {
            if (angular.isDefined(_this.pageTitleRbKey)) {
                _this.pageTitle = _this.rbkeyService.getRBKey(_this.pageTitleRbKey);
            }
        };
        this.init();
    }
    return SWEntityActionBarController;
}());
var SWEntityActionBar = /** @class */ (function () {
    //@ngInject
    function SWEntityActionBar(corePartialsPath, hibachiPathBuilder) {
        this.corePartialsPath = corePartialsPath;
        this.restrict = 'E';
        this.scope = {};
        this.transclude = true;
        this.bindToController = {
            /*Core settings*/
            type: "@",
            object: "=",
            pageTitle: "@?",
            pageTitleRbKey: "@?",
            edit: "=",
            /*Action Callers (top buttons)*/
            showcancel: "=",
            showcreate: "=",
            showedit: "=",
            showdelete: "=",
            /*Basic Action Caller Overrides*/
            createModal: "=",
            createAction: "=",
            createQueryString: "=",
            backAction: "=",
            backQueryString: "=",
            cancelAction: "=",
            cancelQueryString: "=",
            deleteAction: "=",
            deleteQueryString: "=",
            /*Process Specific Values*/
            processAction: "=",
            processContext: "="
        };
        this.controller = SWEntityActionBarController;
        this.controllerAs = "swEntityActionBar";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + 'entityactionbar.html';
    }
    SWEntityActionBar.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWEntityActionBar(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ['corePartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWEntityActionBar;
}());
exports.SWEntityActionBar = SWEntityActionBar;
//	angular.module('slatwalladmin').directive('swEntityActionBar',['corePartialsPath',(corePartialsPath) => new SWEntityActionBar(corePartialsPath)]);


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWEntityActionBarButtonGroupController = /** @class */ (function () {
    function SWEntityActionBarButtonGroupController() {
    }
    return SWEntityActionBarButtonGroupController;
}());
var SWEntityActionBarButtonGroup = /** @class */ (function () {
    //@ngInject
    function SWEntityActionBarButtonGroup(corePartialsPath, hibachiPathBuilder) {
        this.corePartialsPath = corePartialsPath;
        this.restrict = 'E';
        this.scope = {};
        this.transclude = true;
        this.bindToController = {};
        this.controller = SWEntityActionBarButtonGroupController;
        this.controllerAs = "swEntityActionBarButtonGroup";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + 'entityactionbarbuttongroup.html';
    }
    SWEntityActionBarButtonGroup.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWEntityActionBarButtonGroup(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ['corePartialsPath',
            'hibachiPathBuilder'];
        return directive;
    };
    return SWEntityActionBarButtonGroup;
}());
exports.SWEntityActionBarButtonGroup = SWEntityActionBarButtonGroup;


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWExpandableRecordController = /** @class */ (function () {
    //@ngInject
    function SWExpandableRecordController($timeout, $hibachi, utilityService, collectionConfigService, expandableService, listingService, observerService) {
        var _this = this;
        this.$timeout = $timeout;
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        this.collectionConfigService = collectionConfigService;
        this.expandableService = expandableService;
        this.listingService = listingService;
        this.observerService = observerService;
        this.childrenLoaded = false;
        this.childrenOpen = false;
        this.children = [];
        this.refreshChildren = function () {
            _this.getEntity();
        };
        this.setupChildCollectionConfig = function () {
            _this.childCollectionConfig = _this.collectionConfigService.newCollectionConfig(_this.entity.metaData.className);
            //set up parent
            var parentName = _this.entity.metaData.hb_parentPropertyName;
            var parentCFC = _this.entity.metaData[parentName].cfc;
            _this.parentIDName = _this.$hibachi.getEntityExample(parentCFC).$$getIDName();
            //set up child
            var childName = _this.entity.metaData.hb_childPropertyName;
            var childCFC = _this.entity.metaData[childName].cfc;
            var childIDName = _this.$hibachi.getEntityExample(childCFC).$$getIDName();
            _this.childCollectionConfig.clearFilterGroups();
            _this.childCollectionConfig.collection = _this.entity;
            _this.childCollectionConfig.addFilter(parentName + '.' + _this.parentIDName, _this.parentId);
            _this.childCollectionConfig.setAllRecords(true);
            angular.forEach(_this.collectionConfig.columns, function (column) {
                _this.childCollectionConfig.addColumn(column.propertyIdentifier, column.title, column);
            });
            angular.forEach(_this.collectionConfig.joins, function (join) {
                _this.childCollectionConfig.addJoin(join);
            });
            _this.childCollectionConfig.groupBys = _this.collectionConfig.groupBys;
        };
        this.getEntity = function () {
            _this.collectionPromise.then(function (data) {
                _this.collectionData = data;
                _this.collectionData.pageRecords = _this.collectionData.pageRecords || _this.collectionData.records;
                if (_this.collectionData.pageRecords.length) {
                    angular.forEach(_this.collectionData.pageRecords, function (pageRecord) {
                        _this.expandableService.addRecord(pageRecord[_this.parentIDName], true);
                        pageRecord.dataparentID = _this.recordID;
                        pageRecord.depth = _this.recordDepth || 0;
                        pageRecord.depth++;
                        //push the children into the listing display
                        _this.children.push(pageRecord);
                        _this.records.splice(_this.recordIndex + 1, 0, pageRecord);
                    });
                }
                _this.childrenLoaded = true;
            });
        };
        this.toggleChild = function () {
            _this.$timeout(function () {
                _this.childrenOpen = !_this.childrenOpen;
                _this.expandableService.updateState(_this.recordID, { isOpen: _this.childrenOpen });
                if (!_this.childrenLoaded) {
                    if (_this.childCollectionConfig == null) {
                        _this.setupChildCollectionConfig();
                    }
                    if (angular.isFunction(_this.childCollectionConfig.getEntity)) {
                        _this.collectionPromise = _this.childCollectionConfig.getEntity();
                    }
                    _this.getEntity();
                }
                angular.forEach(_this.children, function (child) {
                    child.dataIsVisible = _this.childrenOpen;
                    var entityPrimaryIDName = _this.entity.$$getIDName();
                    var idsToCheck = [];
                    idsToCheck.push(child[entityPrimaryIDName]);
                    _this.expandableService.updateState(child[entityPrimaryIDName], { isOpen: _this.childrenOpen });
                    //close all children of the child if we are closing
                    var childrenTraversed = false;
                    var recordLength = _this.records.length;
                    while (!childrenTraversed && idsToCheck.length > 0) {
                        var found = false;
                        var idToCheck = idsToCheck.pop();
                        for (var i = 0; i < recordLength; i++) {
                            var record = _this.records[i];
                            if (record['dataparentID'] == idToCheck) {
                                idsToCheck.push(record[entityPrimaryIDName]);
                                _this.expandableService.updateState(record[entityPrimaryIDName], { isOpen: _this.childrenOpen });
                                record.dataIsVisible = _this.childrenOpen;
                                found = true;
                            }
                        }
                        if (!found) {
                            childrenTraversed = true;
                        }
                    }
                });
            });
        };
        this.recordID = this.parentId; //this is what parent is initalized to in the listing display
        expandableService.addRecord(this.recordID);
        if (angular.isDefined(this.refreshChildrenEvent) && this.refreshChildrenEvent.length) {
            this.observerService.attach(this.refreshChildren, this.refreshChildrenEvent);
        }
    }
    return SWExpandableRecordController;
}());
var SWExpandableRecord = /** @class */ (function () {
    //@ngInject
    function SWExpandableRecord($compile, $templateRequest, $timeout, corePartialsPath, utilityService, expandableService, hibachiPathBuilder) {
        var _this = this;
        this.$compile = $compile;
        this.$templateRequest = $templateRequest;
        this.$timeout = $timeout;
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.expandableService = expandableService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'EA';
        this.scope = {};
        this.bindToController = {
            recordValue: "=",
            link: "@",
            expandable: "=?",
            parentId: "=",
            entity: "=",
            collectionConfig: "=?",
            childCollectionConfig: "=?",
            refreshChildrenEvent: "=?",
            listingId: "@?",
            records: "=",
            pageRecord: "=",
            recordIndex: "=",
            recordDepth: "=",
            childCount: "=",
            autoOpen: "=",
            multiselectIdPaths: "=",
            expandableRules: "="
        };
        this.controller = SWExpandableRecordController;
        this.controllerAs = "swExpandableRecord";
        this.link = function (scope, element, attrs) {
            if (scope.swExpandableRecord.expandable && scope.swExpandableRecord.childCount) {
                if (scope.swExpandableRecord.recordValue) {
                    var id = scope.swExpandableRecord.records[scope.swExpandableRecord.recordIndex][scope.swExpandableRecord.entity.$$getIDName()];
                    if (scope.swExpandableRecord.multiselectIdPaths && scope.swExpandableRecord.multiselectIdPaths.length) {
                        var multiselectIdPathsArray = scope.swExpandableRecord.multiselectIdPaths.split(',');
                        if (!scope.swExpandableRecord.childrenLoaded) {
                            angular.forEach(multiselectIdPathsArray, function (multiselectIdPath) {
                                var position = _this.utilityService.listFind(multiselectIdPath, id, '/');
                                var multiSelectIDs = multiselectIdPath.split('/');
                                var multiselectPathLength = multiSelectIDs.length;
                                if (position !== -1 && position < multiselectPathLength - 1 && !_this.expandableService.getState(id, "isOpen")) {
                                    _this.expandableService.updateState(id, { isOpen: true });
                                    scope.swExpandableRecord.toggleChild();
                                }
                            });
                        }
                    }
                }
                _this.$templateRequest(_this.hibachiPathBuilder.buildPartialsPath(_this.corePartialsPath) + "expandablerecord.html").then(function (html) {
                    var template = angular.element(html);
                    //get autoopen reference to ensure only the root is autoopenable
                    var autoOpen = angular.copy(scope.swExpandableRecord.autoOpen);
                    scope.swExpandableRecord.autoOpen = false;
                    template = _this.$compile(template)(scope);
                    element.html(template);
                    element.on('click', scope.swExpandableRecord.toggleChild);
                    if (autoOpen) {
                        scope.swExpandableRecord.toggleChild();
                    }
                });
            }
        };
        this.$compile = $compile;
        this.$templateRequest = $templateRequest;
        this.corePartialsPath = corePartialsPath;
        this.$timeout = $timeout;
        this.utilityService = utilityService;
        this.expandableService = expandableService;
        this.hibachiPathBuilder = hibachiPathBuilder;
    }
    SWExpandableRecord.Factory = function () {
        var directive = function ($compile, $templateRequest, $timeout, corePartialsPath, utilityService, expandableService, hibachiPathBuilder) { return new SWExpandableRecord($compile, $templateRequest, $timeout, corePartialsPath, utilityService, expandableService, hibachiPathBuilder); };
        directive.$inject = [
            '$compile',
            '$templateRequest',
            '$timeout',
            'corePartialsPath',
            'utilityService',
            'expandableService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWExpandableRecord;
}());
exports.SWExpandableRecord = SWExpandableRecord;


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWExpiringSessionNotifierController = /** @class */ (function () {
    //@ngInject
    function SWExpiringSessionNotifierController($timeout, $http, $hibachi, localStorageService) {
        var _this = this;
        this.$timeout = $timeout;
        this.$http = $http;
        this.$hibachi = $hibachi;
        this.localStorageService = localStorageService;
        this.startTimeout = function () {
            _this.$timeout(function () {
                console.warn("Session Is About To Expire, 3 Minutes Left");
                //regardless of user input as long as they respond 
                var answer = confirm(_this.confirmText);
                _this.$http.get(_this.$hibachi.buildUrl('api:main.login')).then(function (response) {
                    if (response.status === 200) {
                        _this.localStorageService.setItem('token', response.data.token);
                        _this.startTimeout();
                    }
                    else {
                        alert('Unable To Login');
                        location.reload();
                    }
                }, function (rejection) {
                    throw ('Login Failed');
                });
            }, 720000);
        };
        console.warn("Expiring Session Notifier Constructed.");
        if (angular.isUndefined(this.confirmText)) {
            this.confirmText = 'Are you still there? You are about to be logged out.';
        }
        this.startTimeout();
    }
    return SWExpiringSessionNotifierController;
}());
var SWExpiringSessionNotifier = /** @class */ (function () {
    //@ngInject
    function SWExpiringSessionNotifier(corePartialsPath, hibachiPathBuilder) {
        this.corePartialsPath = corePartialsPath;
        this.restrict = 'E';
        this.scope = {};
        this.transclude = false;
        this.bindToController = {
            confirmText: '@?'
        };
        this.controller = SWExpiringSessionNotifierController;
        this.controllerAs = "swExpiringSessionNotifier";
        this.link = function (scope, element, attrs) {
        };
        this.template = '';
    }
    SWExpiringSessionNotifier.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWExpiringSessionNotifier(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ['corePartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWExpiringSessionNotifier;
}());
exports.SWExpiringSessionNotifier = SWExpiringSessionNotifier;


/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWExportAction = /** @class */ (function () {
    //@ngInject
    function SWExportAction($log, corePartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            templateUrl: hibachiPathBuilder.buildPartialsPath(corePartialsPath) + 'exportaction.html',
            scope: {},
            link: function (scope, element, attrs) {
            }
        };
    }
    SWExportAction.Factory = function () {
        var directive = function ($log, corePartialsPath, hibachiPathBuilder) { return new SWExportAction($log, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'corePartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWExportAction;
}());
exports.SWExportAction = SWExportAction;


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var md5 = __webpack_require__(64);
var SWGravatarController = /** @class */ (function () {
    // @ngInject
    function SWGravatarController() {
        this.gravatarURL = "http://www.gravatar.com/avatar/" + md5(this.emailAddress.toLowerCase().trim());
    }
    return SWGravatarController;
}());
exports.SWGravatarController = SWGravatarController;
var SWGravatar = /** @class */ (function () {
    function SWGravatar() {
        this.template = "<img src='{{swGravatar.gravatarURL}}' />";
        this.transclude = false;
        this.restrict = "E";
        this.scope = {};
        this.bindToController = {
            emailAddress: "@"
        };
        this.controller = SWGravatarController;
        this.controllerAs = "swGravatar";
        this.link = function (scope, element, attrs, controller, transclude) {
        };
    }
    SWGravatar.Factory = function () {
        var directive = function () { return new SWGravatar(); };
        directive.$inject = [];
        return directive;
    };
    SWGravatar.$inject = ["$hibachi", "$timeout", "collectionConfigService", "corePartialsPath",
        'hibachiPathBuilder'];
    return SWGravatar;
}());
exports.SWGravatar = SWGravatar;


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWHref = /** @class */ (function () {
    function SWHref() {
        return {
            restrict: 'A',
            scope: {
                swHref: "@"
            },
            link: function (scope, element, attrs) {
                /*convert link to use hashbang*/
                var hrefValue = attrs.swHref;
                hrefValue = '?ng#!' + hrefValue;
                element.attr('href', hrefValue);
            }
        };
    }
    SWHref.Factory = function () {
        var directive = function () { return new SWHref(); };
        directive.$inject = [];
        return directive;
    };
    return SWHref;
}());
exports.SWHref = SWHref;


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWLoading = /** @class */ (function () {
    function SWLoading($log, corePartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            transclude: true,
            templateUrl: hibachiPathBuilder.buildPartialsPath(corePartialsPath) + 'loading.html',
            scope: {
                swLoading: '='
            },
            link: function (scope, attrs, element) {
            }
        };
    }
    SWLoading.Factory = function () {
        var directive = function ($log, corePartialsPath, hibachiPathBuilder) { return new SWLoading($log, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'corePartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWLoading;
}());
exports.SWLoading = SWLoading;


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWLoginController = /** @class */ (function () {
    //@ngInject
    function SWLoginController($route, $log, $window, corePartialsPath, $hibachi, dialogService, hibachiScope) {
        var _this = this;
        this.$route = $route;
        this.$log = $log;
        this.$window = $window;
        this.corePartialsPath = corePartialsPath;
        this.$hibachi = $hibachi;
        this.dialogService = dialogService;
        this.hibachiScope = hibachiScope;
        this.login = function () {
            var loginPromise = _this.$hibachi.login(_this.account_login.data.emailAddress, _this.account_login.data.password);
            loginPromise.then(function (loginResponse) {
                if (loginResponse && loginResponse.data && loginResponse.data.token) {
                    _this.$window.localStorage.setItem('token', loginResponse.data.token);
                    _this.hibachiScope.loginDisplayed = false;
                    _this.$route.reload();
                    _this.dialogService.removeCurrentDialog();
                }
            }, function (rejection) {
            });
        };
        this.$hibachi = $hibachi;
        this.$window = $window;
        this.$route = $route;
        this.hibachiScope = hibachiScope;
        this.account_login = $hibachi.newEntity('Account_Login');
    }
    return SWLoginController;
}());
var SWLogin = /** @class */ (function () {
    //@ngInject
    function SWLogin($route, $log, $window, corePartialsPath, $hibachi, dialogService, hibachiPathBuilder) {
        this.$route = $route;
        this.$log = $log;
        this.$window = $window;
        this.corePartialsPath = corePartialsPath;
        this.$hibachi = $hibachi;
        this.dialogService = dialogService;
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {};
        this.controller = SWLoginController;
        this.controllerAs = "SwLogin";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(this.corePartialsPath + '/login.html');
    }
    SWLogin.Factory = function () {
        var directive = function ($route, $log, $window, corePartialsPath, $hibachi, dialogService, hibachiPathBuilder) { return new SWLogin($route, $log, $window, corePartialsPath, $hibachi, dialogService, hibachiPathBuilder); };
        directive.$inject = [
            '$route',
            '$log',
            '$window',
            'corePartialsPath',
            '$hibachi',
            'dialogService',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWLogin;
}());
exports.SWLogin = SWLogin;


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWModalLauncherController = /** @class */ (function () {
    // @ngInject
    function SWModalLauncherController() {
        var _this = this;
        this.hasSaveAction = false;
        this.hasCancelAction = false;
        this.hasDeleteAction = false;
        this.launchModal = function () {
            //activate the necessary modal
            _this.showModal = true;
        };
        this.saveCallback = function () {
            //the passed save action must return a promise
            if (_this.hasSaveAction) {
                var savePromise = _this.saveAction()();
            }
            savePromise.then(function (response) {
                //if the action was sucessful
                $("#" + _this.modalName).modal('hide');
            }, function (reason) {
                //if the action failed
            });
        };
        this.deleteCallback = function () {
            //the passed save action must return a promise
            if (_this.hasDeleteAction) {
                var deletePromise = _this.saveAction()();
            }
            deletePromise.then(function (response) {
                //if the action was sucessful
                $("#" + _this.modalName).modal('hide');
            }, function (reason) {
                //if the action failed
            });
        };
        this.cancelCallback = function () {
            if (_this.hasCancelAction) {
                _this.cancelAction()();
            }
        };
        if (angular.isUndefined(this.showModal)) {
            this.showModal = false;
        }
        if (angular.isUndefined(this.saveActionText)) {
            this.saveActionText = "Save";
        }
        if (angular.isUndefined(this.cancelActionText)) {
            this.cancelActionText = "Cancel";
        }
    }
    return SWModalLauncherController;
}());
exports.SWModalLauncherController = SWModalLauncherController;
var SWModalLauncher = /** @class */ (function () {
    // @ngInject
    function SWModalLauncher($compile, corePartialsPath, hibachiPathBuilder) {
        this.$compile = $compile;
        this.corePartialsPath = corePartialsPath;
        this.transclude = {
            button: '?swModalButton',
            staticButton: '?swModalStaticButton',
            content: '?swModalContent'
        };
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            showModal: "=?",
            modalName: "@",
            title: "@",
            saveAction: "&?",
            deleteAction: "&?",
            cancelAction: "&?",
            saveActionText: "@?",
            cancelActionText: "@?"
        };
        this.controller = SWModalLauncherController;
        this.controllerAs = "swModalLauncher";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                    if (angular.isDefined(attrs.saveAction)) {
                        $scope.swModalLauncher.hasSaveAction = true;
                    }
                    if (angular.isDefined(attrs.deleteAction)) {
                        $scope.swModalLauncher.hasDeleteAction = true;
                    }
                    if (angular.isDefined(attrs.cancelAction)) {
                        $scope.swModalLauncher.hasCancelAction = true;
                    }
                },
                post: function ($scope, element, attrs) {
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "modallauncher.html";
    }
    SWModalLauncher.Factory = function () {
        var directive = function ($compile, corePartialsPath, hibachiPathBuilder) { return new SWModalLauncher($compile, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "corePartialsPath",
            'hibachiPathBuilder'];
        return directive;
    };
    return SWModalLauncher;
}());
exports.SWModalLauncher = SWModalLauncher;


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWModalWindowController = /** @class */ (function () {
    // @ngInject
    function SWModalWindowController() {
        if (angular.isUndefined(this.modalName)) {
            console.warn("You did not pass a modal title to SWModalWindowController");
            this.modalName = "";
        }
    }
    return SWModalWindowController;
}());
exports.SWModalWindowController = SWModalWindowController;
var SWModalWindow = /** @class */ (function () {
    // @ngInject
    function SWModalWindow($compile, corePartialsPath, hibachiPathBuilder) {
        this.$compile = $compile;
        this.corePartialsPath = corePartialsPath;
        this.transclude = {
            modalBody: "?swModalBody"
        };
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            modalName: "@",
            title: "@",
            hasSaveAction: "=?",
            saveAction: "&?",
            hasDeleteAction: "=?",
            deleteAction: "&?",
            hasCancelAction: "=?",
            cancelAction: "&?",
            saveActionText: "@",
            cancelActionText: "@"
        };
        this.controller = SWModalWindowController;
        this.controllerAs = "swModalWindow";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                },
                post: function ($scope, element, attrs) {
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "modalwindow.html";
    }
    SWModalWindow.Factory = function () {
        var directive = function ($compile, corePartialsPath, hibachiPathBuilder) { return new SWModalWindow($compile, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "corePartialsPath",
            'hibachiPathBuilder'];
        return directive;
    };
    return SWModalWindow;
}());
exports.SWModalWindow = SWModalWindow;


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWNumbersOnly = /** @class */ (function () {
    function SWNumbersOnly() {
        this.restrict = "A";
        this.require = "ngModel";
        this.scope = {
            ngModel: '=',
            minNumber: '=?',
            maxNumber: '=?'
        };
        this.link = function ($scope, element, attrs, modelCtrl) {
            modelCtrl.$parsers.unshift(function (inputValue) {
                var modelValue = modelCtrl.$modelValue;
                if (inputValue != "" && !isNaN(Number(inputValue))) {
                    if (angular.isDefined($scope.minNumber)) {
                        if (Number(inputValue) >= $scope.minNumber || !angular.isDefined($scope.minNumber)) {
                            modelCtrl.$setValidity("minNumber", true);
                        }
                        else if (angular.isDefined($scope.minNumber)) {
                            modelCtrl.$setValidity("minNumber", false);
                        }
                    }
                    if (angular.isDefined($scope.maxNumber)) {
                        if (Number(inputValue) <= $scope.maxNumber || !angular.isDefined($scope.maxNumber)) {
                            modelCtrl.$setValidity("maxNumber", true);
                        }
                        else if (angular.isDefined($scope.maxNumber)) {
                            modelCtrl.$setValidity("maxNumber", false);
                        }
                    }
                    if (modelCtrl.$valid) {
                        modelValue = Number(inputValue);
                    }
                    else {
                        modelValue = $scope.minNumber;
                    }
                }
                return modelValue;
            });
        };
    }
    SWNumbersOnly.Factory = function () {
        var directive = function () { return new SWNumbersOnly(); };
        directive.$inject = [];
        return directive;
    };
    return SWNumbersOnly;
}());
exports.SWNumbersOnly = SWNumbersOnly;


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWOptions = /** @class */ (function () {
    function SWOptions($log, $hibachi, observerService, corePartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'AE',
            scope: {
                objectName: '@'
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "options.html",
            link: function (scope, element, attrs) {
                scope.swOptions = {};
                scope.swOptions.objectName = scope.objectName;
                //sets up drop down options via collections
                scope.getOptions = function () {
                    scope.swOptions.object = $hibachi['new' + scope.swOptions.objectName]();
                    var columnsConfig = [
                        {
                            "propertyIdentifier": scope.swOptions.objectName.charAt(0).toLowerCase() + scope.swOptions.objectName.slice(1) + 'Name'
                        },
                        {
                            "propertyIdentifier": scope.swOptions.object.$$getIDName()
                        }
                    ];
                    $hibachi.getEntity(scope.swOptions.objectName, { allRecords: true, columnsConfig: angular.toJson(columnsConfig) })
                        .then(function (value) {
                        scope.swOptions.options = value.records;
                        observerService.notify('optionsLoaded');
                    });
                };
                scope.getOptions();
                var selectOption = function (option) {
                    if (option) {
                        scope.swOptions.selectOption(option);
                    }
                    else {
                        scope.swOptions.selectOption(scope.swOptions.options[0]);
                    }
                };
                observerService.attach(selectOption, 'selectOption', 'selectOption');
                //use by ng-change to record changes
                scope.swOptions.selectOption = function (selectedOption) {
                    scope.swOptions.selectedOption = selectedOption;
                    observerService.notify('optionsChanged', selectedOption);
                };
            }
        };
    }
    SWOptions.Factory = function () {
        var directive = function ($log, $hibachi, observerService, corePartialsPath, hibachiPathBuilder) { return new SWOptions($log, $hibachi, observerService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'observerService',
            'corePartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWOptions;
}());
exports.SWOptions = SWOptions;


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWOrderByControlsController = /** @class */ (function () {
    // @ngInject
    function SWOrderByControlsController(listingService, observerService, utilityService) {
        var _this = this;
        this.listingService = listingService;
        this.observerService = observerService;
        this.utilityService = utilityService;
        this.sortCode = "ASC";
        this.updateSortOrderProperty = function () {
            if (angular.isDefined(_this.selectedPropertyIdentifier)) {
                _this.propertyNotChosen = false;
            }
            else {
                _this.propertyNotChosen = true;
            }
            _this.updateOrderBy();
        };
        this.updateOrderBy = function () {
            if (angular.isDefined(_this.selectedPropertyIdentifier) && _this.selectedPropertyIdentifier.length > 0) {
                var propertyIdentifier = _this.selectedPropertyIdentifier;
            }
            switch (_this.sortCode) {
                case "ASC":
                    _this.disabled = false;
                    if (propertyIdentifier != null) {
                        if (angular.isDefined(_this.collectionConfig)) {
                            _this.collectionConfig.toggleOrderBy(propertyIdentifier, true); //single column mode true
                        }
                        if (_this.inListingDisplay) {
                            _this.listingService.setSingleColumnOrderBy(_this.listingId, propertyIdentifier, "ASC");
                        }
                    }
                    if (_this.inListingDisplay)
                        _this.listingService.setManualSort(_this.listingId, false);
                    break;
                case "DESC":
                    _this.disabled = false;
                    if (propertyIdentifier != null) {
                        if (angular.isDefined(_this.collectionConfig)) {
                            _this.collectionConfig.toggleOrderBy(propertyIdentifier, true); //single column mode true
                        }
                        if (_this.inListingDisplay) {
                            _this.listingService.setSingleColumnOrderBy(_this.listingId, propertyIdentifier, "DESC");
                        }
                        if (_this.inListingDisplay)
                            _this.listingService.setManualSort(_this.listingId, false);
                    }
                    break;
                case "MANUAL":
                    //flip listing
                    _this.disabled = true;
                    if (_this.inListingDisplay) {
                        //this.swListingDisplay.sortable = true;
                        _this.listingService.setManualSort(_this.listingId, true);
                    }
                    break;
            }
        };
        this.sortAscending = function () {
            _this.sortCode = 'ASC';
            _this.updateOrderBy();
        };
        this.sortDescending = function () {
            _this.sortCode = 'DESC';
            _this.updateOrderBy();
        };
        this.manualSort = function () {
            _this.sortCode = 'MANUAL';
            _this.updateOrderBy();
        };
        if (angular.isUndefined(this.edit)) {
            this.edit = true;
        }
        if (angular.isDefined(this.collectionConfig)) {
            this.columns = this.collectionConfig.columns;
        }
        if (angular.isDefined(this.initialSortDefaultDirection) && this.initialSortDefaultDirection.length > 0) {
            this.sortCode = this.initialSortDefaultDirection;
        }
        if (angular.isDefined(this.initialSortProperty) && this.initialSortProperty.length > 0) {
            this.selectedPropertyIdentifier = this.initialSortProperty;
        }
        this.id = this.utilityService.createID(32);
    }
    return SWOrderByControlsController;
}());
exports.SWOrderByControlsController = SWOrderByControlsController;
var SWOrderByControls = /** @class */ (function () {
    // @ngInject
    function SWOrderByControls($compile, scopeService, listingService, corePartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.$compile = $compile;
        this.scopeService = scopeService;
        this.listingService = listingService;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            collectionConfig: "=?",
            selectedOrderByColumn: "=?",
            inListingDisplay: "=?",
            toggleCollectionConfig: "=?",
            initialSortProperty: "@?",
            initialSortDefaultDirection: "@?",
            sortPropertyFieldName: "@?",
            sortDefaultDirectionFieldName: "@?",
            edit: "=?"
        };
        this.require = { swListingDisplay: '?^swListingDisplay' };
        this.controller = SWOrderByControlsController;
        this.controllerAs = "swOrderByControls";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                    if ($scope.swOrderByControls.inListingDisplay &&
                        _this.scopeService.hasParentScope($scope, "swListingDisplay")) {
                        var listingDisplayScope = _this.scopeService.getRootParentScope($scope, "swListingDisplay")["swListingDisplay"];
                        $scope.swOrderByControls.listingId = listingDisplayScope.tableID;
                        _this.listingService.attachToListingInitiated($scope.swOrderByControls.listingId, $scope.swOrderByControls.updateOrderBy);
                        if ($scope.swOrderByControls.collectionConfig == null &&
                            listingDisplayScope.collectionConfig != null) {
                            $scope.swOrderByControls.collectionConfig = listingDisplayScope.collectionConfig;
                        }
                    }
                },
                post: function ($scope, element, attrs) {
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "orderbycontrols.html";
    }
    SWOrderByControls.Factory = function () {
        var directive = function ($compile, scopeService, listingService, corePartialsPath, hibachiPathBuilder) { return new SWOrderByControls($compile, scopeService, listingService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "scopeService", "listingService", "corePartialsPath",
            "hibachiPathBuilder"];
        return directive;
    };
    return SWOrderByControls;
}());
exports.SWOrderByControls = SWOrderByControls;


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWProcessCallerController = /** @class */ (function () {
    //@ngInject
    function SWProcessCallerController(rbkeyService, $templateRequest, $compile, corePartialsPath, $scope, $element, $transclude, utilityService, hibachiPathBuilder) {
        var _this = this;
        this.rbkeyService = rbkeyService;
        this.$templateRequest = $templateRequest;
        this.$compile = $compile;
        this.corePartialsPath = corePartialsPath;
        this.$scope = $scope;
        this.$element = $element;
        this.$transclude = $transclude;
        this.$templateRequest = $templateRequest;
        this.$compile = $compile;
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.type = this.type || 'link';
        this.queryString = this.queryString || '';
        this.$scope = $scope;
        this.$element = $element;
        this.$transclude = this.$transclude;
        this.$templateRequest(hibachiPathBuilder.buildPartialsPath(this.corePartialsPath) + "processcaller.html").then(function (html) {
            var template = angular.element(html);
            _this.$element.parent().append(template);
            $compile(template)(_this.$scope);
        });
        if (angular.isDefined(this.titleRbKey)) {
            this.title = this.rbkeyService.getRBKey(this.titleRbKey);
        }
        if (angular.isUndefined(this.text)) {
            this.text = this.title;
        }
    }
    return SWProcessCallerController;
}());
var SWProcessCaller = /** @class */ (function () {
    function SWProcessCaller(corePartialsPath, utilityService) {
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {
            action: "@",
            entity: "@",
            processContext: "@",
            hideDisabled: "=",
            type: "@",
            queryString: "@",
            text: "@",
            title: "@?",
            titleRbKey: "@?",
            'class': "@",
            icon: "=",
            iconOnly: "=",
            submit: "=",
            confirm: "=",
            disabled: "=",
            disabledText: "@",
            modal: "="
        };
        this.controller = SWProcessCallerController;
        this.controllerAs = "swProcessCaller";
        this.link = function (scope, element, attrs) {
        };
        this.corePartialsPath = corePartialsPath;
        this.utilityService = utilityService;
    }
    SWProcessCaller.Factory = function () {
        var directive = function (corePartialsPath, utilityService) { return new SWProcessCaller(corePartialsPath, utilityService); };
        directive.$inject = [
            'corePartialsPath', 'utilityService'
        ];
        return directive;
    };
    SWProcessCaller.$inject = ['corePartialsPath', 'utilityService'];
    return SWProcessCaller;
}());
exports.SWProcessCaller = SWProcessCaller;


/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWRbKey = /** @class */ (function () {
    function SWRbKey($hibachi, observerService, utilityService, $rootScope, $log, rbkeyService) {
        return {
            restrict: 'A',
            scope: {
                swRbkey: "="
            },
            link: function (scope, element, attrs) {
                var rbKeyValue = scope.swRbkey;
                var bindRBKey = function () {
                    if (angular.isDefined(rbKeyValue) && angular.isString(rbKeyValue)) {
                        element.text(rbkeyService.getRBKey(rbKeyValue));
                    }
                };
                bindRBKey();
            }
        };
    }
    SWRbKey.Factory = function () {
        var directive = function ($hibachi, observerService, utilityService, $rootScope, $log, rbkeyService) { return new SWRbKey($hibachi, observerService, utilityService, $rootScope, $log, rbkeyService); };
        directive.$inject = [
            '$hibachi',
            'observerService',
            'utilityService',
            '$rootScope',
            '$log',
            'rbkeyService'
        ];
        return directive;
    };
    return SWRbKey;
}());
exports.SWRbKey = SWRbKey;


/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWScrollTrigger = /** @class */ (function () {
    function SWScrollTrigger($rootScope, $window, $timeout) {
        return {
            link: function (scope, elem, attrs) {
                var checkWhenEnabled, handler, scrollDistance, scrollEnabled;
                $window = angular.element($window);
                scrollDistance = 0;
                if (attrs.infiniteScrollDistance != null) {
                    scope
                        .$watch(attrs.infiniteScrollDistance, function (value) {
                        return scrollDistance = parseInt(value, 10);
                    });
                }
                scrollEnabled = true;
                checkWhenEnabled = false;
                if (attrs.infiniteScrollDisabled != null) {
                    scope
                        .$watch(attrs.infiniteScrollDisabled, function (value) {
                        scrollEnabled = !value;
                        if (scrollEnabled
                            && checkWhenEnabled) {
                            checkWhenEnabled = false;
                            return handler();
                        }
                    });
                }
                handler = function () {
                    var elementBottom, remaining, shouldScroll, windowBottom;
                    windowBottom = $window.height()
                        + $window.scrollTop();
                    elementBottom = elem.offset().top
                        + elem.height();
                    remaining = elementBottom
                        - windowBottom;
                    shouldScroll = remaining <= $window
                        .height()
                        * scrollDistance;
                    if (shouldScroll && scrollEnabled) {
                        if ($rootScope.$$phase) {
                            return scope
                                .$eval(attrs.infiniteScroll);
                        }
                        else {
                            return scope
                                .$apply(attrs.infiniteScroll);
                        }
                    }
                    else if (shouldScroll) {
                        return checkWhenEnabled = true;
                    }
                };
                $window.on('scroll', handler);
                scope.$on('$destroy', function () {
                    return $window.off('scroll', handler);
                });
                return $timeout((function () {
                    if (attrs.infiniteScrollImmediateCheck) {
                        if (scope
                            .$eval(attrs.infiniteScrollImmediateCheck)) {
                            return handler();
                        }
                    }
                    else {
                        return handler();
                    }
                }), 0);
            }
        };
    }
    SWScrollTrigger.Factory = function () {
        var directive = function ($rootScope, $window, $timeout) { return new SWScrollTrigger($rootScope, $window, $timeout); };
        directive.$inject = [
            '$rootScope',
            '$window',
            '$timeout'
        ];
        return directive;
    };
    return SWScrollTrigger;
}());
exports.SWScrollTrigger = SWScrollTrigger;


/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWSelectionController = /** @class */ (function () {
    //@ngInject
    function SWSelectionController(selectionService, observerService) {
        var _this = this;
        this.selectionService = selectionService;
        this.observerService = observerService;
        this.updateSelectValue = function (res) {
            if (_this.isRadio && (res.action == 'check')) {
                _this.toggleValue == _this.selection;
            }
            else if (res.action == 'clear') {
                _this.toggleValue = false;
            }
            else if (res.action == 'selectAll') {
                _this.toggleValue = true;
            }
            else if (res.selection == _this.selection) {
                _this.toggleValue = (res.action == 'check');
            }
        };
        this.toggleSelection = function (toggleValue, selectionid, selection) {
            if (_this.isRadio) {
                _this.selectionService.radioSelection(selectionid, selection);
                _this.toggleValue = selection;
            }
            else {
                if (toggleValue) {
                    _this.selectionService.addSelection(selectionid, selection);
                }
                else {
                    _this.selectionService.removeSelection(selectionid, selection);
                }
            }
        };
        if (angular.isUndefined(this.name)) {
            this.name = 'selection';
        }
        if (selectionService.isAllSelected(this.selectionid)) {
            this.toggleValue = !selectionService.hasSelection(this.selectionid, this.selection);
        }
        else {
            this.toggleValue = selectionService.hasSelection(this.selectionid, this.selection);
        }
        if (this.isRadio && this.toggleValue) {
            this.toggleValue = this.selection;
        }
        if (this.isRadio && this.toggleValue) {
            this.toggleValue = this.selection;
        }
        //attach observer so we know when a selection occurs
        observerService.attach(this.updateSelectValue, 'swSelectionToggleSelection' + this.selectionid);
        if (angular.isDefined(this.initSelected) && this.initSelected) {
            this.toggleValue = this.selection;
            this.toggleSelection(this.toggleValue, this.selectionid, this.selection);
        }
    }
    return SWSelectionController;
}());
var SWSelection = /** @class */ (function () {
    function SWSelection(collectionPartialsPath, hibachiPathBuilder) {
        this.collectionPartialsPath = collectionPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {
            selection: "=",
            selectionid: "@",
            id: "=",
            isRadio: "=",
            name: "@",
            disabled: "=",
            initSelected: "="
        };
        this.controller = SWSelectionController;
        this.controllerAs = 'swSelection';
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath) + "selection.html";
    }
    SWSelection.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWSelection(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ['corePartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    SWSelection.$inject = ['corePartialsPath', 'hibachiPathBuilder'];
    return SWSelection;
}());
exports.SWSelection = SWSelection;


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWSortable = /** @class */ (function () {
    function SWSortable(expression, compiledElement) {
        return function (linkElement) {
            var scope = this;
            linkElement.sortable({
                placeholder: "placeholder",
                opacity: 0.8,
                axis: "y",
                update: function (event, ui) {
                    // get model
                    var model = scope.$apply(expression);
                    // remember its length
                    var modelLength = model.length;
                    // rember html nodes
                    var items = [];
                    // loop through items in new order
                    linkElement.children().each(function (index) {
                        var item = $(this);
                        // get old item index
                        var oldIndex = parseInt(item.attr("sw:sortable-index"), 10);
                        // add item to the end of model
                        model.push(model[oldIndex]);
                        if (item.attr("sw:sortable-index")) {
                            // items in original order to restore dom
                            items[oldIndex] = item;
                            // and remove item from dom
                            item.detach();
                        }
                    });
                    model.splice(0, modelLength);
                    // restore original dom order, so angular does not get confused
                    linkElement.append.apply(linkElement, items);
                    // notify angular of the change
                    scope.$digest();
                }
            });
        };
    }
    SWSortable.Factory = function () {
        var directive = function (expression, compiledElement) { return new SWSortable(expression, compiledElement); };
        directive.$inject = ['expression', 'compiledElement'];
        return directive;
    };
    return SWSortable;
}());
exports.SWSortable = SWSortable;


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWTabContentController = /** @class */ (function () {
    // @ngInject
    function SWTabContentController($scope, $q, $transclude, $hibachi, $timeout, utilityService, rbkeyService, collectionConfigService) {
        this.$scope = $scope;
        this.$q = $q;
        this.$transclude = $transclude;
        this.$hibachi = $hibachi;
        this.$timeout = $timeout;
        this.utilityService = utilityService;
        this.rbkeyService = rbkeyService;
        this.collectionConfigService = collectionConfigService;
        if (angular.isUndefined(this.active)) {
            this.active = false;
        }
        if (angular.isUndefined(this.loaded)) {
            this.loaded = false;
        }
        if (angular.isUndefined(this.hide)) {
            this.hide = false;
        }
        if (angular.isUndefined(this.id)) {
            this.id = utilityService.createID(16);
        }
        if (angular.isUndefined(this.name)) {
            this.name = this.id;
        }
        //make a tab service? 
    }
    return SWTabContentController;
}());
exports.SWTabContentController = SWTabContentController;
var SWTabContent = /** @class */ (function () {
    // @ngInject
    function SWTabContent($compile, scopeService, observerService, corePartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.$compile = $compile;
        this.scopeService = scopeService;
        this.observerService = observerService;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            active: "=?",
            loaded: "=?",
            hide: "=?",
            name: "@?"
        };
        this.controller = SWTabContentController;
        this.controllerAs = "swTabContent";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                },
                post: function ($scope, element, attrs) {
                    var parentDirective = _this.scopeService.getRootParentScope($scope, "swTabGroup")["swTabGroup"];
                    if (angular.isDefined(parentDirective) && angular.isDefined(parentDirective.tabs)) {
                        parentDirective.tabs.push($scope.swTabContent);
                        _this.observerService.notify(parentDirective.initTabEventName);
                    }
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "tabcontent.html";
    }
    SWTabContent.Factory = function () {
        var directive = function ($compile, scopeService, observerService, corePartialsPath, hibachiPathBuilder) { return new SWTabContent($compile, scopeService, observerService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile",
            "scopeService",
            "observerService",
            "corePartialsPath",
            "hibachiPathBuilder"];
        return directive;
    };
    return SWTabContent;
}());
exports.SWTabContent = SWTabContent;


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWTabGroupController = /** @class */ (function () {
    // @ngInject
    function SWTabGroupController(utilityService, rbkeyService, observerService) {
        var _this = this;
        this.utilityService = utilityService;
        this.rbkeyService = rbkeyService;
        this.observerService = observerService;
        this.hasActiveTab = false;
        this.initTab = function () {
            for (var i = 0; i < _this.tabs.length; i++) {
                if (!_this.tabs[i].hide) {
                    _this.tabs[i].active = true;
                    _this.tabs[i].loaded = true;
                    break;
                }
            }
        };
        this.switchTab = function (tabToActivate) {
            _this.observerService.notify(_this.switchTabGroupEventName);
            for (var i = 0; i < _this.tabs.length; i++) {
                _this.tabs[i].active = false;
            }
            tabToActivate.active = true;
            tabToActivate.loaded = true;
        };
        this.getTabByName = function (name) {
            for (var i = 0; i < _this.tabs.length; i++) {
                if (_this.tabs[i].name == name) {
                    return _this.tabs[i];
                }
            }
        };
        if (angular.isUndefined(this.tabs)) {
            this.tabs = [];
        }
        this.tabGroupID = "TG" + this.utilityService.createID(30);
        this.switchTabGroupEventName = "SwitchTabGroup" + this.tabGroupID;
        this.initTabEventName = "InitTabForTabGroup" + this.tabGroupID;
        this.observerService.attach(this.initTab, this.initTabEventName);
        if (angular.isUndefined(this.switchTabEventName)) {
            this.switchTabEventName = this.tabGroupID + "SwitchTabTo";
        }
        this.observerService.attach(this.switchTab, this.switchTabEventName);
    }
    return SWTabGroupController;
}());
exports.SWTabGroupController = SWTabGroupController;
var SWTabGroup = /** @class */ (function () {
    // @ngInject
    function SWTabGroup($compile, corePartialsPath, hibachiPathBuilder) {
        this.$compile = $compile;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            switchTabEventName: "@?"
        };
        this.controller = SWTabGroupController;
        this.controllerAs = "swTabGroup";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) { },
                post: function ($scope, element, attrs) { }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "tabgroup.html";
    }
    SWTabGroup.Factory = function () {
        var directive = function ($compile, corePartialsPath, hibachiPathBuilder) { return new SWTabGroup($compile, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "corePartialsPath",
            'hibachiPathBuilder'];
        return directive;
    };
    return SWTabGroup;
}());
exports.SWTabGroup = SWTabGroup;


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWTooltipController = /** @class */ (function () {
    // @ngInject
    function SWTooltipController(rbkeyService) {
        var _this = this;
        this.rbkeyService = rbkeyService;
        this.showTooltip = false;
        this.show = function () {
            _this.showTooltip = true;
        };
        this.hide = function () {
            _this.showTooltip = false;
        };
        if (angular.isDefined(this.rbKey)) {
            this.text = rbkeyService.getRBKey(this.rbKey);
        }
        if (angular.isUndefined(this.position)) {
            this.position = "top";
        }
    }
    return SWTooltipController;
}());
exports.SWTooltipController = SWTooltipController;
var SWTooltip = /** @class */ (function () {
    // @ngInject
    function SWTooltip($document, corePartialsPath, hibachiPathBuilder) {
        this.$document = $document;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            rbKey: "@?",
            text: "@?",
            position: "@?",
            showTooltip: "=?"
        };
        this.controller = SWTooltipController;
        this.controllerAs = "swTooltip";
        this.link = function (scope, element, attrs, controller, transclude) {
            var tooltip = element.find(".tooltip");
            var elementPosition = element.position();
            var tooltipStyle = tooltip[0].style;
            if (attrs && attrs.position) {
                switch (attrs.position.toLowerCase()) {
                    case 'top':
                        tooltipStyle.top = "0px";
                        tooltipStyle.left = "0px";
                        break;
                    case 'bottom':
                        //where the element is rendered to begin with
                        break;
                    case 'left':
                        tooltipStyle.top = (elementPosition.top + element[0].offsetHeight - 5) + "px";
                        tooltipStyle.left = (-1 * (elementPosition.left + element[0].offsetLeft - 5)) + "px";
                        element.find(".tooltip-inner")[0].style.maxWidth = "none";
                        break;
                    default:
                        //right is the default
                        tooltipStyle.top = (elementPosition.top + element[0].offsetHeight - 5) + "px";
                        tooltipStyle.left = (elementPosition.left + element[0].offsetWidth - 5) + "px";
                }
            }
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "tooltip.html";
    }
    SWTooltip.Factory = function () {
        var directive = function ($document, corePartialsPath, hibachiPathBuilder) { return new SWTooltip($document, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$document", "corePartialsPath", "hibachiPathBuilder"];
        return directive;
    };
    return SWTooltip;
}());
exports.SWTooltip = SWTooltip;


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWTypeaheadInputFieldController = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadInputFieldController($scope, $transclude, collectionConfigService, typeaheadService, $rootScope, observerService) {
        var _this = this;
        this.$scope = $scope;
        this.$transclude = $transclude;
        this.collectionConfigService = collectionConfigService;
        this.typeaheadService = typeaheadService;
        this.$rootScope = $rootScope;
        this.observerService = observerService;
        this.columns = [];
        this.filters = [];
        this.addFunction = function (value) {
            _this.typeaheadService.typeaheadStore.dispatch({
                "type": "TYPEAHEAD_USER_SELECTION",
                "payload": {
                    name: _this.fieldName || "",
                    data: value[_this.propertyToSave] || ""
                }
            });
            _this.modelValue = value[_this.propertyToSave];
            if (_this.action) {
                var data = {};
                if (_this.variables) {
                    data = _this.variables();
                }
                data['value'] = _this.modelValue;
                _this.$root.slatwall.doAction(_this.action, data);
            }
        };
        this.$root = $rootScope;
        if (angular.isUndefined(this.typeaheadCollectionConfig)) {
            if (angular.isDefined(this.entityName)) {
                this.typeaheadCollectionConfig = collectionConfigService.newCollectionConfig(this.entityName);
            }
            else {
                throw ("You did not pass the correct collection config data to swTypeaheadInputField");
            }
        }
        if (angular.isUndefined(this.validateRequired)) {
            this.validateRequired = false;
        }
        //get the collection config
        this.$transclude($scope, function () { });
        if (angular.isUndefined(this.propertyToSave)) {
            throw ("You must select a property to save for the input field directive");
        }
        if (angular.isDefined(this.propertiesToLoad)) {
            this.typeaheadCollectionConfig.addDisplayProperty(this.propertiesToLoad);
        }
        angular.forEach(this.columns, function (column) {
            _this.typeaheadCollectionConfig.addDisplayProperty(column.propertyIdentifier, '', column);
        });
        angular.forEach(this.filters, function (filter) {
            _this.typeaheadCollectionConfig.addFilter(filter.propertyIdentifier, filter.comparisonValue, filter.comparisonOperator, filter.logicalOperator, filter.hidden);
        });
        if (angular.isDefined(this.initialEntityId) && this.initialEntityId.length) {
            this.modelValue = this.initialEntityId;
        }
        if (this.eventListeners) {
            for (var key in this.eventListeners) {
                observerService.attach(this.eventListeners[key], key);
            }
        }
    }
    return SWTypeaheadInputFieldController;
}());
exports.SWTypeaheadInputFieldController = SWTypeaheadInputFieldController;
var SWTypeaheadInputField = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadInputField(corePartialsPath, hibachiPathBuilder) {
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            fieldName: "@",
            entityName: "@",
            typeaheadCollectionConfig: "=?",
            propertiesToLoad: "@?",
            placeholderRbKey: "@?",
            propertyToShow: "@",
            propertyToSave: "@",
            initialEntityId: "@",
            allRecords: "=?",
            validateRequired: "=?",
            maxRecords: "@",
            action: "@",
            variables: '&?',
            eventListeners: '=?',
            placeholderText: '@?',
            searchEndpoint: '@?',
            titleText: '@?'
        };
        this.controller = SWTypeaheadInputFieldController;
        this.controllerAs = "swTypeaheadInputField";
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "typeaheadinputfield.html";
    }
    SWTypeaheadInputField.Factory = function () {
        var directive = function (corePartialsPath, hibachiPathBuilder) { return new SWTypeaheadInputField(corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["corePartialsPath", 'hibachiPathBuilder'];
        return directive;
    };
    return SWTypeaheadInputField;
}());
exports.SWTypeaheadInputField = SWTypeaheadInputField;


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWTypeaheadMultiselectController = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadMultiselectController($scope, $transclude, $hibachi, listingService, typeaheadService, utilityService, collectionConfigService) {
        var _this = this;
        this.$scope = $scope;
        this.$transclude = $transclude;
        this.$hibachi = $hibachi;
        this.listingService = listingService;
        this.typeaheadService = typeaheadService;
        this.utilityService = utilityService;
        this.collectionConfigService = collectionConfigService;
        this.addSelection = function (item) {
            _this.typeaheadService.addSelection(_this.typeaheadDataKey, item);
            if (_this.inListingDisplay) {
                _this.listingService.insertListingPageRecord(_this.listingId, item);
            }
        };
        this.removeSelection = function (index) {
            var itemRemoved = _this.typeaheadService.removeSelection(_this.typeaheadDataKey, index);
            if (_this.inListingDisplay) {
                _this.listingService.removeListingPageRecord(_this.listingId, itemRemoved);
            }
        };
        this.getSelections = function () {
            return _this.typeaheadService.getData(_this.typeaheadDataKey);
        };
        this.updateSelectionList = function () {
            _this.selectionList = _this.typeaheadService.updateSelectionList(_this.typeaheadDataKey);
        };
        if (angular.isUndefined(this.typeaheadDataKey)) {
            this.typeaheadDataKey = this.utilityService.createID(32);
        }
        if (angular.isUndefined(this.disabled)) {
            this.disabled = false;
        }
        if (angular.isUndefined(this.showSelections)) {
            this.showSelections = false;
        }
        if (angular.isUndefined(this.multiselectMode)) {
            this.multiselectMode = true;
        }
        if (angular.isUndefined(this.hasAddButtonFunction)) {
            this.hasAddButtonFunction = false;
        }
        if (angular.isUndefined(this.hasViewFunction)) {
            this.hasViewFunction = false;
        }
        if (angular.isDefined(this.selectedCollectionConfig)) {
            this.typeaheadService.initializeSelections(this.typeaheadDataKey, this.selectedCollectionConfig);
        }
        this.typeaheadService.attachTypeaheadSelectionUpdateEvent(this.typeaheadDataKey, this.updateSelectionList);
    }
    return SWTypeaheadMultiselectController;
}());
exports.SWTypeaheadMultiselectController = SWTypeaheadMultiselectController;
var SWTypeaheadMultiselect = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadMultiselect($compile, scopeService, typeaheadService, corePartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.$compile = $compile;
        this.scopeService = scopeService;
        this.typeaheadService = typeaheadService;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            placeholderRbKey: "@",
            collectionConfig: "=?",
            selectedCollectionConfig: "=?",
            typeaheadDataKey: "@?",
            multiselectModeOn: "=?multiselectMode",
            showSelections: "=?",
            dataTarget: "=?",
            dataTargetIndex: "=?",
            addButtonFunction: "&?",
            viewFunction: "&?",
            inListingDisplay: "=?",
            listingId: "@?",
            propertyToCompare: "@?",
            fallbackPropertiesToCompare: "@?",
            rightContentPropertyIdentifier: "@?",
            selectionFieldName: "@?",
            disabled: "=?"
        };
        this.controller = SWTypeaheadMultiselectController;
        this.controllerAs = "swTypeaheadMultiselect";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                    //because callbacks are defined even when they're not passed in, this needs to be communicated to the typeahead
                    if (angular.isDefined(attrs.addButtonFunction)) {
                        $scope.swTypeaheadMultiselect.hasAddButtonFunction = true;
                    }
                    else {
                        $scope.swTypeaheadMultiselect.hasAddButtonFunction = false;
                    }
                    if (angular.isDefined(attrs.viewFunction)) {
                        $scope.swTypeaheadMultiselect.viewFunction = true;
                    }
                    else {
                        $scope.swTypeaheadMultiselect.viewFunction = false;
                    }
                    if (angular.isUndefined($scope.swTypeaheadMultiselect.inListingDisplay)) {
                        $scope.swTypeaheadMultiselect.inListingDisplay = false;
                    }
                    if ($scope.swTypeaheadMultiselect.inListingDisplay && _this.scopeService.hasParentScope($scope, "swListingDisplay")) {
                        var listingDisplayScope = _this.scopeService.getRootParentScope($scope, "swListingDisplay")["swListingDisplay"];
                        $scope.swTypeaheadMultiselect.listingId = listingDisplayScope.tableID;
                        listingDisplayScope.typeaheadDataKey = $scope.swTypeaheadMultiselect.typeaheadDataKey;
                    }
                },
                post: function ($scope, element, attrs) {
                    var target = element.find(".s-selected-list");
                    var selectedItemTemplate = angular.element('<div class="alert s-selected-item" ng-repeat="item in swTypeaheadMultiselect.getSelections() track by $index">');
                    var closeButton = angular.element('<button ng-click="swTypeaheadMultiselect.removeSelection($index)" type="button" class="close"><span>×</span><span class="sr-only" sw-rbkey="&apos;define.close&apos;"></span></button>');
                    selectedItemTemplate.append(closeButton);
                    selectedItemTemplate.append(_this.typeaheadService.stripTranscludedContent(transclude($scope, function () { })));
                    target.append(_this.$compile(selectedItemTemplate)($scope));
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "typeaheadmultiselect.html";
    }
    SWTypeaheadMultiselect.Factory = function () {
        var directive = function ($compile, scopeService, typeaheadService, corePartialsPath, hibachiPathBuilder) { return new SWTypeaheadMultiselect($compile, scopeService, typeaheadService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "scopeService", "typeaheadService", "corePartialsPath", 'hibachiPathBuilder'];
        return directive;
    };
    return SWTypeaheadMultiselect;
}());
exports.SWTypeaheadMultiselect = SWTypeaheadMultiselect;


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWTypeaheadRemoveSelectionController = /** @class */ (function () {
    function SWTypeaheadRemoveSelectionController($scope, listingService, scopeService, typeaheadService, utilityService) {
        var _this = this;
        this.$scope = $scope;
        this.listingService = listingService;
        this.scopeService = scopeService;
        this.typeaheadService = typeaheadService;
        this.utilityService = utilityService;
        this.updatePageRecord = function () {
            if (_this.scopeService.hasParentScope(_this.$scope, "pageRecord")) {
                var pageRecordScope = _this.scopeService.getRootParentScope(_this.$scope, "pageRecord")["pageRecord"];
                _this.pageRecord = pageRecordScope;
            }
        };
        this.removeSelection = function () {
            if (!_this.disabled) {
                _this.typeaheadService.removeSelection(_this.typeaheadDataKey, undefined, _this.pageRecord);
                _this.listingService.removeListingPageRecord(_this.listingId, _this.pageRecord);
            }
        };
        this.listingService.attachToListingPageRecordsUpdate(this.listingId, this.updatePageRecord, this.utilityService.createID(32));
        if (angular.isUndefined(this.disabled)) {
            this.disabled = false;
        }
    }
    return SWTypeaheadRemoveSelectionController;
}());
exports.SWTypeaheadRemoveSelectionController = SWTypeaheadRemoveSelectionController;
var SWTypeaheadRemoveSelection = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadRemoveSelection(scopeService, corePartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.scopeService = scopeService;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            typeaheadDataKey: "@?",
            index: "@?",
            disabled: "=?"
        };
        this.controller = SWTypeaheadRemoveSelectionController;
        this.controllerAs = "swTypeaheadRemoveSelection";
        this.link = function (scope, element, attrs) {
            if (_this.scopeService.hasParentScope(scope, "swListingDisplay")) {
                var listingDisplayScope = _this.scopeService.getRootParentScope(scope, "swListingDisplay")["swListingDisplay"];
                scope.swTypeaheadRemoveSelection.typeaheadDataKey = listingDisplayScope.typeaheadDataKey;
                scope.swTypeaheadRemoveSelection.listingId = listingDisplayScope.tableID;
            }
            if (_this.scopeService.hasParentScope(scope, "pageRecord")) {
                var pageRecordScope = _this.scopeService.getRootParentScope(scope, "pageRecord")["pageRecord"];
                scope.swTypeaheadRemoveSelection.pageRecord = pageRecordScope;
            }
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "typeaheadremoveselection.html";
    }
    SWTypeaheadRemoveSelection.Factory = function () {
        var directive = function (scopeService, corePartialsPath, hibachiPathBuilder) { return new SWTypeaheadRemoveSelection(scopeService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["scopeService", "corePartialsPath", 'hibachiPathBuilder'];
        return directive;
    };
    return SWTypeaheadRemoveSelection;
}());
exports.SWTypeaheadRemoveSelection = SWTypeaheadRemoveSelection;


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWTypeaheadSearchController = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadSearchController($scope, $q, $transclude, $hibachi, $timeout, utilityService, observerService, rbkeyService, collectionConfigService, typeaheadService, $http, requestService) {
        var _this = this;
        this.$scope = $scope;
        this.$q = $q;
        this.$transclude = $transclude;
        this.$hibachi = $hibachi;
        this.$timeout = $timeout;
        this.utilityService = utilityService;
        this.observerService = observerService;
        this.rbkeyService = rbkeyService;
        this.collectionConfigService = collectionConfigService;
        this.typeaheadService = typeaheadService;
        this.$http = $http;
        this.requestService = requestService;
        this.results = [];
        this.columns = [];
        this.filters = [];
        this.searchableColumns = [];
        this.initialSearchableColumnsState = [];
        this.searchableColumnSelection = 'All';
        this.fallbackPropertyArray = [];
        this.clearSearch = function () {
            _this.searchText = "";
            _this.hideSearch = true;
            if (angular.isDefined(_this.addFunction)) {
                _this.addFunction()(undefined);
            }
        };
        this.toggleDropdown = function () {
            _this.dropdownOpen = !_this.dropdownOpen;
        };
        this.toggleOptions = function () {
            if (_this.hideSearch && (!_this.searchText || !_this.searchText.length)) {
                _this.search(_this.searchText);
            }
            _this.hideSearch = !_this.hideSearch;
        };
        /**
         * The actionCreator function for searching.
         */
        this.rSearch = function (search) {
            /**
             * Fire off an action that a search is happening.
             * Example action function. The dispatch takes a function, that sends data in a payload
             * to the reducer.
             */
            _this.typeaheadService.typeaheadStore.dispatch({
                "type": "TYPEAHEAD_QUERY",
                "payload": {
                    "searchText": search
                }
            });
        };
        this.search = function (search) {
            if (!search.length) {
                _this.closeThis();
                return;
            }
            _this.rSearch(search);
            if (_this._timeoutPromise) {
                _this.$timeout.cancel(_this._timeoutPromise);
            }
            _this.collectionConfig.setKeywords(search);
            if (angular.isDefined(_this.filterGroupsConfig)) {
                //allows for filtering on search text
                var filterConfig = _this.filterGroupsConfig.replace("replaceWithSearchString", search);
                filterConfig = filterConfig.trim();
                _this.collectionConfig.loadFilterGroups(JSON.parse(filterConfig));
            }
            _this._timeoutPromise = _this.$timeout(function () {
                var promise;
                if (_this.searchEndpoint) {
                    promise = _this.requestService.newPublicRequest('/' + _this.searchEndpoint, {
                        search: search,
                        options: _this.collectionConfig.getOptions(),
                        entityName: _this.collectionConfig.baseEntityName
                    }, 'post', {
                        'Content-Type': 'application/json'
                    }).promise;
                }
                else {
                    promise = _this.collectionConfig.getEntity();
                }
                promise.then(function (response) {
                    _this.results = response.pageRecords || response.records;
                    _this.updateSelections();
                }).finally(function () {
                    _this.resultsDeferred.resolve();
                    _this.hideSearch = (_this.results.length == 0);
                });
            }, 500);
        };
        this.updateSelections = function () {
            _this.typeaheadService.updateSelections(_this.typeaheadDataKey);
        };
        this.updateSearchableProperties = function (column) {
            if (angular.isString(column) && column == 'all') {
                angular.copy(_this.initialSearchableColumnsState, _this.searchableColumns); //need to insure that these changes are actually on the collectionconfig
                _this.searchableColumnSelection = 'All';
            }
            else {
                angular.forEach(_this.searchableColumns, function (value, key) {
                    value.isSearchable = false;
                });
                column.isSearchable = true;
                _this.searchableColumnSelection = column.title;
            }
            //probably need to refetch the collection
        };
        this.addOrRemoveItem = function (item) {
            var remove = item.selected || false;
            if (!_this.hideSearch && !_this.multiselectMode) {
                _this.hideSearch = true;
            }
            if (!_this.multiselectMode) {
                if (angular.isDefined(_this.propertyToShow)) {
                    _this.searchText = item[_this.propertyToShow];
                }
                else if (angular.isDefined(_this.columns) &&
                    _this.columns.length &&
                    angular.isDefined(_this.columns[0].propertyIdentifier)) {
                    _this.searchText = item[_this.columns[0].propertyIdentifier];
                }
            }
            if (!remove && angular.isDefined(_this.addFunction)) {
                _this.addFunction()(item);
            }
            if (remove && angular.isDefined(_this.removeFunction)) {
                _this.removeFunction()(item.selectedIndex);
                item.selected = false;
                item.selectedIndex = undefined;
            }
            _this.updateSelections();
        };
        this.addButtonItem = function () {
            if (!_this.hideSearch) {
                _this.hideSearch = true;
            }
            if (angular.isDefined(_this.addButtonFunction)) {
                _this.addButtonFunction()(_this.searchText);
            }
        };
        this.viewButtonClick = function () {
            _this.viewFunction()();
        };
        this.closeThis = function (clickOutsideArgs) {
            _this.hideSearch = true;
            if (angular.isDefined(clickOutsideArgs)) {
                for (var callBackAction in clickOutsideArgs.callBackActions) {
                    clickOutsideArgs.callBackActions[callBackAction]();
                }
            }
        };
        this.getSelections = function () {
            return _this.typeaheadService.getData(_this.typeaheadDataKey);
        };
        this.dropdownOpen = false;
        this.requestService = requestService;
        //populates all needed variables
        this.$transclude($scope, function () { });
        this.resultsDeferred = $q.defer();
        this.resultsPromise = this.resultsDeferred.promise;
        if (angular.isUndefined(this.typeaheadDataKey)) {
            this.typeaheadDataKey = this.utilityService.createID(32);
        }
        if (angular.isUndefined(this.disabled)) {
            this.disabled = false;
        }
        if (angular.isUndefined(this.multiselectMode)) {
            this.multiselectMode = false;
        }
        if (angular.isUndefined(this.searchText) || this.searchText == null) {
            this.searchText = "";
        }
        else {
            this.search(this.searchText);
        }
        if (angular.isUndefined(this.validateRequired)) {
            this.validateRequired = false;
        }
        if (angular.isUndefined(this.hideSearch)) {
            this.hideSearch = true;
        }
        if (angular.isUndefined(this.collectionConfig)) {
            if (angular.isDefined(this.entity)) {
                this.collectionConfig = collectionConfigService.newCollectionConfig(this.entity);
            }
            else {
                throw ("You did not pass the correct collection config data to swTypeaheadSearch");
            }
        }
        if (angular.isDefined(this.collectionConfig)) {
            this.primaryIDPropertyName = $hibachi.getPrimaryIDPropertyNameByEntityName(this.collectionConfig.baseEntityName);
        }
        if (angular.isDefined(this.fallbackPropertiesToCompare) &&
            this.fallbackPropertiesToCompare.length) {
            this.fallbackPropertyArray = this.fallbackPropertiesToCompare.split(",");
        }
        if (angular.isDefined(this.placeholderRbKey)) {
            this.placeholderText = this.rbkeyService.getRBKey(this.placeholderRbKey);
        }
        else if (angular.isUndefined(this.placeholderText)) {
            this.placeholderText = this.rbkeyService.getRBKey('define.search');
        }
        //init timeoutPromise for link
        this._timeoutPromise = this.$timeout(function () { }, 500);
        if (angular.isDefined(this.propertiesToDisplay)) {
            this.collectionConfig.addDisplayProperty(this.propertiesToDisplay.split(","));
        }
        angular.forEach(this.columns, function (column) {
            _this.collectionConfig.addDisplayProperty(column.propertyIdentifier, '', column);
        });
        angular.forEach(this.filters, function (filter) {
            _this.collectionConfig.addFilter(filter.propertyIdentifier, filter.comparisonValue, filter.comparisonOperator, filter.logicalOperator, filter.hidden);
        });
        if (angular.isUndefined(this.allRecords)) {
            this.allRecords = this.collectionConfig.allRecords;
        }
        this.collectionConfig.setAllRecords(this.allRecords);
        if (angular.isUndefined(this.maxRecords)) {
            this.maxRecords = 10;
        }
        this.collectionConfig.setPageShow(this.maxRecords);
        if (angular.isDefined(this.initialEntityId) && this.initialEntityId.length) {
            this.initialEntityCollectionConfig = collectionConfigService.newCollectionConfig(this.collectionConfig.baseEntityName);
            this.initialEntityCollectionConfig.loadColumns(this.collectionConfig.columns);
            var primaryIDProperty = $hibachi.getPrimaryIDPropertyNameByEntityName(this.initialEntityCollectionConfig.baseEntityName);
            this.initialEntityCollectionConfig.addFilter(primaryIDProperty, this.initialEntityId, "=");
            var promise = this.initialEntityCollectionConfig.getEntity();
            promise.then(function (response) {
                _this.results = response.pageRecords;
                if (_this.results.length) {
                    _this.addOrRemoveItem(_this.results[0]);
                }
            });
        }
        angular.forEach(this.collectionConfig.columns, function (value, key) {
            if (value.isSearchable) {
                _this.searchableColumns.push(value);
            }
        });
        //need to insure that these changes are actually on the collectionconfig
        angular.copy(this.searchableColumns, this.initialSearchableColumnsState);
        this.typeaheadService.setTypeaheadState(this.typeaheadDataKey, this);
        this.observerService.attach(this.clearSearch, this.typeaheadDataKey + 'clearSearch');
        this.$http = $http;
    }
    return SWTypeaheadSearchController;
}());
exports.SWTypeaheadSearchController = SWTypeaheadSearchController;
var SWTypeaheadSearch = /** @class */ (function () {
    // @ngInject
    function SWTypeaheadSearch($compile, typeaheadService, corePartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.$compile = $compile;
        this.typeaheadService = typeaheadService;
        this.corePartialsPath = corePartialsPath;
        this.transclude = true;
        this.restrict = "EA";
        this.scope = {};
        this.bindToController = {
            collectionConfig: "=?",
            entity: "@?",
            properties: "@?",
            propertiesToDisplay: "@?",
            filterGroupsConfig: "@?",
            placeholderText: "@?",
            placeholderRbKey: "@?",
            propertyToCompare: "@?",
            fallbackPropertiesToCompare: "@?",
            searchText: "=?",
            results: "=?",
            addFunction: "&?",
            removeFunction: "&?",
            addButtonFunction: "&?",
            viewFunction: "&?",
            showAddButton: "=?",
            showViewButton: "=?",
            validateRequired: "=?",
            uniqueResults: "<?",
            clickOutsideArguments: "=?",
            propertyToShow: "=?",
            hideSearch: "=?",
            allRecords: "=?",
            maxRecords: "=?",
            disabled: "=?",
            initialEntityId: "@",
            multiselectMode: "=?",
            typeaheadDataKey: "@?",
            rightContentPropertyIdentifier: "@?",
            searchEndpoint: "@?",
            allResultsEndpoint: "@?",
            titleText: '@?',
            urlBase: '@?',
            urlProperty: '@?'
        };
        this.controller = SWTypeaheadSearchController;
        this.controllerAs = "swTypeaheadSearch";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function ($scope, element, attrs) {
                    if (angular.isDefined(attrs.addButtonFunction) && angular.isUndefined(attrs.showAddButton)) {
                        $scope.swTypeaheadSearch.showAddButton = true;
                    }
                    else if (angular.isUndefined(attrs.showAddButton)) {
                        $scope.swTypeaheadSearch.showAddButton = false;
                    }
                    if (angular.isDefined(attrs.viewFunction) && angular.isUndefined(attrs.showViewButton)) {
                        $scope.swTypeaheadSearch.showViewButton = true;
                    }
                    else if (angular.isUndefined(attrs.showViewButton)) {
                        $scope.swTypeaheadSearch.showViewButton = false;
                    }
                },
                post: function ($scope, element, attrs) {
                    var target = element.find(".dropdown-menu");
                    var uniqueFilter = '';
                    if ($scope.swTypeaheadSearch.uniqueResults) {
                        uniqueFilter = " | unique:'" + _this.typeaheadService.getTypeaheadPrimaryIDPropertyName($scope.swTypeaheadSearch.typeaheadDataKey) + "'";
                    }
                    var listItemTemplateString = "\n                    <li ng-repeat=\"item in swTypeaheadSearch.results" + uniqueFilter + "\" class=\"dropdown-item\" ng-class=\"{'s-selected':item.selected}\"></li>\n                ";
                    var anchorTemplateString = "\n                    <a \n                ";
                    if (angular.isDefined($scope.swTypeaheadSearch.urlBase) &&
                        angular.isDefined($scope.swTypeaheadSearch.urlProperty)) {
                        anchorTemplateString += 'href="' + $scope.swTypeaheadSearch.urlBase + '{{item.' + $scope.swTypeaheadSearch.urlProperty + '}}">';
                    }
                    else {
                        anchorTemplateString += 'ng-click="swTypeaheadSearch.addOrRemoveItem(item)">';
                    }
                    if (angular.isDefined($scope.swTypeaheadSearch.rightContentPropertyIdentifier)) {
                        var rightContentTemplateString = "\n                        <span class=\"s-right-content\" ng-bind=\"item[swTypeaheadSearch.rightContentPropertyIdentifier]\"></span></a>\n                    ";
                    }
                    else {
                        var rightContentTemplateString = "</a>";
                    }
                    if (angular.isDefined($scope.swTypeaheadSearch.allResultsEndpoint)) {
                        var searchAllListItemTemplate = "\n                        <li class=\"dropdown-item see-all-results\" ng-if=\"swTypeaheadSearch.results.length == swTypeaheadSearch.maxRecords\"><a href=\"{{swTypeaheadSearch.allResultsEndpoint}}?keywords={{swTypeaheadSearch.searchText}}\">See All Results</a></li>\n                    ";
                    }
                    anchorTemplateString = anchorTemplateString + rightContentTemplateString;
                    var listItemTemplate = angular.element(listItemTemplateString);
                    var anchorTemplate = angular.element(anchorTemplateString);
                    anchorTemplate.append(_this.typeaheadService.stripTranscludedContent(transclude($scope, function () { })));
                    listItemTemplate.append(anchorTemplate);
                    $scope.swTypeaheadSearch.resultsPromise.then(function () {
                        target.append(_this.$compile(listItemTemplate)($scope));
                        if (searchAllListItemTemplate != null) {
                            target.append(_this.$compile(searchAllListItemTemplate)($scope));
                        }
                    });
                }
            };
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(corePartialsPath) + "typeaheadsearch.html";
    }
    SWTypeaheadSearch.Factory = function () {
        var directive = function ($compile, typeaheadService, corePartialsPath, hibachiPathBuilder) { return new SWTypeaheadSearch($compile, typeaheadService, corePartialsPath, hibachiPathBuilder); };
        directive.$inject = ["$compile", "typeaheadService", "corePartialsPath",
            'hibachiPathBuilder'];
        return directive;
    };
    return SWTypeaheadSearch;
}());
exports.SWTypeaheadSearch = SWTypeaheadSearch;


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWTypeaheadSearchLineItemController = /** @class */ (function () {
    function SWTypeaheadSearchLineItemController() {
    }
    return SWTypeaheadSearchLineItemController;
}());
exports.SWTypeaheadSearchLineItemController = SWTypeaheadSearchLineItemController;
var SWTypeaheadSearchLineItem = /** @class */ (function () {
    //@ngInject
    function SWTypeaheadSearchLineItem($compile) {
        this.$compile = $compile;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyIdentifier: "@",
            isSearchable: "@?",
        };
        this.controller = SWTypeaheadSearchLineItemController;
        this.controllerAs = "swTypeaheadSearchLineItem";
        this.compile = function (element, attrs, transclude) {
            return {
                pre: function (scope, element, attrs) {
                    var innerHTML = element[0].innerHTML;
                    element[0].innerHTML = '';
                    var span = '<span ng-if="item.' + scope.swTypeaheadSearchLineItem.propertyIdentifier + '.toString().trim().length">' + ' ' + innerHTML + '</span> <span ng-bind="item.' + scope.swTypeaheadSearchLineItem.propertyIdentifier + '"></span>';
                    element.append(span);
                },
                post: function (scope, element, attrs) { }
            };
        };
    }
    SWTypeaheadSearchLineItem.Factory = function () {
        var directive = function ($compile) { return new SWTypeaheadSearchLineItem($compile); };
        directive.$inject = [
            '$compile'
        ];
        return directive;
    };
    return SWTypeaheadSearchLineItem;
}());
exports.SWTypeaheadSearchLineItem = SWTypeaheadSearchLineItem;


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var GlobalSearchController = /** @class */ (function () {
    //@ngInject
    function GlobalSearchController($scope, $log, $window, $timeout, $hibachi, rbkeyService) {
        $scope.keywords = '';
        $scope.searchResultsOpen = false;
        $scope.sidebarClass = 'sidebar';
        $scope.loading = false; //Set loading wheel to false
        $scope.resultsFound = true; // Set the results Found to true because no search has been done yet
        $scope.searchResults = {
            'product': {
                'title': 'Products',
                'resultNameFilter': function (data) {
                    return data['productName'];
                },
                'results': [],
                'id': function (data) {
                    return data['productID'];
                }
            },
            'order': {
                'title': rbkeyService.getRBKey('entity.order_plural'),
                'resultNameFilter': function (data) {
                    return data['orderNumber'];
                },
                'results': [],
                'id': function (data) {
                    return data['orderID'];
                }
            },
            'brand': {
                'title': rbkeyService.getRBKey('entity.brand_plural'),
                'resultNameFilter': function (data) {
                    return data['brandName'];
                },
                'results': [],
                'id': function (data) {
                    return data['brandID'];
                }
            },
            'account': {
                'title': 'Accounts',
                'resultNameFilter': function (data) {
                    return data['firstName'] + ' ' + data['lastName'];
                },
                'results': [],
                'id': function (data) {
                    return data['accountID'];
                }
            },
            'vendor': {
                'title': 'Vendors',
                'resultNameFilter': function (data) {
                    return data['vendorName'];
                },
                'results': [],
                'id': function (data) {
                    return data['vendorID'];
                }
            }
        };
        var _timeoutPromise;
        var _loadingCount = 0;
        $scope.updateSearchResults = function () {
            $scope.loading = true;
            $scope.showResults();
            if (_timeoutPromise) {
                $timeout.cancel(_timeoutPromise);
            }
            _timeoutPromise = $timeout(function () {
                // If no keywords, then set everything back to their defaults
                if ($scope.keywords === '') {
                    $scope.hideResults();
                    // Otherwise performe the search
                }
                else {
                    $scope.showResults();
                    // Set the loadingCount to the number of AJAX Calls we are about to do
                    _loadingCount = Object.keys($scope.searchResults).length;
                    for (var entityName in $scope.searchResults) {
                        (function (entityName) {
                            var searchPromise = $hibachi.getEntity(entityName, { keywords: $scope.keywords, pageShow: 4, deferkey: 'global-search-' + entityName });
                            searchPromise.then(function (data) {
                                // Clear out the old Results
                                $scope.searchResults[entityName].results = [];
                                $scope.searchResults[entityName].title = rbkeyService.getRBKey('entity.' + entityName.toLowerCase() + '_plural');
                                // push in the new results
                                for (var i in data.pageRecords) {
                                    $scope.searchResults[entityName].results.push({
                                        'name': $scope.searchResults[entityName].resultNameFilter(data.pageRecords[i]),
                                        'link': $hibachi.buildUrl('entity.detail' + entityName) + '&' + entityName + 'ID=' + $scope.searchResults[entityName].id(data.pageRecords[i]),
                                    });
                                }
                                // Increment Down The Loading Count
                                _loadingCount--;
                                // If the loadingCount drops to 0, then we can update scope
                                if (_loadingCount == 0) {
                                    $scope.loading = false;
                                    var _foundResults = false;
                                    for (var _thisEntityName in $scope.searchResults) {
                                        if ($scope.searchResults[_thisEntityName].results.length) {
                                            _foundResults = true;
                                            break;
                                        }
                                    }
                                    $scope.resultsFound = _foundResults;
                                }
                            });
                        })(entityName);
                    }
                }
            }, 500);
        };
        $scope.showResults = function () {
            $scope.searchResultsOpen = true;
            $scope.sidebarClass = 'sidebar s-search-width';
            $window.onclick = function (event) {
                var _targetClassOfSearch = event.target.parentElement.offsetParent.classList.contains('sidebar');
                if (!_targetClassOfSearch) {
                    $scope.hideResults();
                    $scope.$apply();
                }
            };
        };
        $scope.hideResults = function () {
            $scope.searchResultsOpen = false;
            $scope.sidebarClass = 'sidebar';
            $scope.search.$setPristine();
            $scope.keywords = "";
            $window.onclick = null;
            $scope.loading = false;
            $scope.resultsFound = true;
            for (var entityName in $scope.searchResults) {
                $scope.searchResults[entityName].results = [];
            }
        };
    }
    return GlobalSearchController;
}());
exports.GlobalSearchController = GlobalSearchController;


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var DateFilter = /** @class */ (function () {
    function DateFilter() {
    }
    //@ngInject
    DateFilter.Factory = function ($filter) {
        return function (date, dateString) {
            if (date.trim().length === 0) {
                return '';
            }
            return $filter('date')(new Date(date), dateString);
        };
    };
    return DateFilter;
}());
exports.DateFilter = DateFilter;


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var EntityRBKey = /** @class */ (function () {
    function EntityRBKey() {
    }
    //@ngInject
    EntityRBKey.Factory = function (rbkeyService) {
        return function (text) {
            if (angular.isDefined(text) && angular.isString(text)) {
                text = text.replace('_', '').toLowerCase();
                text = rbkeyService.getRBKey('entity.' + text);
            }
            return text;
        };
    };
    return EntityRBKey;
}());
exports.EntityRBKey = EntityRBKey;


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var PercentageFilter = /** @class */ (function () {
    function PercentageFilter() {
    }
    PercentageFilter.Factory = function () {
        return function (input, decimals, suffix) {
            decimals = angular.isNumber(decimals) ? decimals : 3;
            suffix = suffix || '%';
            if (isNaN(input)) {
                return '';
            }
            return Math.round(input * Math.pow(10, decimals + 2)) / Math.pow(10, decimals) + suffix;
        };
    };
    return PercentageFilter;
}());
exports.PercentageFilter = PercentageFilter;


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWTrim = /** @class */ (function () {
    function SWTrim() {
    }
    //@ngInject
    SWTrim.Factory = function (rbkeyService) {
        return function (text, max, wordwise, tail) {
            if (wordwise === void 0) { wordwise = true; }
            if (tail === void 0) { tail = "..."; }
            if (angular.isDefined(text) && angular.isString(text)) {
                if (!text)
                    return '';
                max = parseInt(max, 10);
                if (!max)
                    return text;
                if (text.length <= max)
                    return text;
                text = text.substr(0, max);
                if (wordwise) {
                    var lastSpace = text.lastIndexOf(' ');
                    if (lastSpace != -1) {
                        text = text.substr(0, lastSpace);
                    }
                }
                return text + tail;
            }
            return text;
        };
    };
    return SWTrim;
}());
exports.SWTrim = SWTrim;


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWUnique = /** @class */ (function () {
    function SWUnique() {
    }
    //@ngInject
    SWUnique.Factory = function () {
        var filterStub;
        filterStub = function (items, filterOn) {
            if (filterOn === false) {
                return items;
            }
            if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {
                var hashCheck = {}, newItems = [];
                var extractValueToCompare = function (item) {
                    if (angular.isDefined(item) && item[filterOn] != null) {
                        return item[filterOn];
                    }
                    return item;
                };
                angular.forEach(items, function (item) {
                    var isDuplicate = false;
                    for (var i = 0; i < newItems.length; i++) {
                        if (extractValueToCompare(newItems[i]) == extractValueToCompare(item)) {
                            isDuplicate = true;
                            break;
                        }
                    }
                    if (!isDuplicate) {
                        newItems.push(item);
                    }
                });
            }
            return newItems;
        };
        //filterStub.$stateful = true;
        return filterStub;
    };
    return SWUnique;
}());
exports.SWUnique = SWUnique;


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentity_1 = __webpack_require__(27);
var Account = /** @class */ (function (_super) {
    __extends(Account, _super);
    function Account($injector) {
        var _this = _super.call(this, $injector) || this;
        _this.giftCards = [];
        _this.userIsLoggedIn = function () {
            if (_this.accountID !== '') {
                return true;
            }
            return false;
        };
        return _this;
    }
    return Account;
}(baseentity_1.BaseEntity));
exports.Account = Account;


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentity_1 = __webpack_require__(27);
var Address = /** @class */ (function (_super) {
    __extends(Address, _super);
    function Address($injector) {
        return _super.call(this, $injector) || this;
    }
    return Address;
}(baseentity_1.BaseEntity));
exports.Address = Address;


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentity_1 = __webpack_require__(27);
var Cart = /** @class */ (function (_super) {
    __extends(Cart, _super);
    //deprecated
    function Cart($injector) {
        var _this = _super.call(this, $injector) || this;
        _this.orderRequirementsList = "";
        _this.orderPayments = [];
        _this.orderItems = [];
        _this.orderFulfillments = [];
        _this.hasShippingAddressAndMethod = function () {
            if (_this.orderRequirementsList.indexOf('fulfillment') == -1) {
                return true;
            }
            return false;
        };
        _this.orderRequiresAccount = function () {
            if (_this.orderRequirementsList.indexOf('account') != -1 || !_this.account.accountID) {
                return true;
            }
            return false;
        };
        _this.getOrderItemQuantitySum = function () {
            var totalQuantity = 0;
            if (angular.isDefined(_this.orderItems)) {
                for (var orderItem in _this.orderItems) {
                    totalQuantity = totalQuantity + _this.orderItems[orderItem].quantity;
                }
                return totalQuantity;
            }
            return totalQuantity;
        };
        return _this;
    }
    return Cart;
}(baseentity_1.BaseEntity));
exports.Cart = Cart;


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var account_1 = __webpack_require__(571);
exports.Account = account_1.Account;
var address_1 = __webpack_require__(572);
exports.Address = address_1.Address;
var cart_1 = __webpack_require__(573);
exports.Cart = cart_1.Cart;
var orderitem_1 = __webpack_require__(575);
exports.OrderItem = orderitem_1.OrderItem;
var orderpayment_1 = __webpack_require__(576);
exports.OrderPayment = orderpayment_1.OrderPayment;
var sku_1 = __webpack_require__(577);
exports.Sku = sku_1.Sku;


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var baseentity_1 = __webpack_require__(27);
var OrderItem = /** @class */ (function (_super) {
    __extends(OrderItem, _super);
    function OrderItem($injector) {
        return _super.call(this, $injector) || this;
    }
    return OrderItem;
}(baseentity_1.BaseEntity));
exports.OrderItem = OrderItem;


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var OrderPayment = /** @class */ (function () {
    function OrderPayment() {
    }
    return OrderPayment;
}());
exports.OrderPayment = OrderPayment;


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentity_1 = __webpack_require__(27);
var Sku = /** @class */ (function (_super) {
    __extends(Sku, _super);
    function Sku($injector) {
        var _this = _super.call(this, $injector) || this;
        _this.setNewQOH = function (value) {
            _this.newQOH = value;
        };
        _this.getNewQOH = function () {
            return _this.newQOH;
        };
        return _this;
    }
    return Sku;
}(baseentity_1.BaseEntity));
exports.Sku = Sku;


/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var basetransient_1 = __webpack_require__(60);
var BaseProcess = /** @class */ (function (_super) {
    __extends(BaseProcess, _super);
    function BaseProcess($injector) {
        return _super.call(this, $injector) || this;
    }
    return BaseProcess;
}(basetransient_1.BaseTransient));
exports.BaseProcess = BaseProcess;


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseprocess_1 = __webpack_require__(578);
var Order_AddOrderPayment = /** @class */ (function (_super) {
    __extends(Order_AddOrderPayment, _super);
    function Order_AddOrderPayment($injector) {
        var _this = _super.call(this, $injector) || this;
        _this.$injector = $injector;
        return _this;
    }
    return Order_AddOrderPayment;
}(baseprocess_1.BaseProcess));
exports.Order_AddOrderPayment = Order_AddOrderPayment;


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var order_addorderpayment_1 = __webpack_require__(579);
exports.Order_AddOrderPayment = order_addorderpayment_1.Order_AddOrderPayment;


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var request_1 = __webpack_require__(169);
var AdminRequest = /** @class */ (function (_super) {
    __extends(AdminRequest, _super);
    function AdminRequest(url, data, method, headers, $injector, observerService) {
        if (method === void 0) { method = "post"; }
        if (headers === void 0) { headers = { 'Content-Type': "application/json" }; }
        var _this = _super.call(this, url, data, method, headers, $injector) || this;
        _this.observerService = observerService;
        _this.observerService = observerService;
        _this.promise.then(function (result) {
            //identify that it is an object save
            if (url.indexOf('api:main.post') != -1 && data.entityName) {
                var eventNameBase = data.entityName + data.context.charAt(0).toUpperCase() + data.context.slice(0);
                if (result.errors) {
                    _this.observerService.notify(eventNameBase + 'Failure', result.data);
                }
                else {
                    _this.observerService.notify(eventNameBase + 'Success', result.data);
                }
            }
            _this.messages = result.messages;
        }).catch(function (response) {
        });
        return _this;
    }
    return AdminRequest;
}(request_1.Request));
exports.AdminRequest = AdminRequest;


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../../typings/tsd.d.ts' />
var request_1 = __webpack_require__(169);
var PublicRequest = /** @class */ (function (_super) {
    __extends(PublicRequest, _super);
    function PublicRequest(url, data, method, headers, $injector, observerService) {
        if (headers === void 0) { headers = { 'Content-Type': "application/x-www-form-urlencoded" }; }
        var _this = _super.call(this, url, data, method, headers, $injector) || this;
        _this.observerService = observerService;
        _this.failureActions = [];
        _this.successfulActions = [];
        _this.messages = [];
        _this.hasSuccessfulAction = function () {
            return _this.successfulActions.length > 0;
        };
        _this.hasFailureAction = function () {
            return _this.failureActions.length > 0;
        };
        _this.observerService = observerService;
        _this.promise.then(function (result) {
            _this.successfulActions = result.successfulActions;
            for (var i in _this.successfulActions) {
                var successfulAction = _this.successfulActions[i];
                _this.observerService.notify(successfulAction.split('.')[1] + 'Success', result.data);
            }
            _this.failureActions = result.failureActions;
            for (var i in _this.failureActions) {
                var failureAction = _this.failureActions[i];
                _this.observerService.notify(failureAction.split('.')[1] + 'Failure', result.data);
            }
            _this.messages = result.messages;
        }).catch(function (response) {
        });
        return _this;
    }
    return PublicRequest;
}(request_1.Request));
exports.PublicRequest = PublicRequest;


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var AccountService = /** @class */ (function (_super) {
    __extends(AccountService, _super);
    //@ngInject
    function AccountService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Account') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        return _this;
    }
    return AccountService;
}(baseentityservice_1.BaseEntityService));
exports.AccountService = AccountService;


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var CacheService = /** @class */ (function () {
    //@ngInject
    function CacheService(localStorageService) {
        var _this = this;
        this.localStorageService = localStorageService;
        this.cacheData = {};
        this.saveCacheData = function () {
            _this.localStorageService.setItem("cacheData", _this.cacheData);
        };
        this.hasKey = function (key) {
            if (angular.isDefined(_this.cacheData[key])) {
                return true;
            }
            return false;
        };
        this.dateExpired = function (key) {
            if (_this.cacheData[key].expiresTime == "forever") {
                return false;
            }
            return _this.cacheData[key].expiresTime < Date.now();
        };
        this.put = function (key, dataPromise, dataTarget, expiresTime) {
            if (expiresTime === void 0) { expiresTime = "forever"; }
            _this.cacheData[key] = {};
            _this.cacheData[key].expiresTime = expiresTime;
            _this.cacheData[key].dataPromise = dataPromise;
            _this.cacheData[key].dataTarget = dataTarget;
            dataPromise.then(function (response) {
                _this.localStorageService.setItem(key, response[dataTarget]);
            }, function (reason) {
                delete _this.cacheData[key];
            });
            _this.saveCacheData();
            return dataPromise;
        };
        this.reload = function (key, expiresTime) {
            if (expiresTime === void 0) { expiresTime = "forever"; }
            _this.cacheData[key].expiresTime = expiresTime;
            _this.cacheData[key].dataPromise.then(function (response) {
                _this.localStorageService.setItem(key, response[_this.cacheData[key].dataTarget]);
            }, function (reason) {
                delete _this.cacheData[key];
            });
            _this.saveCacheData();
            return _this.cacheData[key].dataPromise;
        };
        this.fetch = function (key) {
            if (_this.hasKey(key) && !_this.dateExpired(key)) {
                if (_this.localStorageService.hasItem(key)) {
                    return _this.localStorageService.getItem(key);
                }
                _this.put(key, _this.cacheData[key].dataPromise, _this.cacheData[key].dataTarget, _this.cacheData[key].expiresTime).finally(function () {
                    return _this.localStorageService.getItem(key);
                });
            }
        };
        this.fetchOrReload = function (key, expiresTime) {
            if (angular.isDefined(_this.fetch(key))) {
                return _this.fetch(key);
            }
            else {
                _this.reload(key, expiresTime).then(function (response) {
                    return _this.fetch(key);
                }, function (reason) {
                    //throw
                });
            }
        };
        if (localStorageService.hasItem("cacheData")) {
            this.cacheData = localStorageService.getItem("cacheData");
        }
    }
    return CacheService;
}());
exports.CacheService = CacheService;


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var CartService = /** @class */ (function (_super) {
    __extends(CartService, _super);
    //@ngInject
    //@ngInject
    function CartService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Order', 'Cart') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        return _this;
    }
    return CartService;
}(baseentityservice_1.BaseEntityService));
exports.CartService = CartService;


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var DraggableService = /** @class */ (function () {
    //ngInject
    function DraggableService() {
        this.isDropAllowed = function (event) {
            //todo implement
            return true;
        };
        this.isMouseInFirstHalf = function (event, targetNode, relativeToParent, horizontal) {
            var mousePointer = horizontal ? (event.offsetX || event.layerX)
                : (event.offsetY || event.layerY);
            var targetSize = horizontal ? targetNode.offsetWidth : targetNode.offsetHeight;
            var targetPosition = horizontal ? targetNode.offsetLeft : targetNode.offsetTop;
            targetPosition = relativeToParent ? targetPosition : 0;
            return mousePointer < targetPosition + targetSize / 2;
        };
    }
    return DraggableService;
}());
exports.DraggableService = DraggableService;


/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var baseentityservice_1 = __webpack_require__(14);
var EntityService = /** @class */ (function (_super) {
    __extends(EntityService, _super);
    //@ngInject
    function EntityService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService) || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        return _this;
    }
    return EntityService;
}(baseentityservice_1.BaseEntityService));
exports.EntityService = EntityService;


/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var ExpandableService = /** @class */ (function () {
    //ngInject
    function ExpandableService() {
        var _this = this;
        this.recordStates = {};
        this.addRecord = function (recordID, state) {
            if (angular.isUndefined(state)) {
                state = { isLoaded: true };
            }
            _this.recordStates[recordID] = state;
        };
        this.updateState = function (recordID, state) {
            if (angular.isUndefined(_this.recordStates[recordID])) {
                _this.recordStates[recordID] = {};
            }
            for (var key in state) {
                _this.recordStates[recordID][key] = state[key];
            }
        };
        this.getState = function (recordID, key) {
            if (angular.isDefined(_this.recordStates[recordID]) && angular.isDefined(key)) {
                var dataToReturn = _this.recordStates[recordID][key];
            }
            else {
                var dataToReturn = _this.recordStates[recordID];
            }
            if (angular.isDefined(dataToReturn)) {
                return dataToReturn;
            }
            return false;
        };
    }
    return ExpandableService;
}());
exports.ExpandableService = ExpandableService;


/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FilterService = /** @class */ (function () {
    //ngInject
    function FilterService() {
        this.filterMatch = function (valueToCompareAgainst, comparisonOperator, comparisonValue) {
            switch (comparisonOperator) {
                case "!=":
                    if (valueToCompareAgainst != comparisonValue) {
                        return true;
                    }
                    break;
                case ">":
                    if (valueToCompareAgainst > comparisonValue) {
                        return true;
                    }
                    break;
                case ">=":
                    if (valueToCompareAgainst >= comparisonValue) {
                        return true;
                    }
                    break;
                case "<":
                    if (valueToCompareAgainst < comparisonValue) {
                        return true;
                    }
                    break;
                case "<=":
                    if (valueToCompareAgainst <= comparisonValue) {
                        return true;
                    }
                    break;
                case "is":
                    if (valueToCompareAgainst == comparisonValue) {
                        return true;
                    }
                    break;
                case "is not":
                    if (valueToCompareAgainst != comparisonValue) {
                        return true;
                    }
                    break;
                default:
                    //= case
                    if (valueToCompareAgainst == comparisonValue) {
                        return true;
                    }
                    break;
            }
            return false;
        };
    }
    return FilterService;
}());
exports.FilterService = FilterService;


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var Form = /** @class */ (function () {
    //@ngInject
    function Form(name, object, editing) {
        this.$addControl = function (control) { };
        this.$removeControl = function (control) { };
        this.$setValidity = function (validationErrorKey, isValid, control) { };
        this.$setDirty = function () { };
        this.$setPristine = function () { };
        this.$commitViewValue = function () { };
        this.$rollbackViewValue = function () { };
        this.$setSubmitted = function () { };
        this.$setUntouched = function () { };
        this.name = name;
        this.object = object;
        this.editing = editing;
    }
    return Form;
}());
var FormService = /** @class */ (function () {
    function FormService($log) {
        var _this = this;
        this.$log = $log;
        this.setPristinePropertyValue = function (property, value) {
            _this._pristinePropertyValue[property] = value;
        };
        this.getPristinePropertyValue = function (property) {
            return _this._pristinePropertyValue[property];
        };
        this.setForm = function (form) {
            _this._forms[form.name] = form;
        };
        this.getForm = function (formName) {
            return _this._forms[formName];
        };
        this.getForms = function () {
            return _this._forms;
        };
        this.getFormsByObjectName = function (objectName) {
            var forms = [];
            for (var f in _this._forms) {
                if (angular.isDefined(_this._forms[f].$$swFormInfo.object) && _this._forms[f].$$swFormInfo.object.metaData.className === objectName) {
                    forms.push(_this._forms[f]);
                }
            }
            return forms;
        };
        this.createForm = function (name, object, editing) {
            var _form = new Form(name, object, editing);
            _this.setForm(_form);
            return _form;
        };
        this.resetForm = function (form) {
            _this.$log.debug('resetting form');
            _this.$log.debug(form);
            for (var key in form) {
                if (angular.isDefined(form[key])
                    && typeof form[key].$setViewValue == 'function'
                    && angular.isDefined(form[key].$viewValue)) {
                    _this.$log.debug(form[key]);
                    if (angular.isDefined(_this.getPristinePropertyValue(key))) {
                        form[key].$setViewValue(_this.getPristinePropertyValue(key));
                    }
                    else {
                        form[key].$setViewValue('');
                    }
                    form[key].$setUntouched(true);
                    form[key].$render();
                    _this.$log.debug(form[key]);
                }
            }
            form.$submitted = false;
            form.$setPristine();
            form.$setUntouched();
        };
        this.$log = $log;
        this._forms = {};
        this._pristinePropertyValue = {};
    }
    FormService.$inject = ['$log'];
    return FormService;
}());
exports.FormService = FormService;


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var HibachiInterceptor = /** @class */ (function () {
    //@ngInject
    function HibachiInterceptor($location, $q, $log, $rootScope, $window, $injector, localStorageService, alertService, appConfig, dialogService, utilityService, hibachiPathBuilder, observerService) {
        var _this = this;
        this.$location = $location;
        this.$q = $q;
        this.$log = $log;
        this.$rootScope = $rootScope;
        this.$window = $window;
        this.$injector = $injector;
        this.localStorageService = localStorageService;
        this.alertService = alertService;
        this.appConfig = appConfig;
        this.dialogService = dialogService;
        this.utilityService = utilityService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.observerService = observerService;
        this.urlParam = null;
        this.authHeader = 'Authorization';
        this.authPrefix = 'Bearer ';
        this.getJWTDataFromToken = function (str) {
            // Going backwards: from bytestream, to percent-encoding, to original string.
            str = str.split('.')[1];
            var decodedString = decodeURIComponent(_this.$window.atob(str).split('').map(function (c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));
            var jwtData = angular.fromJson(decodedString);
            var now = +new Date();
            var nowString = now.toString().substr(0, jwtData.exp.toString().length);
            now = +nowString;
            if (jwtData.issuer && jwtData.issuer == _this.$window.location.hostname && jwtData.exp > now) {
                if (!_this.$rootScope.slatwall.account) {
                    _this.$rootScope.slatwall.account = {};
                }
                _this.$rootScope.slatwall.account.accountID = jwtData.accountid;
            }
        };
        this.request = function (config) {
            _this.$log.debug('request');
            //bypass interceptor rules when checking template cache
            if (config.url.charAt(0) !== '/') {
                return config;
            }
            if (config.method == 'GET' && config.url.indexOf('.html') >= 0 && config.url.indexOf('/') >= 0) {
                //all partials are bound to instantiation key
                config.url = config.url + '?instantiationKey=' + _this.appConfig.instantiationKey;
                return config;
            }
            config.cache = true;
            config.headers = config.headers || {};
            if (_this.localStorageService.hasItem('token')) {
                config.headers['Auth-Token'] = 'Bearer ' + _this.localStorageService.getItem('token');
                _this.getJWTDataFromToken(_this.localStorageService.getItem('token'));
            }
            var queryParams = _this.utilityService.getQueryParamsFromUrl(config.url);
            if (config.method == 'GET' && (queryParams[_this.appConfig.action] && queryParams[_this.appConfig.action] === 'api:main.get')) {
                _this.$log.debug(config);
                config.method = 'POST';
                config.data = {};
                var data = {};
                if (angular.isDefined(config.params)) {
                    data = config.params;
                }
                var params = {};
                params.serializedJsonData = angular.toJson(data);
                params.context = "GET";
                config.data = $.param(params);
                delete config.params;
                config.headers['Content-Type'] = 'application/x-www-form-urlencoded';
            }
            return config;
        };
        this.requestError = function (rejection) {
            return _this.$q.reject(rejection);
        };
        this.response = function (response) {
            if (response.data.messages) {
                var alerts = _this.alertService.formatMessagesToAlerts(response.data.messages);
                _this.alertService.addAlerts(alerts);
            }
            if (response.data.hasOwnProperty('token')) {
                _this.localStorageService.setItem('token', response.data.token);
            }
            return response;
        };
        this.responseError = function (rejection) {
            if (angular.isDefined(rejection.status) && rejection.status !== 404 && rejection.status !== 403 && rejection.status !== 499) {
                if (rejection.data && rejection.data.messages) {
                    var alerts = _this.alertService.formatMessagesToAlerts(rejection.data.messages);
                    _this.alertService.addAlerts(alerts);
                }
                else {
                    var message = {
                        msg: 'there was error retrieving data',
                        type: 'error'
                    };
                    _this.alertService.addAlert(message);
                }
            }
            if (rejection.status === 403 || rejection.status == 401) {
                _this.observerService.notify('Unauthorized');
            }
            if (rejection.status === 499) {
                // handle the case where the user is not authenticated
                if (rejection.data && rejection.data.messages) {
                    //var deferred = $q.defer();
                    var $http = _this.$injector.get('$http');
                    if (rejection.data.messages[0].message === 'timeout') {
                        //open dialog
                        _this.dialogService.addPageDialog(_this.hibachiPathBuilder.buildPartialsPath('preprocesslogin'), {});
                    }
                    else if (rejection.data.messages[0].message === 'invalid_token') {
                        return $http.get(_this.baseUrl + '?' + _this.appConfig.action + '=api:main.login').then(function (loginResponse) {
                            if (loginResponse.status === 200) {
                                _this.localStorageService.setItem('token', loginResponse.data.token);
                                rejection.config.headers = rejection.config.headers || {};
                                rejection.config.headers['Auth-Token'] = 'Bearer ' + loginResponse.data.token;
                                _this.getJWTDataFromToken(loginResponse.data.token);
                                return $http(rejection.config).then(function (response) {
                                    return response;
                                });
                            }
                        }, function (rejection) {
                            return rejection;
                        });
                    }
                }
            }
            return rejection;
        };
        this.$location = $location;
        this.$q = $q;
        this.$log = $log;
        this.$rootScope = $rootScope;
        this.$window = $window;
        this.$injector = $injector;
        this.localStorageService = localStorageService;
        this.alertService = alertService;
        this.appConfig = appConfig;
        this.dialogService = dialogService;
        this.utilityService = utilityService;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.baseUrl = appConfig.baseURL;
    }
    HibachiInterceptor.Factory = function () {
        var eventHandler = function ($location, $q, $log, $rootScope, $window, $injector, localStorageService, alertService, appConfig, dialogService, utilityService, hibachiPathBuilder, observerService) { return new HibachiInterceptor($location, $q, $log, $rootScope, $window, $injector, localStorageService, alertService, appConfig, dialogService, utilityService, hibachiPathBuilder, observerService); };
        eventHandler.$inject = [
            '$location',
            '$q',
            '$log',
            '$rootScope',
            '$window',
            '$injector',
            'localStorageService',
            'alertService',
            'appConfig',
            'dialogService',
            'utilityService',
            'hibachiPathBuilder',
            'observerService'
        ];
        return eventHandler;
    };
    return HibachiInterceptor;
}());
exports.HibachiInterceptor = HibachiInterceptor;


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/*services return promises which can be handled uniquely based on success or failure by the controller*/
var HibachiPathBuilder = /** @class */ (function () {
    //@ngInject
    function HibachiPathBuilder() {
        var _this = this;
        this.setBaseURL = function (baseURL) {
            _this.baseURL = baseURL;
        };
        this.setBasePartialsPath = function (basePartialsPath) {
            _this.basePartialsPath = basePartialsPath;
        };
        this.setApiSubsystemName = function (apiSubsystemName) {
            _this.apiSubsystemName = apiSubsystemName;
        };
        this.buildPartialsPath = function (componentsPath) {
            if (angular.isDefined(_this.baseURL) && angular.isDefined(_this.basePartialsPath)) {
                return (_this.baseURL + _this.basePartialsPath + componentsPath).replace("//", "/");
            }
            else {
                throw ('need to define baseURL and basePartialsPath in hibachiPathBuilder. Inject hibachiPathBuilder into module and configure it there');
            }
        };
    }
    return HibachiPathBuilder;
}());
exports.HibachiPathBuilder = HibachiPathBuilder;


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var HibachiScope = /** @class */ (function () {
    //@ngInject
    function HibachiScope(appConfig) {
        var _this = this;
        this.loginDisplayed = false;
        this.isValidToken = true;
        this.setToken = function (token) {
            _this.token = token;
            var stringArray = token.split('.');
            try {
                _this.jwtInfo = angular.fromJson(window.atob(stringArray[0]).trim());
                _this.session = angular.fromJson(window.atob(stringArray[1]).trim());
            }
            catch (err) {
                _this.isValidToken = false;
            }
        };
        this.config = appConfig;
    }
    return HibachiScope;
}());
exports.HibachiScope = HibachiScope;


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
// interface ISlatwallRootScopeService extends ng.IRootScopeService{
//     loadedResourceBundle:boolean;
// 	loadingResourceBundle:boolean;
// } 
var HibachiService = /** @class */ (function () {
    //@ngInject
    function HibachiService($window, $q, $http, $timeout, $log, $rootScope, $location, $anchorScroll, requestService, utilityService, formService, rbkeyService, appConfig, _config, _jsEntities, _jsEntityInstances) {
        var _this = this;
        this.$window = $window;
        this.$q = $q;
        this.$http = $http;
        this.$timeout = $timeout;
        this.$log = $log;
        this.$rootScope = $rootScope;
        this.$location = $location;
        this.$anchorScroll = $anchorScroll;
        this.requestService = requestService;
        this.utilityService = utilityService;
        this.formService = formService;
        this.rbkeyService = rbkeyService;
        this.appConfig = appConfig;
        this._config = _config;
        this._jsEntities = _jsEntities;
        this._jsEntityInstances = _jsEntityInstances;
        this._deferred = {};
        this._resourceBundle = {};
        this.usePublicRoutes = false;
        this.buildUrl = function (action, queryString) {
            //actionName example: slatAction. defined in FW1 and populated to config
            var actionName = _this.appConfig.action;
            var baseUrl = _this.appConfig.baseURL;
            queryString = queryString || '';
            if (angular.isDefined(queryString) && queryString.length) {
                if (queryString.indexOf('&') !== 0) {
                    queryString = '&' + queryString;
                }
            }
            return baseUrl + '?' + actionName + '=' + action + queryString;
        };
        this.getUrlWithActionPrefix = function () {
            return _this.appConfig.baseURL + '/index.cfm/?' + _this.appConfig.action + "=";
        };
        this.getJsEntities = function () {
            return _this._jsEntities;
        };
        this.setJsEntities = function (jsEntities) {
            _this._jsEntities = jsEntities;
        };
        this.getJsEntityInstances = function () {
            return _this._jsEntityInstances;
        };
        this.setJsEntityInstances = function (jsEntityInstances) {
            _this._jsEntityInstances = jsEntityInstances;
        };
        this.getEntityExample = function (entityName) {
            return _this._jsEntityInstances[entityName];
        };
        this.getEntityMetaData = function (entityName) {
            return _this._jsEntityInstances[entityName].metaData;
        };
        this.getPropertyByEntityNameAndPropertyName = function (entityName, propertyName) {
            return _this.getEntityMetaData(entityName)[propertyName];
        };
        this.getPrimaryIDPropertyNameByEntityName = function (entityName) {
            return _this.getEntityExample(entityName).$$getIDName();
        };
        this.getEntityHasPropertyByEntityName = function (entityName, propertyName) {
            return angular.isDefined(_this.getEntityMetaData(entityName)[propertyName]);
        };
        this.getBaseEntityAliasFromName = function (entityName) {
            return '_' + entityName;
        };
        this.getPropertyIsObjectByEntityNameAndPropertyIdentifier = function (entityName, propertyIdentifier) {
            var lastEntity = _this.getLastEntityNameInPropertyIdentifier(entityName, propertyIdentifier);
            var entityMetaData = _this.getEntityMetaData(lastEntity);
            return angular.isDefined(entityMetaData[_this.utilityService.listLast(propertyIdentifier, '.')].cfc);
        };
        this.getLastEntityNameInPropertyIdentifier = function (entityName, propertyIdentifier) {
            if (!entityName) {
                throw ('No entity name was supplied to getLastEntityNameInPropertyIdentifier in hibachi service.');
            }
            //strip alias if it exists and convert everything to be periods
            if (propertyIdentifier.charAt(0) === '_') {
                propertyIdentifier = _this.utilityService.listRest(propertyIdentifier.replace(/_/g, '.'), '.');
            }
            var propertyIdentifierArray = propertyIdentifier.split('.');
            if (propertyIdentifierArray[0] === entityName.toLowerCase()) {
                propertyIdentifierArray.shift();
            }
            if (propertyIdentifierArray.length > 1) {
                var propertiesStruct = _this.getEntityMetaData(entityName);
                var currentProperty = propertyIdentifierArray.shift();
                if (!propertiesStruct[currentProperty] ||
                    !propertiesStruct[currentProperty].cfc) {
                    throw ("The Property Identifier " + propertyIdentifier + " is invalid for the entity " + entityName);
                }
                var currentEntityName = propertiesStruct[currentProperty].cfc;
                var currentPropertyIdentifier = propertyIdentifierArray.join('.');
                return _this.getLastEntityNameInPropertyIdentifier(currentEntityName, currentPropertyIdentifier);
            }
            return entityName;
        };
        //helper method to inflate a new entity with data
        this.populateEntity = function (entityName, data) {
            var newEntity = _this.newEntity(entityName);
            angular.extend(newEntity.data, data);
            return newEntity;
        };
        //service method used to transform collection data to collection objects based on a collectionconfig
        this.populateCollection = function (collectionData, collectionConfig) {
            //create array to hold objects
            var entities = [];
            //loop over all collection data to create objects
            var hibachiService = _this;
            angular.forEach(collectionData, function (collectionItemData, key) {
                //create base Entity
                var entity = hibachiService['new' + collectionConfig.baseEntityName.replace(_this.appConfig.applicationKey, '')]();
                //populate entity with data based on the collectionConfig
                angular.forEach(collectionConfig.columns, function (column, key) {
                    //get objects base properties
                    var propertyIdentifier = column.propertyIdentifier.replace(collectionConfig.baseEntityAlias.toLowerCase(), '');
                    propertyIdentifier = _this.utilityService.replaceAll(propertyIdentifier, '_', '.');
                    if (propertyIdentifier.charAt(0) === '.') {
                        propertyIdentifier = propertyIdentifier.slice(1);
                    }
                    var propertyIdentifierArray = propertyIdentifier.split('.');
                    var propertyIdentifierKey = propertyIdentifier.replace(/\./g, '_');
                    var currentEntity = entity;
                    angular.forEach(propertyIdentifierArray, function (property, key) {
                        if (key === propertyIdentifierArray.length - 1) {
                            //if we are on the last item in the array
                            if (angular.isObject(collectionItemData[propertyIdentifierKey]) && currentEntity.metaData[property].fieldtype === 'many-to-one') {
                                var relatedEntity = hibachiService['new' + currentEntity.metaData[property].cfc]();
                                relatedEntity.$$init(collectionItemData[propertyIdentifierKey][0]);
                                currentEntity['$$set' + currentEntity.metaData[property].name.charAt(0).toUpperCase() + currentEntity.metaData[property].name.slice(1)](relatedEntity);
                            }
                            else if (angular.isArray(collectionItemData[propertyIdentifierKey]) && (currentEntity.metaData[property].fieldtype === 'one-to-many')) {
                                angular.forEach(collectionItemData[propertyIdentifierKey], function (arrayItem, key) {
                                    var relatedEntity = hibachiService['new' + currentEntity.metaData[property].cfc]();
                                    relatedEntity.$$init(arrayItem);
                                    currentEntity['$$add' + currentEntity.metaData[property].singularname.charAt(0).toUpperCase() + currentEntity.metaData[property].singularname.slice(1)](relatedEntity);
                                });
                            }
                            else {
                                currentEntity.data[property] = collectionItemData[propertyIdentifierKey];
                            }
                        }
                        else {
                            var propertyMetaData = currentEntity.metaData[property];
                            if (angular.isUndefined(currentEntity.data[property])) {
                                if (propertyMetaData.fieldtype === 'one-to-many') {
                                    relatedEntity = [];
                                }
                                else {
                                    relatedEntity = hibachiService['new' + propertyMetaData.cfc]();
                                }
                            }
                            else {
                                relatedEntity = currentEntity.data[property];
                            }
                            currentEntity['$$set' + propertyMetaData.name.charAt(0).toUpperCase() + propertyMetaData.name.slice(1)](relatedEntity);
                            currentEntity = relatedEntity;
                        }
                    });
                });
                entities.push(entity);
            });
            return entities;
        };
        /*basic entity getter where id is optional, returns a promise*/
        this.getDefer = function (deferKey) {
            return _this._deferred[deferKey];
        };
        this.cancelPromise = function (deferKey) {
            var deferred = _this.getDefer(deferKey);
            if (angular.isDefined(deferred)) {
                deferred.resolve({ messages: [{ messageType: 'error', message: 'User Cancelled' }] });
            }
        };
        this.newEntity = function (entityName) {
            if (entityName != undefined) {
                var entityServiceName = entityName.charAt(0).toLowerCase() + entityName.slice(1) + 'Service';
                if (angular.element(document.body).injector().has(entityServiceName)) {
                    var entityService = angular.element(document.body).injector().get(entityServiceName);
                    var functionObj = entityService['new' + entityName];
                    if (entityService['new' + entityName] != undefined && !!(functionObj && functionObj.constructor && functionObj.call && functionObj.apply)) {
                        return entityService['new' + entityName]();
                    }
                }
                return new _this._jsEntities[entityName];
            }
        };
        this.getEntityDefinition = function (entityName) {
            return _this._jsEntities[entityName];
        };
        /*basic entity getter where id is optional, returns a promise*/
        this.getEntity = function (entityName, options) {
            /*
            *
            * getEntity('Product', '12345-12345-12345-12345');
            * getEntity('Product', {keywords='Hello'});
            *
            */
            var apiSubsystemName = _this.appConfig.apiSubsystemName || "api";
            if (angular.isUndefined(options)) {
                options = {};
            }
            if (angular.isDefined(options.deferKey)) {
                _this.cancelPromise(options.deferKey);
            }
            var params = {};
            if (typeof options === 'string') {
                var urlString = _this.getUrlWithActionPrefix() + apiSubsystemName + ':' + 'main.get&entityName=' + entityName + '&entityID=' + options;
            }
            else {
                params['P:Current'] = options.currentPage || 1;
                params['P:Show'] = options.pageShow || 10;
                params.keywords = options.keywords || '';
                params.columnsConfig = options.columnsConfig || '';
                params.filterGroupsConfig = options.filterGroupsConfig || '';
                params.joinsConfig = options.joinsConfig || '';
                params.orderByConfig = options.orderByConfig || '';
                params.groupBysConfig = options.groupBysConfig || '';
                params.isDistinct = options.isDistinct || false;
                params.propertyIdentifiersList = options.propertyIdentifiersList || '';
                params.allRecords = options.allRecords || false;
                params.defaultColumns = options.defaultColumns || true;
                params.processContext = options.processContext || '';
                var urlString = _this.getUrlWithActionPrefix() + apiSubsystemName + ':' + 'main.get&entityName=' + entityName;
            }
            if (angular.isDefined(options.id)) {
                urlString += '&entityId=' + options.id;
            }
            var transformResponse = function (data) {
                if (angular.isString(data)) {
                    data = JSON.parse(data);
                }
                return data;
            };
            //check if we are using a service to transform the response
            if (angular.isDefined(options.transformResponse)) {
                transformResponse = function (data) {
                    var data = JSON.parse(data);
                    if (angular.isDefined(data.records)) {
                        data = options.transformResponse(data.records);
                    }
                    return data;
                };
            }
            var request = _this.requestService.newAdminRequest(urlString, params);
            if (options.deferKey) {
                _this._deferred[options.deferKey] = request;
            }
            return request.promise;
        };
        this.getResizedImageByProfileName = function (profileName, skuIDs) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getResizedImageByProfileName&context=getResizedImageByProfileName&profileName=' + profileName + '&skuIDs=' + skuIDs;
            var request = _this.requestService.newPublicRequest(urlString);
            return request.promise;
        };
        this.getEventOptions = function (entityName) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getEventOptionsByEntityName&entityName=' + entityName;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.getProcessOptions = function (entityName) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getProcessMethodOptionsByEntityName&entityName=' + entityName;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.checkUniqueOrNullValue = function (object, property, value) {
            var objectName = object.metaData.className;
            var objectID = object.$$getID();
            return _this.$http.get(_this.getUrlWithActionPrefix() + 'api:main.getValidationPropertyStatus&object=' + objectName + '&objectID=' + objectID + '&propertyidentifier=' + property +
                '&value=' + escape(value)).then(function (results) {
                return results.data.uniqueStatus;
            });
        };
        this.checkUniqueValue = function (object, property, value) {
            var objectName = object.metaData.className;
            var objectID = object.$$getID();
            return _this.$http.get(_this.getUrlWithActionPrefix() + 'api:main.getValidationPropertyStatus&object=' + objectName + '&objectID=' + objectID + '&propertyidentifier=' + property +
                '&value=' + escape(value)).then(function (results) {
                return results.data.uniqueStatus;
            });
        };
        this.getPropertyDisplayData = function (entityName, options) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getPropertyDisplayData&entityName=' + entityName;
            var params = {};
            params.propertyIdentifiersList = options.propertyIdentifiersList || '';
            var request = _this.requestService.newAdminRequest(urlString, params);
            return request.promise;
        };
        this.getPropertyDisplayOptions = function (entityName, options) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getPropertyDisplayOptions&entityName=' + entityName;
            var params = {};
            params.property = options.property || options.propertyIdentifier || '';
            if (angular.isDefined(options.argument1)) {
                params.argument1 = options.argument1;
            }
            var request = _this.requestService.newAdminRequest(urlString, params);
            return request.promise;
        };
        this.getPropertyTitle = function (propertyName, metaData) {
            var propertyMetaData = metaData[propertyName];
            if (angular.isDefined(propertyMetaData['hb_rbkey'])) {
                return metaData.$$getRBKey(propertyMetaData['hb_rbkey']);
            }
            else if (angular.isUndefined(propertyMetaData['persistent'])) {
                if (angular.isDefined(propertyMetaData['fieldtype'])
                    && angular.isDefined(propertyMetaData['cfc'])
                    && ["one-to-many", "many-to-many"].indexOf(propertyMetaData.fieldtype) > -1) {
                    return metaData.$$getRBKey("entity." + metaData.className.toLowerCase() + "." + propertyName + ',entity.' + propertyMetaData.cfc + '_plural');
                }
                else if (angular.isDefined(propertyMetaData.fieldtype)
                    && angular.isDefined(propertyMetaData.cfc)
                    && ["many-to-one"].indexOf(propertyMetaData.fieldtype) > -1) {
                    return metaData.$$getRBKey("entity." + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase() + ',entity.' + propertyMetaData.cfc);
                }
                return metaData.$$getRBKey('entity.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase());
            }
            else if (metaData.isProcessObject) {
                if (angular.isDefined(propertyMetaData.fieldtype)
                    && angular.isDefined(propertyMetaData.cfc)
                    && ["one-to-many", "many-to-many"].indexOf(propertyMetaData.fieldtype) > -1) {
                    return metaData.$$getRBKey('processObject.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase() + ',entity.' + propertyMetaData.cfc.toLowerCase() + '_plural');
                }
                else if (angular.isDefined(propertyMetaData.fieldtype)
                    && angular.isDefined(propertyMetaData.cfc)) {
                    return metaData.$$getRBKey('processObject.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase() + ',entity.' + propertyMetaData.cfc.toLowerCase());
                }
                return metaData.$$getRBKey('processObject.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase());
            }
            return metaData.$$getRBKey('object.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase());
        };
        this.saveEntity = function (entityName, id, params, context) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.post';
            if (angular.isDefined(entityName)) {
                params.entityName = entityName;
            }
            if (angular.isDefined(id)) {
                params.entityID = id;
            }
            if (angular.isDefined(context)) {
                params.context = context;
            }
            var request = _this.requestService.newAdminRequest(urlString, params);
            return request.promise;
        };
        this.getExistingCollectionsByBaseEntity = function (entityName) {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getExistingCollectionsByBaseEntity&entityName=' + entityName;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.getFilterPropertiesByBaseEntityName = function (entityName, includeNonPersistent) {
            if (includeNonPersistent === void 0) { includeNonPersistent = false; }
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getFilterPropertiesByBaseEntityName&EntityName=' + entityName + '&includeNonPersistent=' + includeNonPersistent;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.login = function (emailAddress, password) {
            var urlString = _this.appConfig.baseURL + '/index.cfm/api/auth/login';
            var params = {
                emailAddress: emailAddress,
                password: password
            };
            var request = _this.requestService.newAdminRequest(urlString, params);
            return request.promise;
        };
        this.getResourceBundle = function (locale) {
            var locale = locale || _this.appConfig.rbLocale;
            if (_this._resourceBundle[locale]) {
                return _this._resourceBundle[locale];
            }
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getResourceBundle&instantiationKey=' + _this.appConfig.instantiationKey + '&locale=' + locale;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.getCurrencies = function () {
            var urlString = _this.getUrlWithActionPrefix() + 'api:main.getCurrencies&instantiationKey=' + _this.appConfig.instantiationKey;
            var request = _this.requestService.newAdminRequest(urlString);
            return request.promise;
        };
        this.getConfig = function () {
            return _this._config;
        };
        this.getConfigValue = function (key) {
            return _this._config[key];
        };
        this.setConfigValue = function (key, value) {
            _this._config[key] = value;
        };
        this.setConfig = function (config) {
            _this._config = config;
        };
        this.$window = $window;
        this.$q = $q;
        this.$http = $http;
        this.$timeout = $timeout;
        this.$log = $log;
        this.$rootScope = $rootScope;
        this.$location = $location;
        this.$anchorScroll = $anchorScroll;
        this.requestService = requestService;
        this.utilityService = utilityService;
        this.formService = formService;
        this.rbkeyService = rbkeyService;
        this.appConfig = appConfig;
        this._config = _config;
        this._jsEntities = _jsEntities;
        this._jsEntityInstances = _jsEntityInstances;
    }
    return HibachiService;
}());
exports.HibachiService = HibachiService;
var $Hibachi = /** @class */ (function () {
    //@ngInject
    function $Hibachi(appConfig) {
        var _this = this;
        this._config = {};
        this.angular = angular;
        this.setJsEntities = function (jsEntities) {
            _this._jsEntities = jsEntities;
        };
        this.getConfig = function () {
            return _this._config;
        };
        this.getConfigValue = function (key) {
            return _this._config[key];
        };
        this.setConfigValue = function (key, value) {
            _this._config[key] = value;
        };
        this.setConfig = function (config) {
            _this._config = config;
        };
        this._config = appConfig;
        this.$get.$inject = [
            '$window',
            '$q',
            '$http',
            '$timeout',
            '$log',
            '$rootScope',
            '$location',
            '$anchorScroll',
            'requestService',
            'utilityService',
            'formService',
            'rbkeyService',
            'appConfig'
        ];
    }
    $Hibachi.prototype.$get = function ($window, $q, $http, $timeout, $log, $rootScope, $location, $anchorScroll, requestService, utilityService, formService, rbkeyService, appConfig) {
        return new HibachiService($window, $q, $http, $timeout, $log, $rootScope, $location, $anchorScroll, requestService, utilityService, formService, rbkeyService, appConfig, this._config, this._jsEntities, this._jsEntityInstances);
    };
    return $Hibachi;
}());
exports.$Hibachi = $Hibachi;


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var HibachiServiceDecorator = /** @class */ (function () {
    //@ngInject
    function HibachiServiceDecorator($delegate, $http, $timeout, $log, $rootScope, $location, $anchorScroll, $q, utilityService, formService, rbkeyService, appConfig, observerService, hibachiValidationService, attributeMetaData) {
        var _deferred = {};
        var _config = appConfig;
        var _jsEntities = {};
        var _jsEntityInstances = {};
        var entities = appConfig.modelConfig.entities, validations = appConfig.modelConfig.validations, defaultValues = appConfig.modelConfig.defaultValues;
        angular.forEach(entities, function (entity) {
            if (attributeMetaData && attributeMetaData[entity.className]) {
                var relatedAttributes = attributeMetaData[entity.className];
                for (var attributeSetCode in relatedAttributes) {
                    var attributeSet = relatedAttributes[attributeSetCode];
                    for (var attributeCode in attributeSet.attributes) {
                        var attribute = attributeSet.attributes[attributeCode];
                        attribute.attributeSet = attributeSet;
                        attribute.isAttribute = true;
                        $.extend(entity[attributeCode], attribute);
                    }
                }
            }
            $delegate['get' + entity.className] = function (options) {
                var entityInstance = $delegate.newEntity(entity.className);
                var entityDataPromise = $delegate.getEntity(entity.className, options);
                entityDataPromise.then(function (response) {
                    if (angular.isDefined(response.processData)) {
                        entityInstance.$$init(response.data);
                        var processObjectInstance = $delegate['new' + entity.className + '_' + options.processContext.charAt(0).toUpperCase() + options.processContext.slice(1)]();
                        processObjectInstance.$$init(response.processData);
                        processObjectInstance.data[entity.className.charAt(0).toLowerCase() + entity.className.slice(1)] = entityInstance;
                        entityInstance.processObject = processObjectInstance;
                    }
                    else {
                        if (entityInstance.populate) {
                            entityInstance.populate(response);
                        }
                        else {
                            entityInstance.$$init(response);
                        }
                    }
                });
                return {
                    promise: entityDataPromise,
                    value: entityInstance
                };
            };
            $delegate['new' + entity.className] = function () {
                //if we have the service then get the new instance from that
                var entityName = entity.className;
                var serviceName = entityName.charAt(0).toLowerCase() + entityName.slice(1) + 'Service';
                if (angular.element(document.body).injector().has(serviceName)) {
                    var entityService = angular.element(document.body).injector().get(serviceName);
                    if (entityService['new' + entity.className]) {
                        return entityService['new' + entity.className]();
                    }
                }
                return $delegate.newEntity(entity.className);
            };
            entity.isProcessObject = entity.className.indexOf('_') >= 0;
            _jsEntities[entity.className] = function () {
                this.validations = validations[entity.className];
                this.metaData = entity;
                this.metaData.className = entity.className;
                if (relatedAttributes) {
                    this.attributeMetaData = relatedAttributes;
                }
                if (entity.hb_parentPropertyName) {
                    this.metaData.hb_parentPropertyName = entity.hb_parentPropertyName;
                }
                if (entity.hb_childPropertyName) {
                    this.metaData.hb_childPropertyName = entity.hb_childPropertyName;
                }
                this.metaData.$$getRBKey = function (rbKey, replaceStringData) {
                    return rbkeyService.rbKey(rbKey, replaceStringData);
                };
                this.metaData.$$getPropertyTitle = function (propertyName) {
                    return _getPropertyTitle(propertyName, this);
                };
                this.metaData.$$getPropertyHint = function (propertyName) {
                    return _getPropertyHint(propertyName, this);
                };
                this.metaData.$$getManyToManyName = function (singularname) {
                    var metaData = this;
                    for (var i in metaData) {
                        if (metaData[i].singularname === singularname) {
                            return metaData[i].name;
                        }
                    }
                };
                this.metaData.$$getPropertyFieldType = function (propertyName) {
                    return _getPropertyFieldType(propertyName, this);
                };
                this.metaData.$$getPropertyFormatType = function (propertyName) {
                    if (this[propertyName])
                        return _getPropertyFormatType(propertyName, this);
                };
                this.metaData.$$getDetailTabs = function () {
                    var deferred = $q.defer();
                    var urlString = _config.baseURL + '/index.cfm/?' + appConfig.action + '=api:main.getDetailTabs&entityName=' + this.className;
                    var detailTabs = [];
                    $http.get(urlString)
                        .success(function (data) {
                        deferred.resolve(data);
                    }).error(function (reason) {
                        deferred.reject(reason);
                    });
                    return deferred.promise;
                };
                this.$$getFormattedValue = function (propertyName, formatType) {
                    return _getFormattedValue(propertyName, formatType, this);
                };
                this.data = {};
                this.modifiedData = {};
                var jsEntity = this;
                if (entity.isProcessObject) {
                    (function (entity) {
                        _jsEntities[entity.className].prototype = {
                            $$getID: function () {
                                return '';
                            },
                            $$getIDName: function () {
                                var IDNameString = '';
                                return IDNameString;
                            }
                        };
                    })(entity);
                }
                angular.forEach(entity, function (property) {
                    if (angular.isObject(property) && angular.isDefined(property.name)) {
                        if (defaultValues && defaultValues[entity.className] && defaultValues[entity.className][property.name] != null) {
                            jsEntity.data[property.name] = angular.copy(defaultValues[entity.className][property.name]);
                        }
                        else {
                            jsEntity.data[property.name] = undefined;
                        }
                    }
                });
            };
            _jsEntities[entity.className].prototype = {
                $$getPropertyByName: function (propertyName) {
                    return this['$$get' + propertyName.charAt(0).toUpperCase() + propertyName.slice(1)]();
                },
                $$isPersisted: function () {
                    return this.$$getID() !== '';
                },
                $$init: function (data) {
                    _init(this, data);
                },
                $$save: function () {
                    return _save(this);
                },
                $$delete: function () {
                    return _delete(this);
                },
                $$getValidationsByProperty: function (property) {
                    return _getValidationsByProperty(this, property);
                },
                $$getValidationByPropertyAndContext: function (property, context) {
                    return _getValidationByPropertyAndContext(this, property, context);
                },
                $$getTitleByPropertyIdentifier: function (propertyIdentifier) {
                    if (propertyIdentifier.split('.').length > 1) {
                        var listFirst = utilityService.listFirst(propertyIdentifier, '.');
                        var relatedEntityName = this.metaData[listFirst].cfc;
                        var exampleEntity = $delegate.newEntity(relatedEntityName);
                        return exampleEntity.$$getTitleByPropertyIdentifier(propertyIdentifier.replace(listFirst, ''));
                    }
                    return this.metaData.$$getPropertyTitle(propertyIdentifier);
                },
                $$getMetaData: function (propertyName) {
                    if (propertyName === undefined) {
                        return this.metaData;
                    }
                    else {
                        if (angular.isDefined(this.metaData[propertyName].name) && angular.isUndefined(this.metaData[propertyName].nameCapitalCase)) {
                            this.metaData[propertyName].nameCapitalCase = this.metaData[propertyName].name.charAt(0).toUpperCase() + this.metaData[propertyName].name.slice(1);
                        }
                        if (angular.isDefined(this.metaData[propertyName].cfc) && angular.isUndefined(this.metaData[propertyName].cfcProperCase)) {
                            this.metaData[propertyName].cfcProperCase = this.metaData[propertyName].cfc.charAt(0).toLowerCase() + this.metaData[propertyName].cfc.slice(1);
                        }
                        return this.metaData[propertyName];
                    }
                }
            };
            angular.forEach(relatedAttributes, function (attributeSet) {
                angular.forEach(attributeSet.attributes, function (attribute) {
                    if (attribute && attribute.attributeCode) {
                        Object.defineProperty(_jsEntities[entity.className].prototype, attribute.attributeCode, {
                            configurable: true,
                            enumerable: false,
                            get: function () {
                                if (attribute != null && this.data[attribute.attributeCode] == null) {
                                    return undefined;
                                }
                                return this.data[attribute.attributeCode];
                            },
                            set: function (value) {
                                this.data[attribute.attributeCode] = value;
                            }
                        });
                    }
                });
            });
            angular.forEach(entity, function (property) {
                if (angular.isObject(property) && angular.isDefined(property.name)) {
                    //if(angular.isUndefined(property.persistent)){
                    if (angular.isDefined(property.fieldtype)) {
                        if (['many-to-one'].indexOf(property.fieldtype) >= 0) {
                            _jsEntities[entity.className].prototype['$$get' + property.name.charAt(0).toUpperCase() + property.name.slice(1)] = function () {
                                var thisEntityInstance = this;
                                if (angular.isDefined(this['$$get' + this.$$getIDName().charAt(0).toUpperCase() + this.$$getIDName().slice(1)]())) {
                                    var options = {
                                        columnsConfig: angular.toJson([
                                            {
                                                "propertyIdentifier": "_" + this.metaData.className.toLowerCase() + "_" + property.name
                                            }
                                        ]),
                                        joinsConfig: angular.toJson([
                                            {
                                                "associationName": property.name,
                                                "alias": "_" + this.metaData.className.toLowerCase() + "_" + property.name
                                            }
                                        ]),
                                        filterGroupsConfig: angular.toJson([{
                                                "filterGroup": [
                                                    {
                                                        "propertyIdentifier": "_" + this.metaData.className.toLowerCase() + "." + this.$$getIDName(),
                                                        "comparisonOperator": "=",
                                                        "value": this.$$getID()
                                                    }
                                                ]
                                            }]),
                                        allRecords: true
                                    };
                                    var collectionPromise = $delegate.getEntity(entity.className, options);
                                    collectionPromise.then(function (response) {
                                        for (var i in response.records) {
                                            var entityInstance = $delegate.newEntity(thisEntityInstance.metaData[property.name].cfc);
                                            //Removed the array index here at the end of local.property.name.
                                            if (angular.isArray(response.records[i][property.name])) {
                                                entityInstance.$$init(response.records[i][property.name][0]);
                                            }
                                            else {
                                                entityInstance.$$init(response.records[i][property.name]); //Shouldn't have the array index'
                                            }
                                            thisEntityInstance['$$set' + property.name.charAt(0).toUpperCase() + property.name.slice(1)](entityInstance);
                                        }
                                    });
                                    return collectionPromise;
                                }
                                return null;
                            };
                            _jsEntities[entity.className].prototype['$$set' + property.name.charAt(0).toUpperCase() + property.name.slice(1)] = function (entityInstance) {
                                var thisEntityInstance = this;
                                var metaData = this.metaData;
                                var manyToManyName = '';
                                //if entityInstance is not passed in, clear related object
                                if (angular.isUndefined(entityInstance)) {
                                    if (angular.isDefined(thisEntityInstance.data[property.name])) {
                                        delete thisEntityInstance.data[property.name];
                                    }
                                    if (!thisEntityInstance.parents) {
                                        return;
                                    }
                                    for (var i = 0; i <= thisEntityInstance.parents.length; i++) {
                                        if (angular.isDefined(thisEntityInstance.parents[i]) && thisEntityInstance.parents[i].name == property.name.charAt(0).toLowerCase() + property.name.slice(1)) {
                                            thisEntityInstance.parents.splice(i, 1);
                                        }
                                    }
                                    return;
                                }
                                if (property.name === 'parent' + this.metaData.className) {
                                    var childName = 'child' + this.metaData.className;
                                    manyToManyName = entityInstance.metaData.$$getManyToManyName(childName);
                                }
                                else if (entityInstance.metaData) {
                                    manyToManyName = entityInstance.metaData.$$getManyToManyName(metaData.className.charAt(0).toLowerCase() + metaData.className.slice(1));
                                }
                                // else{
                                //     manyToManyName = entityInstance.metaData.$$getManyToManyName(metaData.className.charAt(0).toLowerCase() + metaData.className.slice(1));
                                // }
                                if (angular.isUndefined(thisEntityInstance.parents)) {
                                    thisEntityInstance.parents = [];
                                }
                                thisEntityInstance.parents.push(thisEntityInstance.metaData[property.name]);
                                if (angular.isDefined(manyToManyName) && manyToManyName.length) {
                                    if (angular.isUndefined(entityInstance.children)) {
                                        entityInstance.children = [];
                                    }
                                    var child = entityInstance.metaData[manyToManyName];
                                    if (entityInstance.children.indexOf(child) === -1) {
                                        entityInstance.children.push(child);
                                    }
                                    if (angular.isUndefined(entityInstance.data[manyToManyName])) {
                                        entityInstance.data[manyToManyName] = [];
                                    }
                                    entityInstance.data[manyToManyName].push(thisEntityInstance);
                                }
                                thisEntityInstance.data[property.name] = entityInstance;
                            };
                            if (property.name !== 'data' && property.name !== 'validations') {
                                Object.defineProperty(_jsEntities[entity.className].prototype, property.name, {
                                    configurable: true,
                                    enumerable: false,
                                    get: function () {
                                        if (this.data[property.name] == null) {
                                            return undefined;
                                        }
                                        return this.data[property.name];
                                    },
                                    set: function (value) {
                                        this['$$set' + property.name.charAt(0).toUpperCase() + property.name.slice(1)](value);
                                    }
                                });
                            }
                        }
                        else if (['one-to-many', 'many-to-many'].indexOf(property.fieldtype) >= 0) {
                            if (!property.singularname) {
                                throw ('need to define a singularname for ' + property.fieldtype);
                            }
                            _jsEntities[entity.className].prototype['$$add' + property.singularname.charAt(0).toUpperCase() + property.singularname.slice(1)] = function (entityInstance) {
                                if (angular.isUndefined(entityInstance)) {
                                    var entityInstance = $delegate.newEntity(this.metaData[property.name].cfc);
                                }
                                var metaData = this.metaData;
                                if (metaData[property.name].fieldtype === 'one-to-many') {
                                    entityInstance.data[metaData[property.name].fkcolumn.slice(0, -2)] = this;
                                }
                                else if (metaData[property.name].fieldtype === 'many-to-many') {
                                    var manyToManyName = entityInstance.metaData.$$getManyToManyName(metaData.className.charAt(0).toLowerCase() + this.metaData.className.slice(1));
                                    if (angular.isUndefined(entityInstance.data[manyToManyName])) {
                                        entityInstance.data[manyToManyName] = [];
                                    }
                                    entityInstance.data[manyToManyName].push(this);
                                }
                                if (angular.isDefined(metaData[property.name])) {
                                    if (angular.isDefined(entityInstance.metaData[metaData[property.name].fkcolumn.slice(0, -2)])) {
                                        if (angular.isUndefined(entityInstance.parents)) {
                                            entityInstance.parents = [];
                                        }
                                        entityInstance.parents.push(entityInstance.metaData[metaData[property.name].fkcolumn.slice(0, -2)]);
                                    }
                                    if (angular.isUndefined(this.children)) {
                                        this.children = [];
                                    }
                                    var child = metaData[property.name];
                                    if (this.children.indexOf(child) === -1) {
                                        this.children.push(child);
                                    }
                                }
                                if (angular.isUndefined(this.data[property.name])) {
                                    this.data[property.name] = [];
                                }
                                this.data[property.name].push(entityInstance);
                                return entityInstance;
                            };
                            _jsEntities[entity.className].prototype['$$get' + property.name.charAt(0).toUpperCase() + property.name.slice(1)] = function () {
                                var thisEntityInstance = this;
                                if (angular.isDefined(this['$$get' + this.$$getIDName().charAt(0).toUpperCase() + this.$$getIDName().slice(1)])) {
                                    var options = {
                                        filterGroupsConfig: angular.toJson([{
                                                "filterGroup": [
                                                    {
                                                        "propertyIdentifier": "_" + property.cfc.toLowerCase() + "." + property.fkcolumn.replace('ID', '') + "." + this.$$getIDName(),
                                                        "comparisonOperator": "=",
                                                        "value": this.$$getID()
                                                    }
                                                ]
                                            }]),
                                        allRecords: true
                                    };
                                    var collectionPromise = $delegate.getEntity(property.cfc, options);
                                    collectionPromise.then(function (response) {
                                        var entityInstances = [];
                                        for (var i in response.records) {
                                            var entityInstance = thisEntityInstance['$$add' + property.singularname.charAt(0).toUpperCase() + property.singularname.slice(1)]();
                                            entityInstance.$$init(response.records[i]);
                                            if (angular.isUndefined(thisEntityInstance[property.name])) {
                                                thisEntityInstance[property.name] = [];
                                            }
                                            entityInstances.push(entityInstance);
                                        }
                                        thisEntityInstance.data[property.name] = entityInstances;
                                    });
                                    return collectionPromise;
                                }
                            };
                            Object.defineProperty(_jsEntities[entity.className].prototype, property.name, {
                                configurable: true,
                                enumerable: false,
                                get: function () {
                                    if (this.data[property.name] == null) {
                                        return undefined;
                                    }
                                    return this.data[property.name];
                                },
                                set: function (value) {
                                    this.data[property.name] = [];
                                    if (angular.isArray(value)) {
                                        for (var i = 0; i < value.length; i++) {
                                            var item = value[i];
                                            var entityInstance = $delegate.newEntity(this.metaData[property.name].cfc);
                                            entityInstance.$$init(item);
                                            this['$$add' + property.singularname.charAt(0).toUpperCase() + property.singularname.slice(1)](entityInstance);
                                        }
                                    }
                                    else {
                                        var entityInstance = $delegate.newEntity(this.metaData[property.name].cfc);
                                        entityInstance.$$init(value);
                                        this['$$add' + property.singularname.charAt(0).toUpperCase() + property.singularname.slice(1)](entityInstance);
                                    }
                                }
                            });
                        }
                        else {
                            if (['id'].indexOf(property.fieldtype) >= 0) {
                                _jsEntities[entity.className].prototype['$$getID'] = function () {
                                    //this should retreive id from the metadata
                                    return this.data[this.$$getIDName()];
                                };
                                _jsEntities[entity.className].prototype['$$getIDName'] = function () {
                                    var IDNameString = property.name;
                                    return IDNameString;
                                };
                            }
                            if (property.name !== 'data' && property.name !== 'validations') {
                                Object.defineProperty(_jsEntities[entity.className].prototype, property.name, {
                                    configurable: true,
                                    enumerable: false,
                                    get: function () {
                                        if (this.data[property.name] == null) {
                                            return undefined;
                                        }
                                        return this.data[property.name];
                                    },
                                    set: function (value) {
                                        this.data[property.name] = value;
                                    }
                                });
                            }
                            _jsEntities[entity.className].prototype['$$get' + property.name.charAt(0).toUpperCase() + property.name.slice(1)] = function () {
                                return this.data[property.name];
                            };
                        }
                    }
                    else {
                        if (property.name !== 'data' && property.name !== 'validations') {
                            Object.defineProperty(_jsEntities[entity.className].prototype, property.name, {
                                configurable: true,
                                enumerable: false,
                                get: function () {
                                    if (this.data[property.name] == null) {
                                        return undefined;
                                    }
                                    return this.data[property.name];
                                },
                                set: function (value) {
                                    this.data[property.name] = value;
                                }
                            });
                        }
                        _jsEntities[entity.className].prototype['$$get' + property.name.charAt(0).toUpperCase() + property.name.slice(1)] = function () {
                            return this.data[property.name];
                        };
                    }
                    //}
                }
            });
        });
        $delegate.setJsEntities(_jsEntities);
        angular.forEach(_jsEntities, function (jsEntity) {
            var jsEntityInstance = new jsEntity;
            _jsEntityInstances[jsEntityInstance.metaData.className] = jsEntityInstance;
        });
        $delegate.setJsEntityInstances(_jsEntityInstances);
        var _init = function (entityInstance, data) {
            hibachiValidationService.init(entityInstance, data);
        };
        var _getPropertyTitle = function (propertyName, metaData) {
            return $delegate.getPropertyTitle(propertyName, metaData);
        };
        var _getPropertyHint = function (propertyName, metaData) {
            var propertyMetaData = metaData[propertyName];
            var keyValue = '';
            if (angular.isDefined(propertyMetaData['hb_rbkey'])) {
                keyValue = metaData.$$getRBKey(propertyMetaData['hb_rbkey'] + '_hint');
            }
            else if (angular.isUndefined(propertyMetaData['persistent']) || (angular.isDefined(propertyMetaData['persistent']) && propertyMetaData['persistent'] === true)) {
                keyValue = metaData.$$getRBKey('entity.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase() + '_hint');
            }
            else {
                keyValue = metaData.$$getRBKey('object.' + metaData.className.toLowerCase() + '.' + propertyName.toLowerCase());
            }
            if (keyValue.slice(-8) !== '_missing') {
                return keyValue;
            }
            return '';
        };
        var _getPropertyFieldType = function (propertyName, metaData) {
            var propertyMetaData = metaData[propertyName];
            if (angular.isDefined(propertyMetaData['hb_formfieldtype'])) {
                return propertyMetaData['hb_formfieldtype'];
            }
            if (angular.isUndefined(propertyMetaData.fieldtype) || propertyMetaData.fieldtype === 'column') {
                var dataType = "";
                if (angular.isDefined(propertyMetaData.ormtype)) {
                    dataType = propertyMetaData.ormtype;
                }
                else if (angular.isDefined(propertyMetaData.type)) {
                    dataType = propertyMetaData.type;
                }
                if (["boolean", "yes_no", "true_false"].indexOf(dataType) > -1) {
                    return "yesno";
                }
                else if (["date", "timestamp"].indexOf(dataType) > -1) {
                    return "dateTime";
                }
                else if ("array" === dataType) {
                    return "select";
                }
                else if ("struct" === dataType) {
                    return "checkboxgroup";
                }
                else if (propertyName.indexOf('password') > -1) {
                    return "password";
                }
            }
            else if (angular.isDefined(propertyMetaData.fieldtype) && propertyMetaData.fieldtype === 'many-to-one') {
                return 'select';
            }
            else if (angular.isDefined(propertyMetaData.fieldtype) && propertyMetaData.fieldtype === 'one-to-many') {
                return 'There is no property field type for one-to-many relationship properties, which means that you cannot get a fieldtype for ' + propertyName;
            }
            else if (angular.isDefined(propertyMetaData.fieldtype) && propertyMetaData.fieldtype === 'many-to-many') {
                return "listingMultiselect";
            }
            return "text";
        };
        var _getPropertyFormatType = function (propertyName, metaData) {
            if (!propertyName || !metaData) {
                return 'none';
            }
            var propertyMetaData = metaData[propertyName];
            if (propertyMetaData['hb_formattype']) {
                return propertyMetaData['hb_formattype'];
            }
            else if (angular.isUndefined(propertyMetaData.fieldtype) || propertyMetaData.fieldtype === 'column') {
                var dataType = "";
                if (angular.isDefined(propertyMetaData.ormtype)) {
                    dataType = propertyMetaData.ormtype;
                }
                else if (angular.isDefined(propertyMetaData.type)) {
                    dataType = propertyMetaData.type;
                }
                if (["boolean", "yes_no", "true_false"].indexOf(dataType) > -1) {
                    return "yesno";
                }
                else if (["date", "timestamp"].indexOf(dataType) > -1) {
                    return "dateTime";
                }
                else if (["big_decimal"].indexOf(dataType) > -1 && propertyName.slice(-6) === 'weight') {
                    return "weight";
                }
                else if (["big_decimal"].indexOf(dataType) > -1) {
                    return "currency";
                }
            }
            return 'none';
        };
        var _isSimpleValue = function (value) {
            return !!(angular.isString(value) || angular.isNumber(value)
                || angular.isDate(value) || value === false || value === true);
        };
        var _getFormattedValue = function (propertyName, formatType, entityInstance) {
            var value = entityInstance.$$getPropertyByName(propertyName);
            if (angular.isUndefined(formatType)) {
                formatType = entityInstance.metaData.$$getPropertyFormatType(propertyName);
            }
            if (formatType === "custom") {
                //to be implemented
                //return entityInstance['$$get'+propertyName+Formatted]();
            }
            else if (formatType === "rbkey") {
                if (angular.isDefined(value)) {
                    return entityInstance.$$getRBKey('entity.' + entityInstance.metaData.className.toLowerCase() + '.' + propertyName.toLowerCase() + '.' + value);
                }
                else {
                    return '';
                }
            }
            if (angular.isUndefined(value)) {
                var propertyMeta = entityInstance.metaData[propertyName];
                if (angular.isDefined(propertyMeta['hb_nullRBKey'])) {
                    return entityInstance.$$getRbKey(propertyMeta['hb_nullRBKey']);
                }
                return "";
            }
            else if (_isSimpleValue(value)) {
                var formatDetails = {};
                if (angular.isDefined(entityInstance.data['currencyCode'])) {
                    formatDetails.currencyCode = entityInstance.$$getCurrencyCode();
                }
                return utilityService.formatValue(value, formatType, formatDetails, entityInstance);
            }
        };
        var _delete = function (entityInstance) {
            var entityName = entityInstance.metaData.className;
            var entityID = entityInstance.$$getID();
            var context = 'delete';
            return $delegate.saveEntity(entityName, entityID, {}, context);
        };
        var _setValueByPropertyPath = function (obj, path, value) {
            var a = path.split('.');
            var context = obj;
            var selector;
            var myregexp = /([a-zA-Z]+)(\[(\d)\])+/; // matches:  item[0]
            var match = null;
            for (var i = 0; i < a.length - 1; i += 1) {
                match = myregexp.exec(a[i]);
                if (match !== null)
                    context = context[match[1]][match[3]];
                else
                    context = context[a[i]];
            }
            // check for ending item[xx] syntax
            match = myregexp.exec([a[a.length - 1]]);
            if (match !== null)
                context[match[1]][match[3]] = value;
            else
                context[a[a.length - 1]] = value;
        };
        var _getValueByPropertyPath = function (obj, path) {
            var paths = path.split('.'), current = obj, i;
            for (i = 0; i < paths.length; ++i) {
                if (current[paths[i]] == undefined) {
                    return undefined;
                }
                else {
                    current = current[paths[i]];
                }
            }
            return current;
        };
        var _addReturnedIDs = function (returnedIDs, entityInstance) {
            for (var key in returnedIDs) {
                if (angular.isArray(returnedIDs[key])) {
                    var arrayItems = returnedIDs[key];
                    var entityInstanceArray = entityInstance.data[key];
                    for (var i in arrayItems) {
                        var arrayItem = arrayItems[i];
                        var entityInstanceArrayItem = entityInstance.data[key][i];
                        _addReturnedIDs(arrayItem, entityInstanceArrayItem);
                    }
                }
                else if (angular.isObject(returnedIDs[key])) {
                    for (var k in returnedIDs[key]) {
                        _addReturnedIDs(returnedIDs[key][k], entityInstance.data[key][k]);
                    }
                }
                else {
                    entityInstance.data[key] = returnedIDs[key];
                }
            }
        };
        var _save = function (entityInstance) {
            var deferred = $q.defer();
            $timeout(function () {
                //$log.debug('save begin');
                //$log.debug(entityInstance);
                var entityID = entityInstance.$$getID();
                var modifiedData = _getModifiedData(entityInstance);
                //$log.debug('modifiedData complete');
                //$log.debug(modifiedData);
                //timeoutPromise.valid = modifiedData.valid;
                if (modifiedData.valid) {
                    var params = {};
                    params.serializedJsonData = utilityService.toJson(modifiedData.value);
                    //if we have a process object then the context is different from the standard save
                    var entityName = '';
                    var context = 'save';
                    if (entityInstance.metaData.isProcessObject === 1) {
                        var processStruct = modifiedData.objectLevel.metaData.className.split('_');
                        entityName = processStruct[0];
                        context = processStruct[1];
                    }
                    else {
                        entityName = modifiedData.objectLevel.metaData.className;
                    }
                    var savePromise = $delegate.saveEntity(entityName, entityID, params, context);
                    savePromise.then(function (response) {
                        var returnedIDs = response.data;
                        if ((angular.isDefined(response.SUCCESS) && response.SUCCESS === true)
                            || (angular.isDefined(response.success) && response.success === true)) {
                            if ($location.url() == '/entity/' + entityName + '/create' && response.data[modifiedData.objectLevel.$$getIDName()]) {
                                $location.path('/entity/' + entityName + '/' + response.data[modifiedData.objectLevel.$$getIDName()], false);
                            }
                            _addReturnedIDs(returnedIDs, modifiedData.objectLevel);
                            deferred.resolve(returnedIDs);
                            observerService.notify('saveSuccess', returnedIDs);
                            observerService.notify('saveSuccess' + entityName, returnedIDs);
                        }
                        else {
                            deferred.reject(angular.isDefined(response.messages) ? response.messages : response);
                            observerService.notify('saveFailed', response);
                            observerService.notify('saveFailed' + entityName, response);
                        }
                    }, function (reason) {
                        deferred.reject(reason);
                        observerService.notify('saveFailed', reason);
                        observerService.notify('saveFailed' + entityName, reason);
                    });
                }
                else {
                    //select first, visible, and enabled input with a class of ng-invalid
                    var target = $('input.ng-invalid:first:visible:enabled');
                    if (angular.isDefined(target)) {
                        target.focus();
                        var targetID = target.attr('id');
                        $anchorScroll();
                    }
                    deferred.reject('Input is invalid.');
                    observerService.notify('validationFailed');
                    observerService.notify('validationFailed' + entityName);
                }
            });
            //return timeoutPromise;
            return deferred.promise;
            /*

            */
        };
        var _getModifiedData = function (entityInstance) {
            var modifiedData = {};
            modifiedData = getModifiedDataByInstance(entityInstance);
            return modifiedData;
        };
        var getObjectSaveLevel = function (entityInstance) {
            return hibachiValidationService.getObjectSaveLevel(entityInstance);
        };
        var validateObject = function (entityInstance) {
            return hibachiValidationService.validateObject;
        };
        var validateChildren = function (entityInstance) {
            return hibachiValidationService.validateChildren(entityInstance);
        };
        var processChild = function (entityInstance, entityInstanceParent) {
            return hibachiValidationService.processChild(entityInstance, entityInstanceParent);
        };
        var processParent = function (entityInstance) {
            return hibachiValidationService.processParent(entityInstance);
        };
        var processForm = function (form, entityInstance) {
            return hibachiValidationService.processForm(form, entityInstance);
        };
        var getDataFromParents = function (entityInstance, entityInstanceParents) {
            return hibachiValidationService.getDataFromParents(entityInstance, entityInstanceParents);
        };
        var getDataFromChildren = function (entityInstance) {
            return hibachiValidationService.getDataFromChildren(entityInstance);
        };
        var getModifiedDataByInstance = function (entityInstance) {
            return hibachiValidationService.getModifiedDataByInstance(entityInstance);
        };
        var _getValidationsByProperty = function (entityInstance, property) {
            return hibachiValidationService.getValidationsByProperty(entityInstance, property);
        };
        var _getValidationByPropertyAndContext = function (entityInstance, property, context) {
            return hibachiValidationService.getValidationByPropertyAndContext(entityInstance, property, context);
        };
        return $delegate;
    }
    return HibachiServiceDecorator;
}());
exports.HibachiServiceDecorator = HibachiServiceDecorator;


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var HibachiValidationService = /** @class */ (function () {
    //@ngInject
    function HibachiValidationService($log) {
        var _this = this;
        this.$log = $log;
        this.getObjectSaveLevel = function (entityInstance) {
            var objectLevel = entityInstance;
            var entityID = entityInstance.$$getID();
            angular.forEach(entityInstance.parents, function (parentObject) {
                if (angular.isDefined(entityInstance.data[parentObject.name]) && entityInstance.data[parentObject.name].$$getID() === '' && (angular.isUndefined(entityID) || !entityID.trim().length)) {
                    var parentEntityInstance = entityInstance.data[parentObject.name];
                    var parentEntityID = parentEntityInstance.$$getID();
                    if (parentEntityID === '' && parentEntityInstance.forms) {
                        objectLevel = _this.getObjectSaveLevel(parentEntityInstance);
                    }
                }
            });
            return objectLevel;
        };
        this.getModifiedDataByInstance = function (entityInstance) {
            var modifiedData = {};
            var objectSaveLevel = _this.getObjectSaveLevel(entityInstance);
            _this.$log.debug('objectSaveLevel : ' + objectSaveLevel);
            var valueStruct = _this.validateObject(objectSaveLevel);
            _this.$log.debug('validateObject data');
            _this.$log.debug(valueStruct.value);
            modifiedData = {
                objectLevel: objectSaveLevel,
                value: valueStruct.value,
                valid: valueStruct.valid
            };
            return modifiedData;
        };
        this.getValidationByPropertyAndContext = function (entityInstance, property, context) {
            var validations = _this.getValidationsByProperty(entityInstance, property);
            for (var i in validations) {
                var contexts = validations[i].contexts.split(',');
                for (var j in contexts) {
                    if (contexts[j] === context) {
                        return validations[i];
                    }
                }
            }
        };
        this.getValidationsByProperty = function (entityInstance, property) {
            return entityInstance.validations.properties[property];
        };
        this.validateObject = function (entityInstance) {
            var modifiedData = {};
            var valid = true;
            var forms = entityInstance.forms;
            _this.$log.debug('process base level data');
            for (var f in forms) {
                var form = forms[f];
                form.$setSubmitted(); //Sets the form to submitted for the validation errors to pop up.
                if (form.$dirty && form.$valid) {
                    for (var key in form) {
                        _this.$log.debug('key:' + key);
                        if (key.charAt(0) !== '$' && angular.isObject(form[key])) {
                            var inputField = form[key];
                            if (typeof inputField.$modelValue != 'undefined' && inputField.$modelValue !== '') {
                                inputField.$dirty = true;
                            }
                            if (angular.isDefined(inputField.$valid) && inputField.$valid === true && (inputField.$dirty === true || (form.autoDirty && form.autoDirty == true))) {
                                if (angular.isDefined(entityInstance.metaData[key])
                                    && angular.isDefined(entityInstance.metaData[key].hb_formfieldtype)
                                    && entityInstance.metaData[key].hb_formfieldtype === 'json') {
                                    modifiedData[key] = angular.toJson(inputField.$modelValue);
                                }
                                else {
                                    modifiedData[key] = inputField.$modelValue;
                                }
                            }
                        }
                    }
                }
                else {
                    if (!form.$valid) {
                        valid = false;
                    }
                }
            }
            modifiedData[entityInstance.$$getIDName()] = entityInstance.$$getID();
            _this.$log.debug(modifiedData);
            _this.$log.debug('process parent data');
            if (angular.isDefined(entityInstance.parents)) {
                for (var p in entityInstance.parents) {
                    var parentObject = entityInstance.parents[p];
                    var parentInstance = entityInstance.data[parentObject.name];
                    if (angular.isUndefined(modifiedData[parentObject.name])) {
                        modifiedData[parentObject.name] = {};
                    }
                    var forms = parentInstance.forms;
                    for (var f in forms) {
                        var form = forms[f];
                        form.$setSubmitted();
                        if (form.$dirty && form.$valid) {
                            for (var key in form) {
                                if (key.charAt(0) !== '$' && angular.isObject(form[key])) {
                                    var inputField = form[key];
                                    if (typeof inputField.$modelValue != 'undefined' && inputField.$modelValue !== '') {
                                        inputField.$dirty = true;
                                    }
                                    if (angular.isDefined(inputField) && angular.isDefined(inputField.$valid) && inputField.$valid === true && (inputField.$dirty === true || (form.autoDirty && form.autoDirty == true))) {
                                        if (angular.isDefined(parentInstance.metaData[key])
                                            && angular.isDefined(parentInstance.metaData[key].hb_formfieldtype)
                                            && parentInstance.metaData[key].hb_formfieldtype === 'json') {
                                            modifiedData[parentObject.name][key] = angular.toJson(inputField.$modelValue);
                                        }
                                        else {
                                            modifiedData[parentObject.name][key] = inputField.$modelValue;
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            if (!form.$valid) {
                                valid = false;
                            }
                        }
                    }
                    modifiedData[parentObject.name][parentInstance.$$getIDName()] = parentInstance.$$getID();
                }
            }
            _this.$log.debug(modifiedData);
            _this.$log.debug('begin child data');
            var childrenData = _this.validateChildren(entityInstance);
            _this.$log.debug('child Data');
            _this.$log.debug(childrenData);
            angular.extend(modifiedData, childrenData);
            return {
                valid: valid,
                value: modifiedData
            };
        };
        this.validateChildren = function (entityInstance) {
            var data = {};
            if (angular.isDefined(entityInstance.children) && entityInstance.children.length) {
                data = _this.getDataFromChildren(entityInstance);
            }
            return data;
        };
        this.init = function (entityInstance, data) {
            for (var key in data) {
                if (key.charAt(0) !== '$' && angular.isDefined(entityInstance.metaData[key])) {
                    var propertyMetaData = entityInstance.metaData[key];
                    if (angular.isDefined(propertyMetaData) && angular.isDefined(propertyMetaData.hb_formfieldtype) && propertyMetaData.hb_formfieldtype === 'json') {
                        if (data[key].trim() !== '') {
                            entityInstance.data[key] = angular.fromJson(data[key]);
                        }
                    }
                    else {
                        entityInstance.data[key] = data[key];
                    }
                }
            }
        };
        this.processForm = function (form, entityInstance) {
            _this.$log.debug('begin process form');
            var data = {};
            form.$setSubmitted();
            for (var key in form) {
                if (key.charAt(0) !== '$' && angular.isObject(form[key])) {
                    var inputField = form[key];
                    if (inputField.$modelValue) {
                        inputField.$dirty = true;
                    }
                    if (angular.isDefined(inputField) && angular.isDefined(inputField) && inputField.$valid === true && (inputField.$dirty === true || (form.autoDirty && form.autoDirty == true))) {
                        if (angular.isDefined(entityInstance.metaData[key]) && angular.isDefined(entityInstance.metaData[key].hb_formfieldtype) && entityInstance.metaData[key].hb_formfieldtype === 'json') {
                            data[key] = angular.toJson(inputField.$modelValue);
                        }
                        else {
                            data[key] = inputField.$modelValue;
                        }
                    }
                }
            }
            data[entityInstance.$$getIDName()] = entityInstance.$$getID();
            _this.$log.debug('process form data');
            _this.$log.debug(data);
            return data;
        };
        this.processParent = function (entityInstance) {
            var data = {};
            if (entityInstance.$$getID() !== '') {
                data[entityInstance.$$getIDName()] = entityInstance.$$getID();
            }
            _this.$log.debug('processParent');
            _this.$log.debug(entityInstance);
            var forms = entityInstance.forms;
            for (var f in forms) {
                var form = forms[f];
                data = angular.extend(data, _this.processForm(form, entityInstance));
            }
            return data;
        };
        this.processChild = function (entityInstance, entityInstanceParent) {
            var data = {};
            var forms = entityInstance.forms;
            for (var f in forms) {
                var form = forms[f];
                angular.extend(data, _this.processForm(form, entityInstance));
            }
            if (angular.isDefined(entityInstance.children) && entityInstance.children.length) {
                var childData = _this.getDataFromChildren(entityInstance);
                angular.extend(data, childData);
            }
            if (angular.isDefined(entityInstance.parents) && entityInstance.parents.length) {
                var parentData = _this.getDataFromParents(entityInstance, entityInstanceParent);
                angular.extend(data, parentData);
            }
            return data;
        };
        this.getDataFromParents = function (entityInstance, entityInstanceParent) {
            var data = {};
            for (var c in entityInstance.parents) {
                var parentMetaData = entityInstance.parents[c];
                if (angular.isDefined(parentMetaData)) {
                    var parent = entityInstance.data[parentMetaData.name];
                    if (angular.isObject(parent) && entityInstanceParent !== parent && parent.$$getID() !== '') {
                        if (angular.isUndefined(data[parentMetaData.name])) {
                            data[parentMetaData.name] = {};
                        }
                        var parentData = _this.processParent(parent);
                        _this.$log.debug('parentData:' + parentMetaData.name);
                        _this.$log.debug(parentData);
                        angular.extend(data[parentMetaData.name], parentData);
                    }
                    else {
                    }
                }
            }
            ;
            return data;
        };
        this.getDataFromChildren = function (entityInstance) {
            var data = {};
            _this.$log.debug('childrenFound');
            _this.$log.debug(entityInstance.children);
            for (var c in entityInstance.children) {
                var childMetaData = entityInstance.children[c];
                var children = entityInstance.data[childMetaData.name];
                _this.$log.debug(childMetaData);
                _this.$log.debug(children);
                if (angular.isArray(entityInstance.data[childMetaData.name])) {
                    if (angular.isUndefined(data[childMetaData.name])) {
                        data[childMetaData.name] = [];
                    }
                    angular.forEach(entityInstance.data[childMetaData.name], function (child, key) {
                        _this.$log.debug('process child array item');
                        var childData = _this.processChild(child, entityInstance);
                        _this.$log.debug('process child return');
                        _this.$log.debug(childData);
                        data[childMetaData.name].push(childData);
                    });
                }
                else {
                    if (angular.isUndefined(data[childMetaData.name])) {
                        data[childMetaData.name] = {};
                    }
                    var child = entityInstance.data[childMetaData.name];
                    _this.$log.debug('begin process child');
                    var childData = _this.processChild(child, entityInstance);
                    _this.$log.debug('process child return');
                    _this.$log.debug(childData);
                    angular.extend(data, childData);
                }
            }
            _this.$log.debug('returning child data');
            _this.$log.debug(data);
            return data;
        };
        this.$log = $log;
    }
    return HibachiValidationService;
}());
exports.HibachiValidationService = HibachiValidationService;


/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HistoryService = /** @class */ (function () {
    //ngInject
    function HistoryService() {
        var _this = this;
        this.histories = {};
        this.recordHistory = function (key, data, overwrite) {
            if (overwrite === void 0) { overwrite = false; }
            if (angular.isUndefined(_this.histories[key]) || overwrite) {
                _this.histories[key] = [];
            }
            _this.histories[key].push(data);
        };
        this.hasHistory = function (key) {
            return angular.isDefined(_this.histories[key]);
        };
        this.getHistory = function (key) {
            if (angular.isDefined(_this.histories[key])) {
                return _this.histories[key];
            }
        };
        this.deleteHistory = function (key) {
            _this.histories[key] = [];
        };
    }
    return HistoryService;
}());
exports.HistoryService = HistoryService;


/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorageService = /** @class */ (function () {
    //@ngInject
    function LocalStorageService($window) {
        var _this = this;
        this.$window = $window;
        this.hasItem = function (key) {
            //try catch to handle safari in private mode which does not allow localstorage
            try {
                return (_this.$window.localStorage.getItem(key)
                    && _this.$window.localStorage.getItem(key) !== null
                    && _this.$window.localStorage.getItem(key) !== "undefined");
            }
            catch (e) {
                return false;
            }
        };
        this.getItem = function (key) {
            var value = _this.$window.localStorage.getItem(key);
            if (value.charAt(0) === '{' || value.charAt(0) === '[') {
                value = angular.fromJson(value);
            }
            return value;
        };
        this.setItem = function (key, data) {
            //try catch to handle safari in private mode which does not allow localstorage
            try {
                if (angular.isObject(data) || angular.isArray(data)) {
                    data = angular.toJson(data);
                }
                _this.$window.localStorage.setItem(key, data);
            }
            catch (e) {
            }
        };
        this.$window = $window;
    }
    return LocalStorageService;
}());
exports.LocalStorageService = LocalStorageService;


/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var MetaDataService = /** @class */ (function () {
    //@ngInject
    function MetaDataService($filter, $log) {
        var _this = this;
        this.$filter = $filter;
        this.$log = $log;
        this.getPropertyHintByObjectAndPropertyIdentifier = function (object, propertyIdentifier) {
            var hint = "";
            if (_this.hasPropertyByEntityNameAndPropertyIdentifier(object, propertyIdentifier)) {
                if (_this.isAttributePropertyByEntityAndPropertyIdentifier(object, propertyIdentifier)) {
                    hint = object.metaData && object.metaData[propertyIdentifier].attributeHint;
                }
                else {
                    hint = object.metaData.$$getPropertyHint(propertyIdentifier);
                }
            }
            return hint;
        };
        this.getPropertyTitle = function (object, propertyIdentifier) {
            var title = "";
            if (_this.hasPropertyByEntityNameAndPropertyIdentifier(object, propertyIdentifier)) {
                if (_this.isAttributePropertyByEntityAndPropertyIdentifier(object, propertyIdentifier)) {
                    title = object.metaData && object.metaData[propertyIdentifier].attributeName;
                }
                else {
                    title = object.metaData.$$getPropertyTitle(propertyIdentifier);
                }
            }
            return title;
        };
        this.getPropertyFieldType = function (object, propertyIdentifier) {
            var fieldType = "";
            if (_this.hasPropertyByEntityNameAndPropertyIdentifier(object, propertyIdentifier)) {
                if (_this.isAttributePropertyByEntityAndPropertyIdentifier(object, propertyIdentifier)) {
                    fieldType = object.metaData && object.metaData[propertyIdentifier].attributeInputType;
                }
                else {
                    fieldType = object.metaData.$$getPropertyFieldType(propertyIdentifier);
                }
            }
            return fieldType;
        };
        this.isAttributePropertyByEntityAndPropertyIdentifier = function (object, propertyIdentifier) {
            return object.metaData && object.metaData[propertyIdentifier] && object.metaData[propertyIdentifier].attributeCode == propertyIdentifier;
        };
        this.hasPropertyByEntityNameAndPropertyIdentifier = function (object, propertyIdentifier) {
            return object.metaData && object.metaData[propertyIdentifier];
        };
        this.getPropertiesList = function () {
            return _this._propertiesList;
        };
        this.getPropertiesListByBaseEntityAlias = function (baseEntityAlias) {
            return _this._propertiesList[baseEntityAlias];
        };
        this.setPropertiesList = function (value, key) {
            _this._propertiesList[key] = value;
        };
        this.formatPropertiesList = function (propertiesList, propertyIdentifier) {
            if (!propertiesList) {
                propertiesList = {};
            }
            if (!propertiesList.data) {
                propertiesList.data = [];
            }
            var simpleGroup = {
                $$group: 'simple',
            };
            propertiesList.data.push(simpleGroup);
            var drillDownGroup = {
                $$group: 'drilldown',
            };
            propertiesList.data.push(drillDownGroup);
            var compareCollections = {
                $$group: 'compareCollections',
            };
            propertiesList.data.push(compareCollections);
            var attributeCollections = {
                $$group: 'attribute',
            };
            propertiesList.data.push(attributeCollections);
            for (var i in propertiesList.data) {
                if (angular.isDefined(propertiesList.data[i].ormtype)) {
                    if (angular.isDefined(propertiesList.data[i].attributeID)) {
                        propertiesList.data[i].$$group = 'attribute';
                    }
                    else {
                        propertiesList.data[i].$$group = 'simple';
                    }
                }
                if (angular.isDefined(propertiesList.data[i].fieldtype)) {
                    if (propertiesList.data[i].fieldtype === 'id') {
                        propertiesList.data[i].$$group = 'simple';
                    }
                    if (propertiesList.data[i].fieldtype === 'many-to-one') {
                        propertiesList.data[i].$$group = 'drilldown';
                    }
                    if (propertiesList.data[i].fieldtype === 'many-to-many' || propertiesList.data[i].fieldtype === 'one-to-many') {
                        propertiesList.data[i].$$group = 'compareCollections';
                    }
                }
                var divider = '_';
                if (propertiesList.data[i].$$group == 'simple' || propertiesList.data[i].$$group == 'attribute') {
                    divider = '.';
                }
                propertiesList.data[i].propertyIdentifier = propertyIdentifier + divider + propertiesList.data[i].name;
            }
            //propertiesList.data = _orderBy(propertiesList.data,['displayPropertyIdentifier'],false);
            //--------------------------------Removes empty lines from dropdown.
            var temp = [];
            for (var i_1 = 0; i_1 <= propertiesList.data.length - 1; i_1++) {
                if (propertiesList.data[i_1].propertyIdentifier.indexOf(".undefined") != -1 || propertiesList.data[i_1].propertyIdentifier.indexOf("_undefined") != -1) {
                    _this.$log.debug("removing: " + propertiesList.data[i_1].displayPropertyIdentifier);
                    propertiesList.data[i_1].displayPropertyIdentifier = "hide";
                }
                else {
                    temp.push(propertiesList.data[i_1]);
                    _this.$log.debug(propertiesList.data[i_1]);
                }
            }
            temp.sort;
            propertiesList.data = temp;
            _this.$log.debug("----------------------PropertyList\n\n\n\n\n");
            propertiesList.data = _this._orderBy(propertiesList.data, ['propertyIdentifier'], false);
            //--------------------------------End remove empty lines.
        };
        this.orderBy = function (propertiesList, predicate, reverse) {
            return _this._orderBy(propertiesList, predicate, reverse);
        };
        this.$filter = $filter;
        this.$log = $log;
        this._propertiesList = {};
        this._orderBy = $filter('orderBy');
    }
    MetaDataService.$inject = [
        '$filter',
        '$log'
    ];
    return MetaDataService;
}());
exports.MetaDataService = MetaDataService;


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/**
 * @ngdoc service
 * @name sdt.models:ObserverService
 * @description
 * # ObserverService
 * Manages all events inside the application
 *
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseservice_1 = __webpack_require__(61);
var ObserverService = /** @class */ (function (_super) {
    __extends(ObserverService, _super);
    //@ngInject
    function ObserverService($timeout, historyService, utilityService) {
        var _this = 
        /**
         * @ngdoc property
         * @name ObserverService#observers
         * @propertyOf sdt.models:ObserverService
         * @description object to store all observers in
         * @returns {object} object
         */
        _super.call(this) || this;
        _this.$timeout = $timeout;
        _this.historyService = historyService;
        _this.utilityService = utilityService;
        /* Declare methods */
        /**
         * @ngdoc method
         * @name ObserverService#attach
         * @methodOf sdt.models:ObserverService
         * @param {function} callback the callback function to fire
         * @param {string} event name of the event
         * @param {string} id unique id for the object that is listening i.e. namespace
         * @description adds events listeners
         */
        _this.attach = function (callback, event, id) {
            if (!id) {
                id = _this.utilityService.createID();
            }
            event = event.toLowerCase();
            id = id.toLowerCase();
            if (!_this.observers[event]) {
                _this.observers[event] = {};
            }
            if (!_this.observers[event][id])
                _this.observers[event][id] = [];
            _this.observers[event][id].push(callback);
        };
        /**
         * @ngdoc method
         * @name ObserverService#detachById
         * @methodOf sdt.models:ObserverService
         * @param {string} id unique id for the object that is listening i.e. namespace
         * @description removes all events for a specific id from the observers object
         */
        _this.detachById = function (id) {
            id = id.toLowerCase();
            for (var event in _this.observers) {
                _this.detachByEventAndId(event, id);
            }
        };
        /**
         * @ngdoc method
         * @name ObserverService#detachById
         * @methodOf sdt.models:ObserverService
         * @param {string} event name of the event
         * @description removes removes all the event from the observer object
         */
        _this.detachByEvent = function (event) {
            event = event.toLowerCase();
            if (event in _this.observers) {
                delete _this.observers[event];
            }
        };
        /**
         * @ngdoc method
         * @name ObserverService#detachByEventAndId
         * @methodOf sdt.models:ObserverService
         * @param {string} event name of the event
         * @param {string} id unique id for the object that is listening i.e. namespace
         * @description removes removes all callbacks for an id in a specific event from the observer object
         */
        _this.detachByEventAndId = function (event, id) {
            event = event.toLowerCase();
            id = id.toLowerCase();
            if (event in _this.observers) {
                if (id in _this.observers[event]) {
                    delete _this.observers[event][id];
                }
            }
        };
        /**
         * @ngdoc method
         * @name ObserverService#notify
         * @methodOf sdt.models:ObserverService
         * @param {string} event name of the event
         * @param {string|object|Array|number} parameters pass whatever your listener is expecting
         * @description notifies all observers of a specific event
         */
        _this.notify = function (event, parameters) {
            console.warn(event, parameters);
            event = event.toLowerCase();
            return _this.$timeout(function () {
                for (var id in _this.observers[event]) {
                    for (var _i = 0, _a = _this.observers[event][id]; _i < _a.length; _i++) {
                        var callback = _a[_i];
                        callback(parameters);
                    }
                }
            });
        };
        /**
         * @ngdoc method
         * @name ObserverService#notifyById
         * @methodOf sdt.models:ObserverService
         * @param {string} event name of the event
         * @param {string} eventId unique id for the object that is listening i.e. namespace
         * @param {string|object|Array|number} parameters pass whatever your listener is expecting
         * @description notifies observers of a specific event by id
         */
        _this.notifyById = function (event, eventId, parameters) {
            console.warn(event, eventId, parameters);
            event = event.toLowerCase();
            eventId = eventId.toLowerCase();
            return _this.$timeout(function () {
                for (var id in _this.observers[event]) {
                    if (id != eventId)
                        continue;
                    angular.forEach(_this.observers[event][id], function (callback) {
                        callback(parameters);
                    });
                }
            });
        };
        _this.notifyAndRecord = function (event, parameters) {
            return _this.notify(event, parameters).then(function () {
                _this.historyService.recordHistory(event, parameters, true);
            });
        };
        _this.observers = {};
        return _this;
    }
    return ObserverService;
}(baseservice_1.BaseService));
exports.ObserverService = ObserverService;


/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var OrderPaymentService = /** @class */ (function (_super) {
    __extends(OrderPaymentService, _super);
    //@ngInject
    function OrderPaymentService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'OrderPayment') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        return _this;
    }
    return OrderPaymentService;
}(baseentityservice_1.BaseEntityService));
exports.OrderPaymentService = OrderPaymentService;


/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var OrderService = /** @class */ (function (_super) {
    __extends(OrderService, _super);
    //@ngInject
    function OrderService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Order') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        _this.newOrder_AddOrderPayment = function () {
            return _this.newProcessObject('Order_AddOrderPayment');
        };
        return _this;
    }
    return OrderService;
}(baseentityservice_1.BaseEntityService));
exports.OrderService = OrderService;


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var PublicService = /** @class */ (function () {
    ///index.cfm/api/scope/
    //@ngInject
    function PublicService($http, $q, $window, $location, $hibachi, $injector, requestService, accountService, cartService, orderService, observerService, appConfig, $timeout) {
        var _this = this;
        this.$http = $http;
        this.$q = $q;
        this.$window = $window;
        this.$location = $location;
        this.$hibachi = $hibachi;
        this.$injector = $injector;
        this.requestService = requestService;
        this.accountService = accountService;
        this.cartService = cartService;
        this.orderService = orderService;
        this.observerService = observerService;
        this.appConfig = appConfig;
        this.$timeout = $timeout;
        this.requests = {};
        this.errors = {};
        this.baseActionPath = "";
        this.months = [{ name: '01 - JAN', value: 1 }, { name: '02 - FEB', value: 2 }, { name: '03 - MAR', value: 3 }, { name: '04 - APR', value: 4 }, { name: '05 - MAY', value: 5 }, { name: '06 - JUN', value: 6 }, { name: '07 - JUL', value: 7 }, { name: '08 - AUG', value: 8 }, { name: '09 - SEP', value: 9 }, { name: '10 - OCT', value: 10 }, { name: '11 - NOV', value: 11 }, { name: '12 - DEC', value: 12 }];
        this.years = [];
        this.shippingAddress = "";
        this.accountAddressEditFormIndex = [];
        this.showStoreSelector = [];
        this.showEmailSelector = [];
        this.imagePath = {};
        this.successfulActions = [];
        this.failureActions = [];
        // public hasErrors = ()=>{
        //     return this.errors.length;
        // }
        /**
         * Helper methods for getting errors from the cart
         */
        this.getErrors = function () {
            _this.errors = {};
            for (var key in _this.requests) {
                var request = _this.requests[key];
                if (Object.keys(request.errors).length) {
                    _this.errors[key] = request.errors;
                }
            }
            return _this.errors;
        };
        /** grab the valid expiration years for credit cards  */
        this.getExpirationYears = function () {
            var baseDate = new Date();
            var today = baseDate.getFullYear();
            var start = today;
            for (var i = 0; i <= 15; i++) {
                _this.years.push({
                    name: start + i,
                    value: start + i,
                });
            }
        };
        /** accessors for account */
        this.getAccount = function (refresh) {
            if (refresh === void 0) { refresh = false; }
            var urlBase = _this.baseActionPath + 'getAccount/';
            if (!_this.accountDataPromise || refresh) {
                _this.accountDataPromise = _this.getData(urlBase, "account", "");
            }
            return _this.accountDataPromise;
        };
        /** accessors for cart */
        this.getCart = function (refresh) {
            if (refresh === void 0) { refresh = false; }
            var urlBase = _this.baseActionPath + 'getCart/';
            if (!_this.cartDataPromise || refresh) {
                _this.cartDataPromise = _this.getData(urlBase, "cart", "");
            }
            return _this.cartDataPromise;
        };
        /** accessors for countries */
        this.getCountries = function (refresh) {
            if (refresh === void 0) { refresh = false; }
            var urlBase = _this.baseActionPath + 'getCountries/';
            if (!_this.countryDataPromise || refresh) {
                _this.countryDataPromise = _this.getData(urlBase, "countries", "");
            }
            return _this.countryDataPromise;
        };
        /** accessors for states */
        this.getStates = function (countryCode, address, refresh) {
            if (refresh === void 0) { refresh = false; }
            if (address && address.data) {
                countryCode = address.data.countrycode || address.countrycode;
            }
            if (typeof address === 'boolean' && !angular.isDefined(refresh)) {
                refresh = address;
            }
            if (!angular.isDefined(countryCode))
                countryCode = "US";
            var urlBase = _this.baseActionPath + 'getStateCodeOptionsByCountryCode/';
            if (!_this.getRequestByAction('getStateCodeOptionsByCountryCode') || !_this.getRequestByAction('getStateCodeOptionsByCountryCode').loading || refresh) {
                _this.stateDataPromise = _this.getData(urlBase, "states", "?countryCode=" + countryCode);
                return _this.stateDataPromise;
            }
            return _this.stateDataPromise;
        };
        this.refreshAddressOptions = function (address) {
            _this.getStates(null, address);
            _this.getAddressOptions(null, address);
        };
        this.getStateByStateCode = function (stateCode) {
            if (!angular.isDefined(_this.states) || !angular.isDefined(_this.states.stateCodeOptions) || !angular.isDefined(stateCode)) {
                return;
            }
            for (var state in _this.states.stateCodeOptions) {
                if (_this.states.stateCodeOptions[state].value == stateCode) {
                    return _this.states.stateCodeOptions[state];
                }
            }
        };
        this.getCountryByCountryCode = function (countryCode) {
            if (!angular.isDefined(_this.countries) || !angular.isDefined(_this.countries.countryCodeOptions)) {
                return;
            }
            if (!countryCode) {
                countryCode = 'US';
            }
            for (var country in _this.countries.countryCodeOptions) {
                if (_this.countries.countryCodeOptions[country].value == countryCode) {
                    return _this.countries.countryCodeOptions[country];
                }
            }
        };
        /** accessors for states */
        this.getAddressOptions = function (countryCode, address, refresh) {
            if (refresh === void 0) { refresh = false; }
            if (address && address.data) {
                countryCode = address.data.countrycode || address.countrycode;
            }
            if (!angular.isDefined(countryCode))
                countryCode = "US";
            if (typeof address === 'boolean' && !angular.isDefined(refresh)) {
                refresh = address;
            }
            var urlBase = _this.baseActionPath + 'getAddressOptionsByCountryCode/';
            if (!_this.getRequestByAction('getAddressOptionsByCountryCode') || !_this.getRequestByAction('getAddressOptionsByCountryCode').loading || refresh) {
                _this.addressOptionData = _this.getData(urlBase, "addressOptions", "?countryCode=" + countryCode);
                return _this.addressOptionData;
            }
            return _this.addressOptionData;
        };
        /** accessors for states */
        this.getData = function (url, setter, param) {
            var urlBase = url + param;
            var request = _this.requestService.newPublicRequest(urlBase);
            request.promise.then(function (result) {
                //don't need account and cart for anything other than account and cart calls.
                if (setter.indexOf('account') == -1 || setter.indexOf('cart') == -1) {
                    if (result['account']) {
                        delete result['account'];
                    }
                    if (result['cart']) {
                        delete result['cart'];
                    }
                }
                if (setter == 'cart' || setter == 'account' && _this[setter] && _this[setter].populate) {
                    //cart and account return cart and account info flat
                    _this[setter].populate(result);
                }
                else {
                    //other functions reutrn cart,account and then data
                    if (setter == 'states') {
                        _this[setter] = {};
                        _this.$timeout(function () {
                            _this[setter] = (result);
                        });
                    }
                    else {
                        _this[setter] = (result);
                    }
                }
            }).catch(function (reason) {
            });
            _this.requests[request.getAction()] = request;
            return request.promise;
        };
        /** sets the current shipping address */
        this.setShippingAddress = function (shippingAddress) {
            _this.shippingAddress = shippingAddress;
        };
        /** sets the current shipping address */
        this.setBillingAddress = function (billingAddress) {
            _this.billingAddress = billingAddress;
        };
        /** sets the current billing address */
        this.selectBillingAddress = function (key) {
            if (_this.orderPaymentObject && _this.orderPaymentObject.forms) {
                var address = _this.account.accountAddresses[key].address;
                address.accountAddressID = _this.account.accountAddresses[key].accountAddressID;
                for (var property in address) {
                    for (var form in _this.orderPaymentObject['forms']) {
                        form = _this.orderPaymentObject['forms'][form];
                        if (form['newOrderPayment.billingAddress.' + property] != undefined) {
                            form['newOrderPayment.billingAddress.' + property].$setViewValue(address[property]);
                        }
                    }
                }
                _this.orderPaymentObject.newOrderPayment.billingAddress = address;
            }
        };
        /** this is the generic method used to call all server side actions.
        *  @param action {string} the name of the action (method) to call in the public service.
        *  @param data   {object} the params as key value pairs to pass in the post request.
        *  @return a deferred promise that resolves server response or error. also includes updated account and cart.
        */
        this.doAction = function (action, data, method) {
            //Prevent sending the same request multiple times in parallel
            if (_this.getRequestByAction(action) && _this.loadingThisRequest(action, data, false))
                return _this.$q.when();
            if (!action) {
                throw "Action is required exception";
            }
            var urlBase = _this.appConfig.baseURL;
            //check if the caller is defining a path to hit, otherwise use the public scope.
            if (action.indexOf(":") !== -1) {
                urlBase = urlBase + action; //any path
            }
            else {
                urlBase = _this.baseActionPath + action; //public path
            }
            if (data) {
                method = "post";
                data.returnJsonObjects = "cart,account";
            }
            else {
                urlBase += (urlBase.indexOf('?') == -1) ? '?' : '&';
                urlBase += "returnJsonObject=cart,account";
            }
            if (method == "post") {
                data.returnJsonObjects = "cart,account";
                //post
                var request_1 = _this.requestService.newPublicRequest(urlBase, data, method);
                request_1.promise.then(function (result) {
                    _this.processAction(result, request_1);
                }).catch(function (response) {
                });
                _this.requests[request_1.getAction()] = request_1;
                return request_1.promise;
            }
            else {
                //get
                var url = urlBase;
                var request_2 = _this.requestService.newPublicRequest(url, data, method);
                request_2.promise.then(function (result) {
                    _this.processAction(result, request_2);
                }).catch(function (reason) {
                });
                _this.requests[request_2.getAction()] = request_2;
                return request_2.promise;
            }
        };
        this.uploadFile = function (action, data) {
            _this.$timeout(function () {
                _this.uploadingFile = true;
            });
            var url = _this.appConfig.baseURL + action;
            var formData = new FormData();
            formData.append("fileName", data.fileName);
            formData.append("uploadFile", data.uploadFile);
            var xhr = new XMLHttpRequest();
            xhr.open('POST', url, true);
            xhr.onload = function (result) {
                var response = JSON.parse(xhr.response);
                if (xhr.status === 200) {
                    _this.processAction(response, null);
                    _this.successfulActions = response.successfulActions;
                    _this.failureActions = response.failureActions;
                }
                _this.$timeout(function () {
                    _this.uploadingFile = false;
                });
            };
            xhr.send(formData);
        };
        this.processAction = function (response, request) {
            //Run any specific adjustments needed
            _this.runCheckoutAdjustments(response);
            //if the action that was called was successful, then success is true.
            if (request && request.hasSuccessfulAction()) {
                _this.successfulActions = [];
                for (var action in request.successfulActions) {
                    if (request.successfulActions[action].indexOf('public:cart.placeOrder') !== -1) {
                        _this.$window.location.href = _this.confirmationUrl;
                        return;
                    }
                    else if (request.successfulActions[action].indexOf('public:cart.finalizeCart') !== -1) {
                        _this.$window.location.href = _this.checkoutUrl;
                        return;
                    }
                    else if (request.successfulActions[action].indexOf('public:account.logout') !== -1) {
                        _this.account = _this.$hibachi.newAccount();
                    }
                    _this.successfulActions.push(request.successfulActions[action].split('.')[1]);
                }
            }
            if (request && request.hasFailureAction()) {
                _this.failureActions = [];
                for (var action in request.failureActions) {
                    _this.failureActions.push(request.failureActions[action].split('.')[1]);
                }
            }
            /** update the account and the cart */
            if (response.account) {
                _this.account.populate(response.account);
                _this.account.request = request;
            }
            if (response.cart) {
                _this.cart.populate(response.cart);
                _this.cart.request = request;
            }
            _this.errors = response.errors;
        };
        this.runCheckoutAdjustments = function (response) {
            _this.filterErrors(response);
            if (response.cart) {
                _this.removeInvalidOrderPayments(response.cart);
            }
        };
        this.getRequestByAction = function (action) {
            return _this.requests[action];
        };
        /**
         * Helper methods so that everything in account and cart can be accessed using getters.
         */
        this.userIsLoggedIn = function () {
            return _this.account.userIsLoggedIn();
        };
        this.getActivePaymentMethods = function () {
            var urlString = "/?" + _this.appConfig.action + "=admin:ajax.getActivePaymentMethods";
            var request = _this.requestService.newPublicRequest(urlString)
                .then(function (result) {
                if (angular.isDefined(result.data.paymentMethods)) {
                    _this.paymentMethods = result.data.paymentMethods;
                }
            });
            _this.requests[request.getAction()] = request;
        };
        this.filterErrors = function (response) {
            if (!response || !response.cart || !response.cart.errors)
                return;
            var cartErrors = response.cart.errors;
            if (cartErrors.addOrderPayment) {
                cartErrors.addOrderPayment = cartErrors.addOrderPayment.filter(function (error) { return error != 'billingAddress'; });
            }
        };
        /** Uses getRequestByAction() plus an identifier to distinguish between different functionality using the same route*/
        this.loadingThisRequest = function (action, conditions, strict) {
            var request = _this.getRequestByAction(action);
            if (!request || !request.loading)
                return false;
            for (var identifier in conditions) {
                if (!((conditions[identifier] === true && !strict) || request.data[identifier] == conditions[identifier])) {
                    return false;
                }
            }
            return true;
        };
        this.removeInvalidOrderPayments = function (cart) {
            cart.orderPayments = cart.orderPayments.filter(function (payment) { return !payment.hasErrors; });
        };
        /**
         * Given a payment method name, returns the id.
         */
        this.getPaymentMethodID = function (name) {
            for (var method in _this.paymentMethods) {
                if (_this.paymentMethods[method].paymentMethodName == name && _this.paymentMethods[method].activeFlag == "Yes ") {
                    return _this.paymentMethods[method].paymentMethodID;
                }
            }
        };
        /** Returns a boolean indicating whether or not the order has the named payment method.*/
        this.hasPaymentMethod = function (paymentMethodName) {
            for (var _i = 0, _a = _this.cart.orderPayments; _i < _a.length; _i++) {
                var payment = _a[_i];
                if (payment.paymentMethod.paymentMethodName === paymentMethodName)
                    return true;
            }
            return false;
        };
        this.hasCreditCardPaymentMethod = function () {
            return _this.hasPaymentMethod("Credit Card");
        };
        this.hasPaypalPaymentMethod = function () {
            return _this.hasPaymentMethod("PayPal Express");
        };
        this.hasGiftCardPaymentMethod = function () {
            return _this.hasPaymentMethod("Gift Card");
        };
        this.hasMoneyOrderPaymentMethod = function () {
            return _this.hasPaymentMethod("Money Order");
        };
        this.hasCashPaymentMethod = function () {
            return _this.hasPaymentMethod("Cash");
        };
        /** Returns a boolean indicating whether or not the order has the named fulfillment method.*/
        this.hasFulfillmentMethod = function (fulfillmentMethodName) {
            for (var _i = 0, _a = _this.cart.orderFulfillments; _i < _a.length; _i++) {
                var fulfillment = _a[_i];
                if (fulfillment.fulfillmentMethod.fulfillmentMethodName === fulfillmentMethodName)
                    return true;
            }
            return false;
        };
        this.hasShippingFulfillmentMethod = function () {
            return _this.hasFulfillmentMethod("Shipping");
        };
        this.hasEmailFulfillmentMethod = function () {
            return _this.hasFulfillmentMethod("Email");
        };
        this.hasPickupFulfillmentMethod = function () {
            return _this.hasFulfillmentMethod("Pickup");
        };
        this.getFulfillmentType = function (fulfillment) {
            return fulfillment.fulfillmentMethod.fulfillmentMethodType;
        };
        this.isShippingFulfillment = function (fulfillment) {
            return _this.getFulfillmentType(fulfillment) === 'shipping';
        };
        this.isEmailFulfillment = function (fulfillment) {
            return _this.getFulfillmentType(fulfillment) === 'email';
        };
        this.isPickupFulfillment = function (fulfillment) {
            return _this.getFulfillmentType(fulfillment) === 'pickup';
        };
        /** Returns true if the order fulfillment has a shipping address selected. */
        this.hasShippingAddress = function (fulfillmentIndex) {
            return (_this.cart.orderFulfillments[fulfillmentIndex] &&
                _this.isShippingFulfillment(_this.cart.orderFulfillments[fulfillmentIndex]) &&
                _this.cart.orderFulfillments[fulfillmentIndex].data.shippingAddress &&
                _this.cart.orderFulfillments[fulfillmentIndex].data.shippingAddress.addressID);
        };
        this.hasShippingMethodOptions = function (fulfillmentIndex) {
            var shippingMethodOptions = _this.cart.orderFulfillments[fulfillmentIndex].shippingMethodOptions;
            return shippingMethodOptions && shippingMethodOptions.length && (shippingMethodOptions.length > 1 || (shippingMethodOptions[0].value && shippingMethodOptions[0].value.length));
        };
        /** Returns true if the order fulfillment has a shipping address selected. */
        this.hasPickupLocation = function (fulfillmentIndex) {
            return (_this.cart.orderFulfillments[fulfillmentIndex] &&
                _this.isPickupFulfillment(_this.cart.orderFulfillments[fulfillmentIndex]) &&
                _this.cart.orderFulfillments[fulfillmentIndex].pickupLocation);
        };
        /** Returns true if the order requires a fulfillment */
        this.orderRequiresFulfillment = function () {
            return _this.cart.orderRequiresFulfillment();
        };
        /**
         *  Returns true if the order requires a account
         *  Either because the user is not logged in, or because they don't have one.
         *
         */
        this.orderRequiresAccount = function () {
            return _this.cart.orderRequiresAccount();
        };
        /** Returns true if the payment tab should be active */
        this.hasShippingAddressAndMethod = function () {
            return _this.cart.hasShippingAddressAndMethod();
        };
        /**
         * Returns true if the user has an account and is logged in.
         */
        this.hasAccount = function () {
            if (_this.account.accountID) {
                return true;
            }
            return false;
        };
        /** Redirects to the passed in URL
        */
        this.redirectExact = function (url) {
            _this.$window.location.href = url;
        };
        // /** Returns true if a property on an object is undefined or empty. */
        this.isUndefinedOrEmpty = function (object, property) {
            if (!angular.isDefined(object[property]) || object[property] == "") {
                return true;
            }
            return false;
        };
        /** A simple method to return the quantity sum of all orderitems in the cart. */
        this.getOrderItemQuantitySum = function () {
            var totalQuantity = 0;
            if (angular.isDefined(_this.cart)) {
                return _this.cart.getOrderItemQuantitySum();
            }
            return totalQuantity;
        };
        /** Returns the index of the state from the list of states */
        this.getSelectedStateIndexFromStateCode = function (stateCode, states) {
            for (var state in states) {
                if (states[state].value == stateCode) {
                    return state;
                }
            }
        };
        /**
         * Returns true if on a mobile device. This is important for placeholders.
         */
        this.isMobile = function () {
            if (_this.$window.innerWidth <= 800 && _this.$window.innerHeight <= 600) {
                return true;
            }
            return false;
        };
        /** returns true if the shipping method option passed in is the selected shipping method
        */
        this.isSelectedShippingMethod = function (option, fulfillmentIndex) {
            // DEPRECATED LOGIC
            if (typeof option === 'number' || typeof option === 'string') {
                var index = option, value = fulfillmentIndex;
                var orderFulfillment = void 0;
                for (var _i = 0, _a = _this.cart.orderFulfillments; _i < _a.length; _i++) {
                    var fulfillment = _a[_i];
                    if (_this.isShippingFulfillment(fulfillment)) {
                        orderFulfillment = fulfillment;
                    }
                }
                if (_this.cart.fulfillmentTotal &&
                    value == orderFulfillment.shippingMethod.shippingMethodID ||
                    orderFulfillment.shippingMethodOptions.length == 1) {
                    return true;
                }
                return false;
            }
            //NEW LOGIC
            return (_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod &&
                _this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod.shippingMethodID == option.value) ||
                (_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethodOptions.length == 1);
        };
        /** Select a shipping method - temporarily changes the selected method on the front end while awaiting official change from server
        */
        this.selectShippingMethod = function (option, fulfillmentIndex) {
            var data = {
                'shippingMethodID': option.value,
                'fulfillmentID': _this.cart.orderFulfillments[fulfillmentIndex].orderFulfillmentID
            };
            _this.doAction('addShippingMethodUsingShippingMethodID', data);
            if (!_this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod) {
                _this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod = {};
            }
            _this.cart.orderFulfillments[fulfillmentIndex].data.shippingMethod.shippingMethodID = option.value;
        };
        /** Removes promotional code from order*/
        this.removePromoCode = function (code) {
            _this.doAction('removePromotionCode', { promotionCode: code });
        };
        //gets the calcuated total minus the applied gift cards.
        this.getTotalMinusGiftCards = function () {
            var total = _this.getAppliedGiftCardTotals();
            return _this.cart.calculatedTotal - total;
        };
        /** Format saved payment method info for display in list*/
        this.formatPaymentMethod = function (paymentMethod) {
            return (paymentMethod.accountPaymentMethodName || paymentMethod.nameOnCreditCard) + ' - ' + paymentMethod.creditCardType + ' *' + paymentMethod.creditCardLastFour + ' exp. ' + ('0' + paymentMethod.expirationMonth).slice(-2) + '/' + paymentMethod.expirationYear.toString().slice(-2);
        };
        this.getOrderItemSkuIDs = function (cart) {
            return cart.orderItems.map(function (item) {
                return item.sku.skuID;
            }).join(',');
        };
        this.getResizedImageByProfileName = function (profileName, skuIDs) {
            _this.loading = true;
            if (profileName == undefined) {
                profileName = "medium";
            }
            _this.doAction('getResizedImageByProfileName', { profileName: profileName, skuIds: skuIDs }).then(function (result) {
                if (!angular.isDefined(_this.imagePath)) {
                    _this.imagePath = {};
                }
                if (result.resizedImagePaths) {
                    for (var skuID in result.resizedImagePaths) {
                        _this.imagePath[skuID] = result.resizedImagePaths[skuID];
                    }
                }
            });
        };
        /** Returns the amount total of giftcards added to this order.*/
        this.getPaymentTotals = function () {
            //
            var total = 0;
            for (var index in _this.cart.orderPayments) {
                total = total + Number(_this.cart.orderPayments[index]['amount'].toFixed(2));
            }
            return total;
        };
        /** Gets the calcuated total minus the applied gift cards. */
        this.getTotalMinusPayments = function () {
            var total = _this.getPaymentTotals();
            return _this.cart.calculatedTotal - total;
        };
        /** Boolean indicating whether the total balance has been accounted for by order payments.*/
        this.paymentsEqualTotalBalance = function () {
            return _this.getTotalMinusPayments() == 0;
        };
        /**View logic - Opens review panel if no more payments are due.*/
        this.checkIfFinalPayment = function () {
            if ((_this.getRequestByAction('addOrderPayment') && _this.getRequestByAction('addOrderPayment').hasSuccessfulAction() ||
                _this.getRequestByAction('addGiftCardOrderPayment') && _this.getRequestByAction('addGiftCardOrderPayment').hasSuccessfulAction()) && _this.paymentsEqualTotalBalance()) {
                _this.edit = 'review';
            }
        };
        this.getAddressEntity = function (address) {
            var addressEntity = _this.$hibachi.newAddress();
            if (address) {
                for (var key in address) {
                    if (address.hasOwnProperty(key)) {
                        addressEntity[key] = address[key];
                    }
                }
            }
            return addressEntity;
        };
        this.resetRequests = function (request) {
            delete _this.requests[request];
        };
        /** Returns true if the addresses match. */
        this.addressesMatch = function (address1, address2) {
            if (angular.isDefined(address1) && angular.isDefined(address2)) {
                if ((address1.streetAddress == address2.streetAddress &&
                    address1.street2Address == address2.street2Address &&
                    address1.city == address2.city &&
                    address1.postalCode == address2.postalCode &&
                    address1.stateCode == address2.stateCode &&
                    address1.countrycode == address2.countrycode)) {
                    return true;
                }
            }
            return false;
        };
        /**
       *  Returns true when the fulfillment body should be showing
       *  Show if we don't need an account but do need a fulfillment
       *
       */
        this.showFulfillmentTabBody = function () {
            if (!_this.hasAccount())
                return false;
            if ((_this.cart.orderRequirementsList.indexOf('account') == -1) &&
                (_this.cart.orderRequirementsList.indexOf('fulfillment') != -1) && !_this.edit ||
                (_this.edit == 'fulfillment')) {
                return true;
            }
            return false;
        };
        /**
         *  Returns true when the fulfillment body should be showing
         *  Show if we don't need an account,fulfillment, and don't have a payment - or
         *  we have a payment but are editting the payment AND nothing else is being edited
         *
         */
        this.showPaymentTabBody = function () {
            if (!_this.hasAccount())
                return false;
            if (((_this.cart.orderRequirementsList.indexOf('account') == -1) &&
                (_this.cart.orderRequirementsList.indexOf('fulfillment') == -1) &&
                (_this.cart.orderRequirementsList.indexOf('payment') != -1) && !_this.edit) ||
                ((_this.cart.orderRequirementsList.indexOf('account') == -1) &&
                    (_this.cart.orderRequirementsList.indexOf('fulfillment') == -1) &&
                    (_this.edit == 'payment'))) {
                return true;
            }
            return false;
        };
        /**
         *  Returns true if the review tab body should be showing.
         *  Show if we don't need an account,fulfillment,payment, but not if something else is being edited
         *
         */
        this.showReviewTabBody = function () {
            if (!_this.hasAccount())
                return false;
            if ((_this.cart.orderRequirementsList.indexOf('account') == -1) &&
                (_this.cart.orderRequirementsList.indexOf('fulfillment') == -1) &&
                (_this.cart.orderRequirementsList.indexOf('payment') == -1) &&
                ((!_this.edit) || (_this.edit == 'review'))) {
                return true;
            }
            return false;
        };
        /** Returns true if the fulfillment tab should be active */
        this.fulfillmentTabIsActive = function () {
            if (!_this.hasAccount())
                return false;
            if ((_this.edit == 'fulfillment') ||
                (!_this.edit && ((_this.cart.orderRequirementsList.indexOf('account') == -1) && _this.account.accountID) &&
                    (_this.cart.orderRequirementsList.indexOf('fulfillment') != -1))) {
                return true;
            }
            return false;
        };
        /** Returns true if the payment tab should be active */
        this.paymentTabIsActive = function () {
            if (!_this.hasAccount())
                return false;
            if ((_this.edit == 'payment') ||
                (!_this.edit &&
                    (_this.cart.orderRequirementsList.indexOf('account') == -1) && _this.account.accountID &&
                    (_this.cart.orderRequirementsList.indexOf('fulfillment') == -1) &&
                    (_this.cart.orderRequirementsList.indexOf('payment') != -1))) {
                return true;
            }
            return false;
        };
        this.isCreatingAccount = function () {
            return !_this.hasAccount() && _this.showCreateAccount;
        };
        this.isSigningIn = function () {
            return !_this.hasAccount() && !_this.showCreateAccount;
        };
        this.loginError = function () {
            if (_this.account.processObjects && _this.account.processObjects.login && _this.account.processObjects.login.hasErrors) {
                return _this.account.processObjects.login.errors.emailAddress['0'];
            }
            ;
        };
        this.createAccountError = function () {
            if (_this.account.processObjects && _this.account.processObjects.create && _this.account.processObjects.create.hasErrors) {
                return _this.account.processObjects.create.errors;
            }
        };
        this.forgotPasswordNotSubmitted = function () {
            return !_this.account.processObjects || (!_this.account.hasErrors && !_this.account.processObjects.forgotPassword);
        };
        this.forgotPasswordSubmitted = function () {
            return _this.account.processObjects && _this.account.processObjects.forgotPassword;
        };
        this.forgotPasswordHasNoErrors = function () {
            return _this.account.processObjects && _this.account.processObjects.forgotPassword && !_this.account.processObjects.forgotPassword.hasErrors;
        };
        this.forgotPasswordError = function () {
            if (_this.forgotPasswordSubmitted() && !_this.forgotPasswordHasNoErrors()) {
                return _this.account.processObjects.forgotPassword.errors.emailAddress['0'];
            }
        };
        /** Consolidate response errors on cart.errors.runPlaceOrderTransaction*/
        this.placeOrderFailure = function () {
            var errors = [];
            for (var key in _this.cart.errors) {
                var errArray = _this.cart.errors[key];
                errors = errors.concat(errArray);
            }
            _this.cart.errors.runPlaceOrderTransaction = errors;
            _this.edit = '';
        };
        /** Returns errors from placeOrder request*/
        this.placeOrderError = function () {
            if (_this.cart.hasErrors && _this.cart.errors.runPlaceOrderTransaction) {
                return _this.cart.errors.runPlaceOrderTransaction;
            }
        };
        /** Returns errors from addOrderPayment request. */
        this.addOrderPaymentError = function () {
            if (_this.cart.errors.addOrderPayment)
                return _this.cart.errors.addOrderPayment;
            if (_this.cart.errors.runPlaceOrderTransaction)
                return _this.cart.errors.runPlaceOrderTransaction;
            return angular.isDefined(_this.errors) ? _this.errors['ADDORDERPAYMENT'] : false;
        };
        /** Returns errors from addBillingAddress request. */
        this.addBillingAddressError = function () {
            if (_this.loadingThisRequest('addOrderPayment', {}, false))
                return false;
            if (_this.errors && _this.errors.copied)
                return _this.addBillingAddressErrors;
            _this.addBillingAddressErrors = _this.cart.errors.addBillingAddress || (angular.isDefined(_this.errors) ? _this.errors['addBillingAddress'] : false);
            if (!_this.billingAddressEditFormIndex && _this.errors && _this.hasFailureAction('addBillingAddress')) {
                var addressProperties = _this.$hibachi.newAddress().data;
                for (var property in _this.errors) {
                    if (addressProperties.hasOwnProperty(property)) {
                        _this.addBillingAddressErrors = _this.addBillingAddressErrors || [];
                        _this.errors[property].forEach(function (error) {
                            _this.addBillingAddressErrors.push(error);
                        });
                    }
                }
                _this.errors.copied = 1;
            }
            return _this.addBillingAddressErrors;
        };
        /** Returns errors from addGiftCard request. */
        this.giftCardError = function () {
            if (_this.cart.processObjects &&
                _this.cart.processObjects.addOrderPayment &&
                _this.cart.processObjects.addOrderPayment.errors &&
                _this.cart.processObjects.addOrderPayment.errors.giftCardID) {
                return _this.cart.processObjects.addOrderPayment.errors.giftCardID[0];
            }
        };
        this.editAccountAddress = function (key, fulfillmentIndex) {
            _this.clearShippingAddressErrors();
            _this.accountAddressEditFormIndex[fulfillmentIndex] = key;
            _this.editingAccountAddress = _this.getAddressEntity(_this.account.accountAddresses[key].address);
            _this.editingAccountAddress.accountAddressName = _this.account.accountAddresses[key].accountAddressName;
            _this.editingAccountAddress.accountAddressID = _this.account.accountAddresses[key].accountAddressID;
        };
        this.editBillingAddress = function (key, formName) {
            _this.clearMessages();
            _this.billingAddressEditFormIndex = key;
            _this.selectedBillingAddress = null;
            if (formName) {
                _this[formName + 'BillingAddress'] = _this.getAddressEntity(_this.account.accountAddresses[key].address);
                _this[formName + 'BillingAddress'].accountAddressName = _this.account.accountAddresses[key].accountAddressName;
                _this[formName + 'BillingAddress'].accountAddressID = _this.account.accountAddresses[key].accountAddressID;
            }
            else {
                _this.billingAddress = _this.getAddressEntity(_this.account.accountAddresses[key].address);
                _this.billingAddress.accountAddressName = _this.account.accountAddresses[key].accountAddressName;
                _this.billingAddress.accountAddressID = _this.account.accountAddresses[key].accountAddressID;
            }
        };
        this.clearShippingAddressErrors = function () {
            _this.clearMessages();
            _this.shippingAddressErrors = undefined;
        };
        this.clearMessages = function () {
            _this.successfulActions = [];
            _this.failureActions = [];
        };
        /**Hides shipping address form, clears shipping address errors*/
        this.hideAccountAddressForm = function (fulfillmentIndex) {
            _this.accountAddressEditFormIndex[fulfillmentIndex] = undefined;
        };
        this.hideBillingAddressForm = function () {
            if (_this.billingAddressEditFormIndex != undefined) {
                var index = _this.billingAddressEditFormIndex;
                if (_this.billingAddressEditFormIndex == 'new') {
                    index = _this.account.accountAddresses.length - 1;
                }
                _this.selectBillingAddress(index);
            }
            _this.billingAddressEditFormIndex = undefined;
            _this.billingAddress = {};
        };
        this.editingDifferentAccountAddress = function (fulfillmentIndex) {
            for (var index = 0; index < _this.cart.orderFulfillments.length; index++) {
                if (index !== fulfillmentIndex && _this.accountAddressEditFormIndex[index] != undefined) {
                    return true;
                }
            }
        };
        this.showEditAccountAddressForm = function (fulfillmentIndex) {
            return _this.accountAddressEditFormIndex[fulfillmentIndex] != undefined && _this.accountAddressEditFormIndex[fulfillmentIndex] != 'new';
        };
        this.showNewAccountAddressForm = function (fulfillmentIndex) {
            return _this.accountAddressEditFormIndex[fulfillmentIndex] == 'new';
        };
        this.showNewBillingAddressForm = function () {
            return !_this.useShippingAsBilling && _this.billingAddressEditFormIndex == 'new';
        };
        this.showEditBillingAddressForm = function () {
            return !_this.useShippingAsBilling && _this.billingAddressEditFormIndex != undefined && _this.billingAddressEditFormIndex != 'new';
        };
        /** Adds errors from response to cart errors.*/
        this.addBillingErrorsToCartErrors = function () {
            var cartErrors = _this.cart.errors;
            if (cartErrors.addOrderPayment) {
                var deleteIndex = cartErrors.addOrderPayment.indexOf('billingAddress');
                if (deleteIndex > -1) {
                    cartErrors.addOrderPayment.splice(deleteIndex, 1);
                }
                if (cartErrors.addOrderPayment.length == 0) {
                    cartErrors.addOrderPayment = null;
                }
            }
            cartErrors.addBillingAddress = [];
            for (var key in _this.errors) {
                _this.cart.errors.addBillingAddress = _this.cart.errors.addBillingAddress.concat(_this.errors[key]);
            }
        };
        this.accountAddressIsSelectedShippingAddress = function (key, fulfillmentIndex) {
            if (_this.account &&
                _this.account.accountAddresses &&
                _this.cart.orderFulfillments[fulfillmentIndex].shippingAddress &&
                !_this.cart.orderFulfillments[fulfillmentIndex].shippingAddress.hasErrors) {
                return _this.addressesMatch(_this.account.accountAddresses[key].address, _this.cart.orderFulfillments[fulfillmentIndex].shippingAddress);
            }
            return false;
        };
        this.accountAddressIsSelectedBillingAddress = function (key) {
            if (_this.account &&
                _this.account.accountAddresses &&
                _this.orderPaymentObject &&
                _this.orderPaymentObject.newOrderPayment &&
                _this.orderPaymentObject.newOrderPayment.billingAddress) {
                return _this.account.accountAddresses[key].accountAddressID == _this.orderPaymentObject.newOrderPayment.billingAddress.accountAddressID;
            }
            return false;
        };
        /** Returns true if order requires email fulfillment and email address has been chosen.*/
        this.hasEmailFulfillmentAddress = function (fulfillmentIndex) {
            return Boolean(_this.cart.orderFulfillments[fulfillmentIndex].emailAddress);
        };
        this.getEligiblePaymentMethodsForPaymentMethodType = function (paymentMethodType) {
            return _this.cart.eligiblePaymentMethodDetails.filter(function (paymentMethod) {
                return paymentMethod.paymentMethod.paymentMethodType == paymentMethodType;
            });
        };
        this.getEligibleCreditCardPaymentMethods = function () {
            return _this.getEligiblePaymentMethodsForPaymentMethodType('creditCard');
        };
        this.getPickupLocation = function (fulfillmentIndex) {
            if (!_this.cart.data.orderFulfillments[fulfillmentIndex])
                return;
            return _this.cart.data.orderFulfillments[fulfillmentIndex].pickupLocation;
        };
        this.getShippingAddress = function (fulfillmentIndex) {
            if (!_this.cart.data.orderFulfillments[fulfillmentIndex])
                return;
            return _this.cart.data.orderFulfillments[fulfillmentIndex].data.shippingAddress;
        };
        this.getEmailFulfillmentAddress = function (fulfillmentIndex) {
            if (!_this.cart.data.orderFulfillments[fulfillmentIndex])
                return;
            return _this.cart.data.orderFulfillments[fulfillmentIndex].emailAddress;
        };
        this.getPickupLocations = function () {
            var locations = [];
            _this.cart.orderFulfillments.forEach(function (fulfillment, index) {
                if (_this.getFulfillmentType(fulfillment) == 'pickup' && fulfillment.pickupLocation && fulfillment.pickupLocation.locationID) {
                    fulfillment.pickupLocation.fulfillmentIndex = index;
                    locations.push(fulfillment.pickupLocation);
                }
            });
            return locations;
        };
        this.getShippingAddresses = function () {
            var addresses = [];
            _this.cart.orderFulfillments.forEach(function (fulfillment, index) {
                if (_this.getFulfillmentType(fulfillment) == 'shipping' && fulfillment.data.shippingAddress && fulfillment.data.shippingAddress.addressID) {
                    fulfillment.data.shippingAddress.fulfillmentIndex = index;
                    addresses.push(fulfillment.data.shippingAddress);
                }
            });
            return addresses;
        };
        this.getEmailFulfillmentAddresses = function () {
            var addresses = [];
            _this.cart.orderFulfillments.forEach(function (fulfillment, index) {
                if (_this.getFulfillmentType(fulfillment) == 'email' && fulfillment.emailAddress) {
                    fulfillment.fulfillmentIndex = index;
                    addresses.push(fulfillment);
                }
            });
            return addresses;
        };
        /** Returns true if any action in comma-delimited list exists in this.successfulActions */
        this.hasSuccessfulAction = function (actionList) {
            for (var _i = 0, _a = actionList.split(','); _i < _a.length; _i++) {
                var action = _a[_i];
                if (_this.successfulActions.indexOf(action) > -1) {
                    return true;
                }
            }
            return false;
        };
        /** Returns true if any action in comma-delimited list exists in this.failureActions */
        this.hasFailureAction = function (actionList) {
            for (var _i = 0, _a = actionList.split(','); _i < _a.length; _i++) {
                var action = _a[_i];
                if (_this.failureActions.indexOf(action) > -1) {
                    return true;
                }
            }
            return false;
        };
        this.shippingUpdateSuccess = function () {
            return _this.hasSuccessfulAction('addShippingAddressUsingAccountAddress,addShippingAddress');
        };
        this.shippingMethodUpdateSuccess = function () {
            return _this.hasSuccessfulAction('addShippingMethodUsingShippingMethodID');
        };
        this.updatedBillingAddress = function () {
            return _this.hasSuccessfulAction('updateAddress') && !_this.hasSuccessfulAction('addShippingAddress');
        };
        this.addedBillingAddress = function () {
            return _this.hasSuccessfulAction('addNewAccountAddress') && !_this.hasSuccessfulAction('addShippingAddressUsingAccountAddress');
        };
        this.addedShippingAddress = function () {
            return _this.hasSuccessfulAction('addNewAccountAddress') && _this.hasSuccessfulAction('addShippingAddressUsingAccountAddress');
        };
        this.emailFulfillmentUpdateSuccess = function () {
            return _this.hasSuccessfulAction('addEmailFulfillmentAddress');
        };
        this.pickupLocationUpdateSuccess = function () {
            return _this.hasSuccessfulAction('addEmailFulfillmentAddress');
        };
        /** Returns true if selected pickup location has no name.*/
        this.namelessPickupLocation = function (fulfillmentIndex) {
            if (!_this.getPickupLocation(fulfillmentIndex))
                return false;
            return _this.getPickupLocation(fulfillmentIndex).primaryAddress != undefined && _this.getPickupLocation(fulfillmentIndex).locationName == undefined;
        };
        /** Returns true if no pickup location has been selected.*/
        this.noPickupLocation = function (fulfillmentIndex) {
            if (!_this.getPickupLocation(fulfillmentIndex))
                return true;
            return _this.getPickupLocation(fulfillmentIndex).primaryAddress == undefined && _this.getPickupLocation(fulfillmentIndex).locationName == undefined;
        };
        this.disableContinueToPayment = function () {
            return _this.cart.orderRequirementsList.indexOf('fulfillment') != -1;
        };
        this.hasAccountPaymentMethods = function () {
            return _this.account && _this.account.accountPaymentMethods && _this.account.accountPaymentMethods.length;
        };
        this.showBillingAccountAddresses = function () {
            return !_this.useShippingAsBilling && _this.billingAddressEditFormIndex == undefined;
        };
        this.hasNoCardInfo = function () {
            return !_this.newCardInfo || !_this.newCardInfo.nameOnCreditCard || !_this.newCardInfo.cardNumber || !_this.newCardInfo.cvv;
        };
        this.isGiftCardPayment = function (payment) {
            return payment.giftCard && payment.giftCard.giftCardCode;
        };
        this.isPurchaseOrderPayment = function (payment) {
            return payment.purchaseOrderNumber;
        };
        //Not particularly robust, needs to be modified for each project
        this.isCheckOrMoneyOrderPayment = function (payment) {
            return payment.paymentMethod.paymentMethodName == "Check or Money Order";
        };
        this.orderHasNoPayments = function () {
            var activePayments = _this.cart.orderPayments.filter(function (payment) { return payment.amount != 0; });
            return !activePayments.length;
        };
        this.hasProductNameAndNoSkuName = function (orderItem) {
            return !orderItem.sku.skuName && orderItem.sku.product && orderItem.sku.product.productName;
        };
        this.cartHasNoItems = function () {
            return !_this.getRequestByAction('getCart').loading && _this.hasAccount() && _this.cart && _this.cart.orderItems && !_this.cart.orderItems.length && !_this.loading && !_this.orderPlaced;
        };
        this.hasAccountAndCartItems = function () {
            return _this.hasAccount() && !_this.cartHasNoItems();
        };
        this.hideStoreSelector = function (fulfillmentIndex) {
            _this.showStoreSelector[fulfillmentIndex] = false;
        };
        this.hideEmailSelector = function (fulfillmentIndex) {
            _this.showEmailSelector[fulfillmentIndex] = false;
        };
        this.incrementItemQuantity = function (orderItem, amount) {
            if (amount === void 0) { amount = 1; }
            orderItem.quantity += amount;
            if (orderItem.quantity < 0) {
                orderItem.quantity = 0;
            }
            _this.updateOrderItemQuantity(orderItem);
        };
        this.updateOrderItemQuantity = function (event) {
            event.swForm.submit();
        };
        this.getOrderAttributeValues = function (allowedAttributeSets) {
            var attributeValues = {};
            var orderAttributeModel = JSON.parse(localStorage.attributeMetaData)["Order"];
            for (var attributeSetCode in orderAttributeModel) {
                var attributeSet = orderAttributeModel[attributeSetCode];
                if (allowedAttributeSets.indexOf(attributeSetCode) !== -1) {
                    for (var attributeCode in attributeSet.attributes) {
                        var attribute = attributeSet.attributes[attributeCode];
                        attributeValues[attribute.attributeCode] = {
                            attributeCode: attribute.attributeCode,
                            attributeName: attribute.attributeName,
                            attributeValue: _this.cart[attribute.attributeCode],
                            inputType: attribute.attributeInputType,
                            requiredFlag: attribute.requiredFlag
                        };
                    }
                }
            }
            return attributeValues;
        };
        this.binder = function (self, fn) {
            var args = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                args[_i - 2] = arguments[_i];
            }
            return fn.bind.apply(fn, [self].concat(args));
        };
        /*********************************************************************************/
        /*******************                                    **************************/
        /*******************         DEPRECATED METHODS         **************************/
        /*******************                                    **************************/
        /*********************************************************************************/
        /** DEPRECATED
        */
        this.getSelectedShippingIndex = function (index, value) {
            for (var i = 0; i <= this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions.length; i++) {
                if (this.cart.fulfillmentTotal == this.cart.orderFulfillments[this.cart.orderFulfillmentWithShippingMethodOptionsIndex].shippingMethodOptions[i].totalCharge) {
                    return i;
                }
            }
        };
        /** simple validation just to ensure data is present and accounted for.
        */
        this.validateNewOrderPayment = function (newOrderPayment) {
            var newOrderPaymentErrors = {};
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.streetAddress')) {
                newOrderPaymentErrors['streetAddress'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.countrycode')) {
                newOrderPaymentErrors['countrycode'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.statecode')) {
                if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.locality')) {
                    newOrderPaymentErrors['statecode'] = 'Required *';
                }
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.city')) {
                if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.city')) {
                    newOrderPaymentErrors['city'] = 'Required *';
                }
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.locality')) {
                if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.statecode')) {
                    newOrderPaymentErrors['locality'] = 'Required *';
                }
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.billingAddress.postalcode')) {
                newOrderPaymentErrors['postalCode'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.nameOnCreditCard')) {
                newOrderPaymentErrors['nameOnCreditCard'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.expirationMonth')) {
                newOrderPaymentErrors['streetAddress'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.expirationYear')) {
                newOrderPaymentErrors['expirationYear'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.creditCardNumber')) {
                newOrderPaymentErrors['creditCardNumber'] = 'Required *';
            }
            if (_this.isUndefinedOrEmpty(newOrderPayment, 'newOrderPayment.securityCode')) {
                newOrderPaymentErrors['securityCode'] = 'Required *';
            }
            if (Object.keys(newOrderPaymentErrors).length) {
                //this.cart.orderPayments.hasErrors = true;
                //this.cart.orderPayments.errors = newOrderPaymentErrors;
            }
        };
        /** Allows an easy way to calling the service addOrderPayment.
        */
        this.addOrderPayment = function (formdata) {
            //reset the form errors.
            //Grab all the data
            var billingAddress = _this.newBillingAddress;
            var expirationMonth = formdata.month;
            var expirationYear = formdata.year;
            var country = formdata.country;
            var state = formdata.state;
            var accountFirst = _this.account.firstName;
            var accountLast = _this.account.lastName;
            var data = {};
            var processObject = _this.orderService.newOrder_AddOrderPayment();
            data = {
                'newOrderPayment.billingAddress.addressID': '',
                'newOrderPayment.billingAddress.streetAddress': billingAddress.streetAddress,
                'newOrderPayment.billingAddress.street2Address': billingAddress.street2Address,
                'newOrderPayment.nameOnCreditCard': billingAddress.nameOnCreditCard,
                'newOrderPayment.billingAddress.name': billingAddress.nameOnCreditCard,
                'newOrderPayment.expirationMonth': expirationMonth,
                'newOrderPayment.expirationYear': expirationYear,
                'newOrderPayment.billingAddress.countrycode': country || billingAddress.countrycode,
                'newOrderPayment.billingAddress.city': '' + billingAddress.city,
                'newOrderPayment.billingAddress.statecode': state || billingAddress.statecode,
                'newOrderPayment.billingAddress.locality': billingAddress.locality || '',
                'newOrderPayment.billingAddress.postalcode': billingAddress.postalcode,
                'newOrderPayment.securityCode': billingAddress.cvv,
                'newOrderPayment.creditCardNumber': billingAddress.cardNumber,
                'newOrderPayment.saveShippingAsBilling': (_this.saveShippingAsBilling == true),
            };
            //processObject.populate(data);
            //Make sure we have required fields for a newOrderPayment.
            _this.validateNewOrderPayment(data);
            if (_this.cart.orderPayments.hasErrors && Object.keys(_this.cart.orderPayments.errors).length) {
                return -1;
            }
            //Post the new order payment and set errors as needed.
            _this.doAction('addOrderPayment', data, 'post').then(function (result) {
                var serverData = result;
                if (serverData.cart.hasErrors || angular.isDefined(_this.cart.orderPayments[_this.cart.orderPayments.length - 1]['errors']) && !_this.cart.orderPayments[_this.cart.orderPayments.length - 1]['errors'].hasErrors) {
                    _this.cart.hasErrors = true;
                    _this.readyToPlaceOrder = true;
                    _this.edit = '';
                }
                else {
                    _this.editPayment = false;
                    _this.readyToPlaceOrder = true;
                    _this.edit = '';
                }
            });
        };
        /** Allows an easy way to calling the service addOrderPayment.
        */
        this.addGiftCardOrderPayments = function (redeemGiftCardToAccount) {
            //reset the form errors.
            _this.cart.hasErrors = false;
            _this.cart.orderPayments.errors = {};
            _this.cart.orderPayments.hasErrors = false;
            //Grab all the data
            var giftCards = _this.account.giftCards;
            var data = {};
            data = {
                'newOrderPayment.paymentMethod.paymentMethodID': '50d8cd61009931554764385482347f3a',
                'newOrderPayment.redeemGiftCardToAccount': redeemGiftCardToAccount,
            };
            //add the amounts from the gift cards
            for (var card in giftCards) {
                if (giftCards[card].applied == true) {
                    data['newOrderPayment.giftCardNumber'] = giftCards[card].giftCardCode;
                    if (giftCards[card].calculatedTotal < _this.cart.calculatedTotal) {
                        data['newOrderPayment.amount'] = giftCards[card].calculatedBalanceAmount; //will use once we have amount implemented.
                    }
                    else {
                        data['newOrderPayment.amount'] = _this.cart.calculatedTotal; //this is so it doesn't throw the 100% error
                    }
                    data['copyFromType'] = "";
                    //Post the new order payment and set errors as needed.
                    _this.$q.all([_this.doAction('addOrderPayment', data, 'post')]).then(function (result) {
                        var serverData;
                        if (angular.isDefined(result['0'])) {
                            serverData = result['0'].data;
                        }
                        if (serverData.cart.hasErrors || angular.isDefined(this.cart.orderPayments[this.cart.orderPayments.length - 1]['errors']) && !this.cart.orderPayments['' + (this.cart.orderPayments.length - 1)]['errors'].hasErrors) {
                            this.cart.hasErrors = true;
                            this.readyToPlaceOrder = true;
                            this.edit = '';
                        }
                        else {
                        }
                    });
                }
            }
        };
        /** Allows an easy way to calling the service addOrderPayment.
        */
        this.addOrderPaymentAndPlaceOrder = function (formdata) {
            //reset the form errors.
            _this.orderPlaced = false;
            //Grab all the data
            var billingAddress = _this.newBillingAddress;
            var expirationMonth = formdata.month;
            var expirationYear = formdata.year;
            var country = formdata.country;
            var state = formdata.state;
            var accountFirst = _this.account.firstName;
            var accountLast = _this.account.lastName;
            var data = {};
            data = {
                'orderid': _this.cart.orderID,
                'newOrderPayment.billingAddress.streetAddress': billingAddress.streetAddress,
                'newOrderPayment.billingAddress.street2Address': billingAddress.street2Address,
                'newOrderPayment.nameOnCreditCard': billingAddress.nameOnCard || accountFirst + ' ' + accountLast,
                'newOrderPayment.expirationMonth': expirationMonth,
                'newOrderPayment.expirationYear': expirationYear,
                'newOrderPayment.billingAddress.countrycode': country || billingAddress.countrycode,
                'newOrderPayment.billingAddress.city': '' + billingAddress.city,
                'newOrderPayment.billingAddress.statecode': state || billingAddress.statecode,
                'newOrderPayment.billingAddress.locality': billingAddress.locality || '',
                'newOrderPayment.billingAddress.postalcode': billingAddress.postalcode,
                'newOrderPayment.securityCode': billingAddress.cvv,
                'newOrderPayment.creditCardNumber': billingAddress.cardNumber,
                'newOrderPayment.saveShippingAsBilling': (_this.saveShippingAsBilling == true),
            };
            //Make sure we have required fields for a newOrderPayment.
            //this.validateNewOrderPayment( data );
            if (_this.cart.orderPayments.hasErrors && Object.keys(_this.cart.orderPayments.errors).length) {
                return -1;
            }
            //Post the new order payment and set errors as needed.
            _this.$q.all([_this.doAction('addOrderPayment,placeOrder', data, 'post')]).then(function (result) {
                var serverData;
                if (angular.isDefined(result['0'])) {
                    serverData = result['0'].data;
                }
                else {
                } //|| angular.isDefined(serverData.cart.orderPayments[serverData.cart.orderPayments.length-1]['errors']) && slatwall.cart.orderPayments[''+slatwall.cart.orderPayments.length-1]['errors'].hasErrors
                if (serverData.cart.hasErrors || (angular.isDefined(serverData.failureActions) && serverData.failureActions.length && serverData.failureActions[0] == "public:cart.addOrderPayment")) {
                    if (serverData.failureActions.length) {
                        for (var action in serverData.failureActions) {
                            //
                        }
                    }
                    this.edit = '';
                    return true;
                }
                else if (serverData.successfulActions.length) {
                    //
                    this.cart.hasErrors = false;
                    this.editPayment = false;
                    this.edit = '';
                    for (var action in serverData.successfulActions) {
                        //
                        if (serverData.successfulActions[action].indexOf("placeOrder") != -1) {
                            //if there are no errors then redirect.
                            this.orderPlaced = true;
                            this.redirectExact('/order-confirmation/');
                        }
                    }
                }
                else {
                    this.edit = '';
                }
            });
        };
        //Applies a giftcard from the user account onto the payment.
        this.applyGiftCard = function (giftCardCode) {
            _this.finding = true;
            //find the code already on the account.
            var found = false;
            for (var giftCard in _this.account.giftCards) {
                if (_this.account.giftCards[giftCard].balanceAmount == 0) {
                    _this.account.giftCards[giftCard]['error'] = "The balance is $0.00 for this card.";
                    found = false;
                }
                if (_this.account.giftCards[giftCard].giftCardCode == giftCardCode) {
                    _this.account.giftCards[giftCard].applied = true;
                    found = true;
                }
            }
            if (found) {
                _this.finding = false;
                _this.addGiftCardOrderPayments(false);
            }
            else {
                _this.finding = false;
                _this.addGiftCardOrderPayments(true);
            }
        };
        //returns the amount total of giftcards added to this account.
        this.getAppliedGiftCardTotals = function () {
            //
            var total = 0;
            for (var payment in _this.cart.orderPayments) {
                if (_this.cart.orderPayments[payment].giftCardNumber != "") {
                    total = total + parseInt(_this.cart.orderPayments[payment]['amount']);
                }
            }
            return total;
        };
        this.orderService = orderService;
        this.cartService = cartService;
        this.accountService = accountService;
        this.requestService = requestService;
        this.appConfig = appConfig;
        this.baseActionPath = this.appConfig.baseURL + "/index.cfm/api/scope/"; //default path
        this.confirmationUrl = "/order-confirmation";
        this.checkoutUrl = "/checkout";
        this.$http = $http;
        this.$location = $location;
        this.$q = $q;
        this.$injector = $injector;
        this.getExpirationYears();
        this.$window = $window;
        this.$hibachi = $hibachi;
        this.cart = this.cartService.newCart();
        this.account = this.accountService.newAccount();
        this.observerService = observerService;
        this.$timeout = $timeout;
    }
    PublicService.prototype.getOrderFulfillmentItemList = function (fulfillmentIndex) {
        return this.cart.orderFulfillments[fulfillmentIndex].orderFulfillmentItems.map(function (item) { return item.sku.skuName ? item.sku.skuName : item.sku.product.productName; }).join(', ');
    };
    //Use with bind, assigning 'this' as the temporary order item
    //a.k.a. slatwall.bind(tempOrderItem,slatwall.copyOrderItem,originalOrderItem);
    //gets you tempOrderItem.orderItem == originalOrderItem;
    PublicService.prototype.copyOrderItem = function (orderItem) {
        this.orderItem = { orderItemID: orderItem.orderItemID,
            quantity: orderItem.quantity };
        return this;
    };
    return PublicService;
}());
exports.PublicService = PublicService;


/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var RbKeyService = /** @class */ (function () {
    //@ngInject
    function RbKeyService($http, $q, appConfig, resourceBundles) {
        var _this = this;
        this.$http = $http;
        this.$q = $q;
        this.appConfig = appConfig;
        this.resourceBundles = resourceBundles;
        this._resourceBundle = {};
        this._resourceBundleLastModified = '';
        this._loadingResourceBundle = false;
        this._loadedResourceBundle = false;
        this.getRBLoaded = function () {
            return _this._loadedResourceBundle;
        };
        this.rbKey = function (key, replaceStringData) {
            ////$log.debug('rbkey');
            ////$log.debug(key);
            ////$log.debug(this.getConfig().rbLocale);
            var keyValue = _this.getRBKey(key, _this.appConfig.rbLocale);
            ////$log.debug(keyValue);
            return keyValue;
        };
        this.getRBKey = function (key, locale, checkedKeys, originalKey) {
            ////$log.debug('getRBKey');
            ////$log.debug('loading:'+this._loadingResourceBundle);
            ////$log.debug('loaded'+this._loadedResourceBundle);
            if (_this.resourceBundles) {
                key = key.toLowerCase();
                checkedKeys = checkedKeys || "";
                locale = locale || 'en_us';
                ////$log.debug('locale');
                ////$log.debug(locale);
                var keyListArray = key.split(',');
                ////$log.debug('keylistAray');
                ////$log.debug(keyListArray);
                if (keyListArray.length > 1) {
                    var keyValue = "";
                    for (var i = 0; i < keyListArray.length; i++) {
                        keyValue = _this.getRBKey(keyListArray[i], locale, keyValue);
                        //$log.debug('keyvalue:'+keyValue);
                        if (keyValue.slice(-8) != "_missing") {
                            break;
                        }
                    }
                    return keyValue;
                }
                var bundle = _this.resourceBundles[locale];
                if (angular.isDefined(bundle[key])) {
                    //$log.debug('rbkeyfound:'+bundle[key]);
                    return bundle[key];
                }
                var checkedKeysListArray = checkedKeys.split(',');
                checkedKeysListArray.push(key + '_' + locale + '_missing');
                checkedKeys = checkedKeysListArray.join(",");
                if (angular.isUndefined(originalKey)) {
                    originalKey = key;
                }
                //$log.debug('originalKey:'+key);
                //$log.debug(checkedKeysListArray);
                var localeListArray = locale.split('_');
                //$log.debug(localeListArray);
                if (localeListArray.length === 2) {
                    bundle = _this.resourceBundles[localeListArray[0]];
                    if (angular.isDefined(bundle[key])) {
                        //$log.debug('rbkey found:'+bundle[key]);
                        return bundle[key];
                    }
                    checkedKeysListArray.push(key + '_' + localeListArray[0] + '_missing');
                    checkedKeys = checkedKeysListArray.join(",");
                }
                var keyDotListArray = key.split('.');
                if (keyDotListArray.length >= 3
                    && keyDotListArray[keyDotListArray.length - 2] === 'define') {
                    var newKey = key.replace(keyDotListArray[keyDotListArray.length - 3] + '.define', 'define');
                    //$log.debug('newkey1:'+newKey);
                    return _this.getRBKey(newKey, locale, checkedKeys, originalKey);
                }
                else if (keyDotListArray.length >= 2 && keyDotListArray[keyDotListArray.length - 2] !== 'define') {
                    var newKey = key.replace(keyDotListArray[keyDotListArray.length - 2] + '.', 'define.');
                    //$log.debug('newkey:'+newKey);
                    return _this.getRBKey(newKey, locale, checkedKeys, originalKey);
                }
                //$log.debug(localeListArray);
                if (localeListArray[0] !== "en") {
                    return _this.getRBKey(originalKey, 'en', checkedKeys);
                }
                return checkedKeys;
            }
            return '';
        };
        this.$q = $q;
        this.$http = $http;
        this.appConfig = appConfig;
        this.resourceBundles = resourceBundles;
    }
    return RbKeyService;
}());
exports.RbKeyService = RbKeyService;


/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var adminrequest_1 = __webpack_require__(581);
var publicrequest_1 = __webpack_require__(582);
var RequestService = /** @class */ (function () {
    //@ngInject
    function RequestService($injector, observerService) {
        var _this = this;
        this.$injector = $injector;
        this.observerService = observerService;
        this.newAdminRequest = function (url, data, method, headers, $injector, observerService) {
            if (method === void 0) { method = "post"; }
            if (headers === void 0) { headers = { 'Content-Type': "application/json" }; }
            if ($injector === void 0) { $injector = _this.$injector; }
            if (observerService === void 0) { observerService = _this.observerService; }
            return new adminrequest_1.AdminRequest(url, data, method, headers, $injector, observerService);
        };
        this.newPublicRequest = function (url, data, method, headers, $injector, observerService) {
            if (method === void 0) { method = "post"; }
            if (headers === void 0) { headers = { 'Content-Type': "application/x-www-form-urlencoded" }; }
            if ($injector === void 0) { $injector = _this.$injector; }
            if (observerService === void 0) { observerService = _this.observerService; }
            return new publicrequest_1.PublicRequest(url, data, method, headers, $injector, observerService);
        };
        this.$injector = $injector;
        this.observerService = observerService;
    }
    return RequestService;
}());
exports.RequestService = RequestService;


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScopeService = /** @class */ (function () {
    //ngInject
    function ScopeService() {
        var _this = this;
        this.getRootParentScope = function (scope, targetScopeName) {
            var currentScope = scope;
            while (currentScope != null && angular.isUndefined(currentScope[targetScopeName])) {
                if (angular.isDefined(currentScope.$parent)) {
                    currentScope = currentScope.$parent;
                }
                else {
                    break;
                }
            }
            if (currentScope != null && angular.isDefined(currentScope[targetScopeName])) {
                return currentScope;
            }
        };
        this.hasParentScope = function (scope, targetScopeName) {
            if (_this.getRootParentScope(scope, targetScopeName) != null) {
                return true;
            }
            return false;
        };
    }
    return ScopeService;
}());
exports.ScopeService = ScopeService;


/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/*services return promises which can be handled uniquely based on success or failure by the controller*/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseservice_1 = __webpack_require__(61);
var SelectionService = /** @class */ (function (_super) {
    __extends(SelectionService, _super);
    //@ngInject
    function SelectionService(observerService) {
        var _this = _super.call(this) || this;
        _this.observerService = observerService;
        _this._selection = {};
        /* add current selectionid to main selection object*/
        _this.createSelections = function (selectionid) {
            _this._selection[selectionid] = {
                allSelected: false,
                ids: []
            };
        };
        _this.radioSelection = function (selectionid, selection) {
            _this.createSelections(selectionid);
            _this._selection[selectionid].ids.push(selection);
            _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'check', selectionid: selectionid, selection: selection });
        };
        _this.addSelection = function (selectionid, selection) {
            /*if allSelected flag is true addSelection will remove selection*/
            if (_this.isAllSelected(selectionid)) {
                var index = _this._selection[selectionid].ids.indexOf(selection);
                if (index > -1) {
                    _this._selection[selectionid].ids.splice(index, 1);
                    _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'check', selectionid: selectionid, selection: selection });
                }
            }
            else if (!_this.hasSelection(selectionid, selection)) {
                _this._selection[selectionid].ids.push(selection);
                _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'check', selectionid: selectionid, selection: selection });
            }
            console.info(_this._selection[selectionid]);
        };
        _this.setSelection = function (selectionid, selections) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                _this.createSelections(selectionid);
            }
            _this._selection[selectionid].ids = selections;
        };
        _this.removeSelection = function (selectionid, selection) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                return;
            }
            if (!_this.isAllSelected(selectionid)) {
                var index = _this._selection[selectionid].ids.indexOf(selection);
                if (index > -1) {
                    _this._selection[selectionid].ids.splice(index, 1);
                    _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'uncheck', selectionid: selectionid, selection: selection });
                }
                /*if allSelected flag is true removeSelection will add selection*/
            }
            else if (!_this.hasSelection(selectionid, selection)) {
                _this._selection[selectionid].ids.push(selection);
                _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'uncheck', selectionid: selectionid, selection: selection });
            }
            console.info(_this._selection[selectionid]);
        };
        _this.hasSelection = function (selectionid, selection) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                return false;
            }
            return _this._selection[selectionid].ids.indexOf(selection) > -1;
        };
        _this.getSelections = function (selectionid) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                _this.createSelections(selectionid);
            }
            return _this._selection[selectionid].ids;
        };
        _this.getSelectionCount = function (selectionid) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                _this.createSelections(selectionid);
            }
            return _this._selection[selectionid].ids.length;
        };
        _this.clearSelection = function (selectionid) {
            _this.createSelections(selectionid);
            _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'clear' });
            console.info(_this._selection[selectionid]);
        };
        _this.selectAll = function (selectionid) {
            _this._selection[selectionid] = {
                allSelected: true,
                ids: []
            };
            _this.observerService.notify('swSelectionToggleSelection' + selectionid, { action: 'selectAll' });
            console.info(_this._selection[selectionid]);
        };
        _this.isAllSelected = function (selectionid) {
            if (angular.isUndefined(_this._selection[selectionid])) {
                _this.createSelections(selectionid);
            }
            return _this._selection[selectionid].allSelected;
        };
        return _this;
    }
    return SelectionService;
}(baseservice_1.BaseService));
exports.SelectionService = SelectionService;


/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var baseentityservice_1 = __webpack_require__(14);
var SkuService = /** @class */ (function (_super) {
    __extends(SkuService, _super);
    //@ngInject
    function SkuService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Sku') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        return _this;
    }
    return SkuService;
}(baseentityservice_1.BaseEntityService));
exports.SkuService = SkuService;


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../../../../../node_modules/typescript/lib/lib.es6.d.ts" />
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var TypeaheadStore = __webpack_require__(170);
var TypeaheadService = /** @class */ (function () {
    //@ngInject
    function TypeaheadService($timeout, observerService) {
        var _this = this;
        this.$timeout = $timeout;
        this.observerService = observerService;
        this.typeaheadData = {};
        this.typeaheadPromises = {};
        //The state of the store
        this.typeaheadStates = {};
        this.state = {
            typeaheadInstances: this.typeaheadStates
        };
        /**
         * The reducer is responsible for modifying the state of the state object into a new state.
         */
        this.typeaheadStateReducer = function (state, action) {
            switch (action.type) {
                case 'TYPEAHEAD_QUERY':
                    //modify the state.
                    return __assign({}, state, { action: action });
                case 'TYPEAHEAD_USER_SELECTION':
                    //passthrough - no state change. anyone subscribed can handle this.
                    return __assign({}, state, { action: action });
                default:
                    return state;
            }
        };
        this.getTypeaheadSelectionUpdateEvent = function (key) {
            return "typeaheadSelectionUpdated" + key;
        };
        this.attachTypeaheadSelectionUpdateEvent = function (key, callback) {
            _this.observerService.attach(callback, _this.getTypeaheadSelectionUpdateEvent(key));
        };
        this.notifyTypeaheadSelectionUpdateEvent = function (key, data) {
            _this.observerService.notify(_this.getTypeaheadSelectionUpdateEvent(key), data);
        };
        this.setTypeaheadState = function (key, state) {
            _this.typeaheadStates[key] = state;
        };
        this.getTypeaheadState = function (key) {
            return _this.typeaheadStates[key];
        };
        this.getTypeaheadPrimaryIDPropertyName = function (key) {
            return _this.getTypeaheadState(key).primaryIDPropertyName;
        };
        this.getIndexOfSelection = function (key, data) {
            for (var j = 0; j < _this.getData(key).length; j++) {
                if (angular.isDefined(data[_this.getTypeaheadPrimaryIDPropertyName(key)]) &&
                    data[_this.getTypeaheadPrimaryIDPropertyName(key)] == _this.getData(key)[j][_this.getTypeaheadPrimaryIDPropertyName(key)]) {
                    return j;
                }
                else if (_this.checkAgainstFallbackProperties(key, _this.getData(key)[j], data)) {
                    return j;
                }
            }
            return -1;
        };
        this.addSelection = function (key, data) {
            if (angular.isUndefined(_this.typeaheadData[key])) {
                _this.typeaheadData[key] = [];
            }
            _this.typeaheadData[key].push(data);
            _this.notifyTypeaheadSelectionUpdateEvent(key, data);
        };
        this.removeSelection = function (key, index, data) {
            if (angular.isUndefined(index) &&
                angular.isDefined(data)) {
                index = _this.getIndexOfSelection(key, data);
            }
            if (angular.isDefined(index) &&
                angular.isDefined(_this.typeaheadData[key]) &&
                index != -1) {
                _this.updateSelections(key);
                var removedItem = _this.typeaheadData[key].splice(index, 1)[0]; //this will always be an array of 1 element
                _this.notifyTypeaheadSelectionUpdateEvent(key, removedItem);
                return removedItem;
            }
        };
        this.initializeSelections = function (key, selectedCollectionConfig) {
            selectedCollectionConfig.setAllRecords(true);
            _this.typeaheadPromises[key] = selectedCollectionConfig.getEntity();
            _this.typeaheadPromises[key].then(function (data) {
                for (var j = 0; j < data.records.length; j++) {
                    _this.addSelection(key, data.records[j]);
                }
            }, function (reason) {
                throw ("typeaheadservice had trouble intializing selections for " + key + " because " + reason);
            });
        };
        this.updateSelections = function (key) {
            if (angular.isDefined(_this.getData(key)) && _this.getData(key).length) {
                for (var j = 0; j < _this.getTypeaheadState(key).results.length; j++) {
                    for (var i = 0; i < _this.getData(key).length; i++) {
                        if (_this.getData(key)[i][_this.getTypeaheadPrimaryIDPropertyName(key)] == _this.getTypeaheadState(key).results[j][_this.getTypeaheadPrimaryIDPropertyName(key)]) {
                            _this.markResultSelected(_this.getTypeaheadState(key).results[j], i);
                            break;
                        }
                        var found = _this.checkAgainstFallbackProperties(key, _this.getData(key)[i], _this.getTypeaheadState(key).results[j], i);
                        if (found) {
                            break;
                        }
                    }
                }
            }
        };
        this.markResultSelected = function (result, index) {
            result.selected = true;
            result.selectedIndex = index;
        };
        this.checkAgainstFallbackProperties = function (key, selection, result, selectionIndex) {
            var resultPrimaryID = result[_this.getTypeaheadPrimaryIDPropertyName(key)];
            //is there a singular property to compare against
            if (angular.isDefined(_this.getTypeaheadState(key).propertyToCompare) &&
                _this.getTypeaheadState(key).propertyToCompare.length) {
                if (angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare]) &&
                    selection[_this.getTypeaheadState(key).propertyToCompare] == resultPrimaryID) {
                    if (angular.isDefined(selectionIndex)) {
                        _this.markResultSelected(result, selectionIndex);
                    }
                    return true;
                }
                if (angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare]) &&
                    angular.isDefined(result[_this.getTypeaheadState(key).propertyToCompare]) &&
                    selection[_this.getTypeaheadState(key).propertyToCompare] == result[_this.getTypeaheadState(key).propertyToCompare]) {
                    if (angular.isDefined(selectionIndex)) {
                        _this.markResultSelected(result, selectionIndex);
                    }
                    return true;
                }
            }
            //check the defined fallback properties to see if theres a match
            if (_this.getTypeaheadState(key).fallbackPropertyArray.length > 0) {
                for (var j = 0; j < _this.getTypeaheadState(key).fallbackPropertyArray.length; j++) {
                    var property = _this.getTypeaheadState(key).fallbackPropertyArray[j];
                    if (angular.isDefined(selection[property])) {
                        if (selection[property] == resultPrimaryID) {
                            if (angular.isDefined(selectionIndex)) {
                                _this.markResultSelected(result, selectionIndex);
                            }
                            return true;
                        }
                        if (angular.isDefined(result[property]) &&
                            selection[property] == result[property]) {
                            if (angular.isDefined(selectionIndex)) {
                                _this.markResultSelected(result, selectionIndex);
                            }
                            return true;
                        }
                    }
                }
            }
            return false;
        };
        this.updateSelectionList = function (key) {
            var selectionIDArray = [];
            if (angular.isDefined(_this.getData(key))) {
                for (var j = 0; j < _this.getData(key).length; j++) {
                    var selection = _this.getData(key)[j];
                    var primaryID = selection[_this.getTypeaheadPrimaryIDPropertyName(key)];
                    if (angular.isDefined(primaryID)) {
                        selectionIDArray.push(primaryID);
                    }
                    else if (angular.isDefined(_this.getTypeaheadState(key).propertyToCompare) &&
                        angular.isDefined(selection[_this.getTypeaheadState(key).propertyToCompare])) {
                        selectionIDArray.push(selection[_this.getTypeaheadState(key).propertyToCompare]);
                    }
                    else if (angular.isDefined(_this.getTypeaheadState(key).fallbackPropertyArray)) {
                        var fallbackPropertyArray = _this.getTypeaheadState(key).fallbackPropertyArray;
                        for (var i = 0; i < fallbackPropertyArray.length; i++) {
                            var fallbackProperty = fallbackPropertyArray[i];
                            if (angular.isDefined(selection[fallbackProperty])) {
                                selectionIDArray.push(selection[fallbackProperty]);
                                break;
                            }
                        }
                    }
                }
            }
            return selectionIDArray.join(",");
        };
        this.getData = function (key) {
            if (key in _this.typeaheadPromises) {
                //wait until it's been intialized
                _this.typeaheadPromises[key].then().finally(function () {
                    return _this.typeaheadData[key] || [];
                });
                delete _this.typeaheadPromises[key];
            }
            else {
                return _this.typeaheadData[key] || [];
            }
        };
        //strips out dangerous directives that cause infinite compile errors 
        // - this probably belongs in a different service but is used for typeahead only at the moment
        this.stripTranscludedContent = function (transcludedContent) {
            for (var i = 0; i < transcludedContent.length; i++) {
                if (angular.isDefined(transcludedContent[i].localName) &&
                    transcludedContent[i].localName == 'ng-transclude') {
                    transcludedContent = transcludedContent.children();
                }
            }
            //prevent collection config from being recompiled
            for (var i = 0; i < transcludedContent.length; i++) {
                if (angular.isDefined(transcludedContent[i].localName) &&
                    transcludedContent[i].localName == 'sw-collection-config') {
                    transcludedContent.splice(i, 1);
                }
            }
            return transcludedContent;
        };
        this.typeaheadStore = new TypeaheadStore.IStore(this.state, this.typeaheadStateReducer); //.combineLatest(this.loggerEpic)
    }
    return TypeaheadService;
}());
exports.TypeaheadService = TypeaheadService;


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/*services return promises which can be handled uniquely based on success or failure by the controller*/
var baseservice_1 = __webpack_require__(61);
var UtilityService = /** @class */ (function (_super) {
    __extends(UtilityService, _super);
    //@ngInject
    function UtilityService($parse) {
        var _this = _super.call(this) || this;
        _this.$parse = $parse;
        _this.structKeyExists = function (struct, key) {
            return key in struct;
        };
        _this.keyToAttributeString = function (key) {
            var attributeString = "data-";
            for (var i = 0; i < key.length; i++) {
                if (key.charAt(i) == "_") {
                    attributeString += "-";
                }
                else if (_this.isUpperCase(key.charAt(i))) {
                    //special case for ID and Acronyms because it doesn't follow naming conventions
                    if (i + 1 <= key.length && _this.isUpperCase(key.charAt(i + 1))) {
                        if (key.charAt(i) + key.charAt(i + 1) == "ID") {
                            attributeString += "-id";
                            i++; //skip ahead
                        }
                        else if (_this.isUpperCase(key.charAt(i + 1))) {
                            attributeString += "-";
                            //this handles acronyms IE QATS 
                            while (i + 1 <= key.length && _this.isUpperCase(key.charAt(i + 1))) {
                                attributeString += key.charAt(i).toLowerCase();
                                i++;
                            }
                        }
                    }
                    else {
                        attributeString += "-" + key.charAt(i).toLowerCase();
                    }
                }
                else {
                    attributeString += key.charAt(i);
                }
            }
            return attributeString;
        };
        _this.isUpperCase = function (character) {
            return character == character.toUpperCase();
        };
        _this.isLowerCase = function (character) {
            return character == character.toLowerCase();
        };
        _this.snakeToCapitalCase = function (s) {
            return s.charAt(0).toUpperCase() + s.replace(/(\-\w)/g, function (m) { return m[1].toUpperCase(); }).slice(1);
        };
        _this.camelCaseToSnakeCase = function (s) {
            return s.replace(/([A-Z])/g, function ($1) { return "-" + $1.toLowerCase(); });
        };
        _this.replaceStringWithProperties = function (stringItem, context) {
            var properties = _this.getPropertiesFromString(stringItem);
            if (!properties)
                return;
            var data = [];
            angular.forEach(properties, function (property) {
                if (property.indexOf('.') != -1) {
                    property = property.replace('.', '_');
                }
                var parseFunction = _this.$parse(property);
                data.push(parseFunction(context));
            });
            return _this.replacePropertiesWithData(stringItem, data);
        };
        //used to do inheritance at runtime
        _this.extend = function (ChildClass, ParentClass) {
            ChildClass.prototype = new ParentClass();
            ChildClass.prototype.constructor = ChildClass;
        };
        _this.getQueryParamsFromUrl = function (url) {
            // This function is anonymous, is executed immediately and
            // the return value is assigned to QueryString!
            var query_string = {};
            if (url && url.split) {
                var spliturl = url.split('?');
                if (spliturl.length) {
                    url = spliturl[1];
                    if (url && url.split) {
                        var vars = url.split("&");
                        if (vars && vars.length) {
                            for (var i = 0; i < vars.length; i++) {
                                var pair = vars[i].split("=");
                                // If first entry with this name
                                if (typeof query_string[pair[0]] === "undefined") {
                                    query_string[pair[0]] = pair[1];
                                    // If second entry with this name
                                }
                                else if (typeof query_string[pair[0]] === "string") {
                                    var arr = [query_string[pair[0]], pair[1]];
                                    query_string[pair[0]] = arr;
                                    // If third or later entry with this name
                                }
                                else {
                                    query_string[pair[0]].push(pair[1]);
                                }
                            }
                        }
                    }
                }
            }
            return query_string;
        };
        _this.isAngularRoute = function () {
            return /[\?&]ng#!/.test(window.location.href);
        };
        _this.ArrayFindByPropertyValue = function (arr, property, value) {
            var currentIndex = -1;
            arr.forEach(function (arrItem, index) {
                if (arrItem[property] && arrItem[property] === value) {
                    currentIndex = index;
                }
            });
            return currentIndex;
        };
        _this.listLast = function (list, delimiter) {
            if (list === void 0) { list = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var listArray = list.split(delimiter);
            return listArray[listArray.length - 1];
        };
        _this.listRest = function (list, delimiter) {
            if (list === void 0) { list = ''; }
            if (delimiter === void 0) { delimiter = ","; }
            var listArray = list.split(delimiter);
            if (listArray.length) {
                listArray.splice(0, 1);
            }
            return listArray.join(delimiter);
        };
        _this.listFirst = function (list, delimiter) {
            if (list === void 0) { list = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var listArray = list.split(delimiter);
            return listArray[0];
        };
        _this.listPrepend = function (list, substring, delimiter) {
            if (list === void 0) { list = ''; }
            if (substring === void 0) { substring = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var listArray = list.split(delimiter);
            if (listArray.length) {
                return substring + delimiter + list;
            }
            else {
                return substring;
            }
        };
        _this.listAppend = function (list, substring, delimiter) {
            if (list === void 0) { list = ''; }
            if (substring === void 0) { substring = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var listArray = list.split(delimiter);
            if (list.trim() != '' && listArray.length) {
                return list + delimiter + substring;
            }
            else {
                return substring;
            }
        };
        _this.listAppendUnique = function (list, substring, delimiter) {
            if (list === void 0) { list = ''; }
            if (substring === void 0) { substring = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var listArray = list.split(delimiter);
            if (list.trim() != '' && listArray.length && listArray.indexOf(substring) == -1) {
                return list + delimiter + substring;
            }
            else {
                return substring;
            }
        };
        /**
         * Removes a substring from a string.
         * str: The original string.
         * subStr: The string to remove.
         * returns the modified string.
         */
        _this.listRemove = function (str, substring) {
            if (str.indexOf(substring) != -1) {
                //remove it cause its no longer selected.
                str = str.replace(substring, "");
                str = str.replace(",,", "");
                if (str == ",") {
                    str = "";
                }
                if (str.substring(0, 1) == ',') {
                    str = str.substring(1);
                }
                str = str.substring(0, str.length - 1);
            }
            return str;
        };
        _this.formatValue = function (value, formatType, formatDetails, entityInstance) {
            if (angular.isUndefined(formatDetails)) {
                formatDetails = {};
            }
            var typeList = ["currency", "date", "datetime", "pixels", "percentage", "second", "time", "truefalse", "url", "weight", "yesno"];
            if (typeList.indexOf(formatType)) {
                _this['format_' + formatType](value, formatDetails, entityInstance);
            }
            return value;
        };
        _this.format_currency = function (value, formatDetails, entityInstance) {
            if (angular.isUndefined) {
                formatDetails = {};
            }
        };
        _this.format_date = function (value, formatDetails, entityInstance) {
            if (angular.isUndefined) {
                formatDetails = {};
            }
        };
        _this.format_datetime = function (value, formatDetails, entityInstance) {
            if (angular.isUndefined) {
                formatDetails = {};
            }
        };
        _this.format_pixels = function (value, formatDetails, entityInstance) {
            if (angular.isUndefined) {
                formatDetails = {};
            }
        };
        _this.format_yesno = function (value, formatDetails, entityInstance) {
            if (angular.isUndefined) {
                formatDetails = {};
            }
            if (Boolean(value) === true) {
                return entityInstance.metaData.$$getRBKey("define.yes");
            }
            else if (value === false || value.trim() === 'No' || value.trim === 'NO' || value.trim() === '0') {
                return entityInstance.metaData.$$getRBKey("define.no");
            }
        };
        _this.left = function (stringItem, count) {
            return stringItem.substring(0, count);
        };
        _this.right = function (stringItem, count) {
            return stringItem.substring(stringItem.length - count, stringItem.length);
        };
        //this.utilityService.mid(propertyIdentifier,1,propertyIdentifier.lastIndexOf('.'));
        _this.mid = function (stringItem, start, count) {
            var end = start + count;
            return stringItem.substring(start, end);
        };
        _this.getPropertiesFromString = function (stringItem) {
            if (!stringItem)
                return;
            var capture = false;
            var property = '';
            var results = [];
            for (var i = 0; i < stringItem.length; i++) {
                if (!capture && stringItem.substr(i, 2) == "${") {
                    property = '';
                    capture = true;
                    i = i + 1; //skip the ${
                }
                else if (capture && stringItem[i] != '}') {
                    property = property.concat(stringItem[i]);
                }
                else if (capture) {
                    results.push(property);
                    capture = false;
                }
            }
            return results;
        };
        _this.replacePropertiesWithData = function (stringItem, data) {
            var results = _this.getPropertiesFromString(stringItem);
            for (var i = 0; i < results.length; i++) {
                stringItem = stringItem.replace('${' + results[i] + '}', data[i]);
            }
            return stringItem;
        };
        _this.replaceAll = function (stringItem, find, replace) {
            return stringItem.replace(new RegExp(_this.escapeRegExp(find), 'g'), replace);
        };
        _this.escapeRegExp = function (stringItem) {
            return stringItem.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
        };
        _this.createID = function (count) {
            var count = count || 26;
            var text = "";
            var firstPossibleCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
            var nextPossibleCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            var currentPossibleCharacters = "";
            for (var i = 0; i < count; i++) {
                if (i === 0) {
                    currentPossibleCharacters = firstPossibleCharacters;
                }
                else {
                    currentPossibleCharacters = nextPossibleCharacters;
                }
                text += currentPossibleCharacters.charAt(Math.floor(Math.random() * currentPossibleCharacters.length));
            }
            return text;
        };
        //list functions
        _this.arrayToList = function (array, delimiter) {
            if (delimiter != null) {
                return array.join(delimiter);
            }
            else {
                return array.join();
            }
        };
        _this.getPropertyValue = function (object, propertyIdentifier) {
            var keys = propertyIdentifier.split('.'), obj = object, keyPart;
            while ((keyPart = keys.shift()) && keys.length) {
                obj = obj[keyPart];
            }
            return obj[keyPart];
        };
        _this.setPropertyValue = function (object, propertyIdentifier, value) {
            var keys = propertyIdentifier.split('.'), obj = object, keyPart;
            while ((keyPart = keys.shift()) && keys.length) {
                if (!obj[keyPart]) {
                    obj[keyPart] = {};
                }
                obj = obj[keyPart];
            }
            obj[keyPart] = value;
        };
        _this.nvpToObject = function (NVPData) {
            var object = {};
            for (var key in NVPData) {
                var value = NVPData[key];
                var propertyIdentitifer = key.replace(/\_/g, '.');
                _this.setPropertyValue(object, propertyIdentitifer, value);
            }
            return object;
        };
        _this.isDescendantElement = function (parent, child) {
            var node = child.parentNode;
            while (node != null) {
                if (node == parent) {
                    return true;
                }
                node = node.parentNode;
            }
            return false;
        };
        //utility service toJson avoids circular references
        _this.toJson = function (obj) {
            var seen = [];
            return JSON.stringify(obj, function (key, val) {
                if (val != null && typeof val == "object") {
                    if (seen.indexOf(val) >= 0) {
                        return;
                    }
                    seen.push(val);
                }
                return val;
            });
        };
        _this.listFind = function (list, value, delimiter) {
            if (list === void 0) { list = ''; }
            if (value === void 0) { value = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var splitString = list.split(delimiter);
            var stringFound = -1;
            for (var i = 0; i < splitString.length; i++) {
                var stringPart = splitString[i];
                if (stringPart === value) {
                    stringFound = i;
                }
            }
            return stringFound;
        };
        _this.listLen = function (list, delimiter) {
            if (list === void 0) { list = ''; }
            if (delimiter === void 0) { delimiter = ','; }
            var splitString = list.split(delimiter);
            return splitString.length;
        };
        //This will enable you to sort by two separate keys in the order they are passed in
        _this.arraySorter = function (array, keysToSortBy) {
            var arrayOfTypes = [], returnArray = [], firstKey = keysToSortBy[0];
            if (angular.isDefined(keysToSortBy[1])) {
                var secondKey = keysToSortBy[1];
            }
            for (var itemIndex in array) {
                if (!(arrayOfTypes.indexOf(array[itemIndex][firstKey]) > -1)) {
                    arrayOfTypes.push(array[itemIndex][firstKey]);
                }
            }
            arrayOfTypes.sort(function (a, b) {
                if (a < b) {
                    return -1;
                }
                else if (a > b) {
                    return 1;
                }
                else {
                    return 0;
                }
            });
            for (var typeIndex in arrayOfTypes) {
                var tempArray = [];
                for (var itemIndex in array) {
                    if (array[itemIndex][firstKey] == arrayOfTypes[typeIndex]) {
                        tempArray.push(array[itemIndex]);
                    }
                }
                if (keysToSortBy[1] != null) {
                    tempArray.sort(function (a, b) {
                        if (a[secondKey] < b[secondKey]) {
                            return -1;
                        }
                        else if (a[secondKey] > b[secondKey]) {
                            return 1;
                        }
                        else {
                            return 0;
                        }
                    });
                }
                for (var finalIndex in tempArray) {
                    returnArray.push(tempArray[finalIndex]);
                }
            }
            return returnArray;
        };
        _this.minutesOfDay = function (m) {
            return m.getMinutes() + m.getHours() * 60;
        };
        _this.removeTimeOffset = function (timestampStr) {
            var date = new Date(timestampStr);
            var correctDate = new Date();
            correctDate.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());
            return correctDate.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
        };
        return _this;
    }
    return UtilityService;
}(baseservice_1.BaseService));
exports.UtilityService = UtilityService;


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var PageDialogController = /** @class */ (function () {
    //@ngInject
    function PageDialogController($scope, $location, $anchorScroll, dialogService) {
        $scope.$id = 'pageDialogController';
        //get url param to retrieve collection listing
        $scope.pageDialogs = dialogService.getPageDialogs();
        $scope.scrollToTopOfDialog = function () {
            $location.hash('/#topOfPageDialog');
            $anchorScroll();
        };
        $scope.pageDialogStyle = { "z-index": 3000 };
    }
    return PageDialogController;
}());
exports.PageDialogController = PageDialogController;


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DialogService = /** @class */ (function () {
    function DialogService(hibachiPathBuilder) {
        var _this = this;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.get = function () {
            return _this._pageDialogs || [];
        };
        this.addPageDialog = function (name, params) {
            var newDialog = {
                'path': name + '.html',
                'params': params
            };
            _this._pageDialogs.push(newDialog);
        };
        this.removePageDialog = function (index) {
            _this._pageDialogs.splice(index, 1);
        };
        this.getPageDialogs = function () {
            return _this._pageDialogs;
        };
        this.removeCurrentDialog = function () {
            _this._pageDialogs.splice(_this._pageDialogs.length - 1, 1);
        };
        this.getCurrentDialog = function () {
            return _this._pageDialogs[_this._pageDialogs.length - 1];
        };
        this._pageDialogs = [];
        this.hibachiPathBuilder = hibachiPathBuilder;
    }
    DialogService.$inject = [
        'hibachiPathBuilder'
    ];
    return DialogService;
}());
exports.DialogService = DialogService;


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDetail = /** @class */ (function () {
    function SWDetail($location, $log, $hibachi, coreEntityPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath) + '/detail.html',
            link: function (scope, element, attr) {
                scope.$id = "slatwallDetailController";
                $log.debug('slatwallDetailController');
                /*Sets the view dirty on save*/
                scope.setDirty = function (entity) {
                    angular.forEach(entity.forms, function (form) {
                        form.$setSubmitted();
                    });
                };
                var setupMetaData = function () {
                    scope[scope.entityName.toLowerCase()] = scope.entity;
                    scope.entity.metaData.$$getDetailTabs().then(function (value) {
                        scope.detailTabs = value.data;
                        $log.debug('detailtabs');
                        $log.debug(scope.detailTabs);
                    });
                };
                var propertyCasedEntityName = scope.entityName.charAt(0).toUpperCase() + scope.entityName.slice(1);
                scope.tabPartialPath = hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath);
                scope.getEntity = function () {
                    if (scope.entityID === 'create') {
                        scope.createMode = true;
                        scope.entity = $hibachi['new' + propertyCasedEntityName]();
                        setupMetaData();
                    }
                    else {
                        scope.createMode = false;
                        var entityPromise = $hibachi['get' + propertyCasedEntityName]({ id: scope.entityID });
                        entityPromise.promise.then(function () {
                            scope.entity = entityPromise.value;
                            setupMetaData();
                        });
                    }
                };
                scope.getEntity();
                scope.deleteEntity = function () {
                    var deletePromise = scope.entity.$$delete();
                    deletePromise.then(function () {
                        $location.path('/entity/' + propertyCasedEntityName + '/');
                    });
                };
                scope.allTabsOpen = false;
            }
        };
    }
    SWDetail.Factory = function () {
        var directive = function ($location, $log, $hibachi, coreEntityPartialsPath, hibachiPathBuilder) { return new SWDetail($location, $log, $hibachi, coreEntityPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$location',
            '$log',
            '$hibachi',
            'coreEntityPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDetail;
}());
exports.SWDetail = SWDetail;


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWDetailTabs = /** @class */ (function () {
    function SWDetailTabs(coreEntityPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath) + 'detailtabs.html',
            link: function (scope, element, attr) {
            }
        };
    }
    SWDetailTabs.Factory = function () {
        var directive = function (coreEntityPartialsPath, hibachiPathBuilder) { return new SWDetailTabs(coreEntityPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'coreEntityPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWDetailTabs;
}());
exports.SWDetailTabs = SWDetailTabs;


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWList = /** @class */ (function () {
    function SWList($log, coreEntityPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(coreEntityPartialsPath) + '/list.html',
            link: function (scope, element, attr) {
                $log.debug('slatwallList init');
                //scope.getCollection = function(){
                //
                //	var pageShow = 50;
                //	if(scope.pageShow !== 'Auto'){
                //		pageShow = scope.pageShow;
                //	}
                //	scope.entityName = scope.entityName.charAt(0).toUpperCase()+scope.entityName.slice(1);
                //	var collectionListingPromise = $hibachi.getEntity(scope.entityName, {currentPage:scope.currentPage, pageShow:pageShow, keywords:scope.keywords});
                //	collectionListingPromise.then(function(value){
                //		scope.collection = value;
                //		scope.collectionConfig = angular.fromJson(scope.collection.collectionConfig);
                //	});
                //};
                //scope.getCollection();
            }
        };
    }
    SWList.Factory = function () {
        var directive = function ($log, coreEntityPartialsPath, hibachiPathBuilder) { return new SWList($log, coreEntityPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'coreEntityPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWList;
}());
exports.SWList = SWList;


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var OtherWiseController = /** @class */ (function () {
    //@ngInject
    function OtherWiseController($scope) {
        $scope.$id = "otherwiseController";
    }
    return OtherWiseController;
}());
exports.OtherWiseController = OtherWiseController;


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var RouterController = /** @class */ (function () {
    //@ngInject
    function RouterController($scope, $routeParams, $location, $log, utilityService) {
        $scope.$id = "routerController";
        $scope.partialRoute = '';
        $log.debug($routeParams);
        $log.debug($location);
        var path = $location.path();
        $scope.controllerType = path.split('/')[1];
        var type;
        if ($scope.controllerType === 'entity') {
            //remove all dashes
            $scope.entityName = utilityService.snakeToCapitalCase($routeParams.entityName);
            if (angular.isDefined($routeParams.entityID)) {
                $scope.entityID = $routeParams.entityID || '';
            }
        }
    }
    return RouterController;
}());
exports.RouterController = RouterController;


/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
//services
// import {AccountService} from "./services/accountservice";
// import {CartService} from "./services/cartservice";
// import {UtilityService} from "./services/utilityservice";
// import {SelectionService} from "./services/selectionservice";
// import {ObserverService} from "./services/observerservice";
// import {FormService} from "./services/formservice";
// import {MetaDataService} from "./services/metadataservice";
//controllers
var otherwisecontroller_1 = __webpack_require__(616);
var routercontroller_1 = __webpack_require__(617);
//directives
var swdetailtabs_1 = __webpack_require__(614);
var swdetail_1 = __webpack_require__(613);
var swlist_1 = __webpack_require__(615);
var core_module_1 = __webpack_require__(16);
var entitymodule = angular.module('hibachi.entity', ['ngRoute', core_module_1.coremodule.name])
    .config(['$routeProvider', '$injector', '$locationProvider', 'appConfig',
    function ($routeProvider, $injector, $locationProvider, appConfig) {
        //detect if we are in hashbang mode
        var vars = {};
        var parts = window.location.href.replace(/[?&]+([^=&]+)#([^/]*)/gi, function (m, key, value) {
            vars[key] = value;
        });
        if (vars.ng) {
            $locationProvider.html5Mode(false).hashPrefix('!');
        }
        var snakeToCapitalCase = function (s) {
            return s.charAt(0).toUpperCase() + s.replace(/(\-\w)/g, function (m) { return m[1].toUpperCase(); }).slice(1);
        };
        $routeProvider.when('/entity/:entityName/', {
            template: function (params) {
                var entityDirectiveExists = $injector.has('sw' + snakeToCapitalCase(params.entityName) + 'ListDirective');
                if (entityDirectiveExists) {
                    return '<sw-' + params.entityName.toLowerCase() + '-list></sw-' + params.entityName.toLowerCase() + '-list>';
                }
                else {
                    return '<sw-list></sw-list>';
                }
            },
            controller: 'routerController'
        }).when('/entity/:entityName/:entityID', {
            template: function (params) {
                var entityDirectiveExists = $injector.has('sw' + snakeToCapitalCase(params.entityName) + 'DetailDirective');
                if (entityDirectiveExists) {
                    return '<sw-' + params.entityName.toLowerCase() + '-detail></sw-' + params.entityName.toLowerCase() + '-detail>';
                }
                else {
                    return '<sw-detail></sw-detail>';
                }
            },
            controller: 'routerController',
        });
        //        .otherwise({
        //         //controller:'otherwiseController'
        //         templateUrl: appConfig.baseURL + '/admin/client/js/partials/otherwise.html',
        //     });
    }])
    .constant('coreEntityPartialsPath', 'entity/components/')
    //services
    //controllers
    .controller('otherwiseController', otherwisecontroller_1.OtherWiseController)
    .controller('routerController', routercontroller_1.RouterController)
    //filters
    //directives
    .directive('swDetail', swdetail_1.SWDetail.Factory())
    .directive('swDetailTabs', swdetailtabs_1.SWDetailTabs.Factory())
    .directive('swList', swlist_1.SWList.Factory());
exports.entitymodule = entitymodule;


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWAddressFormController = /** @class */ (function () {
    //@ngInject
    function SWAddressFormController($scope, $log, observerService, $rootScope) {
        var _this = this;
        this.$scope = $scope;
        this.$log = $log;
        this.observerService = observerService;
        this.$rootScope = $rootScope;
        this.showAddressBookSelect = false;
        this.showCountrySelect = true;
        this.showSubmitButton = true;
        this.showCloseButton = true;
        this.param = "?slataction=";
        this.showAlerts = "true";
        this.getAction = function () {
            if (!angular.isDefined(_this.action)) {
                _this.action = "addAddress";
            }
            if (_this.action.indexOf(":") != -1 && _this.action.indexOf(_this.param) == -1) {
                _this.action = _this.param + _this.action;
            }
            return _this.action;
        };
        this.hasField = function (field) {
            if (_this.fieldList.indexOf(field) != -1) {
                return true;
            }
            return false;
        };
        this.submitKeyCheck = function (event) {
            if (event.form.$name == _this.addressName &&
                event.event.keyCode == 13) {
                event.swForm.submit(event.swForm.action);
            }
        };
        //if exists, just name it slatwall.
        if (angular.isDefined(this.slatwallScope)) {
            this.slatwall = this.slatwallScope;
        }
        if (this.fieldList == undefined) {
            this.fieldList = "countryCode,name,company,streetAddress,street2Address,locality,city,stateCode,postalCode";
        }
        if (this.showAddressBookSelect == undefined) {
            this.showAddressBookSelect = false;
        }
        if (this.showCountrySelect == undefined) {
            this.showCountrySelect = true;
        }
        if (this.action == undefined) {
            this.showSubmitButton = false;
        }
        if ($rootScope.slatwall && !$scope.slatwall) {
            $scope.slatwall = $rootScope.slatwall;
        }
        var addressName = this.addressName;
        if (this.address) {
            this.address.getData = function () {
                var formData = _this.address || {};
                var form = _this.address.forms[addressName];
                for (var key_1 in form) {
                    var val = form[key_1];
                    if (typeof val === 'object' && val.hasOwnProperty('$modelValue')) {
                        if (val.$modelValue) {
                            val = val.$modelValue;
                        }
                        else if (val.$viewValue) {
                            val = val.$viewValue;
                        }
                        else {
                            val = "";
                        }
                        if (angular.isString(val)) {
                            formData[key_1] = val;
                        }
                        if (val.$modelValue) {
                            formData[key_1] = val.$modelValue;
                        }
                        else if (val.$viewValue) {
                            formData[key_1] = val.$viewValue;
                        }
                    }
                }
                return formData || "";
            };
        }
        if (!this.eventListeners) {
            this.eventListeners = {};
        }
        if (this.submitOnEnter) {
            this.eventListeners.keyup = this.submitKeyCheck;
        }
        if (this.eventListeners) {
            for (var key in this.eventListeners) {
                observerService.attach(this.eventListeners[key], key);
            }
        }
    }
    return SWAddressFormController;
}());
exports.SWAddressFormController = SWAddressFormController;
var SWAddressForm = /** @class */ (function () {
    // @ngInject
    function SWAddressForm(coreFormPartialsPath, hibachiPathBuilder) {
        var _this = this;
        this.coreFormPartialsPath = coreFormPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.transclude = true;
        this.controller = SWAddressFormController;
        this.controllerAs = 'SwAddressForm';
        this.bindToController = {
            action: '@',
            actionText: '@',
            context: '@',
            customPartial: '@',
            slatwallScope: '=',
            address: "=",
            id: "@?",
            fieldNamePrefix: "@",
            fieldList: "@",
            fieldClass: "@",
            fulfillmentIndex: "@",
            tabIndex: "@",
            addressName: "@",
            showAddressBookSelect: "@",
            showCountrySelect: "@",
            showSubmitButton: "@",
            showCloseButton: "@",
            showAlerts: "@",
            eventListeners: "=?",
            submitOnEnter: "@",
            stateOptions: "=?"
        };
        this.scope = {};
        this.templateUrl = function (elem, attrs) {
            if (attrs.customPartial) {
                if (attrs.customPartial === "true") {
                    return hibachiConfig.customPartialsPath + "addressform.html";
                }
                else {
                    return hibachiConfig.customPartialsPath + attrs.customPartial;
                }
            }
            else {
                return _this.hibachiPathBuilder.buildPartialsPath(_this.coreFormPartialsPath) + "addressform.html";
            }
        };
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWAddressForm.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWAddressForm(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = ['coreFormPartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWAddressForm;
}());
exports.SWAddressForm = SWAddressForm;


/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWErrorDisplayController = /** @class */ (function () {
    //@ngInject
    function SWErrorDisplayController($injector) {
        this.$injector = $injector;
        this.$injector = $injector;
    }
    SWErrorDisplayController.prototype.$onInit = function () {
        /**
         if a css error class was passed to propertyDisplay, attach to form
         which will apply it to the dynamically generateddiv that contains
         the error message
        **/
        if (this.swfPropertyDisplay && this.swfPropertyDisplay.errorClass) {
            this.swForm.errorClass = this.swfPropertyDisplay.errorClass;
        }
        var bindToControllerProps = this.$injector.get('swErrorDisplayDirective')[0].bindToController;
        for (var i in bindToControllerProps) {
            if (!this[i] && i !== 'name') {
                if (!this[i] && this.swPropertyDisplay && this.swPropertyDisplay[i]) {
                    this[i] = this.swPropertyDisplay[i];
                }
                else if (!this[i] && this.swfPropertyDisplay && this.swfPropertyDisplay[i]) {
                    this[i] = this.swfPropertyDisplay[i];
                }
                else if (!this[i] && this.swForm && this.swForm[i]) {
                    this[i] = this.swForm[i];
                }
            }
        }
        this.property = this.property || this.propertyIdentifier;
        this.propertyIdentifier = this.propertyIdentifier || this.property;
        if (!this.name && this.property) {
            this.name = this.property;
        }
    };
    return SWErrorDisplayController;
}());
exports.SWErrorDisplayController = SWErrorDisplayController;
var SWErrorDisplay = /** @class */ (function () {
    // @ngInject
    function SWErrorDisplay(coreFormPartialsPath, hibachiPathBuilder) {
        this.coreFormPartialsPath = coreFormPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.require = {
            swForm: "^?swForm",
            form: "^?form",
            swPropertyDisplay: "^?swPropertyDisplay",
            swfPropertyDisplay: "^?swfPropertyDisplay"
        };
        this.restrict = "E";
        this.controller = SWErrorDisplayController;
        this.controllerAs = "swErrorDisplay";
        this.scope = {};
        this.bindToController = {
            form: "=?",
            name: "@?",
            property: "@?",
            propertyIdentifier: "@?",
            errorClass: "@?"
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath) + "errordisplay.html";
    }
    SWErrorDisplay.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWErrorDisplay(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWErrorDisplay;
}());
exports.SWErrorDisplay = SWErrorDisplay;


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**********************************************************************************************
 **********************************************************************************************
 **********************************************************************************************
 **		___________________________________________
 ** 	Form Field - type have the following options (This is for the frontend so it can be modified):
 **
 **		checkbox			|	As a single checkbox this doesn't require any options, but it will create a hidden field for you so that the key gets submitted even when not checked.  The value of the checkbox will be 1
 **		checkboxgroup		|	Requires the valueOptions to be an array of simple value if name and value is same or array of structs with the format of {value="", name=""}
 **		file				|	No value can be passed in
 **		multiselect			|	Requires the valueOptions to be an array of simple value if name and value is same or array of structs with the format of {value="", name=""}
 **		password			|	No Value can be passed in
 **		radiogroup			|	Requires the valueOptions to be an array of simple value if name and value is same or array of structs with the format of {value="", name=""}
 **		select      		|	Requires the valueOptions to be an array of simple value if name and value is same or array of structs with the format of {value="", name=""}
 **		text				|	Simple Text Field
 **		textarea			|	Simple Textarea
 **		yesno				|	This is used by booleans and flags to create a radio group of Yes and No
 **		submit				|	submit button to post these properties back to the server.
 **		------------------------------------------------------------------------------------------------------
 **
 **		attr.valueObject" type="any" default="" />
 **		attr.valueObjectProperty" type="string" default="" />
 **
 **		General Settings that end up getting applied to the value object
 **		attr.type" type="string" default="text"
 **		attr.name" type="string" default=""
 **		attr.class" type="string" default=""
 **		attr.value" type="any" default=""
 **		attr.valueOptions" type="array" default="#arrayNew(1)#"		<!--- Used for select, checkbox group, multiselect --->
 **		attr.fieldAttributes" type="string" default=""
 **
 *********************************************************************************************
 *********************************************************************************************
 *********************************************************************************************
 */
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
/**
    * Property Display Controller handles the logic for this directive.
    */
var SWFFormFieldController = /** @class */ (function () {
    //@ngInject
    function SWFFormFieldController($scope, $element, $compile, utilityService) {
        this.$scope = $scope;
        this.$element = $element;
        this.$compile = $compile;
        this.utilityService = utilityService;
        this.utilityService = utilityService;
        this.$scope = $scope;
        this.$element = $element;
        this.$compile = $compile;
    }
    /**
        * Handles the logic for the frontend version of the property display.
        */
    SWFFormFieldController.$inject = ['$scope', '$element', '$compile', 'utilityService'];
    return SWFFormFieldController;
}());
/**
    * This class handles configuring formFields for use in process forms on the front end.
    */
var SWFFormField = /** @class */ (function () {
    function SWFFormField(coreFormPartialsPath, hibachiPathBuilder) {
        this.restrict = "E";
        this.require = { swfPropertyDisplayCtrl: "^?swfPropertyDisplay", form: "^?form" };
        this.controller = SWFFormFieldController;
        this.controllerAs = "swfFormField";
        this.scope = {};
        this.bindToController = {
            propertyDisplay: "=?",
            propertyIdentifier: "@?",
            name: "@?",
            class: "@?",
            errorClass: "@?",
            type: "@?"
        };
        this.link = function (scope, element, attrs, formController, transcludeFn) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath) + 'swfformfield.html';
    }
    /**
        * Handles injecting the partials path into this class
        */
    SWFFormField.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWFFormField(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFFormField;
}());
exports.SWFFormField = SWFFormField;


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
/**
* Form Controller handles the logic for this directive.
*/
var SWFormController = /** @class */ (function () {
    /**
     * This controller handles most of the logic for the swFormDirective when more complicated self inspection is needed.
     */
    // @ngInject
    function SWFormController($scope, $element, $hibachi, $http, $timeout, observerService, $rootScope, entityService, utilityService) {
        var _this = this;
        this.$scope = $scope;
        this.$element = $element;
        this.$hibachi = $hibachi;
        this.$http = $http;
        this.$timeout = $timeout;
        this.observerService = observerService;
        this.$rootScope = $rootScope;
        this.entityService = entityService;
        this.utilityService = utilityService;
        this.eventsObj = [];
        this.formData = {};
        this.parseObjectErrors = true;
        this.$onInit = function () {
            if (_this.object && _this.parseObjectErrors) {
                _this.$timeout(function () {
                    _this.parseErrors(_this.object.errors);
                });
            }
        };
        this.isObject = function () {
            return (angular.isObject(_this.object));
        };
        this.submitKeyCheck = function (event) {
            if (event.form.$name == _this.name &&
                event.event.keyCode == 13) {
                _this.submit(event.swForm.action);
            }
        };
        /** create the generic submit function */
        this.submit = function (actions) {
            actions = actions || _this.action;
            console.log('actions!', actions);
            _this.clearErrors();
            _this.formData = _this.getFormData() || "";
            _this.doActions(actions);
        };
        //array or comma delimited
        this.doActions = function (actions) {
            if (angular.isArray(actions)) {
                for (var _i = 0, _a = actions; _i < _a.length; _i++) {
                    var action = _a[_i];
                    _this.doAction(action);
                }
            }
            else if (angular.isString(actions)) {
                _this.doAction(actions);
            }
            else {
                throw ("Unknown type of action exception");
            }
        };
        // /** iterates through the factory submitting data */
        this.doAction = function (action) {
            if (!action) {
                throw "Action not defined on form";
            }
            _this.formData = _this.formData || {};
            //
            var request = _this.$rootScope.hibachiScope.doAction(action, _this.formData)
                .then(function (result) {
                if (!result)
                    return;
                _this.object.forms[_this.name].$setSubmitted(true);
                if (result.errors) {
                    _this.parseErrors(result.errors);
                }
            });
        };
        /****
             * Handle parsing through the server errors and injecting the error text for that field
            * If the form only has a submit, then simply call that function and set errors.
            ***/
        this.parseErrors = function (errors) {
            if (angular.isDefined(errors) && errors) {
                angular.forEach(errors, function (val, key) {
                    var primaryElement = _this.$element.find("[error-for='" + key + "']");
                    _this.$timeout(function () {
                        /**
                        if an error class has been attached to this form
                        by its children propertydisplay or errorDisplay, use it.
                        Otherwise, just add a generic 'error' class
                        to the error message **/
                        var errorClass = _this.errorClass ? _this.errorClass : "error";
                        errors[key].forEach(function (error) {
                            primaryElement.append("<div class='" + errorClass + "' name='" + key + "Error'>" + error + "</div>");
                        });
                    }, 0);
                }, _this);
            }
        };
        /** find and clear all errors on form */
        this.clearErrors = function () {
            /** clear all form errors on submit. */
            _this.$timeout(function () {
                var errorElements = _this.$element.find("[error-for]");
                errorElements.empty();
            }, 0);
        };
        this.eventsHandler = function (params) {
            //this will call any form specific functions such as hide,show,refresh,update or whatever else you later add
            for (var e in params.events) {
                if (angular.isDefined(params.events[e].value) && params.events[e].value == _this.name.toLowerCase()) {
                    if (params.events[e].name && _this[params.events[e].name]) {
                        _this[params.events[e].name](params.events[e].value);
                    }
                }
            }
        };
        /** hides this directive on event */
        this.hide = function (param) {
            if (_this.name.toLowerCase() == param) {
                _this.$element.hide();
            }
        };
        /** shows this directive on event */
        this.show = function (param) {
            if (_this.name.toLowerCase() == param) {
                _this.$element.show();
            }
        };
        /** refreshes this directive on event */
        this.refresh = function (params) {
            //stub
        };
        /** updates this directive on event */
        this.update = function (params) {
            //stub
        };
        /** clears this directive on event */
        this.clear = function (params) {
            var iterable = _this.formCtrl;
            angular.forEach(iterable, function (val, key) {
                if (typeof val === 'object' && val.hasOwnProperty('$modelValue')) {
                    if (_this.object.forms[_this.name][key].$viewValue) {
                        _this.object.forms[_this.name][key].$setViewValue("");
                        _this.object.forms[_this.name][key].$render();
                    }
                }
                else {
                    val = "";
                }
            });
        };
        /** returns all the data from the form by iterating the form elements */
        this.getFormData = function () {
            var iterable = _this.formCtrl;
            angular.forEach(iterable, function (val, key) {
                if (typeof val === 'object' && val.hasOwnProperty('$modelValue')) {
                    if (_this.object.forms[_this.name][key].$modelValue != undefined) {
                        val = _this.object.forms[_this.name][key].$modelValue;
                    }
                    else if (_this.object.forms[_this.name][key].$viewValue != undefined) {
                        val = _this.object.forms[_this.name][key].$viewValue;
                    }
                    else if (_this.object.forms[_this.name][key].$dirty) {
                        val = "";
                    }
                    /** Check for form elements that have a name that doesn't start with $ */
                    if (angular.isString(val) || angular.isNumber(val) || typeof val == 'boolean') {
                        _this.formData[key] = val;
                    }
                    if (val.$modelValue != undefined) {
                        _this.formData[key] = val.$modelValue;
                    }
                    else if (val.$viewValue != undefined) {
                        _this.formData[key] = val.$viewValue;
                    }
                }
                else {
                }
            });
            return _this.formData || "";
        };
        /** only use if the developer has specified these features with isProcessForm */
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        if (angular.isUndefined(this.isDirty)) {
            this.isDirty = false;
        }
        //object can be either an instance or a string that will become an instance
        if (angular.isString(this.object)) {
            var objectNameArray = this.object.split('_');
            this.entityName = objectNameArray[0];
            //if the object name array has two parts then we can infer that it is a process object
            if (objectNameArray.length > 1) {
                this.context = this.context || objectNameArray[1];
                this.isProcessForm = true;
            }
            else {
                this.context = this.context || 'save';
                this.isProcessForm = false;
            }
            //convert the string to an object
            this.$timeout(function () {
                _this.object = _this.$hibachi['new' + _this.object]();
            });
        }
        else {
            if (this.object && this.object.metaData) {
                this.isProcessForm = this.object.metaData.isProcessObject;
                this.entityName = this.object.metaData.className.split('_')[0];
                if (this.isProcessForm) {
                    this.context = this.context || this.object.metaData.className.split('_')[1];
                }
                else {
                    this.context = this.context || 'save';
                }
            }
        }
        //
        this.context = this.context || this.name;
        if (this.isProcessForm) {
            /** Cart is an alias for an Order */
            if (this.entityName == "Order") {
                this.entityName = "Cart";
            }
            ;
        }
        if (this.submitOnEnter) {
            this.eventListeners = this.eventListeners || {};
            this.eventListeners.keyup = this.submitKeyCheck;
        }
        if (this.eventListeners) {
            for (var key in this.eventListeners) {
                this.observerService.attach(this.eventListeners[key], key);
            }
        }
    }
    return SWFormController;
}());
exports.SWFormController = SWFormController;
var SWForm = /** @class */ (function () {
    // @ngInject
    function SWForm(coreFormPartialsPath, hibachiPathBuilder) {
        this.coreFormPartialsPath = coreFormPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.templateUrl = "";
        this.transclude = true;
        this.restrict = "E";
        this.controller = SWFormController;
        this.controllerAs = "swForm";
        this.scope = {};
        /**
         * Binds all of our variables to the controller so we can access using this
         */
        this.bindToController = {
            name: "@?",
            context: "@?",
            entityName: "@?",
            hiddenFields: "=?",
            action: "@?",
            actions: "@?",
            formClass: "@?",
            formData: "=?",
            errorClass: '@?',
            object: "=?",
            onSuccess: "@?",
            onError: "@?",
            hideUntil: "@?",
            isDirty: "=?",
            inputAttributes: "@?",
            eventListeners: "=?",
            eventAnnouncers: "@",
            submitOnEnter: "@",
            parseObjectErrors: "@?"
        };
        /**
            * Sets the context of this form
            */
        this.link = function (scope, element, attrs, controller) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(this.coreFormPartialsPath) + "form.html";
    }
    /**
     * Handles injecting the partials path into this class
     */
    SWForm.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWForm(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = ['coreFormPartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWForm;
}());
exports.SWForm = SWForm;


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWFormFieldController = /** @class */ (function () {
    //@ngInject
    function SWFormFieldController($injector, $scope, $timeout, $log, $hibachi, observerService, utilityService) {
        var _this = this;
        this.$injector = $injector;
        this.$scope = $scope;
        this.$timeout = $timeout;
        this.$log = $log;
        this.$hibachi = $hibachi;
        this.observerService = observerService;
        this.utilityService = utilityService;
        this.formFieldChanged = function (option) {
            if (_this.fieldType === 'yesno') {
                _this.object.data[_this.propertyIdentifier] = option.value;
                _this.form[_this.propertyIdentifier].$dirty = true;
                _this.form['selected' + _this.object.metaData.className + _this.propertyIdentifier + _this.selectedRadioFormName].$dirty = false;
            }
            else if (_this.fieldType == 'checkbox') {
                _this.object.data[_this.propertyIdentifier] = option.value;
                _this.form[_this.propertyIdentifier].$dirty = true;
            }
            else if (_this.fieldType === 'select') {
                _this.$log.debug('formfieldchanged');
                _this.$log.debug(option);
                if (_this.selectType === 'object' && typeof _this.object.data[_this.propertyIdentifier].$$getIDName == "function") {
                    _this.object.data[_this.propertyIdentifier]['data'][_this.object.data[_this.propertyIdentifier].$$getIDName()] = option.value;
                    if (angular.isDefined(_this.form[_this.object.data[_this.propertyIdentifier].$$getIDName()])) {
                        _this.form[_this.object.data[_this.propertyIdentifier].$$getIDName()].$dirty = true;
                    }
                }
                else if (_this.selectType === 'string' && option && option.value != null) {
                    _this.object.data[_this.propertyIdentifier] = option.value;
                    _this.form[_this.propertyIdentifier].$dirty = true;
                }
                _this.observerService.notify(_this.object.metaData.className + _this.propertyIdentifier.charAt(0).toUpperCase() + _this.propertyIdentifier.slice(1) + 'OnChange', option);
            }
            else {
                _this.object.data[_this.propertyIdentifier] = option.value;
                _this.form[_this.propertyIdentifier].$dirty = true;
                _this.form['selected' + _this.object.metaData.className + _this.propertyIdentifier + _this.selectedRadioFormName].$dirty = false;
            }
        };
        this.$onInit = function () {
            var bindToControllerProps = _this.$injector.get('swFormFieldDirective')[0].bindToController;
            for (var i in bindToControllerProps) {
                if (!_this[i]) {
                    if (!_this[i] && _this.swPropertyDisplay && _this.swPropertyDisplay[i]) {
                        _this[i] = _this.swPropertyDisplay[i];
                    }
                    else if (!_this[i] && _this.swfPropertyDisplay && _this.swfPropertyDisplay[i]) {
                        _this[i] = _this.swfPropertyDisplay[i];
                    }
                    else if (!_this[i] && _this.swForm && _this.swForm[i]) {
                        _this[i] = _this.swForm[i];
                    }
                }
            }
            var tempObject = [];
            if (typeof (_this.optionValues) == "string") {
                var temp = _this.optionValues.split(',');
                for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {
                    var value = temp_1[_i];
                    tempObject.push({
                        "name": value,
                        "value": value
                    });
                }
                _this.optionValues = tempObject;
            }
            _this.edit = _this.edit || true;
            _this.fieldType = _this.fieldType || "text";
            if (_this.fieldType === 'yesno') {
                _this.yesnoStrategy();
            }
            if (_this.fieldType === 'select') {
                _this.selectStrategy();
            }
            if (_this.eventListeners) {
                for (var key in _this.eventListeners) {
                    _this.observerService.attach(_this.eventListeners[key], key);
                }
            }
        };
        this.selectStrategy = function () {
            //this is specific to the admin because it implies loading of options via api
            if (angular.isDefined(_this.object.metaData) && angular.isDefined(_this.object.metaData[_this.propertyIdentifier]) && angular.isDefined(_this.object.metaData[_this.propertyIdentifier].fieldtype)) {
                _this.selectType = 'object';
                _this.$log.debug('selectType:object');
            }
            else {
                _this.selectType = 'string';
                _this.$log.debug('selectType:string');
            }
            _this.getOptions();
        };
        this.getOptions = function () {
            if (angular.isUndefined(_this.options)) {
                if (!_this.optionsArguments || !_this.optionsArguments.hasOwnProperty('propertyIdentifier')) {
                    _this.optionsArguments = {
                        'propertyIdentifier': _this.propertyIdentifier
                    };
                }
                var optionsPromise = _this.$hibachi.getPropertyDisplayOptions(_this.object.metaData.className, _this.optionsArguments);
                optionsPromise.then(function (value) {
                    _this.options = value.data;
                    if (_this.selectType === 'object') {
                        if (angular.isUndefined(_this.object.data[_this.propertyIdentifier])) {
                            _this.object.data[_this.propertyIdentifier] = _this.$hibachi['new' + _this.object.metaData[_this.propertyIdentifier].cfc]();
                        }
                        if (_this.object.data[_this.propertyIdentifier].$$getID() === '') {
                            _this.$log.debug('no ID');
                            _this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName());
                            _this.object.data['selected' + _this.propertyIdentifier] = _this.options[0];
                            _this.object.data[_this.propertyIdentifier] = _this.$hibachi['new' + _this.object.metaData[_this.propertyIdentifier].cfc]();
                            _this.object.data[_this.propertyIdentifier]['data'][_this.object.data[_this.propertyIdentifier].$$getIDName()] = _this.options[0].value;
                        }
                        else {
                            var found = false;
                            for (var i in _this.options) {
                                if (angular.isObject(_this.options[i].value)) {
                                    _this.$log.debug('isObject');
                                    _this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName());
                                    if (_this.options[i].value === _this.object.data[_this.propertyIdentifier]) {
                                        _this.object.data['selected' + _this.propertyIdentifier] = _this.options[i];
                                        _this.object.data[_this.propertyIdentifier] = _this.options[i].value;
                                        found = true;
                                        break;
                                    }
                                }
                                else {
                                    _this.$log.debug('notisObject');
                                    _this.$log.debug(_this.object.data[_this.propertyIdentifier].$$getIDName());
                                    if (_this.options[i].value === _this.object.data[_this.propertyIdentifier].$$getID()) {
                                        _this.object.data['selected' + _this.propertyIdentifier] = _this.options[i];
                                        _this.object.data[_this.propertyIdentifier]['data'][_this.object.data[_this.propertyIdentifier].$$getIDName()] = _this.options[i].value;
                                        found = true;
                                        break;
                                    }
                                }
                                if (!found) {
                                    _this.object.data['selected' + _this.propertyIdentifier] = _this.options[0];
                                }
                            }
                        }
                    }
                    else if (_this.selectType === 'string') {
                        if (_this.object.data[_this.propertyIdentifier] !== null) {
                            for (var i in _this.options) {
                                if (_this.options[i].value === _this.object.data[_this.propertyIdentifier]) {
                                    _this.object.data['selected' + _this.propertyIdentifier] = _this.options[i];
                                    _this.object.data[_this.propertyIdentifier] = _this.options[i].value;
                                }
                            }
                        }
                        else {
                            _this.object.data['selected' + _this.propertyIdentifier] = _this.options[0];
                            _this.object.data[_this.propertyIdentifier] = _this.options[0].value;
                        }
                    }
                });
            }
        };
        this.yesnoStrategy = function () {
            //format value
            _this.selectedRadioFormName = _this.utilityService.createID(26);
            _this.object.data[_this.propertyIdentifier] = (_this.object.data[_this.propertyIdentifier]
                && _this.object.data[_this.propertyIdentifier].length
                && _this.object.data[_this.propertyIdentifier].toLowerCase().trim() === 'yes') || _this.object.data[_this.propertyIdentifier] == 1 ? 1 : 0;
            _this.options = [
                {
                    name: 'Yes',
                    value: 1
                },
                {
                    name: 'No',
                    value: 0
                }
            ];
            if (angular.isDefined(_this.object.data[_this.propertyIdentifier])) {
                for (var i in _this.options) {
                    if (_this.options[i].value === _this.object.data[_this.propertyIdentifier]) {
                        _this.selected = _this.options[i];
                        _this.object.data[_this.propertyIdentifier] = _this.options[i].value;
                    }
                }
            }
            else {
                _this.selected = _this.options[0];
                _this.object.data[_this.propertyIdentifier] = _this.options[0].value;
            }
            _this.$timeout(function () {
                _this.form[_this.propertyIdentifier].$dirty = _this.isDirty;
            });
        };
        this.$injector = $injector;
        this.$scope = $scope;
        this.$timeout = $timeout;
        this.$log = $log;
        this.$hibachi = $hibachi;
        this.observerService = observerService;
        this.utilityService = utilityService;
    }
    return SWFormFieldController;
}());
exports.SWFormFieldController = SWFormFieldController;
var SWFormField = /** @class */ (function () {
    //@ngInject
    function SWFormField($log, $templateCache, $window, $hibachi, formService, coreFormPartialsPath, hibachiPathBuilder) {
        this.restrict = "EA";
        this.require = {
            swfPropertyDisplay: "^?swfPropertyDisplay",
            swPropertyDisplay: "^?swPropertyDisplay",
            form: "^?form",
            swForm: '^?swForm'
        };
        this.controller = SWFormFieldController;
        this.controllerAs = "swFormField";
        this.scope = {};
        this.bindToController = {
            propertyIdentifier: "@?", property: "@?",
            name: "@?",
            class: "@?",
            errorClass: "@?",
            fieldType: "@?", type: "@?",
            option: "=?",
            valueObject: "=?",
            object: "=?",
            label: "@?",
            labelText: "@?",
            labelClass: "@?",
            optionValues: "=?",
            edit: "=?",
            title: "@?",
            value: "=?",
            errorText: "@?",
            inListingDisplay: "=?",
            inputAttributes: "@?",
            options: "=?",
            optionsArguments: "=?",
            eagerLoadOptions: "=?",
            rawFileTarget: "@?",
            binaryFileTarget: "@?",
            isDirty: "=?",
            onChange: "=?",
            editable: "=?",
            eventListeners: "=?",
            context: "@?",
            eventAnnouncers: "@"
        };
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath) + 'formfield.html';
    }
    SWFormField.Factory = function () {
        var directive = function ($log, $templateCache, $window, $hibachi, formService, coreFormPartialsPath, hibachiPathBuilder) { return new SWFormField($log, $templateCache, $window, $hibachi, formService, coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            '$templateCache',
            '$window',
            '$hibachi',
            'formService',
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFormField;
}());
exports.SWFormField = SWFormField;


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWFormFieldFileController = /** @class */ (function () {
    //@ngInject
    function SWFormFieldFileController(formService) {
        this.formService = formService;
        if (this.propertyDisplay.isDirty == undefined)
            this.propertyDisplay.isDirty = false;
        this.propertyDisplay.form.$dirty = this.propertyDisplay.isDirty;
        //this.formService.setPristinePropertyValue(this.propertyDisplay.property,this.propertyDisplay.object.data[this.propertyDisplay.property]);
    }
    return SWFormFieldFileController;
}());
var SWFormFieldFile = /** @class */ (function () {
    function SWFormFieldFile(coreFormPartialsPath, hibachiPathBuilder) {
        this.restrict = 'E';
        this.require = "^form";
        this.controller = SWFormFieldFileController;
        this.controllerAs = "swFormFieldFile";
        this.scope = true;
        this.bindToController = {
            propertyDisplay: "="
        };
        //@ngInject
        this.link = function (scope, element, attr, formController) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath) + "file.html";
    }
    SWFormFieldFile.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWFormFieldFile(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFormFieldFile;
}());
exports.SWFormFieldFile = SWFormFieldFile;


/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWFormFieldJsonController = /** @class */ (function () {
    //@ngInject
    function SWFormFieldJsonController(formService) {
        this.propertyDisplay.form.$dirty = this.propertyDisplay.isDirty;
    }
    return SWFormFieldJsonController;
}());
var SWFormFieldJson = /** @class */ (function () {
    function SWFormFieldJson(coreFormPartialsPath, hibachiPathBuilder) {
        this.restrict = 'E';
        this.require = "^form";
        this.scope = true;
        this.controller = SWFormFieldJsonController;
        this.bindToController = {
            propertyDisplay: "=?"
        };
        this.controllerAs = "ctrl";
        this.templateUrl = "";
        this.link = function (scope, element, attrs, formController) { };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath) + "json.html";
    }
    SWFormFieldJson.Factory = function () {
        var directive = function (coreFormPartialsPath, hibachiPathBuilder) { return new SWFormFieldJson(coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFormFieldJson;
}());
exports.SWFormFieldJson = SWFormFieldJson;


/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWFormFieldSearchSelect = /** @class */ (function () {
    function SWFormFieldSearchSelect($log, $hibachi, coreFormPartialsPath, hibachiPathBuilder) {
        return {
            templateUrl: hibachiPathBuilder.buildPartialsPath(coreFormPartialsPath) + 'search-select.html',
            require: "^form",
            restrict: 'E',
            scope: {
                propertyDisplay: "="
            },
            link: function (scope, element, attr, formController) {
                //set up selectionOptions
                scope.selectionOptions = {
                    value: [],
                    $$adding: false
                };
                //match in matches track by
                //function to set state of adding new item
                scope.setAdding = function (isAdding) {
                    scope.isAdding = isAdding;
                    scope.showAddBtn = false;
                };
                scope.selectedOption = {};
                scope.showAddBtn = false;
                var propertyMetaData = scope.propertyDisplay.object.$$getMetaData(scope.propertyDisplay.property);
                //create basic
                var object = $hibachi.newEntity(propertyMetaData.cfc);
                //				scope.propertyDisplay.template = '';
                //				//check for a template
                //				//rules are tiered: check if an override is specified at scope.template, check if the cfc name .html exists, use
                //				var templatePath = coreFormPartialsPath + 'formfields/searchselecttemplates/';
                //				if(angular.isUndefined(scope.propertyDisplay.template)){
                //					var templatePromise = $http.get(templatePath+propertyMetaData.cfcProperCase+'.html',function(){
                //						$log.debug('template');
                //						scope.propertyDisplay.template = templatePath+propertyMetaData.cfcProperCase+'.html';
                //					},function(){
                //						scope.propertyDisplay.template = templatePath+'index.html';
                //						$log.debug('template');
                //						$log.debug(scope.propertyDisplay.template);
                //					});
                //				}
                //set up query function for finding related object
                scope.cfcProperCase = propertyMetaData.cfcProperCase;
                scope.selectionOptions.getOptionsByKeyword = function (keyword) {
                    var filterGroupsConfig = '[' +
                        ' {  ' +
                        '"filterGroup":[  ' +
                        '{' +
                        ' "propertyIdentifier":"_' + scope.cfcProperCase.toLowerCase() + '.' + scope.cfcProperCase + 'Name",' +
                        ' "comparisonOperator":"like",' +
                        ' "ormtype":"string",' +
                        ' "value":"%' + keyword + '%"' +
                        '  }' +
                        ' ]' +
                        ' }' +
                        ']';
                    return $hibachi.getEntity(propertyMetaData.cfc, { filterGroupsConfig: filterGroupsConfig.trim() })
                        .then(function (value) {
                        $log.debug('typesByKeyword');
                        $log.debug(value);
                        scope.selectionOptions.value = value.pageRecords;
                        var myLength = keyword.length;
                        if (myLength > 0) {
                            scope.showAddBtn = true;
                        }
                        else {
                            scope.showAddBtn = false;
                        }
                        return scope.selectionOptions.value;
                    });
                };
                var propertyPromise = scope.propertyDisplay.object['$$get' + propertyMetaData.nameCapitalCase]();
                propertyPromise.then(function (data) {
                });
                //set up behavior when selecting an item
                scope.selectItem = function ($item, $model, $label) {
                    scope.$item = $item;
                    scope.$model = $model;
                    scope.$label = $label;
                    scope.showAddBtn = false; //turns off the add btn on select
                    //angular.extend(inflatedObject.data,$item);
                    object.$$init($item);
                    $log.debug('select item');
                    $log.debug(object);
                    scope.propertyDisplay.object['$$set' + propertyMetaData.nameCapitalCase](object);
                };
                //				if(angular.isUndefined(scope.propertyDipslay.object[scope.propertyDisplay.property])){
                //					$log.debug('getmeta');
                //					$log.debug(scope.propertyDisplay.object.metaData[scope.propertyDisplay.property]);
                //
                //					//scope.propertyDipslay.object['$$get'+]
                //				}
                //
                //				scope.propertyDisplay.object.data[scope.propertyDisplay.property].$dirty = true;
            }
        };
    }
    SWFormFieldSearchSelect.Factory = function () {
        var directive = function ($log, $hibachi, coreFormPartialsPath, hibachiPathBuilder) { return new SWFormFieldSearchSelect($log, $hibachi, coreFormPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'coreFormPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWFormFieldSearchSelect;
}());
exports.SWFormFieldSearchSelect = SWFormFieldSearchSelect;


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWFormRegistrar = /** @class */ (function () {
    //@ngInject
    function SWFormRegistrar(formService) {
        return {
            restrict: 'E',
            require: ["^form", "^swForm"],
            scope: {
                object: "=?",
                context: "@?",
                name: "@?",
                isDirty: "=?"
            },
            link: function (scope, element, attrs, formController, transclude) {
                /*add form info at the form level*/
                scope.$watch(function () { return formController[0]; }, function () {
                    formController[1].formCtrl = formController[0];
                });
                formController[0].$$swFormInfo = {
                    object: scope.object,
                    context: scope.context || 'save',
                    name: scope.name
                };
                var makeRandomID = function makeid(count) {
                    var text = "";
                    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                    for (var i = 0; i < count; i++)
                        text += possible.charAt(Math.floor(Math.random() * possible.length));
                    return text;
                };
                if (scope.isDirty) {
                    formController[0].autoDirty = true;
                }
                scope.form = formController[0];
                /*register form with service*/
                formController[0].name = scope.name;
                formController[0].$setDirty();
                formService.setForm(formController[0]);
                /*register form at object level*/
                if (!angular.isDefined(scope.object.forms)) {
                    scope.object.forms = {};
                }
                scope.object.forms[scope.name] = formController[0];
            }
        };
    }
    SWFormRegistrar.Factory = function () {
        var directive = function (formService) { return new SWFormRegistrar(formService); };
        directive.$inject = [
            'formService'
        ];
        return directive;
    };
    return SWFormRegistrar;
}());
exports.SWFormRegistrar = SWFormRegistrar;
// 	angular.module('slatwalladmin').directive('swFormRegistrar',[ 'formService', 'partialsPath', (formService, partialsPath) => new swFormRegistrar(formService, partialsPath)]);
// }


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWFormSubscriberController = /** @class */ (function () {
    //@ngInject
    function SWFormSubscriberController($log, $compile, $hibachi, utilityService, rbkeyService, $injector) {
        var _this = this;
        this.$log = $log;
        this.$compile = $compile;
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        this.rbkeyService = rbkeyService;
        this.$injector = $injector;
        this.$onInit = function () {
            var bindToControllerProps = _this.$injector.get('swFormSubscriberDirective')[0].bindToController;
            for (var i in bindToControllerProps) {
                if (!_this[i]) {
                    if (!_this[i] && _this.swForm && _this.swForm[i]) {
                        _this[i] = _this.swForm[i];
                    }
                }
            }
            _this.property = _this.property || _this.propertyIdentifier;
            _this.propertyIdentifier = _this.propertyIdentifier || _this.property;
            _this.type = _this.type || _this.fieldType;
            _this.fieldType = _this.fieldType || _this.type;
            _this.edit = _this.edit || _this.editing;
            _this.editing = _this.editing || _this.edit;
            _this.editing = _this.editing || true;
            _this.fieldType = _this.fieldType || "text";
            _this.inputAttributes = _this.inputAttributes || "";
        };
        this.utilityService = utilityService;
        this.$hibachi = $hibachi;
        this.rbkeyService = rbkeyService;
        this.$log = $log;
        this.$injector = $injector;
    }
    return SWFormSubscriberController;
}());
var SWFormSubscriber = /** @class */ (function () {
    //ngInject
    function SWFormSubscriber() {
        this.restrict = "A";
        this.require = {
            swForm: "?^swForm",
            form: "?^form"
        };
        this.scope = {};
        this.bindToController = {
            propertyIdentifier: "@?",
            name: "@?",
            class: "@?",
            errorClass: "@?",
            option: "=?",
            valueObject: "=?",
            object: "=?",
            label: "@?",
            labelText: "@?",
            labelClass: "@?",
            optionValues: "=?",
            edit: "=?",
            title: "@?",
            value: "=?",
            errorText: "@?",
            fieldType: "@?",
            property: "@?",
            inputAttributes: "@?",
            type: "@?",
            editing: "=?"
        };
        this.controller = SWFormSubscriberController;
        this.controllerAs = "SWFormSubscriber";
        this.link = function (scope, element, attr) {
        };
    }
    SWFormSubscriber.Factory = function () {
        var directive = function () { return new SWFormSubscriber(); };
        directive.$inject = [];
        return directive;
    };
    return SWFormSubscriber;
}());
exports.SWFormSubscriber = SWFormSubscriber;


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var swpropertydisplay_1 = __webpack_require__(172);
var SWFPropertyDisplayController = /** @class */ (function (_super) {
    __extends(SWFPropertyDisplayController, _super);
    //@ngInject
    function SWFPropertyDisplayController($filter, utilityService, $injector, metadataService, observerService) {
        var _this = _super.call(this, $filter, utilityService, $injector, metadataService, observerService) || this;
        _this.$filter = $filter;
        _this.utilityService = utilityService;
        _this.$injector = $injector;
        _this.metadataService = metadataService;
        _this.observerService = observerService;
        _this.edit = true;
        return _this;
    }
    return SWFPropertyDisplayController;
}(swpropertydisplay_1.SWPropertyDisplayController));
exports.SWFPropertyDisplayController = SWFPropertyDisplayController;
var SWFPropertyDisplay = /** @class */ (function (_super) {
    __extends(SWFPropertyDisplay, _super);
    //@ngInject
    function SWFPropertyDisplay($compile, scopeService, coreFormPartialsPath, hibachiPathBuilder, swpropertyPartialPath) {
        var _this = _super.call(this, $compile, scopeService, coreFormPartialsPath, hibachiPathBuilder, swpropertyPartialPath) || this;
        _this.$compile = $compile;
        _this.scopeService = scopeService;
        _this.coreFormPartialsPath = coreFormPartialsPath;
        _this.hibachiPathBuilder = hibachiPathBuilder;
        _this.swpropertyPartialPath = swpropertyPartialPath;
        _this.controller = SWFPropertyDisplayController;
        _this.controllerAs = "swfPropertyDisplay";
        _this.scope = {};
        _this.link = function (scope, element, attrs) {
        };
        return _this;
    }
    return SWFPropertyDisplay;
}(swpropertydisplay_1.SWPropertyDisplay));
exports.SWFPropertyDisplay = SWFPropertyDisplay;


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWInputController = /** @class */ (function () {
    //@ngInject
    function SWInputController($scope, $log, $hibachi, $injector, listingService, utilityService, rbkeyService, observerService, metadataService) {
        var _this = this;
        this.$scope = $scope;
        this.$log = $log;
        this.$hibachi = $hibachi;
        this.$injector = $injector;
        this.listingService = listingService;
        this.utilityService = utilityService;
        this.rbkeyService = rbkeyService;
        this.observerService = observerService;
        this.metadataService = metadataService;
        this.eventAnnouncers = "";
        this.onSuccess = function () {
            _this.utilityService.setPropertyValue(_this.swForm.object, _this.propertyIdentifier, _this.value);
            if (_this.swPropertyDisplay) {
                _this.utilityService.setPropertyValue(_this.swPropertyDisplay.object, _this.propertyIdentifier, _this.value);
            }
            if (_this.swfPropertyDisplay) {
                _this.utilityService.setPropertyValue(_this.swfPropertyDisplay.object, _this.propertyIdentifier, _this.value);
                _this.swfPropertyDisplay.edit = false;
            }
            _this.utilityService.setPropertyValue(_this.swFormField.object, _this.propertyIdentifier, _this.value);
        };
        this.getValidationDirectives = function () {
            var spaceDelimitedList = '';
            var name = _this.propertyIdentifier;
            var form = _this.form;
            _this.$log.debug("Name is:" + name + " and form is: " + form);
            if (_this.metadataService.isAttributePropertyByEntityAndPropertyIdentifier(_this.object, _this.propertyIdentifier)) {
                _this.object.validations.properties[name] = [];
                if ((_this.object.metaData[_this.propertyIdentifier].requiredFlag && _this.object.metaData[_this.propertyIdentifier].requiredFlag == true) || typeof _this.object.metaData[_this.propertyIdentifier].requiredFlag === 'string' && _this.object.metaData[_this.propertyIdentifier].requiredFlag.trim().toLowerCase() == "yes") {
                    _this.object.validations.properties[name].push({
                        contexts: "save",
                        required: true
                    });
                }
                if (_this.object.metaData[_this.propertyIdentifier].validationRegex) {
                    _this.object.validations.properties[name].push({
                        contexts: "save", regex: _this.object.metaData[_this.propertyIdentifier].validationRegex
                    });
                }
            }
            if (angular.isUndefined(_this.object.validations)
                || angular.isUndefined(_this.object.validations.properties)
                || angular.isUndefined(_this.object.validations.properties[_this.propertyIdentifier])) {
                return '';
            }
            var validations = _this.object.validations.properties[_this.propertyIdentifier];
            _this.$log.debug("Validations: ", validations);
            _this.$log.debug(_this.form);
            var validationsForContext = [];
            //get the form context and the form name.
            var formContext = _this.swForm.context;
            var formName = _this.swForm.name;
            _this.$log.debug("Form context is: ");
            _this.$log.debug(formContext);
            _this.$log.debug("Form Name: ");
            _this.$log.debug(formName);
            //get the validations for the current element.
            var propertyValidations = _this.object.validations.properties[name];
            //check if the contexts match.
            if (angular.isObject(propertyValidations)) {
                //if this is a procesobject validation then the context is implied
                if (angular.isUndefined(propertyValidations[0].contexts) && _this.object.metaData.isProcessObject) {
                    propertyValidations[0].contexts = _this.object.metaData.className.split('_')[1];
                }
                if (propertyValidations[0].contexts.indexOf(formContext) > -1) {
                    _this.$log.debug("Matched");
                    for (var prop in propertyValidations[0]) {
                        if (prop != "contexts" && prop !== "conditions") {
                            spaceDelimitedList += (" swvalidation" + prop.toLowerCase() + "='" + propertyValidations[0][prop] + "'");
                        }
                    }
                }
                _this.$log.debug(spaceDelimitedList);
            }
            //loop over validations that are required and create the space delimited list
            _this.$log.debug(validations);
            //get all validations related to the form context;
            _this.$log.debug(form);
            angular.forEach(validations, function (validation, key) {
                if (validation.contexts && _this.utilityService.listFind(validation.contexts.toLowerCase(), _this.swForm.context.toLowerCase()) !== -1) {
                    _this.$log.debug("Validations for context");
                    _this.$log.debug(validation);
                    validationsForContext.push(validation);
                }
            });
            return spaceDelimitedList;
        };
        this.clear = function () {
            if (_this.reverted) {
                _this.reverted = false;
                _this.showRevert = true;
            }
            _this.edited = false;
            _this.value = _this.initialValue;
            if (_this.inListingDisplay && _this.rowSaveEnabled) {
                _this.listingService.markUnedited(_this.listingID, _this.pageRecordIndex, _this.propertyDisplayID);
            }
        };
        this.revert = function () {
            _this.showRevert = false;
            _this.reverted = true;
            _this.value = _this.revertToValue;
            _this.onEvent({}, "change");
        };
        this.onEvent = function (event, eventName) {
            var customEventName = _this.swForm.name + _this.name + eventName;
            var formEventName = _this.swForm.name + eventName;
            var data = {
                event: event,
                eventName: eventName,
                form: _this.form,
                swForm: _this.swForm,
                swInput: _this,
                inputElement: $('input').first()[0]
            };
            _this.observerService.notify(customEventName, data);
            _this.observerService.notify(formEventName, data);
            _this.observerService.notify(eventName, data);
        };
        this.getTemplate = function () {
            var template = '';
            var validations = '';
            var currencyTitle = '';
            var currencyFormatter = '';
            var style = "";
            if (!_this.class) {
                _this.class = "form-control";
            }
            if (!_this.noValidate) {
                validations = _this.getValidationDirectives();
            }
            if (_this.object && _this.object.metaData && _this.object.metaData.$$getPropertyFormatType(_this.propertyIdentifier) != undefined && _this.object.metaData.$$getPropertyFormatType(_this.propertyIdentifier) == "currency") {
                currencyFormatter = 'sw-currency-formatter ';
                if (angular.isDefined(_this.object.data.currencyCode)) {
                    currencyFormatter = currencyFormatter + 'data-currency-code="' + _this.object.data.currencyCode + '" ';
                    currencyTitle = '<span class="s-title">' + _this.object.data.currencyCode + '</span>';
                }
            }
            var appConfig = _this.$hibachi.getConfig();
            var placeholder = '';
            if (_this.object.metaData && _this.object.metaData[_this.propertyIdentifier] && _this.object.metaData[_this.propertyIdentifier].hb_nullrbkey) {
                placeholder = _this.rbkeyService.getRBKey(_this.object.metaData[_this.propertyIdentifier].hb_nullrbkey);
            }
            if (_this.fieldType.toLowerCase() === 'json') {
                style = style += 'display:none';
            }
            var acceptedFieldTypes = ['email', 'text', 'password', 'number', 'time', 'date', 'datetime', 'json', 'file'];
            if (acceptedFieldTypes.indexOf(_this.fieldType.toLowerCase()) >= 0) {
                var inputType = _this.fieldType.toLowerCase();
                if (_this.fieldType === 'time' || _this.fieldType === 'number') {
                    inputType = "text";
                }
                template = currencyTitle + '<input type="' + inputType + '" class="' + _this.class + '" ' +
                    'ng-model="swInput.value" ' +
                    'ng-disabled="swInput.editable === false" ' +
                    'ng-show="swInput.edit" ' +
                    "ng-class=\"{'form-control':swInput.inListingDisplay, 'input-xs':swInput.inListingDisplay}\"" +
                    'name="' + _this.propertyIdentifier + '" ' +
                    'placeholder="' + placeholder + '" ' +
                    validations + currencyFormatter +
                    'id="swinput' + _this.swForm.name + _this.name + '" ' +
                    'style="' + style + '"' +
                    _this.inputAttributes +
                    _this.eventAnnouncerTemplate;
            }
            var dateFieldTypes = ['date', 'datetime', 'time'];
            if (dateFieldTypes.indexOf(_this.fieldType.toLowerCase()) >= 0) {
                template = template + 'datetime-picker ';
            }
            if (_this.fieldType === 'time') {
                template = template + 'data-time-only="true" date-format="' + appConfig.timeFormat.replace('tt', 'a') + '" ng-blur="swInput.pushBindings()"';
            }
            if (_this.fieldType === 'date') {
                template = template + 'data-date-only="true" future-only date-format="' + appConfig.dateFormat + '" ';
            }
            if (template.length) {
                template = template + ' />';
            }
            var actionButtons = "\n\t\t\t<a class=\"s-remove-change\"\n\t\t\t\tdata-ng-click=\"swPropertyDisplay.clear()\"\n\t\t\t\tdata-ng-if=\"swInput.edited && swInput.edit\">\n\t\t\t\t\t<i class=\"fa fa-remove\"></i>\n\t\t\t</a>\n\n\t\t\t<!-- Revert Button -->\n\t\t\t<button class=\"btn btn-xs btn-default s-revert-btn\"\n\t\t\t\t\tdata-ng-show=\"swInput.showRevert\"\n\t\t\t\t\tdata-ng-click=\"swInput.revert()\"\n\t\t\t\t\tdata-toggle=\"popover\"\n\t\t\t\t\tdata-trigger=\"hover\"\n\t\t\t\t\tdata-content=\"{{swInput.revertText}}\"\n\t\t\t\t\tdata-original-title=\"\"\n\t\t\t\t\ttitle=\"\">\n\t\t\t\t<i class=\"fa fa-refresh\"></i>\n\t\t\t</button>\n\t\t";
            return template + actionButtons;
        };
        this.pullBindings = function () {
            var bindToControllerProps = _this.$injector.get('swInputDirective')[0].bindToController;
            for (var i in bindToControllerProps) {
                if (!_this[i]) {
                    if (!_this[i] && _this.swFormField && _this.swFormField[i]) {
                        _this[i] = _this.swFormField[i];
                    }
                    else if (!_this[i] && _this.swPropertyDisplay && _this.swPropertyDisplay[i]) {
                        _this[i] = _this.swPropertyDisplay[i];
                    }
                    else if (!_this[i] && _this.swfPropertyDisplay && _this.swfPropertyDisplay[i]) {
                        _this[i] = _this.swfPropertyDisplay[i];
                    }
                    else if (!_this[i] && _this.swForm && _this.swForm[i]) {
                        _this[i] = _this.swForm[i];
                    }
                }
            }
            _this.edit = _this.edit || true;
            _this.fieldType = _this.fieldType || "text";
            _this.inputAttributes = _this.inputAttributes || "";
            _this.inputAttributes = _this.utilityService.replaceAll(_this.inputAttributes, "'", '"');
            _this.value = _this.utilityService.getPropertyValue(_this.object, _this.propertyIdentifier);
        };
        this.pushBindings = function () {
            _this.observerService.notify('updateBindings').then(function () { });
        };
        this.$onInit = function () {
            _this.pullBindings();
            _this.eventAnnouncersArray = _this.eventAnnouncers.split(',');
            _this.eventAnnouncerTemplate = "";
            for (var i in _this.eventAnnouncersArray) {
                var eventName = _this.eventAnnouncersArray[i];
                if (eventName.length) {
                    _this.eventAnnouncerTemplate += " ng-" + eventName + "=\"swInput.onEvent($event,'" + eventName + "')\"";
                }
            }
            if (_this.object && _this.object.metaData && _this.object.metaData.className != undefined) {
                _this.eventNameForObjectSuccess = _this.object.metaData.className.split('_')[0] + _this.context.charAt(0).toUpperCase() + _this.context.slice(1) + 'Success';
            }
            else {
                _this.eventNameForObjectSuccess = _this.context.charAt(0).toUpperCase() + _this.context.slice(1) + 'Success';
            }
            var eventNameForObjectSuccessID = _this.eventNameForObjectSuccess + _this.propertyIdentifier;
            var eventNameForUpdateBindings = 'updateBindings';
            if (_this.object && _this.object.metaData && _this.object.metaData.className != undefined) {
                var eventNameForUpdateBindingsID = _this.object.metaData.className.split('_')[0] + _this.propertyIdentifier + 'updateBindings';
            }
            else {
                var eventNameForUpdateBindingsID = _this.propertyIdentifier + 'updateBindings';
            }
            var eventNameForPullBindings = 'pullBindings';
            if (_this.object && _this.object.metaData && _this.object.metaData.className != undefined) {
                var eventNameForPullBindingsID = _this.object.metaData.className.split('_')[0] + _this.propertyIdentifier + 'pullBindings';
            }
            else {
                var eventNameForPullBindingsID = _this.propertyIdentifier + 'pullBindings';
            }
            //attach a successObserver
            if (_this.object) {
                //update bindings on save success
                _this.observerService.attach(_this.onSuccess, _this.eventNameForObjectSuccess, eventNameForObjectSuccessID);
                //update bindings manually
                _this.observerService.attach(_this.onSuccess, eventNameForUpdateBindings, eventNameForUpdateBindingsID);
                //pull bindings from higher binding level manually
                _this.observerService.attach(_this.pullBindings, eventNameForPullBindings, eventNameForPullBindingsID);
            }
            _this.$scope.$on("$destroy", function () {
                _this.observerService.detachById(eventNameForUpdateBindings);
                _this.observerService.detachById(eventNameForUpdateBindingsID);
            });
        };
    }
    return SWInputController;
}());
var SWInput = /** @class */ (function () {
    //ngInject
    function SWInput($compile, $timeout, $parse, fileService) {
        var _this = this;
        this.$compile = $compile;
        this.$timeout = $timeout;
        this.$parse = $parse;
        this.fileService = fileService;
        this.restrict = "E";
        this.require = {
            swForm: "?^swForm",
            form: "?^form",
            swFormField: "?^swFormField",
            swPropertyDisplay: "?^swPropertyDisplay",
            swfPropertyDisplay: "?^swfPropertyDisplay"
        };
        this.scope = {};
        this.bindToController = {
            propertyIdentifier: "@?",
            name: "@?",
            class: "@?",
            errorClass: "@?",
            option: "=?",
            valueObject: "=?",
            object: "=?",
            label: "@?",
            labelText: "@?",
            labelClass: "@?",
            inListingDisplay: "=?",
            listingID: "=?",
            pageRecordIndex: "=?",
            propertyDisplayID: "=?",
            initialValue: "=?",
            optionValues: "=?",
            edit: "=?",
            title: "@?",
            value: "=?",
            errorText: "@?",
            fieldType: "@?",
            property: "@?",
            binaryFileTarget: "@?",
            rawFileTarget: "@?",
            reverted: "=?",
            revertToValue: "=?",
            showRevert: "=?",
            inputAttributes: "@?",
            type: "@?",
            eventAnnouncers: "@?",
            context: "@?"
        };
        this.controller = SWInputController;
        this.controllerAs = "swInput";
        this.link = function (scope, element, attr) {
            if (scope.swInput.type === 'file') {
                if (angular.isUndefined(scope.swInput.object.data[scope.swInput.rawFileTarget])) {
                    scope.swInput.object[scope.swInput.rawFileTarget] = "";
                    scope.swInput.object.data[scope.swInput.rawFileTarget] = "";
                }
                var model = _this.$parse("swInput.object.data[swInput.rawFileTarget]");
                var modelSetter = model.assign;
                element.bind("change", function (e) {
                    var fileToUpload = (e.srcElement || e.target).files[0];
                    scope.$apply(function () {
                        modelSetter(scope, fileToUpload);
                    }, function () {
                        throw ("swinput couldn't apply the file to scope");
                    });
                    _this.$timeout(function () {
                        _this.fileService.uploadFile(fileToUpload, scope.swInput.object, scope.swInput.binaryFileTarget)
                            .then(function (result) {
                            scope.swInput.object[scope.swInput.property] = fileToUpload;
                            scope.swInput.onEvent(e, "change");
                        }, function () {
                            //error	notify user
                        });
                    });
                });
            }
            //renders the template and compiles it
            element.html(scope.swInput.getTemplate());
            _this.$compile(element.contents())(scope);
        };
    }
    SWInput.Factory = function () {
        var directive = function ($compile, $timeout, $parse, fileService) { return new SWInput($compile, $timeout, $parse, fileService); };
        directive.$inject = [
            '$compile',
            '$timeout',
            '$parse',
            'fileService'
        ];
        return directive;
    };
    return SWInput;
}());
exports.SWInput = SWInput;


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
//module
var core_module_1 = __webpack_require__(16);
//services
var fileservice_1 = __webpack_require__(632);
//directives
//  components
//form
var swinput_1 = __webpack_require__(630);
var swfformfield_1 = __webpack_require__(621);
var swform_1 = __webpack_require__(622);
var swformfield_1 = __webpack_require__(623);
var swformfieldfile_1 = __webpack_require__(624);
var swformfieldjson_1 = __webpack_require__(625);
var swformfieldsearchselect_1 = __webpack_require__(626);
var swformregistrar_1 = __webpack_require__(627);
var swerrordisplay_1 = __webpack_require__(620);
var swaddressform_1 = __webpack_require__(619);
var swpropertydisplay_1 = __webpack_require__(172);
var swfpropertydisplay_1 = __webpack_require__(629);
var swformsubscriber_1 = __webpack_require__(628);
var formmodule = angular.module('hibachi.form', ['angularjs-datetime-picker', core_module_1.coremodule.name]).config(function () {
})
    .constant('coreFormPartialsPath', 'form/components/')
    .service('fileService', fileservice_1.FileService)
    //directives
    .directive('swInput', swinput_1.SWInput.Factory())
    .directive('swfFormField', swfformfield_1.SWFFormField.Factory())
    .directive('swForm', swform_1.SWForm.Factory())
    .directive('swFormField', swformfield_1.SWFormField.Factory())
    .directive('swFormFieldFile', swformfieldfile_1.SWFormFieldFile.Factory())
    .directive('swFormFieldJson', swformfieldjson_1.SWFormFieldJson.Factory())
    .directive('swFormFieldSearchSelect', swformfieldsearchselect_1.SWFormFieldSearchSelect.Factory())
    .directive('swFormRegistrar', swformregistrar_1.SWFormRegistrar.Factory())
    .directive('swfPropertyDisplay', swfpropertydisplay_1.SWFPropertyDisplay.Factory(swfpropertydisplay_1.SWFPropertyDisplay, "swfpropertydisplay.html"))
    .directive('swPropertyDisplay', swpropertydisplay_1.SWPropertyDisplay.Factory(swpropertydisplay_1.SWPropertyDisplay, "propertydisplay.html"))
    .directive('swErrorDisplay', swerrordisplay_1.SWErrorDisplay.Factory())
    .directive('swAddressForm', swaddressform_1.SWAddressForm.Factory())
    .directive('swFormSubscriber', swformsubscriber_1.SWFormSubscriber.Factory());
exports.formmodule = formmodule;


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FileService = /** @class */ (function () {
    //@ngInject
    function FileService($q, observerService) {
        var _this = this;
        this.$q = $q;
        this.observerService = observerService;
        this.fileStates = {};
        this.imageExists = function (src) {
            var deferred = _this.$q.defer();
            var image = new Image();
            image.onerror = function () {
                deferred.reject();
            };
            image.onload = function () {
                deferred.resolve();
            };
            image.src = src;
            return deferred.promise;
        };
        this.uploadFile = function (file, object, property) {
            var deferred = _this.$q.defer();
            var promise = deferred.promise;
            var fileReader = new FileReader();
            fileReader.readAsDataURL(file);
            fileReader.onload = function (result) {
                object.data[property] = fileReader.result;
                deferred.resolve(fileReader.result);
            };
            fileReader.onerror = function (result) {
                deferred.reject();
                throw ("fileservice couldn't read the file");
            };
            return promise;
        };
    }
    return FileService;
}());
exports.FileService = FileService;


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWSaveAndFinishController = /** @class */ (function () {
    //@ngInject
    function SWSaveAndFinishController($hibachi, dialogService, alertService, rbkeyService, $log) {
        var _this = this;
        this.$hibachi = $hibachi;
        this.dialogService = dialogService;
        this.alertService = alertService;
        this.rbkeyService = rbkeyService;
        this.$log = $log;
        this.saving = false;
        this.initialSetup = function () {
            if (!angular.isDefined(_this.finish)) {
                _this.openNewDialog = false;
            }
            else {
                _this.openNewDialog = (_this.finish.toLowerCase() == 'true') ? false : true;
            }
            if (_this.openNewDialog) {
                _this.rbKey = 'admin.define.saveandnew';
            }
            else {
                _this.rbKey = 'admin.define.saveandfinish';
            }
        };
        this.save = function () {
            _this.saving = true;
            var savePromise = _this.entity.$$save();
            savePromise.then(function (data) {
                _this.dialogService.removeCurrentDialog();
                if (_this.openNewDialog && angular.isDefined(_this.partial)) {
                    _this.dialogService.addPageDialog(_this.partial);
                }
                else {
                    if (angular.isDefined(_this.redirectUrl)) {
                        window.location.href = _this.redirectUrl;
                    }
                    else if (angular.isDefined(_this.redirectAction)) {
                        if (angular.isUndefined(_this.redirectQueryString)) {
                            _this.redirectQueryString = "";
                        }
                        window.location.href = _this.$hibachi.buildUrl(_this.redirectAction, _this.redirectQueryString);
                    }
                    else {
                        _this.$log.debug("You did not specify a redirect for swSaveAndFinish");
                    }
                }
            }).catch(function (data) {
                if (angular.isDefined(_this.customErrorRbkey)) {
                    data = _this.rbkeyService.getRBKey(_this.customErrorRbkey);
                }
                if (angular.isString(data)) {
                    var alert = _this.alertService.newAlert();
                    alert.msg = data;
                    alert.type = "error";
                    alert.fade = true;
                    _this.alertService.addAlert(alert);
                }
                else {
                    _this.alertService.addAlerts(data);
                }
            }).finally(function () {
                _this.saving = false;
            });
        };
        if (!angular.isFunction(this.entity.$$save)) {
            throw ("Your entity does not have the $$save function.");
        }
        this.initialSetup();
    }
    return SWSaveAndFinishController;
}());
exports.SWSaveAndFinishController = SWSaveAndFinishController;
var SWSaveAndFinish = /** @class */ (function () {
    //@ngInject
    function SWSaveAndFinish(hibachiPartialsPath, hibachiPathBuilder) {
        this.hibachiPartialsPath = hibachiPartialsPath;
        this.restrict = "EA";
        this.scope = {};
        this.controller = SWSaveAndFinishController;
        this.controllerAs = "swSaveAndFinish";
        this.bindToController = {
            entity: "=",
            redirectUrl: "@?",
            redirectAction: "@?",
            redirectQueryString: "@?",
            finish: "@?",
            partial: "@?",
            customErrorRbkey: "@?"
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(hibachiPartialsPath) + "saveandfinish.html";
    }
    SWSaveAndFinish.Factory = function () {
        var directive = function (hibachiPartialsPath, hibachiPathBuilder) { return new SWSaveAndFinish(hibachiPartialsPath, hibachiPathBuilder); };
        directive.$inject = ["hibachiPartialsPath", "hibachiPathBuilder"];
        return directive;
    };
    return SWSaveAndFinish;
}());
exports.SWSaveAndFinish = SWSaveAndFinish;


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
//import alertmodule = require('./alert/alert.module');
var alert_module_1 = __webpack_require__(59);
var card_module_1 = __webpack_require__(489);
var collection_module_1 = __webpack_require__(167);
var listing_module_1 = __webpack_require__(649);
var dialog_module_1 = __webpack_require__(171);
var entity_module_1 = __webpack_require__(618);
var pagination_module_1 = __webpack_require__(653);
var form_module_1 = __webpack_require__(631);
var validation_module_1 = __webpack_require__(671);
var workflow_module_1 = __webpack_require__(686);
//directives
var swsaveandfinish_1 = __webpack_require__(633);
var hibachimodule = angular.module('hibachi', [
    alert_module_1.alertmodule.name,
    card_module_1.cardmodule.name,
    collection_module_1.collectionmodule.name,
    entity_module_1.entitymodule.name,
    dialog_module_1.dialogmodule.name,
    listing_module_1.listingmodule.name,
    pagination_module_1.paginationmodule.name,
    form_module_1.formmodule.name,
    validation_module_1.validationmodule.name,
    workflow_module_1.workflowmodule.name
]).config([function () {
    }])
    .run(['$rootScope', 'publicService', '$hibachi', 'localStorageService', function ($rootScope, publicService, $hibachi, localStorageService) {
        $rootScope.hibachiScope = publicService;
        $rootScope.hasAccount = publicService.hasAccount;
        if ($hibachi.newAccount) {
            $rootScope.hibachiScope.getAccount();
        }
        if ($hibachi.newOrder) {
            $rootScope.hibachiScope.getCart();
        }
        if ($hibachi.newCountry) {
            $rootScope.hibachiScope.getCountries();
        }
        if ($hibachi.newState) {
            $rootScope.hibachiScope.getStates();
        }
        if ($hibachi.newState) {
            $rootScope.hibachiScope.getAddressOptions();
        }
        if (localStorageService.hasItem('selectedPersonalCollection')) {
            $rootScope.hibachiScope.selectedPersonalCollection = angular.fromJson(localStorageService.getItem('selectedPersonalCollection'));
        }
    }])
    .constant('hibachiPartialsPath', 'hibachi/components/')
    .directive('swSaveAndFinish', swsaveandfinish_1.SWSaveAndFinish.Factory());
exports.hibachimodule = hibachimodule;


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingAggregateController = /** @class */ (function () {
    function SWListingAggregateController() {
        var _this = this;
        this.init = function () {
            _this.editable = _this.editable || false;
        };
        this.init();
    }
    return SWListingAggregateController;
}());
var SWListingAggregate = /** @class */ (function () {
    function SWListingAggregate() {
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyIdentifier: "@",
            aggregateFunction: "@",
            aggregateAlias: "@?"
        };
        this.controller = SWListingAggregateController;
        this.controllerAs = "swListingAggregate";
        this.link = function (scope, element, attrs) {
            var aggregate = {
                propertyIdentifier: scope.swListingAggregate.propertyIdentifier,
                aggregateFunction: scope.swListingAggregate.aggregateFunction,
                aggregateAlias: scope.swListingAggregate.aggregateAlias,
            };
            scope.$parent.swListingDisplay.aggregates.push(aggregate);
        };
    }
    SWListingAggregate.Factory = function () {
        var directive = function () { return new SWListingAggregate(); };
        directive.$inject = [];
        return directive;
    };
    return SWListingAggregate;
}());
exports.SWListingAggregate = SWListingAggregate;


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingColorFilterController = /** @class */ (function () {
    function SWListingColorFilterController() {
        this.init = function () {
        };
        this.init();
    }
    return SWListingColorFilterController;
}());
var SWListingColorFilter = /** @class */ (function () {
    function SWListingColorFilter(utilityService) {
        var _this = this;
        this.utilityService = utilityService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyToCompare: "@",
            comparisonOperator: "@",
            comparisonValue: "@",
            comparisonProperty: "@",
            colorClass: "@",
            color: "@"
        };
        this.controller = SWListingColorFilterController;
        this.controllerAs = "swListingColorFilter";
        this.link = function (scope, element, attrs) {
            var colorFilter = {
                propertyToCompare: scope.swListingColorFilter.propertyToCompare,
                comparisonOperator: scope.swListingColorFilter.comparisonOperator,
                comparisonValue: scope.swListingColorFilter.comparisonValue,
                comparisonProperty: scope.swListingColorFilter.comparisonProperty,
                colorClass: scope.swListingColorFilter.colorClass,
                color: scope.swListingColorFilter.color
            };
            if (_this.utilityService.ArrayFindByPropertyValue(scope.$parent.swListingDisplay.colorFilters, 'propertyToCompare', colorFilter.propertyToCompare) === -1) {
                scope.$parent.swListingDisplay.colorFilters.push(colorFilter);
            }
        };
    }
    SWListingColorFilter.Factory = function () {
        var directive = function (utilityService) { return new SWListingColorFilter(utilityService); };
        directive.$inject = [
            'utilityService'
        ];
        return directive;
    };
    return SWListingColorFilter;
}());
exports.SWListingColorFilter = SWListingColorFilter;


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingColumnController = /** @class */ (function () {
    //@ngInject
    function SWListingColumnController($injector, utilityService, listingService, rbkeyService) {
        var _this = this;
        this.$injector = $injector;
        this.utilityService = utilityService;
        this.listingService = listingService;
        this.rbkeyService = rbkeyService;
        this.hasCellView = false;
        this.hasHeaderView = false;
        this.$onInit = function () {
            if (angular.isUndefined(_this.isVisible)) {
                _this.isVisible = true;
            }
            if (angular.isUndefined(_this.isExportable)) {
                _this.isExportable = true;
            }
            if (angular.isUndefined(_this.isDeletable)) {
                _this.isDeletable = true;
            }
            if (angular.isUndefined(_this.search)) {
                _this.search = true;
            }
            _this.editable = _this.editable || false;
            //did a cellView get suggested, if so does it exist
            if (_this.cellView) {
                if (_this.$injector.has(_this.cellView + 'Directive')) {
                    _this.hasCellView = true;
                }
                else {
                    throw (_this.cellView + ' is not an existing directive');
                }
            }
            if (_this.headerView) {
                if (_this.$injector.has(_this.headerView + 'Directive')) {
                    _this.hasHeaderView = true;
                }
                else {
                    throw (_this.headerView + ' is not an existing directive');
                }
            }
            _this.column = {
                columnID: "C" + _this.utilityService.createID(31),
                propertyIdentifier: _this.propertyIdentifier,
                fallbackPropertyIdentifiers: _this.fallbackPropertyIdentifiers,
                processObjectProperty: _this.processObjectProperty,
                title: _this.title,
                tdclass: _this.tdclass,
                search: _this.search,
                sort: _this.sort,
                filter: _this.filter,
                range: _this.range,
                editable: _this.editable,
                buttonGroup: _this.buttonGroup,
                hasCellView: _this.hasCellView,
                hasHeaderView: _this.hasHeaderView,
                isVisible: _this.isVisible,
                isDeletable: _this.isDeletable,
                isSearchable: _this.search,
                isExportable: _this.isExportable,
                action: _this.action,
                queryString: _this.queryString,
                persistent: _this.persistent
            };
            if (_this.hasCellView) {
                _this.column.cellView = _this.cellView;
            }
            if (_this.hasHeaderView) {
                _this.column.headerView = _this.utilityService.camelCaseToSnakeCase(_this.headerView);
            }
            //aggregate logic
            if (_this.aggregate) {
                _this.column.aggregate = _this.aggregate;
                _this.column.aggregate.propertyIdentifier = _this.propertyIdentifier;
            }
        };
        this.$injector = $injector;
        this.utilityService = utilityService;
        this.listingService = listingService;
        this.rbkeyService = rbkeyService;
    }
    return SWListingColumnController;
}());
var SWListingColumn = /** @class */ (function () {
    //@ngInject
    function SWListingColumn(listingService) {
        var _this = this;
        this.listingService = listingService;
        this.restrict = 'EA';
        this.scope = true;
        this.require = { swListingDisplay: "?^swListingDisplay" };
        this.bindToController = {
            propertyIdentifier: "@",
            processObjectProperty: "@?",
            //defined as aggregate = {aggregateFunction:'COUNT',aggregateAlias:'aliasstring'}
            aggregate: "=?",
            title: "@?",
            tdclass: "@?",
            search: "=?",
            sort: "=?",
            filter: "=?",
            isVisible: "=?",
            isDeletable: "=?",
            isExportable: "=?",
            range: "=?",
            editable: "=?",
            buttonGroup: "=?",
            cellView: "@?",
            headerView: "@?",
            fallbackPropertyIdentifiers: "@?",
            action: "@?",
            queryString: "@?"
        };
        this.controller = SWListingColumnController;
        this.controllerAs = "swListingColumn";
        this.link = function (scope, elem, attr, listingService) {
            if (angular.isDefined(scope.swListingDisplay)
                && scope.swListingDisplay.tableID
                && scope.swListingDisplay.tableID.length) {
                var listingDisplayID = scope.swListingDisplay.tableID;
                if (scope.swListingDisplay.usePersonalCollection != true
                    && scope.swListingDisplay.columns) {
                    _this.listingService.addColumn(listingDisplayID, scope.swListingColumn.column);
                    _this.listingService.setupColumn(listingDisplayID, scope.swListingColumn.column);
                }
            }
            else if (angular.isDefined(scope.swListingColumn.swListingDisplay)
                && scope.swListingColumn.swListingDisplay.tableID
                && scope.swListingColumn.swListingDisplay.tableID.length
                && scope.swListingColumn.swListingDisplay.usePersonalCollection != true
                && scope.swListingColumn.swListingDisplay.columns) {
                var listingDisplayID = scope.swListingColumn.swListingDisplay.tableID;
                _this.listingService.addColumn(listingDisplayID, scope.swListingColumn.column);
            }
            else {
                throw ("listing display scope not available to sw-listing-column or there is no table id");
            }
        };
    }
    SWListingColumn.Factory = function () {
        var directive = function (listingService) { return new SWListingColumn(listingService); };
        directive.$inject = [
            'listingService'
        ];
        return directive;
    };
    return SWListingColumn;
}());
exports.SWListingColumn = SWListingColumn;


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingControlsController = /** @class */ (function () {
    //@ngInject
    function SWListingControlsController($hibachi, metadataService, collectionService, listingService, observerService) {
        var _this = this;
        this.$hibachi = $hibachi;
        this.metadataService = metadataService;
        this.collectionService = collectionService;
        this.listingService = listingService;
        this.observerService = observerService;
        this.displayOptionsClosed = true;
        this.filtersClosed = true;
        this.personalCollectionsClosed = true;
        this.columnIsControllableMap = {};
        this.filterActions = function (res) {
            if (res.action == 'add' || res.action == 'remove') {
                _this.observerService.notifyById('swPaginationAction', _this.tableId, { type: 'setCurrentPage', payload: 1 });
            }
            _this.filtersClosed = true;
        };
        this.getSelectedSearchColumnName = function () {
            return (angular.isUndefined(_this.selectedSearchColumn)) ? 'All' : _this.selectedSearchColumn.title;
        };
        this.canDisplayColumn = function (column) {
            if (!_this.listingColumns || !_this.listingColumns.length) {
                return true;
            }
            if (angular.isDefined(_this.columnIsControllableMap[column.propertyIdentifier])) {
                return _this.columnIsControllableMap[column.propertyIdentifier];
            }
            for (var i = 0; i < _this.listingColumns.length; i++) {
                if (column.propertyIdentifier == _this.listingColumns[i].propertyIdentifier) {
                    _this.columnIsControllableMap[column.propertyIdentifier] = true;
                }
            }
            if (!_this.columnIsControllableMap[column.propertyIdentifier]) {
                _this.columnIsControllableMap[column.propertyIdentifier] = false;
            }
            return _this.columnIsControllableMap[column.propertyIdentifier];
        };
        this.addSearchFilter = function () {
            if (angular.isUndefined(_this.selectedSearchColumn) || !_this.searchText)
                return;
            var keywords = _this.searchText.split(" ");
            for (var i = 0; i < keywords.length; i++) {
                _this.collectionConfig.addLikeFilter(_this.selectedSearchColumn.propertyIdentifier, keywords[i], '%w%', undefined, _this.selectedSearchColumn.title);
            }
            _this.searchText = '';
            _this.collectionConfig.setKeywords(_this.searchText);
            _this.observerService.notifyById('swPaginationAction', _this.tableId, { type: 'setCurrentPage', payload: 1 });
        };
        this.toggleDisplayOptions = function (closeButton) {
            if (closeButton === void 0) { closeButton = false; }
            if (closeButton) {
                _this.displayOptionsClosed = true;
            }
            else {
                _this.displayOptionsClosed = !_this.displayOptionsClosed;
            }
        };
        this.setItemInUse = function (booleanValue) {
            _this.itemInUse = booleanValue;
        };
        this.removeFilter = function (array, index, reloadCollection) {
            if (reloadCollection === void 0) { reloadCollection = true; }
            array.splice(index, 1);
            if (reloadCollection) {
                _this.observerService.notifyById('swPaginationAction', _this.tableId, { type: 'setCurrentPage', payload: 1 });
            }
        };
        this.toggleFilters = function () {
            if (_this.filtersClosed) {
                if (_this.simple) {
                    _this.newFilterPosition = _this.collectionService.newFilterItem(_this.collectionConfig.filterGroups[0].filterGroup, _this.setItemInUse);
                }
            }
            _this.filtersClosed = !_this.filtersClosed;
        };
        this.togglePersonalCollections = function () {
            _this.personalCollectionsClosed = !_this.personalCollectionsClosed;
        };
        this.selectFilterItem = function (filterItem) {
            _this.filtersClosed = false;
            _this.collectionService.selectFilterItem(filterItem);
        };
        this.saveCollection = function (collectionConfig) {
            if (collectionConfig) {
                _this.collectionConfig = collectionConfig;
            }
            _this.swListingDisplay.collectionConfig = _this.collectionConfig;
            _this.observerService.notifyById('swPaginationAction', _this.tableId, { type: 'setCurrentPage', payload: 1 });
        };
        this.exportCollection = function () {
            _this.swListingDisplay.exportCurrentList();
        };
        this.printCollection = function (printTemplateID) {
            _this.swListingDisplay.printCurrentList(printTemplateID);
        };
        if (angular.isUndefined(this.showPrintOptions)) {
            this.showPrintOptions = false;
        }
        if (angular.isUndefined(this.showExport)) {
            this.showExport = true;
        }
        if (angular.isUndefined(this.showToggleSearch)) {
            this.showToggleSearch = true;
        }
        if (angular.isUndefined(this.showToggleFilters)) {
            this.showToggleFilters = true;
        }
        if (angular.isUndefined(this.showToggleDisplayOptions)) {
            this.showToggleDisplayOptions = true;
        }
        if (angular.isUndefined(this.showFilters)) {
            this.showFilters = false;
        }
        this.backupColumnsConfig = this.collectionConfig.getColumns();
        if (angular.isDefined(this.tableId)) {
            this.listingColumns = this.listingService.getListingColumns(this.tableId);
        }
        if (angular.isUndefined(this.simple)) {
            this.simple = true;
        }
        this.filterPropertiesList = {};
        $hibachi.getFilterPropertiesByBaseEntityName(this.collectionConfig.baseEntityAlias).then(function (value) {
            metadataService.setPropertiesList(value, _this.collectionConfig.baseEntityAlias);
            _this.filterPropertiesList[_this.collectionConfig.baseEntityAlias] = metadataService.getPropertiesListByBaseEntityAlias(_this.collectionConfig.baseEntityAlias);
            metadataService.formatPropertiesList(_this.filterPropertiesList[_this.collectionConfig.baseEntityAlias], _this.collectionConfig.baseEntityAlias);
        });
        this.observerService.attach(this.filterActions, 'filterItemAction');
    }
    return SWListingControlsController;
}());
var SWListingControls = /** @class */ (function () {
    function SWListingControls(collectionPartialsPath, hibachiPathBuilder) {
        this.collectionPartialsPath = collectionPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'E';
        this.scope = {};
        this.require = { swListingDisplay: '?^swListingDisplay' };
        this.bindToController = {
            collectionConfig: "=",
            tableId: "=?",
            getCollection: "&",
            showExport: "=?",
            showFilters: "=?",
            showPrintOptions: "=?",
            showToggleSearch: "=?",
            showToggleFilters: "=?",
            showToggleDisplayOptions: "=?",
            displayOptionsClosed: "=?",
            simple: "=?"
        };
        this.controller = SWListingControlsController;
        this.controllerAs = 'swListingControls';
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath) + "listingcontrols.html";
    }
    SWListingControls.Factory = function () {
        var directive = function (listingPartialPath, hibachiPathBuilder) { return new SWListingControls(listingPartialPath, hibachiPathBuilder); };
        directive.$inject = ['listingPartialPath', 'hibachiPathBuilder'];
        return directive;
    };
    SWListingControls.$inject = ['listingPartialPath', 'hibachiPathBuilder'];
    return SWListingControls;
}());
exports.SWListingControls = SWListingControls;


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
/* SwListingDisableRule
 * defines a filter, by which to determine what rows will be disabled
 */
var SWListingDisableRuleController = /** @class */ (function () {
    //@ngInject
    function SWListingDisableRuleController($q) {
        this.$q = $q;
    }
    return SWListingDisableRuleController;
}());
var SWListingDisableRule = /** @class */ (function () {
    function SWListingDisableRule(scopeService, $q) {
        var _this = this;
        this.scopeService = scopeService;
        this.$q = $q;
        this.restrict = 'EA';
        this.scope = true;
        this.template = "\n        \n    ";
        this.bindToController = {
            filterPropertyIdentifier: "@",
            filterComparisonOperator: "@",
            filterComparisonValue: "@"
        };
        this.controller = SWListingDisableRuleController;
        this.controllerAs = "swListingDisableRule";
        this.link = function (scope, element, attrs) {
            var rule = {
                filterPropertyIdentifier: scope.swListingDisableRule.filterPropertyIdentifier,
                filterComparisonOperator: scope.swListingDisableRule.filterComparisonOperator,
                filterComparisonValue: scope.swListingDisableRule.filterComparisonValue
            };
            var listingDisplayScope = _this.scopeService.getRootParentScope(scope, "swListingDisplay");
            if (angular.isDefined(listingDisplayScope.swListingDisplay)) {
                listingDisplayScope = listingDisplayScope.swListingDisplay;
            }
            else {
                throw ("listing display scope not available to sw-listing-disable-rule");
            }
            listingDisplayScope.disableRules.push(rule);
        };
    }
    SWListingDisableRule.Factory = function () {
        var directive = function (scopeService, $q) { return new SWListingDisableRule(scopeService, $q); };
        directive.$inject = [
            'scopeService',
            '$q'
        ];
        return directive;
    };
    return SWListingDisableRule;
}());
exports.SWListingDisableRule = SWListingDisableRule;


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingDisplayController = /** @class */ (function () {
    //@ngInject
    function SWListingDisplayController($scope, $rootScope, $transclude, $timeout, $q, $hibachi, utilityService, collectionConfigService, listingService, paginationService, selectionService, observerService, rbkeyService, localStorageService) {
        var _this = this;
        this.$scope = $scope;
        this.$rootScope = $rootScope;
        this.$transclude = $transclude;
        this.$timeout = $timeout;
        this.$q = $q;
        this.$hibachi = $hibachi;
        this.utilityService = utilityService;
        this.collectionConfigService = collectionConfigService;
        this.listingService = listingService;
        this.paginationService = paginationService;
        this.selectionService = selectionService;
        this.observerService = observerService;
        this.rbkeyService = rbkeyService;
        this.localStorageService = localStorageService;
        /* local state variables */
        this.actions = [];
        this.allpropertyidentifiers = "";
        this.allprocessobjectproperties = "false";
        this.aggregates = [];
        this.buttonGroup = [];
        this.childCollectionConfigs = {};
        this.collectionConfigs = [];
        this.collectionObjects = [];
        this.colorFilters = [];
        this.columns = [];
        this.disableRules = [];
        this.expandableRules = [];
        this.exampleEntity = "";
        this.filters = [];
        this.filterGroups = [];
        this.hideRules = [];
        this.multiselectable = false;
        this.orderBys = [];
        this.orderByStates = {};
        this.orderByIndices = {};
        this.pageRecordsWithManualSortOrder = {};
        this.searching = false;
        this.selectable = false;
        this.showSearchFilters = false;
        this.sortable = false;
        this.processCollection = function () {
            _this.initializeState();
            if (angular.isDefined(_this.collectionPromise)) {
                _this.hasCollectionPromise = true;
                _this.multipleCollectionDeffered.reject();
            }
            if (_this.collectionConfig != null) {
                _this.multipleCollectionDeffered.reject();
            }
            _this.listingService.setListingState(_this.tableID, _this);
            //this is performed after the listing state is set above to populate columns and multiple collectionConfigs if present
            _this.$transclude(_this.$scope, function () { });
            _this.hasCollectionPromise = angular.isDefined(_this.collectionPromise);
            if (_this.multiSlot) {
                _this.singleCollectionPromise.then(function () {
                    _this.multipleCollectionDeffered.reject();
                });
                _this.multipleCollectionPromise.then(function () {
                    //now do the intial setup
                    _this.listingService.setupInMultiCollectionConfigMode(_this.tableID);
                }).catch(function () {
                    //do the initial setup for single collection mode
                    _this.listingService.setupInSingleCollectionConfigMode(_this.tableID, _this.$scope);
                }).finally(function () {
                    if (angular.isUndefined(_this.getCollection)) {
                        _this.getCollection = _this.listingService.setupDefaultGetCollection(_this.tableID);
                    }
                    _this.paginator.getCollection = _this.getCollection;
                    _this.observerService.attach(_this.getCollectionObserver, 'getCollection', _this.tableID);
                });
            }
            else if (_this.multiSlot == false) {
                if (_this.columns && _this.columns.length) {
                    _this.collectionConfig.columns = _this.columns;
                }
                _this.setupCollectionPromise();
            }
            if (!_this.collectionObject && (_this.collectionConfig && _this.collectionConfig.baseEntityName)) {
                _this.collectionObject = _this.collectionConfig.baseEntityName;
            }
            if (_this.collectionObject) {
                _this.exampleEntity = _this.$hibachi.getEntityExample(_this.collectionObject);
            }
            _this.observerService.attach(_this.getCollectionByPagination, 'swPaginationAction', _this.tableID);
        };
        this.getCollectionByPagination = function (state) {
            if (state.type) {
                switch (state.type) {
                    case 'setCurrentPage':
                        _this.collectionConfig.currentPage = state.payload;
                        break;
                    case 'nextPage':
                        _this.collectionConfig.currentPage = state.payload;
                        break;
                    case 'prevPage':
                        _this.collectionConfig.currentPage = state.payload;
                        break;
                    case 'setPageShow':
                        _this.collectionConfig.currentPage = 1;
                        _this.collectionConfig.setPageShow(state.payload);
                        break;
                }
                _this.getCollection = _this.collectionConfig.getEntity().then(function (data) {
                    _this.collectionData = data;
                    _this.observerService.notifyById('swPaginationUpdate', _this.tableID, _this.collectionData);
                });
            }
        };
        this.setupCollectionPromise = function () {
            if (angular.isUndefined(_this.getCollection)) {
                _this.getCollection = _this.listingService.setupDefaultGetCollection(_this.tableID);
            }
            _this.paginator.getCollection = _this.getCollection;
            var getCollectionEventID = _this.tableID;
            //this.observerService.attach(this.getCollectionObserver,'getCollection',getCollectionEventID);
            _this.listingService.getCollection(_this.tableID);
        };
        this.getCollectionObserver = function (param) {
            _this.collectionConfig.loadJson(param.collectionConfig);
            _this.collectionData = undefined;
            _this.$timeout(function () {
                _this.getCollection();
            });
        };
        this.initializeState = function () {
            if (_this.name != null) {
                _this.tableID = _this.name;
            }
            else {
                _this.tableID = 'LD' + _this.utilityService.createID();
            }
            if (angular.isUndefined(_this.collectionConfig)) {
                //make it available to swCollectionConfig
                _this.collectionConfig = null;
            }
            if (angular.isUndefined(_this.multiSlot)) {
                _this.multiSlot = false;
            }
            if (angular.isDefined(_this.administrativeCount)) {
                _this.administrativeCount = parseInt(_this.administrativeCount);
            }
            else {
                _this.administrativeCount = 0;
            }
            if (_this.recordDetailAction && _this.recordDetailAction.length) {
                _this.administrativeCount++;
                _this.adminattributes = _this.getAdminAttributesByType('detail');
            }
            if (_this.recordEditAction && _this.recordEditAction.length) {
                _this.administrativeCount++;
                _this.adminattributes = _this.getAdminAttributesByType('edit');
            }
            if (_this.recordDeleteAction && _this.recordDeleteAction.length) {
                _this.administrativeCount++;
                _this.adminattributes = _this.getAdminAttributesByType('delete');
            }
            if (_this.recordAddAction && _this.recordAddAction.length) {
                _this.administrativeCount++;
                _this.adminattributes = _this.getAdminAttributesByType('add');
            }
            if (_this.collectionConfig != null &&
                angular.isDefined(_this.collection) &&
                angular.isDefined(_this.collection.collectionConfig)) {
                _this.collectionConfig = _this.collection.collectionConfig;
            }
            if (angular.isUndefined(_this.collectionObject) &&
                angular.isDefined(_this.collection) &&
                angular.isDefined(_this.collection.collectionObject)) {
                _this.collectionObject = _this.collection.collectionObject;
            }
            //set defaults if value is not specifies
            _this.processObjectProperties = _this.processObjectProperties || '';
            _this.recordProcessButtonDisplayFlag = _this.recordProcessButtonDisplayFlag || true;
            _this.norecordstext = _this.rbkeyService.getRBKey('entity.' + _this.collectionObject + '.norecords');
            if (angular.isUndefined(_this.defaultSelectEvent)) {
                _this.defaultSelectEvent = 'swSelectionToggleSelection' + _this.tableID;
            }
            if (angular.isUndefined(_this.isAngularRoute)) {
                _this.isAngularRoute = true;
            }
            if (angular.isUndefined(_this.customListingControls)) {
                _this.customListingControls = false;
            }
            if (angular.isUndefined(_this.hasSearch)) {
                _this.hasSearch = true;
                _this.showSearch = true;
            }
            if (angular.isUndefined(_this.showOrderBy)) {
                _this.showOrderBy = true;
            }
            if (angular.isUndefined(_this.showPrintOptions)) {
                _this.showPrintOptions = false;
            }
            if (angular.isUndefined(_this.showToggleDisplayOptions)) {
                _this.showToggleDisplayOptions = true;
            }
            if (angular.isUndefined(_this.expandable)) {
                _this.expandable = false;
            }
            //setup export action
            if (angular.isUndefined(_this.exportAction)) {
                _this.exportAction = _this.$hibachi.buildUrl('main.collectionExport') + '&collectionExportID=';
            }
            //setup print action
            if (angular.isDefined(_this.printAction)) {
                _this.printAction = _this.$hibachi.buildUrl('main.collectionPrint') + '&collectionExportID=';
            }
            //setup email action
            if (angular.isDefined(_this.emailAction)) {
                _this.emailAction = _this.$hibachi.buildUrl('main.collectionEmail') + '&collectionExportID=';
            }
            _this.paginator = _this.paginationService.createPagination(_this.tableID);
            _this.hasCollectionPromise = false;
            if (angular.isUndefined(_this.getChildCount)) {
                _this.getChildCount = false;
            }
            //Setup table class
            _this.tableclass = _this.tableclass || '';
            _this.tableclass = _this.utilityService.listPrepend(_this.tableclass, 'table table-bordered table-hover', ' ');
            if (_this.collectionConfig) {
                _this.collectionConfig.setEventID(_this.tableID);
            }
            if (angular.isDefined(_this.sortableFieldName)) {
                _this.sortableFieldName = "sorting" + _this.tableID;
            }
        };
        this.getListingPageRecordsUpdateEventString = function () {
            return _this.listingService.getListingPageRecordsUpdateEventString(_this.tableID);
        };
        this.getKeyOfMatchedHideRule = function (pageRecord) {
            return _this.listingService.getKeyOfMatchedHideRule(_this.tableID, pageRecord);
        };
        this.getPageRecordMatchesHideRule = function (pageRecord) {
            return _this.listingService.getPageRecordMatchesHideRule(_this.tableID, pageRecord);
        };
        this.getPageRecordValueByColumn = function (pageRecord, column) {
            return _this.listingService.getPageRecordValueByColumn(pageRecord, column);
        };
        this.getKeyOfMatchedDisableRule = function (pageRecord) {
            return _this.listingService.getKeyOfMatchedExpandableRule(_this.tableID, pageRecord);
        };
        this.getPageRecordMatchesDisableRule = function (pageRecord) {
            return _this.listingService.getPageRecordMatchesDisableRule(_this.tableID, pageRecord);
        };
        this.getKeyOfMatchedExpandableRule = function (pageRecord) {
            return _this.listingService.getKeyOfMatchedExpandableRule(_this.tableID, pageRecord);
        };
        this.getPageRecordMatchesExpandableRule = function (pageRecord) {
            return _this.listingService.getPageRecordMatchesExpandableRule(_this.tableID, pageRecord);
        };
        this.getPageRecordChildCollectionConfigForExpandableRule = function (pageRecord) {
            return _this.listingService.getPageRecordChildCollectionConfigForExpandableRule(_this.tableID, pageRecord);
        };
        this.getPageRecordRefreshChildrenEvent = function (pageRecord) {
            if (_this.listingService.hasPageRecordRefreshChildrenEvent(_this.tableID, pageRecord)) {
                return _this.listingService.getPageRecordRefreshChildrenEvent(_this.tableID, pageRecord);
            }
            else {
                return "";
            }
        };
        this.getExampleEntityForExpandableRecord = function (pageRecord) {
            return _this.listingService.getExampleEntityForExpandableRecord(_this.tableID, pageRecord);
        };
        this.getNGClassObjectForPageRecordRow = function (pageRecord) {
            return _this.listingService.getNGClassObjectForPageRecordRow(_this.tableID, pageRecord);
        };
        this.getNGClassObjectForPageRecordCell = function (pageRecord, column) {
            var classObjectString = "{";
            return classObjectString + "}";
        };
        this.getColorFilterConditionString = function (colorFilter, pageRecord) {
            return _this.listingService.getColorFilterConditionString(colorFilter, pageRecord);
        };
        this.hasSingleCollectionConfig = function () {
            return _this.collectionConfig && _this.collectionConfigs.length == 0;
        };
        this.toggleOrderBy = function (column) {
            _this.listingService.toggleOrderBy(_this.tableID, column);
        };
        this.showCalculation = function (show) {
            if (show === void 0) { show = "total"; }
            // Hide all other calculations
            $(".sw-" + (show == "total" ? "average" : "total")).hide();
            // Show all of the chosen calculations
            $(".sw-" + show).show();
        };
        this.hasNumerical = function () {
            // Iterate over columns, find out if we have any numericals and return
            return _this.columns.reduce(function (totalNumericalCols, col) {
                return totalNumericalCols + (col.ormtype && 'big_decimal,integer,float,double'.indexOf(col.ormtype) >= 0) ? 1 : 0;
            });
        };
        this.columnOrderByIndex = function (column) {
            return _this.listingService.columnOrderByIndex(_this.tableID, column);
        };
        this.updateMultiselectValues = function (res) {
            _this.multiselectValues = _this.selectionService.getSelections(_this.tableID);
            if (_this.selectionService.isAllSelected(_this.tableID)) {
                _this.multiselectCount = _this.collectionData.recordsCount - _this.selectionService.getSelectionCount(_this.tableID);
            }
            else {
                _this.multiselectCount = _this.selectionService.getSelectionCount(_this.tableID);
            }
            switch (res.action) {
                case 'uncheck':
                    _this.isCurrentPageRecordsSelected = false;
                    break;
                case 'selectAll':
                    _this.allSelected = true;
                    _this.isCurrentPageRecordsSelected = false;
                    break;
                case 'clear':
                    _this.allSelected = false;
                    _this.isCurrentPageRecordsSelected = false;
                    break;
            }
            //dispatch the update to the store.
            _this.listingService.listingDisplayStore.dispatch({
                type: "CURRENT_PAGE_RECORDS_SELECTED",
                payload: { listingID: _this.tableID, selectionCount: _this.multiselectCount, values: _this.multiselectValues }
            });
        };
        this.getPageRecordKey = function (propertyIdentifier) {
            return _this.listingService.getPageRecordKey(propertyIdentifier);
        };
        this.getAdminAttributesByType = function (type) {
            var recordActionName = 'record' + type.toUpperCase() + 'Action';
            var recordActionPropertyName = recordActionName + 'Property';
            var recordActionQueryStringName = recordActionName + 'QueryString';
            var recordActionModalName = recordActionName + 'Modal';
            _this.adminattributes = _this.utilityService.listAppend(_this.adminattributes, 'data-' + type + 'action="' + _this[recordActionName] + '"', " ");
            if (_this[recordActionPropertyName] && _this[recordActionPropertyName].length) {
                _this.adminattributes = _this.utilityService.listAppend(_this.adminattributes, 'data-' + type + 'actionproperty="' + _this[recordActionPropertyName] + '"', " ");
            }
            _this.adminattributes = _this.utilityService.listAppend(_this.adminattributes, 'data-' + type + 'querystring="' + _this[recordActionQueryStringName] + '"', " ");
            _this.adminattributes = _this.utilityService.listAppend(_this.adminattributes, 'data-' + type + 'modal="' + _this[recordActionModalName] + '"', " ");
        };
        this.getExportAction = function () {
            return _this.exportAction + _this.collectionID;
        };
        this.getPrintAction = function () {
            return _this.printAction + _this.collectionID;
        };
        this.getEmailAction = function () {
            return _this.emailAction + _this.collectionID;
        };
        this.exportCurrentList = function (selection) {
            if (selection === void 0) { selection = false; }
            if (_this.collectionConfigs.length == 0) {
                var exportCollectionConfig = angular.copy(_this.collectionConfig.getCollectionConfig());
                if (selection && !angular.isUndefined(_this.selectionService.getSelections(_this.tableID))
                    && (_this.selectionService.getSelections(_this.tableID).length > 0)) {
                    exportCollectionConfig.filterGroups[0].filterGroup = [
                        {
                            "displayPropertyIdentifier": _this.rbkeyService.getRBKey("entity." + exportCollectionConfig.baseEntityName.toLowerCase() + "." + _this.exampleEntity.$$getIDName().toLowerCase()),
                            "propertyIdentifier": exportCollectionConfig.baseEntityAlias + "." + _this.exampleEntity.$$getIDName(),
                            "comparisonOperator": (_this.allSelected) ? "not in" : "in",
                            "value": _this.selectionService.getSelections(_this.tableID).join(),
                            "displayValue": _this.selectionService.getSelections(_this.tableID).join(),
                            "ormtype": "string",
                            "fieldtype": "id",
                            "conditionDisplay": "In List"
                        }
                    ];
                }
            }
            else {
                //multiCollectionConfig logic
            }
            $('body').append('<form action="/?' + _this.$hibachi.getConfigValue('action') + '=main.collectionConfigExport" method="post" id="formExport"></form>');
            $('#formExport')
                .append("<input type='hidden' name='collectionConfig' value='" + angular.toJson(exportCollectionConfig) + "' />")
                .submit()
                .remove();
        };
        this.printCurrentList = function (printTemplateID) {
            var exportCollectionConfig = angular.copy(_this.collectionConfig.getCollectionConfig());
            $('body').append('<form action="?s=1" method="post" id="formPrint"></form>');
            $('#formPrint')
                .append("<input type='hidden' name='" + _this.$hibachi.getConfigValue('action') + "' value='entity.processPrint' />")
                .append("<input type='hidden' name='redirectAction' value='admin:entity.list" + _this.baseEntityName.toLowerCase() + "' />")
                .append("<input type='hidden' name='processContext' value='addToQueue' />")
                .append("<input type='hidden' name='printID' value='' />")
                .append("<input type='hidden' name='printTemplateID' value='" + printTemplateID + "' />")
                .append("<input type='hidden' name='collectionConfig' value='" + angular.toJson(exportCollectionConfig) + "' />");
            $('#formPrint')
                .submit()
                .remove();
        };
        this.paginationPageChange = function (res) {
            _this.isCurrentPageRecordsSelected = false;
        };
        this.selectCurrentPageRecords = function () {
            _this.listingService.selectCurrentPageRecords(_this.tableID);
        };
        //these are no longer going to work
        this.clearSelection = function () {
            _this.selectionService.clearSelection(_this.tableID);
        };
        this.selectAll = function () {
            _this.selectionService.selectAll(_this.tableID);
        };
        //Invariant - We must have some way to instantiate. Everything can't be optional. --commented out due to breaking sku listing on product detail page
        // if (!(this.collectionConfig) && !this.collectionConfigs.length && !this.collection){
        //     return;
        // }
        if (angular.isUndefined(this.usingPersonalCollection)) {
            this.usingPersonalCollection = false;
        }
        if (angular.isUndefined(this.showExport)) {
            this.showExport = true;
        }
        //promises to determine which set of logic will run
        this.multipleCollectionDeffered = $q.defer();
        this.multipleCollectionPromise = this.multipleCollectionDeffered.promise;
        this.singleCollectionDeferred = $q.defer();
        this.singleCollectionPromise = this.singleCollectionDeferred.promise;
        if (angular.isDefined(this.collection) && angular.isString(this.collection)) {
            //not sure why we have two properties for this
            this.baseEntityName = this.collection;
            this.collectionObject = this.collection;
            this.collectionConfig = this.collectionConfigService.newCollectionConfig(this.collectionObject);
            this.$timeout(function () {
                _this.collection = _this.collectionConfig;
                _this.columns = _this.collectionConfig.columns;
            });
            this.multipleCollectionDeffered.reject();
        }
        if (this.usingPersonalCollection && this.localStorageService.hasItem('selectedPersonalCollection') && this.localStorageService.getItem('selectedPersonalCollection')[this.baseEntityName.toLowerCase()] && (angular.isUndefined(this.personalCollectionIdentifier) || (angular.isDefined(this.localStorageService.getItem('selectedPersonalCollection')[this.baseEntityName.toLowerCase()]['collectionDescription']) && this.localStorageService.getItem('selectedPersonalCollection')[this.baseEntityName.toLowerCase()]['collectionDescription'] == this.personalCollectionIdentifier))) {
            var personalCollection = this.collectionConfigService.newCollectionConfig('Collection');
            personalCollection.setDisplayProperties('collectionConfig');
            personalCollection.addFilter('collectionID', this.localStorageService.getItem('selectedPersonalCollection')[this.baseEntityName.toLowerCase()].collectionID);
            // personalCollection.addFilter('collectionDescription',this.personalCollectionIdentifier);
            var originalMultiSlotValue = angular.copy(this.multiSlot);
            this.multiSlot = false;
            personalCollection.getEntity().then(function (data) {
                if (data.pageRecords.length) {
                    _this.collectionConfig = _this.collectionConfigService.newCollectionConfig().loadJson(data.pageRecords[0].collectionConfig);
                    console.log('collectionConfig', _this.collectionConfig);
                    _this.collectionObject = _this.baseEntityName;
                    _this.$timeout(function () {
                        _this.collection = _this.collectionConfig;
                        _this.columns = _this.collectionConfig.columns;
                    });
                }
                else {
                    _this.multiSlot = originalMultiSlotValue;
                }
                _this.processCollection();
            });
        }
        else {
            $rootScope.hibachiScope.selectedPersonalCollection = undefined;
            this.processCollection();
        }
    }
    return SWListingDisplayController;
}());
var SWListingDisplay = /** @class */ (function () {
    //@ngInject
    function SWListingDisplay(listingPartialPath, hibachiPathBuilder) {
        this.listingPartialPath = listingPartialPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'E';
        this.scope = {};
        this.transclude = {
            addAction: "?swListingAddAction",
            detailAction: "?swListingDetailAction",
            deleteAction: "?swListingDeleteAction",
            editAction: "?swListingEditAction",
            saveAction: "?swListingSaveAction",
            columns: "?swListingColumns",
            collectionConfigs: "?swCollectionConfigs",
            disableRules: "?swDisabledRowRules",
            expandableRules: "?swExpandableRowRules",
            customListingControls: "?swCustomListingControls"
        };
        this.bindToController = {
            usingPersonalCollection: "<?",
            personalCollectionIdentifier: '@?',
            isRadio: "<?",
            angularLinks: "<?",
            isAngularRoute: "<?",
            name: "@?",
            /*required*/
            collection: "<?",
            collectionConfig: "<?",
            getCollection: "&?",
            collectionPromise: "<?",
            edit: "<?",
            /*Optional*/
            title: "<?",
            childPropertyName: "@?",
            baseEntity: "<?",
            baseEntityName: "@?",
            baseEntityId: "@?",
            /*Admin Actions*/
            actions: "<?",
            administrativeCount: "@?",
            recordEditAction: "@?",
            recordEditActionProperty: "@?",
            recordEditQueryString: "@?",
            recordEditModal: "<?",
            recordEditDisabled: "<?",
            recordDetailAction: "@?",
            recordDetailActionProperty: "@?",
            recordDetailActionIdProperty: "@?",
            recordDetailActionIdKey: "@?",
            recordDetailQueryString: "@?",
            recordDetailModal: "<?",
            recordDeleteAction: "@?",
            recordDeleteActionProperty: "@?",
            recordDeleteQueryString: "@?",
            recordAddAction: "@?",
            recordAddActionProperty: "@?",
            recordAddQueryString: "@?",
            recordAddModal: "<?",
            recordAddDisabled: "<?",
            recordProcessesConfig: "<?",
            /* record processes config is an array of actions. Example:
            [
            {
                recordProcessAction:"@",
                recordProcessActionProperty:"@",
                recordProcessQueryString:"@",
                recordProcessContext:"@",
                recordProcessEntity:"=",
                recordProcessEntityData:"=",
                recordProcessUpdateTableID:"=",
                recordProcessButtonDisplayFlag:"=",
            }
            ]
            */
            /*Hierachy Expandable*/
            parentPropertyName: "@?",
            //booleans
            expandable: "<?",
            expandableOpenRoot: "<?",
            /*Searching*/
            searchText: "<?",
            /*Sorting*/
            sortable: "<?",
            sortableFieldName: "@?",
            sortProperty: "@?",
            sortContextIDColumn: "@?",
            sortContextIDValue: "@?",
            /*Single Select*/
            selectFiledName: "@?",
            selectValue: "@?",
            selectTitle: "@?",
            /*Multiselect*/
            multiselectFieldName: "@?",
            multiselectPropertyIdentifier: "@?",
            multiselectIdPaths: "@?",
            multiselectValues: "@?",
            /*Helper / Additional / Custom*/
            tableattributes: "@?",
            tableclass: "@?",
            typeaheadDataKey: "@?",
            adminattributes: "@?",
            /* Settings */
            showheader: "<?",
            showExport: "<?",
            showOrderBy: "<?",
            showTopPagination: "<?",
            showToggleDisplayOptions: "<?",
            showSearch: "<?",
            showSearchFilters: "<?",
            showSimpleListingControls: "<?",
            showPrintOptions: "<?",
            /* Basic Action Caller Overrides*/
            createModal: "<?",
            createAction: "@?",
            createQueryString: "@?",
            exportAction: "@?",
            getChildCount: "<?",
            hasSearch: "<?",
            hasActionBar: "<?",
            multiSlot: "=?",
            customListingControls: "<?"
        };
        this.controller = SWListingDisplayController;
        this.controllerAs = "swListingDisplay";
        this.compile = function (element, attrs) {
            return {
                pre: function ($scope, element, attrs, transclude) {
                },
                post: function ($scope, element, attrs) {
                }
            };
        };
        this.listingPartialPath = listingPartialPath;
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(this.listingPartialPath) + 'listingdisplay.html';
    }
    SWListingDisplay.Factory = function () {
        var directive = function (listingPartialPath, hibachiPathBuilder) { return new SWListingDisplay(listingPartialPath, hibachiPathBuilder); };
        directive.$inject = [
            'listingPartialPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWListingDisplay;
}());
exports.SWListingDisplay = SWListingDisplay;


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingDisplayCellController = /** @class */ (function () {
    //@ngInject
    function SWListingDisplayCellController(listingPartialPath, hibachiPathBuilder, listingService, utilityService, $scope) {
        var _this = this;
        this.listingPartialPath = listingPartialPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.listingService = listingService;
        this.utilityService = utilityService;
        this.$scope = $scope;
        this.expandable = false;
        this.getDirectiveTemplate = function () {
            var templateUrl = _this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath) + 'listingdisplaycell.html';
            if (_this.expandable || (_this.swListingDisplay.expandable && _this.column.tdclass && _this.column.tdclass === 'primary')) {
                templateUrl = _this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath) + 'listingdisplayselectablecellexpandable.html';
            }
            if (!_this.swListingDisplay.expandable || !_this.column.tdclass || _this.column.tdclass !== 'primary') {
                if (_this.column.ormtype === 'timestamp') {
                    templateUrl = _this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath) + 'listingdisplaycelldate.html';
                }
                else if (_this.column.type === 'currency') {
                    if (_this.column.aggregate) {
                        _this.value = _this.pageRecord[_this.swListingDisplay.getPageRecordKey(_this.column.aggregate.aggregateAlias)];
                    }
                    templateUrl = _this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath) + 'listingdisplaycellcurrency.html';
                }
                else if (_this.column.aggregate) {
                    _this.value = _this.pageRecord[_this.swListingDisplay.getPageRecordKey(_this.column.aggregate.aggregateAlias)];
                    templateUrl = _this.hibachiPathBuilder.buildPartialsPath(_this.listingPartialPath) + 'listingdisplaycellaggregate.html';
                }
            }
            return templateUrl;
        };
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.listingPartialPath = listingPartialPath;
        this.$scope = $scope;
        if (!this.value && this.pageRecord && this.column) {
            this.value = this.listingService.getPageRecordValueByColumn(this.pageRecord, this.column);
        }
        this.popover = this.utilityService.replaceStringWithProperties(this.column.tooltip, this.pageRecord);
        this.hasActionCaller = false;
        if (this.column.action && this.column.queryString) {
            this.hasActionCaller = true;
            this.actionCaller = {
                action: this.column.action
            };
            if (this.column.queryString) {
                this.actionCaller.queryString = this.utilityService.replaceStringWithProperties(this.column.queryString, this.pageRecord);
            }
        }
        if (this.cellView) {
            console.log("Cellview?", this.cellView);
            var htmlCellView = this.utilityService.camelCaseToSnakeCase(this.cellView);
            this.template = htmlCellView;
            //convert the page records into attrs
            this.templateVariables = this.pageRecord;
            if (angular.isDefined(this.column.columnID)) {
                this.templateVariables["column"] = this.column.columnID;
            }
            if (angular.isDefined(this.swListingDisplay.baseEntityName) && angular.isDefined(this.swListingDisplay.baseEntityId)) {
                this.templateVariables["baseEntityId"] = this.swListingDisplay.baseEntityId;
                this.templateVariables["baseEntityName"] = this.swListingDisplay.baseEntityName;
            }
            if (angular.isDefined(this.column.propertyIdentifier)) {
                this.templateVariables["columnPropertyIdentifier"] = this.column.propertyIdentifier;
            }
            this.templateVariables["listingDisplayID"] = this.swListingDisplay.tableID;
        }
        else if (!this.hasActionCaller) {
            this.templateUrl = this.getDirectiveTemplate();
        }
    }
    return SWListingDisplayCellController;
}());
var SWListingDisplayCell = /** @class */ (function () {
    //@ngInject
    function SWListingDisplayCell() {
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {
            swListingDisplay: "=?",
            column: "=?",
            pageRecord: "=?",
            value: "=?",
            cellView: "@?",
            expandableRules: "=?"
        };
        this.controller = SWListingDisplayCellController;
        this.controllerAs = "swListingDisplayCell";
        this.template = "\n        <div ng-if=\"swListingDisplayCell.template\" sw-directive data-variables=\"swListingDisplayCell.templateVariables\" data-directive-template=\"swListingDisplayCell.template\"></div>\n        <div ng-if=\"swListingDisplayCell.templateUrl\" ng-include src=\"swListingDisplayCell.templateUrl\"></div>\n        <sw-action-caller ng-if=\"swListingDisplayCell.hasActionCaller\"\n                    data-action=\"{{swListingDisplayCell.actionCaller.action}}\"\n                    data-query-string=\"{{swListingDisplayCell.actionCaller.queryString}}\"\n                    data-text=\"{{swListingDisplayCell.value}}\"\n                    data-tooltip-text=\"{{swListingDisplayCell.popover}}\"\n                    data-is-angular-route=\"false\"\n\n        >\n        </sw-action-caller>\n    ";
    }
    SWListingDisplayCell.Factory = function () {
        var directive = function () { return new SWListingDisplayCell(); };
        directive.$inject = [];
        return directive;
    };
    return SWListingDisplayCell;
}());
exports.SWListingDisplayCell = SWListingDisplayCell;


/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
/* SWListingExpandableRule
 * defines a filter, by which to determine what will be expanded
 * supplies the collection config and any other necessary rules for what will be loaded and displayed
 */
var SWListingExpandableRuleController = /** @class */ (function () {
    //@ngInject
    function SWListingExpandableRuleController($q) {
        this.$q = $q;
        this.hasChildrenCollectionConfigDeferred = $q.defer();
        this.hasChildrenCollectionConfigPromise = this.hasChildrenCollectionConfigDeferred.promise;
        //why did I need this? 
        this.childrenCollectionConfig = null;
    }
    return SWListingExpandableRuleController;
}());
var SWListingExpandableRule = /** @class */ (function () {
    function SWListingExpandableRule(scopeService, $q) {
        var _this = this;
        this.scopeService = scopeService;
        this.$q = $q;
        this.restrict = 'EA';
        this.scope = true;
        this.transclude = {
            collectionConfig: "?swConfig"
        };
        this.template = "\n        <div ng-transclude=\"collectionConfig\"></div> \n    ";
        this.bindToController = {
            childrenCollectionConfig: "=?",
            filterPropertyIdentifier: "@",
            filterComparisonOperator: "@",
            filterComparisonValue: "@",
            refreshChildrenEvent: "@?"
        };
        this.controller = SWListingExpandableRuleController;
        this.controllerAs = "swListingExpandableRule";
        this.link = function (scope, element, attrs) {
            scope.swListingExpandableRule.hasChildrenCollectionConfigPromise.then(function () {
                var rule = {
                    filterPropertyIdentifier: scope.swListingExpandableRule.filterPropertyIdentifier,
                    filterComparisonOperator: scope.swListingExpandableRule.filterComparisonOperator,
                    filterComparisonValue: scope.swListingExpandableRule.filterComparisonValue,
                    childrenCollectionConfig: scope.swListingExpandableRule.childrenCollectionConfig,
                    refreshChildrenEvent: scope.swListingExpandableRule.refreshChildrenEvent
                };
                var listingDisplayScope = _this.scopeService.getRootParentScope(scope, "swListingDisplay");
                if (angular.isDefined(listingDisplayScope.swListingDisplay)) {
                    listingDisplayScope = listingDisplayScope.swListingDisplay;
                }
                else {
                    throw ("listing display scope not available to sw-listing-expandable-rule");
                }
                listingDisplayScope.expandableRules.push(rule);
            });
        };
    }
    SWListingExpandableRule.Factory = function () {
        var directive = function (scopeService, $q) { return new SWListingExpandableRule(scopeService, $q); };
        directive.$inject = [
            'scopeService',
            '$q'
        ];
        return directive;
    };
    return SWListingExpandableRule;
}());
exports.SWListingExpandableRule = SWListingExpandableRule;


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingFilterController = /** @class */ (function () {
    function SWListingFilterController() {
        this.init = function () {
        };
        this.init();
    }
    return SWListingFilterController;
}());
var SWListingFilter = /** @class */ (function () {
    function SWListingFilter() {
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            propertyIdentifier: "@",
            comparisonOperator: "@",
            comparisonValue: "@",
            logicalOperator: "@",
            hidden: "@?"
        };
        this.controller = SWListingFilterController;
        this.controllerAs = "swListingFilter";
        this.link = function (scope, element, attrs) {
            var filter = {
                propertyIdentifier: scope.swListingFilter.propertyIdentifier,
                comparisonOperator: scope.swListingFilter.comparisonOperator,
                comparisonValue: scope.swListingFilter.comparisonValue,
                logicalOperator: scope.swListingFilter.logicalOperator,
                hidden: false
            };
            if (angular.isDefined(scope.swListingFilter.hidden)) {
                filter['hidden'] = scope.swListingFilter.hidden;
            }
            if (angular.isDefined(scope.$parent.swListingFilterGroup)) {
                scope.$parent.swListingFilterGroup.filters.push(filter);
            }
            else {
                scope.$parent.swListingDisplay.filters.push(filter);
            }
        };
    }
    SWListingFilter.Factory = function () {
        var directive = function () { return new SWListingFilter(); };
        directive.$inject = [];
        return directive;
    };
    return SWListingFilter;
}());
exports.SWListingFilter = SWListingFilter;


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingFilterGroupController = /** @class */ (function () {
    function SWListingFilterGroupController($scope, $transclude) {
        this.$scope = $scope;
        this.$transclude = $transclude;
        this.filters = [];
        $transclude($scope, function () { });
        $scope.$parent.swListingDisplay.filterGroups.push(this.filters);
    }
    return SWListingFilterGroupController;
}());
var SWListingFilterGroup = /** @class */ (function () {
    function SWListingFilterGroup() {
        this.restrict = 'EA';
        this.transclude = true;
        this.scope = true;
        this.bindToController = {};
        this.controller = SWListingFilterGroupController;
        this.controllerAs = "swListingFilterGroup";
    }
    SWListingFilterGroup.Factory = function () {
        var directive = function () { return new SWListingFilterGroup(); };
        directive.$inject = [];
        return directive;
    };
    SWListingFilterGroup.$inject = [];
    return SWListingFilterGroup;
}());
exports.SWListingFilterGroup = SWListingFilterGroup;


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingGlobalSearchController = /** @class */ (function () {
    //@ngInject
    function SWListingGlobalSearchController($timeout) {
        var _this = this;
        this.$timeout = $timeout;
        this.init = function () {
            _this.searching = false;
        };
        this.search = function () {
            _this.searching = true;
            if (_this._timeoutPromise) {
                _this.$timeout.cancel(_this._timeoutPromise);
            }
            _this._timeoutPromise = _this.$timeout(function () {
                _this.getCollection();
            }, 500);
        };
        this.init();
    }
    return SWListingGlobalSearchController;
}());
var SWListingGlobalSearch = /** @class */ (function () {
    //@ngInject
    function SWListingGlobalSearch(utilityService, listingPartialPath, hibachiPathBuilder) {
        this.utilityService = utilityService;
        this.restrict = 'EA';
        this.scope = {};
        this.bindToController = {
            searching: "=",
            searchText: "=",
            getCollection: "="
        };
        this.controller = SWListingGlobalSearchController;
        this.controllerAs = "swListingGlobalSearch";
        this.link = function (scope, element, attrs) {
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(listingPartialPath) + "listingglobalsearch.html";
    }
    SWListingGlobalSearch.Factory = function () {
        var directive = function (utilityService, listingPartialPath, hibachiPathBuilder) { return new SWListingGlobalSearch(utilityService, listingPartialPath, hibachiPathBuilder); };
        directive.$inject = ['utilityService', 'listingPartialPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWListingGlobalSearch;
}());
exports.SWListingGlobalSearch = SWListingGlobalSearch;


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingOrderByController = /** @class */ (function () {
    //@ngInject
    function SWListingOrderByController() {
        this.init = function () {
        };
        this.init();
    }
    return SWListingOrderByController;
}());
var SWListingOrderBy = /** @class */ (function () {
    //@ngInject
    function SWListingOrderBy(utilityService) {
        this.utilityService = utilityService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {
            orderBy: "@",
        };
        this.controller = SWListingOrderByController;
        this.controllerAs = "swListingOrderBy";
        this.link = function (scope, element, attrs) {
            var orderBy = {
                orderBy: scope.swListingOrderBy.orderBy,
            };
            scope.$parent.swListingDisplay.orderBys.push(orderBy);
        };
    }
    SWListingOrderBy.Factory = function () {
        var directive = function (utilityService) { return new SWListingOrderBy(utilityService); };
        directive.$inject = [
            'utilityService'
        ];
        return directive;
    };
    return SWListingOrderBy;
}());
exports.SWListingOrderBy = SWListingOrderBy;


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingRowSaveController = /** @class */ (function () {
    //@ngInject
    function SWListingRowSaveController(listingService) {
        var _this = this;
        this.listingService = listingService;
        this.save = function () {
            _this.listingService.markSaved(_this.listingID, _this.pageRecordIndex);
        };
    }
    return SWListingRowSaveController;
}());
var SWListingRowSave = /** @class */ (function () {
    function SWListingRowSave(hibachiPathBuilder, listingPartialPath, utilityService, scopeService) {
        var _this = this;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.listingPartialPath = listingPartialPath;
        this.utilityService = utilityService;
        this.scopeService = scopeService;
        this.restrict = 'EA';
        this.scope = true;
        this.bindToController = {};
        this.controller = SWListingRowSaveController;
        this.controllerAs = "swListingRowSave";
        this.link = function ($scope, element, attrs) {
            var currentScope = _this.scopeService.getRootParentScope($scope, "pageRecord");
            if (angular.isDefined(currentScope["pageRecord"])) {
                $scope.swListingRowSave.pageRecord = currentScope["pageRecord"];
            }
            var currentScope = _this.scopeService.getRootParentScope($scope, "pageRecordKey");
            if (angular.isDefined(currentScope["pageRecordKey"])) {
                $scope.swListingRowSave.pageRecordIndex = currentScope["pageRecordKey"];
            }
            var currentScope = _this.scopeService.getRootParentScope($scope, "swListingDisplay");
            if (angular.isDefined(currentScope["swListingDisplay"])) {
                $scope.swListingRowSave.listingID = currentScope["swListingDisplay"].tableID;
            }
        };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(this.listingPartialPath) + 'listingrowsave.html';
    }
    SWListingRowSave.Factory = function () {
        var directive = function (hibachiPathBuilder, listingPartialPath, utilityService, scopeService) { return new SWListingRowSave(hibachiPathBuilder, listingPartialPath, utilityService, scopeService); };
        directive.$inject = [
            'hibachiPathBuilder',
            'listingPartialPath',
            'utilityService',
            'scopeService'
        ];
        return directive;
    };
    SWListingRowSave.$inject = ['utilityService'];
    return SWListingRowSave;
}());
exports.SWListingRowSave = SWListingRowSave;


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWListingSearchController = /** @class */ (function () {
    //@ngInject
    function SWListingSearchController($rootScope, $hibachi, metadataService, listingService, collectionService, observerService, localStorageService) {
        var _this = this;
        this.$rootScope = $rootScope;
        this.$hibachi = $hibachi;
        this.metadataService = metadataService;
        this.listingService = listingService;
        this.collectionService = collectionService;
        this.observerService = observerService;
        this.localStorageService = localStorageService;
        this.displayOptionsClosed = true;
        this.filtersClosed = true;
        this.hasPersonalCollections = false;
        this.collectionNameSaveIsOpen = false;
        this.$onInit = function () {
            if (angular.isDefined(_this.swListingDisplay.personalCollectionIdentifier)) {
                _this.personalCollectionIdentifier = _this.swListingDisplay.personalCollectionIdentifier;
            }
            //snapshot searchable options in the beginning
            _this.searchableOptions = angular.copy(_this.swListingDisplay.collectionConfig.columns);
            _this.selectedSearchColumn = { title: 'All' };
            _this.configureSearchableColumns(_this.selectedSearchColumn);
            if (_this.swListingControls.showPrintOptions) {
                //load the options
                //this will prevent icon from flashing on action bar
                _this.swListingControls.showPrintOptions = false;
                var printTemplateOptionsCollection = _this.collectionConfig.newCollectionConfig('PrintTemplate');
                printTemplateOptionsCollection.addFilter('printTemplateObject', _this.swListingDisplay.collectionConfig.baseEntityName);
                printTemplateOptionsCollection.setAllRecords(true);
                printTemplateOptionsCollection.getEntity().then(function (response) {
                    _this.printTemplateOptions = response.records;
                    if (_this.printTemplateOptions.length !== 0) {
                        _this.swListingControls.showPrintOptions = true;
                    }
                }, function (reason) {
                    throw ("swListingSearch couldn't load printTemplateOptions because: " + reason);
                });
            }
        };
        this.selectSearchColumn = function (column) {
            _this.selectedSearchColumn = column;
            _this.configureSearchableColumns(column);
            if (_this.searchText) {
                _this.search();
            }
        };
        this.selectPersonalCollection = function (personalCollection) {
            if (!_this.localStorageService.hasItem('selectedPersonalCollection')) {
                _this.localStorageService.setItem('selectedPersonalCollection', '{}');
            }
            var selectedPersonalCollection = angular.fromJson(_this.localStorageService.getItem('selectedPersonalCollection'));
            if (personalCollection) {
                selectedPersonalCollection[personalCollection.collectionObject.toLowerCase()] = personalCollection;
                _this.localStorageService.setItem('selectedPersonalCollection', angular.toJson(selectedPersonalCollection));
            }
            else {
                delete selectedPersonalCollection[_this.swListingDisplay.baseEntityName.toLowerCase()];
                console.log(selectedPersonalCollection);
                _this.localStorageService.setItem('selectedPersonalCollection', angular.toJson(selectedPersonalCollection));
            }
            window.location.reload();
        };
        this.savePersonalCollection = function (collectionName) {
            if (_this.localStorageService.hasItem('selectedPersonalCollection') && _this.localStorageService.getItem('selectedPersonalCollection')[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()] && (angular.isUndefined(_this.personalCollectionIdentifier) || (angular.isDefined(_this.localStorageService.getItem('selectedPersonalCollection')[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]['collectionDescription']) && _this.localStorageService.getItem('selectedPersonalCollection')[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]['collectionDescription'] == _this.personalCollectionIdentifier))) {
                var selectedPersonalCollection = angular.fromJson(_this.localStorageService.getItem('selectedPersonalCollection'));
                if (selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()]) {
                    _this.$hibachi.saveEntity('Collection', selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()].collectionID, {
                        'accountOwner.accountID': _this.$rootScope.slatwall.account.accountID,
                        'collectionConfig': _this.swListingDisplay.collectionConfig.collectionConfigString
                    }, 'save').then(function (data) {
                    });
                    return;
                }
            }
            else if (collectionName) {
                var serializedJSONData = {
                    'collectionConfig': _this.swListingDisplay.collectionConfig.collectionConfigString,
                    'collectionName': collectionName,
                    'collectionDescription': _this.personalCollectionIdentifier,
                    'collectionObject': _this.swListingDisplay.collectionConfig.baseEntityName,
                    'accountOwner': {
                        'accountID': _this.$rootScope.slatwall.account.accountID
                    }
                };
                _this.$hibachi.saveEntity('Collection', "", {
                    'serializedJSONData': angular.toJson(serializedJSONData),
                    'propertyIdentifiersList': 'collectionID,collectionName,collectionObject,collectionDescription'
                }, 'save').then(function (data) {
                    if (!_this.localStorageService.hasItem('selectedPersonalCollection')) {
                        _this.localStorageService.setItem('selectedPersonalCollection', '{}');
                    }
                    var selectedPersonalCollection = angular.fromJson(_this.localStorageService.getItem('selectedPersonalCollection'));
                    selectedPersonalCollection[_this.swListingDisplay.collectionConfig.baseEntityName.toLowerCase()] = {
                        collectionID: data.data.collectionID,
                        collectionObject: data.data.collectionObject,
                        collectionName: data.data.collectionName,
                        collectionDescription: data.data.collectionDescription
                    };
                    _this.localStorageService.setItem('selectedPersonalCollection', angular.toJson(selectedPersonalCollection));
                    _this.$rootScope.slatwall.selectedPersonalCollection = selectedPersonalCollection;
                    _this.collectionNameSaveIsOpen = false;
                    _this.hasPersonalCollections = false;
                });
                return;
            }
            _this.collectionNameSaveIsOpen = true;
        };
        this.getPersonalCollections = function () {
            if (!_this.hasPersonalCollections) {
                var personalCollectionList = _this.collectionConfig.newCollectionConfig('Collection');
                personalCollectionList.setDisplayProperties('collectionID,collectionName,collectionObject,collectionDescription');
                personalCollectionList.addFilter('accountOwner.accountID', _this.$rootScope.slatwall.account.accountID);
                personalCollectionList.addFilter('collectionObject', _this.swListingDisplay.baseEntityName);
                if (angular.isDefined(_this.personalCollectionIdentifier)) {
                    personalCollectionList.addFilter('collectionDescription', _this.personalCollectionIdentifier);
                }
                personalCollectionList.setAllRecords(true);
                personalCollectionList.getEntity().then(function (data) {
                    _this.personalCollections = data.records;
                });
            }
            _this.hasPersonalCollections = true;
        };
        this.clearPersonalCollection = function () {
            _this.selectPersonalCollection();
        };
        this.search = function () {
            if (_this.searchText.length > 0) {
                _this.listingService.setExpandable(_this.listingId, false);
            }
            else {
                _this.listingService.setExpandable(_this.listingId, true);
            }
            _this.collectionConfig.setKeywords(_this.searchText);
            _this.swListingDisplay.collectionConfig = _this.collectionConfig;
            _this.observerService.notifyById('swPaginationAction', _this.listingId, { type: 'setCurrentPage', payload: 1 });
        };
        this.configureSearchableColumns = function (column) {
            var searchableColumn = "";
            if (column.propertyIdentifier) {
                searchableColumn = column.propertyIdentifier;
                //default to All columns
            }
            for (var i = 0; i < _this.swListingDisplay.collectionConfig.columns.length; i++) {
                if (searchableColumn.length) {
                    if (searchableColumn === _this.swListingDisplay.collectionConfig.columns[i].propertyIdentifier) {
                        _this.swListingDisplay.collectionConfig.columns[i].isSearchable = true;
                    }
                    else {
                        _this.swListingDisplay.collectionConfig.columns[i].isSearchable = false;
                    }
                }
                else {
                    _this.swListingDisplay.collectionConfig.columns[i].isSearchable = true;
                }
            }
        };
    }
    return SWListingSearchController;
}());
var SWListingSearch = /** @class */ (function () {
    //@ngInject
    function SWListingSearch(scopeService, collectionPartialsPath, hibachiPathBuilder) {
        this.scopeService = scopeService;
        this.collectionPartialsPath = collectionPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'EA';
        this.scope = {};
        this.require = { swListingDisplay: "?^swListingDisplay", swListingControls: '?^swListingControls' };
        this.bindToController = {
            collectionConfig: "<?",
            paginator: "=?",
            listingId: "@?",
            showToggleSearch: "=?"
        };
        this.controller = SWListingSearchController;
        this.controllerAs = 'swListingSearch';
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.collectionPartialsPath) + "listingsearch.html";
    }
    SWListingSearch.Factory = function () {
        var directive = function (scopeService, listingPartialPath, hibachiPathBuilder) { return new SWListingSearch(scopeService, listingPartialPath, hibachiPathBuilder); };
        directive.$inject = ['scopeService', 'listingPartialPath', 'hibachiPathBuilder'];
        return directive;
    };
    return SWListingSearch;
}());
exports.SWListingSearch = SWListingSearch;


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../typings/tsd.d.ts" />
/// <reference path="../../typings/hibachiTypescript.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
//modules
var collection_module_1 = __webpack_require__(167);
//services
var listingservice_1 = __webpack_require__(650);
//directives
var swlistingdisplay_1 = __webpack_require__(640);
var swlistingdisplaycell_1 = __webpack_require__(641);
var swlistingcontrols_1 = __webpack_require__(638);
var swlistingaggregate_1 = __webpack_require__(635);
var swlistingcolorfilter_1 = __webpack_require__(636);
var swlistingcolumn_1 = __webpack_require__(637);
var swlistingdisablerule_1 = __webpack_require__(639);
var swlistingexpandablerule_1 = __webpack_require__(642);
var swlistingfilter_1 = __webpack_require__(643);
var swlistingfiltergroup_1 = __webpack_require__(644);
var swlistingorderby_1 = __webpack_require__(646);
var swlistingrowsave_1 = __webpack_require__(647);
var swlistingsearch_1 = __webpack_require__(648);
var swlistingglobalsearch_1 = __webpack_require__(645);
var listingmodule = angular.module('hibachi.listing', [collection_module_1.collectionmodule.name])
    .run([function () {
    }])
    //services
    .service('listingService', listingservice_1.ListingService)
    //directives
    .directive('swListingDisplay', swlistingdisplay_1.SWListingDisplay.Factory())
    .directive('swListingControls', swlistingcontrols_1.SWListingControls.Factory())
    .directive('swListingAggregate', swlistingaggregate_1.SWListingAggregate.Factory())
    .directive('swListingColorFilter', swlistingcolorfilter_1.SWListingColorFilter.Factory())
    .directive('swListingColumn', swlistingcolumn_1.SWListingColumn.Factory())
    .directive('swListingDisableRule', swlistingdisablerule_1.SWListingDisableRule.Factory())
    .directive('swListingExpandableRule', swlistingexpandablerule_1.SWListingExpandableRule.Factory())
    .directive('swListingDisplayCell', swlistingdisplaycell_1.SWListingDisplayCell.Factory())
    .directive('swListingFilter', swlistingfilter_1.SWListingFilter.Factory())
    .directive('swListingFilterGroup', swlistingfiltergroup_1.SWListingFilterGroup.Factory())
    .directive('swListingOrderBy', swlistingorderby_1.SWListingOrderBy.Factory())
    .directive('swListingRowSave', swlistingrowsave_1.SWListingRowSave.Factory())
    .directive('swListingSearch', swlistingsearch_1.SWListingSearch.Factory())
    .directive('swListingGlobalSearch', swlistingglobalsearch_1.SWListingGlobalSearch.Factory())
    //constants
    .constant('listingPartialPath', 'listing/components/');
exports.listingmodule = listingmodule;


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Store = __webpack_require__(170);
var ListingService = /** @class */ (function () {
    //@ngInject
    function ListingService($timeout, $q, collectionConfigService, filterService, historyService, observerService, rbkeyService, selectionService, utilityService, $hibachi) {
        var _this = this;
        this.$timeout = $timeout;
        this.$q = $q;
        this.collectionConfigService = collectionConfigService;
        this.filterService = filterService;
        this.historyService = historyService;
        this.observerService = observerService;
        this.rbkeyService = rbkeyService;
        this.selectionService = selectionService;
        this.utilityService = utilityService;
        this.$hibachi = $hibachi;
        this.listingDisplays = {};
        this.state = {};
        /**
         * The reducer is responsible for modifying the state of the state object into a new state for listeners.
         */
        this.listingDisplayStateReducer = function (state, action) {
            switch (action.type) {
                case 'LISTING_PAGE_RECORDS_UPDATE':
                    return __assign({}, state, { action: action });
                case 'CURRENT_PAGE_RECORDS_SELECTED':
                    return __assign({}, state, { action: action });
                case 'ADD_SELECTION':
                    return __assign({}, state, { action: action });
                default:
                    return state;
            }
        };
        //Event Functions
        this.getListingPageRecordsUpdateEventString = function (listingID) {
            return listingID + "pageRecordsUpdated";
        };
        this.getListingOrderByChangedEventString = function (listingID) {
            return listingID + "orderByChanged";
        };
        this.getListingInitiatedEventString = function (listingID) {
            return listingID + "initiated";
        };
        this.notifyListingPageRecordsUpdate = function (listingID) {
            //This is how we would dispatch so that controllers can get the updated state.
            _this.listingDisplayStore.dispatch({
                type: "LISTING_PAGE_RECORDS_UPDATE",
                payload: { listingID: listingID, listingPageRecordsUpdateEventString: _this.getListingPageRecordsUpdateEventString(listingID) }
            });
            _this.observerService.notify(_this.getListingPageRecordsUpdateEventString(listingID), listingID);
        };
        this.attachToListingPageRecordsUpdate = function (listingID, callback, id) {
            _this.observerService.attach(callback, _this.getListingPageRecordsUpdateEventString(listingID), id);
        };
        this.attachToOrderByChangedUpdate = function (listingID, callback, id) {
            _this.observerService.attach(callback, _this.getListingOrderByChangedEventString(listingID), id);
        };
        this.attachToListingInitiated = function (listingID, callback) {
            _this.observerService.attach(callback, _this.getListingInitiatedEventString(listingID));
            if (_this.historyService.hasHistory(_this.getListingInitiatedEventString(listingID))) {
                callback();
            }
        };
        //End Event Functions
        //core getters and setters
        this.setListingState = function (listingID, state) {
            _this.listingDisplays[listingID] = state;
            _this.observerService.notifyAndRecord(_this.getListingInitiatedEventString(listingID));
        };
        this.getListing = function (listingID) {
            return _this.listingDisplays[listingID];
        };
        this.getListingColumns = function (listingID) {
            return _this.getListing(listingID).columns || _this.getListingCollectionConfigColumns(listingID);
        };
        this.getListingCollectionConfigColumns = function (listingID) {
            if (_this.getListing(listingID).collectionConfig != null) {
                return _this.getListing(listingID).collectionConfig.columns;
            }
        };
        this.getListingExampleEntity = function (listingID) {
            if (_this.getListing(listingID).exampleEntity != null) {
                return _this.getListing(listingID).exampleEntity;
            }
            else {
                _this.setupExampleEntity(listingID);
            }
        };
        this.getListingCollectionConfigColumnIndexByPropertyIdentifier = function (listingID, propertyIdentifier) {
            var columns = _this.getListingCollectionConfigColumns(listingID);
            return _this.utilityService.ArrayFindByPropertyValue(columns, 'propertyIdentifier', propertyIdentifier);
        };
        this.getListingColumnIndexByPropertyIdentifier = function (listingID, propertyIdentifier) {
            var columns = _this.getListingColumns(listingID);
            return _this.utilityService.ArrayFindByPropertyValue(columns, 'propertyIdentifier', propertyIdentifier);
        };
        this.getListingBaseEntityName = function (listingID) {
            var baseEntityName = _this.getListing(listingID).baseEntityName || _this.getListing(listingID).collectionObject;
            if (baseEntityName == null && _this.getListing(listingID).collectionConfig != null) {
                baseEntityName = _this.getListing(listingID).collectionConfig.baseEntityName;
            }
            if (baseEntityName == null && _this.getListing(listingID).collectionData != null) {
                baseEntityName = _this.getListing(listingID).collectionData.collectionObject;
            }
            return baseEntityName;
        };
        this.getListingBaseEntityPrimaryIDPropertyName = function (listingID) {
            if (_this.getListingExampleEntity(listingID) != null) {
                return _this.getListingExampleEntity(listingID).$$getIDName();
            }
        };
        this.getListingPrimaryEntityName = function (listingID) {
            return _this.getListing(listingID).baseEntityName ||
                _this.getListing(listingID).collectionObject ||
                _this.getListing(listingID).collectionConfig.baseEntityName;
        };
        this.getListingEntityPrimaryIDPropertyName = function (listingID) {
            return _this.$hibachi.getPrimaryIDPropertyNameByEntityName(_this.getListingPrimaryEntityName(listingID));
        };
        this.getListingPageRecords = function (listingID) {
            if (angular.isDefined(_this.getListing(listingID)) &&
                angular.isDefined(_this.getListing(listingID).collectionData) &&
                angular.isDefined(_this.getListing(listingID).collectionData.pageRecords)) {
                return _this.getListing(listingID).collectionData.pageRecords;
            }
        };
        this.getCollection = function (listingID) {
            return _this.getListing(listingID).getCollection();
        };
        this.getPageRecordsWithManualSortOrder = function (listingID) {
            if (angular.isDefined(_this.getListing(listingID)) && _this.getListingPageRecords(listingID) != null) {
                var pageRecords = _this.getListingPageRecords(listingID);
                var primaryIDPropertyName = _this.getListingEntityPrimaryIDPropertyName(listingID);
                var primaryIDWithBaseAlias = _this.getListing(listingID).collectionConfig.baseEntityAlias + '.' + primaryIDPropertyName;
                var pageRecordsWithManualSortOrder = {};
                _this.$timeout(function () {
                    for (var j = 0; j < pageRecords.length; j++) {
                        var pageRecord = pageRecords[j];
                        var primaryID = pageRecords[j][primaryIDPropertyName];
                        var sortOrder = j + 1;
                        var primaryIDColumnIndex = _this.getListingCollectionConfigColumnIndexByPropertyIdentifier(listingID, primaryIDWithBaseAlias);
                        if (angular.isDefined(primaryID)) {
                            pageRecordsWithManualSortOrder[primaryID] = sortOrder;
                        }
                        else if (primaryIDColumnIndex !== -1) {
                            var column = _this.getListingCollectionConfigColumns(listingID)[primaryIDColumnIndex];
                            if (angular.isDefined(column.fallbackPropertyIdentifiers)) {
                                var fallbackPropertyArray = column.fallbackPropertyIdentifiers.split(",");
                                for (var i = 0; i < fallbackPropertyArray.length; i++) {
                                    if (angular.isDefined(pageRecord[fallbackPropertyArray[i]])) {
                                        pageRecordsWithManualSortOrder[pageRecord[fallbackPropertyArray[i]]] = sortOrder;
                                    }
                                }
                            }
                        }
                    }
                    _this.getListing(listingID).pageRecordsWithManualSortOrder = angular.toJson(pageRecordsWithManualSortOrder);
                    return _this.getListing(listingID).pageRecordsWithManualSortOrders;
                }, 0);
            }
            else {
                return angular.toJson({});
            }
        };
        //Begin Listing Page Record Functions
        this.getListingPageRecordIndexByPageRecord = function (listingID, pageRecordToCompare) {
            var pageRecords = _this.getListingPageRecords(listingID);
            var primaryIDPropertyName = _this.getListingEntityPrimaryIDPropertyName(listingID);
            for (var j = 0; j < pageRecords.length; j++) {
                var pageRecord = pageRecords[j];
                if (pageRecord[primaryIDPropertyName] == pageRecordToCompare[primaryIDPropertyName]) {
                    return j;
                }
            }
            return -1;
        };
        this.insertListingPageRecord = function (listingID, pageRecord) {
            pageRecord.newFlag = true;
            if (angular.isDefined(_this.getListingPageRecords(listingID))) {
                _this.notifyListingPageRecordsUpdate(listingID);
                _this.getListingPageRecords(listingID).unshift(pageRecord); //insert at beginning be default
            }
        };
        this.removeListingPageRecord = function (listingID, pageRecord) {
            var pageRecords = _this.getListingPageRecords(listingID);
            if (_this.getListingPageRecordIndexByPageRecord(listingID, pageRecord) != -1) {
                _this.notifyListingPageRecordsUpdate(listingID);
                return pageRecords.splice(_this.getListingPageRecordIndexByPageRecord(listingID, pageRecord), 1)[0]; //this will always be an array of one element
            }
        };
        this.getPageRecordKey = function (propertyIdentifier) {
            if (propertyIdentifier) {
                var propertyIdentifierWithoutAlias = '';
                if (propertyIdentifier.indexOf('_') === 0) {
                    var underscoreCount = (propertyIdentifier.match(new RegExp("_", "g") || [])).length;
                    if (underscoreCount > 1) {
                        var properSubStr = propertyIdentifier.substring(1);
                        propertyIdentifierWithoutAlias = properSubStr.substring(properSubStr.indexOf('_') + 1, properSubStr.length);
                    }
                    else {
                        propertyIdentifierWithoutAlias = propertyIdentifier.substring(propertyIdentifier.indexOf('.') + 1);
                    }
                }
                else {
                    propertyIdentifierWithoutAlias = propertyIdentifier;
                }
                return _this.utilityService.replaceAll(propertyIdentifierWithoutAlias, '.', '_');
            }
            return '';
        };
        this.getPageRecordValueByColumn = function (pageRecord, column) {
            var pageRecordValue = pageRecord[_this.getPageRecordKey(column.propertyIdentifier)] || "";
            //try to find the property again if we need to...
            if (pageRecordValue == "") {
                for (var property in pageRecord) {
                    if (property.indexOf(_this.getPageRecordKey(column.propertyIdentifier).trim()) != -1) {
                        //use this record
                        pageRecordValue = pageRecord[property];
                    }
                }
            }
            //last change to find the value
            if ((angular.isUndefined(pageRecordValue) ||
                (angular.isString(pageRecordValue) && pageRecordValue.trim().length == 0)) &&
                angular.isDefined(column.fallbackPropertyIdentifiers)) {
                var fallbackPropertyArray = column.fallbackPropertyIdentifiers.replace('.', '_').split(",");
                for (var i = 0; i < fallbackPropertyArray.length; i++) {
                    if (angular.isDefined(pageRecord[_this.getPageRecordKey(fallbackPropertyArray[i])])) {
                        pageRecordValue = pageRecord[_this.getPageRecordKey(fallbackPropertyArray[i])];
                        break;
                    }
                }
            }
            return pageRecordValue;
        };
        this.selectCurrentPageRecords = function (listingID) {
            if (!_this.getListing(listingID).collectionData.pageRecords)
                return;
            for (var i = 0; i < _this.getListing(listingID).collectionData.pageRecords.length; i++) {
                if (_this.getListing(listingID).isCurrentPageRecordsSelected == true) {
                    _this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID, _this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)]);
                }
                else {
                    _this.selectionService.removeSelection(_this.getListing(listingID).tableID, _this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)]);
                }
            }
        };
        /** returns the index of the item in the listing pageRecord by checking propertyName == recordID */
        this.getSelectedBy = function (listingID, propertyName, value) {
            if (!listingID || !propertyName || !value) {
                return -1;
            }
            ;
            return _this.getListing(listingID).collectionData.pageRecords.findIndex(function (record) { return record[propertyName] == value; });
        };
        /** returns the index of the item in the listing pageRecord by checking propertyName == recordID */
        this.getAllSelected = function (listingID) {
            if (!listingID)
                return -1;
            for (var i = 0; i < _this.getListing(listingID).collectionData.pageRecords.length; i++) {
                _this.selectionService.getSelections(_this.getListing(listingID).tableID, _this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)]);
            }
        };
        this.clearAllSelections = function (listingID) {
            if (!listingID)
                return -1;
            for (var i = 0; i < _this.getListing(listingID).collectionData.pageRecords.length; i++) {
                _this.selectionService.removeSelection(_this.getListing(listingID).tableID, _this.getListingPageRecords(listingID)[i][_this.getListingBaseEntityPrimaryIDPropertyName(listingID)]);
            }
        };
        this.getNGClassObjectForPageRecordRow = function (listingID, pageRecord) {
            var classObjectString = "{";
            angular.forEach(_this.getListing(listingID).colorFilters, function (colorFilter, index) {
                classObjectString = classObjectString.concat("'" + colorFilter.colorClass + "':" + _this.getColorFilterConditionString(colorFilter, pageRecord));
                classObjectString = classObjectString.concat(",");
            });
            classObjectString = classObjectString.concat(" 's-child':" + _this.getPageRecordIsChild(listingID, pageRecord));
            var newFlag = false;
            if (pageRecord && pageRecord.newFlag != null && typeof pageRecord.newFlag === 'string' && pageRecord.newFlag.trim() !== '') {
                newFlag = pageRecord.newFlag;
            }
            classObjectString = classObjectString.concat(",'s-selected-row':" + newFlag);
            classObjectString = classObjectString.concat(",'s-disabled':" + _this.getPageRecordMatchesDisableRule(listingID, pageRecord));
            classObjectString = classObjectString.concat(",'s-edited':pageRecord.edited");
            return classObjectString + "}";
        };
        this.getPageRecordIsChild = function (listingID, pageRecord) {
            var isChild = false;
            //todo implement
            return isChild;
        };
        //End Listing Page Record Functions
        //Row Save Functionality
        this.determineRowEdited = function (pageRecords, pageRecordIndex) {
            var fieldCount = 0;
            for (var key in pageRecords[pageRecordIndex].editedFields) {
                fieldCount++;
                if (fieldCount > 1) {
                    pageRecords[pageRecordIndex].edited = true;
                    return true;
                }
            }
            pageRecords[pageRecordIndex].edited = false;
            return false;
        };
        this.markUnedited = function (listingID, pageRecordIndex, propertyDisplayID) {
            var pageRecords = _this.getListingPageRecords(listingID);
            if (angular.isDefined(pageRecords[pageRecordIndex].editedFields[propertyDisplayID])) {
                delete pageRecords[pageRecordIndex].editedFields[propertyDisplayID];
            }
            return _this.determineRowEdited(pageRecords, pageRecordIndex);
        };
        this.markEdited = function (listingID, pageRecordIndex, propertyDisplayID, saveCallback) {
            var pageRecords = _this.getListingPageRecords(listingID);
            if (angular.isUndefined(pageRecords[pageRecordIndex].editedFields) && !angular.isObject(pageRecords[pageRecordIndex].editedFields)) {
                pageRecords[pageRecordIndex].editedFields = {};
            }
            pageRecords[pageRecordIndex].editedFields[propertyDisplayID] = saveCallback;
            return _this.determineRowEdited(pageRecords, pageRecordIndex);
        };
        this.markSaved = function (listingID, pageRecordIndex) {
            var pageRecords = _this.getListingPageRecords(listingID);
            var savePromises = [];
            for (var key in pageRecords[pageRecordIndex].editedFields) {
                if (angular.isFunction(pageRecords[pageRecordIndex].editedFields[key])) {
                    savePromises.push(pageRecords[pageRecordIndex].editedFields[key]());
                }
            }
            _this.$q.all(savePromises).then(function () {
                delete pageRecords[pageRecordIndex].editedFields;
                pageRecords[pageRecordIndex].edited = false;
            });
        };
        //End Row Save Functionality
        //Setup Functions
        this.setupInSingleCollectionConfigMode = function (listingID, listingDisplayScope) {
            if (_this.getListing(listingID).collectionObject != null &&
                _this.getListing(listingID).collectionConfig != null) {
                _this.getListing(listingID).collectionObject = _this.getListing(listingID).collectionConfig.baseEntityName;
            }
            _this.initCollectionConfigData(listingID, _this.getListing(listingID).collectionConfig);
            _this.setupColumns(listingID, _this.getListing(listingID).collectionConfig, _this.getListing(listingID).collectionObject);
            listingDisplayScope.$watch('swListingDisplay.collectionPromise', function (newValue, oldValue) {
                if (newValue) {
                    _this.$q.when(_this.getListing(listingID).collectionPromise).then(function (data) {
                        _this.getListing(listingID).collectionData = data;
                        _this.setupDefaultCollectionInfo(listingID);
                        if (_this.getListing(listingID).collectionConfig != null && _this.getListing(listingID).collectionConfig.hasColumns()) {
                            _this.setupColumns(listingID, _this.getListing(listingID).collectionConfig, _this.getListing(listingID).collectionObject);
                        }
                        else {
                            _this.getListing(listingID).collectionConfig.loadJson(data.collectionConfig);
                        }
                        _this.notifyListingPageRecordsUpdate(listingID);
                        _this.getListing(listingID).collectionData.pageRecords = _this.getListing(listingID).collectionData.pageRecords ||
                            _this.getListing(listingID).collectionData.records;
                        _this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData);
                        _this.getListing(listingID).searching = false;
                        _this.getListing(listingID).columnCount = _this.getListing(listingID).columns.length + 1;
                        if (_this.getListing(listingID).selectable || _this.getListing(listingID).multiselectable || _this.getListing(listingID).sortable) {
                            _this.getListing(listingID).columnCount++;
                        }
                    });
                }
            });
        };
        this.setupInMultiCollectionConfigMode = function (listingID) {
            angular.forEach(_this.getListing(listingID).collectionConfigs, function (value, key) {
                _this.getListing(listingID).collectionObjects[key] = value.baseEntityName;
            });
        };
        this.setupDefaultCollectionInfo = function (listingID) {
            if (_this.getListing(listingID).hasCollectionPromise
                && angular.isDefined(_this.getListing(listingID).collection)
                && _this.getListing(listingID).collectionConfig == null) {
                _this.getListing(listingID).collectionObject = _this.getListing(listingID).collection.collectionObject;
                _this.getListing(listingID).collectionConfig = _this.collectionConfigService.newCollectionConfig(_this.getListing(listingID).collectionObject);
                _this.getListing(listingID).collectionConfig.loadJson(_this.getListing(listingID).collection.collectionConfig);
            }
            if (_this.getListing(listingID).multiSlot == false) {
                _this.$timeout(function () {
                    _this.getListing(listingID).collectionConfig.loadJson(_this.getListing(listingID).collectionData.collectionConfig);
                    _this.getListing(listingID).columns = _this.getListing(listingID).collectionConfig.columns;
                });
            }
            if (_this.getListing(listingID).paginator != null
                && _this.getListing(listingID).collectionConfig != null) {
                _this.getListing(listingID).collectionConfig.setPageShow(_this.getListing(listingID).paginator.getPageShow());
                _this.getListing(listingID).collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.getCurrentPage());
            }
        };
        this.addColumn = function (listingID, column) {
            if (_this.getListing(listingID).collectionConfig != null && _this.getListing(listingID).collectionConfig.baseEntityAlias != null) {
                column.propertyIdentifier = _this.getListing(listingID).collectionConfig.baseEntityAlias + "." + column.propertyIdentifier;
            }
            else if (_this.getListingBaseEntityName(listingID) != null) {
                column.propertyIdentifier = '_' + _this.getListingBaseEntityName(listingID).toLowerCase() + '.' + column.propertyIdentifier;
            }
            if (_this.getListingColumnIndexByPropertyIdentifier(listingID, column.propertyIdentifier) === -1) {
                if (column.aggregate) {
                    _this.getListing(listingID).aggregates.push(column.aggregate);
                }
                else {
                    _this.getListing(listingID).columns.push(column);
                }
            }
        };
        this.setupColumns = function (listingID, collectionConfig, collectionObject) {
            //assumes no alias formatting
            if (_this.getListing(listingID).columns.length == 0 &&
                collectionConfig != null) {
                if (collectionConfig.columns == null) {
                    collectionConfig.getEntity().then(function () {
                        for (var j = 0; j < collectionConfig.columns.length; j++) {
                            var column = collectionConfig.columns[j];
                            if (column.isVisible) {
                                _this.getListing(listingID).columns.push(column);
                            }
                        }
                    }, function () {
                        throw ("listing display couldn't initiate no columns");
                    });
                }
                else {
                    for (var j = 0; j < collectionConfig.columns.length; j++) {
                        var column = collectionConfig.columns[j];
                        if (column.isVisible) {
                            _this.getListing(listingID).columns.push(column);
                        }
                    }
                }
            }
            for (var i = 0; i < _this.getListing(listingID).columns.length; i++) {
                var column = _this.getListing(listingID).columns[i];
                _this.setupColumn(listingID, column, collectionConfig, collectionObject);
            }
        };
        this.setupColumn = function (listingID, column, collectionConfig, collectionObject) {
            if (_this.getListing(listingID).collectionConfig != null && !column.hasCellView) {
                _this.getListing(listingID).collectionConfig.addColumn(column.propertyIdentifier, undefined, column);
            }
            if (!collectionConfig && _this.getListing(listingID).collectionConfig != null) {
                collectionConfig = _this.getListing(listingID).collectionConfig != null;
            }
            var baseEntityName = _this.getListingBaseEntityName(listingID);
            if (!collectionObject) {
                collectionObject = baseEntityName;
            }
            //if we have entity information we can make some inferences about the column
            if (baseEntityName != null) {
                var lastEntity = _this.$hibachi.getLastEntityNameInPropertyIdentifier(baseEntityName, column.propertyIdentifier);
                if (angular.isUndefined(column.title)) {
                    column.title = _this.rbkeyService.getRBKey('entity.' + lastEntity.toLowerCase() + '.' + _this.utilityService.listLast(column.propertyIdentifier, '.'));
                }
                if (angular.isUndefined(column.isVisible)) {
                    column.isVisible = true;
                }
                var metadata = _this.$hibachi.getPropertyByEntityNameAndPropertyName(lastEntity, _this.utilityService.listLast(column.propertyIdentifier, '.'));
                if (metadata && angular.isDefined(metadata.persistent)) {
                    column.persistent = metadata.persistent;
                }
                if (metadata && angular.isDefined(metadata.ormtype)) {
                    column.ormtype = metadata.ormtype;
                }
                if (angular.isUndefined(column.type) || column.type == 'none') {
                    if (angular.isDefined(metadata) && angular.isDefined(metadata.hb_formattype)) {
                        column.type = metadata.hb_formattype;
                    }
                    else {
                        column.type = "none";
                    }
                }
                if (column.propertyIdentifier) {
                    _this.getListing(listingID).allpropertyidentifiers = _this.utilityService.listAppend(_this.getListing(listingID).allpropertyidentifiers, column.propertyIdentifier);
                }
                else if (column.processObjectProperty) {
                    column.searchable = false;
                    column.sort = false;
                    _this.getListing(listingID).allprocessobjectproperties = _this.utilityService.listAppend(_this.getListing(listingID).allprocessobjectproperties, column.processObjectProperty);
                }
                if (column.tdclass) {
                    var tdclassArray = column.tdclass.split(' ');
                    if (tdclassArray.indexOf("primary") >= 0 && _this.getListing(listingID).expandable) {
                        _this.getListing(listingID).tableattributes = _this.utilityService.listAppend(_this.getListing(listingID).tableattributes, 'data-expandsortproperty=' + column.propertyIdentifier, " ");
                        column.sort = false;
                    }
                }
            }
            if (angular.isDefined(column.tooltip)) {
                var parsedProperties = _this.utilityService.getPropertiesFromString(column.tooltip);
                if (parsedProperties && parsedProperties.length) {
                    collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties), "", { isVisible: false });
                }
            }
            else {
                column.tooltip = '';
            }
            if (angular.isDefined(column.queryString)) {
                var parsedProperties = _this.utilityService.getPropertiesFromString(column.queryString);
                if (parsedProperties && parsedProperties.length) {
                    collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties), "", { isVisible: false });
                }
            }
            //if the passed in collection has columns perform some formatting
            if (_this.getListing(listingID).hasCollectionPromise) {
                var lastEntity = _this.$hibachi.getLastEntityNameInPropertyIdentifier(collectionObject, _this.utilityService.listRest(column.propertyIdentifier, '.'));
                column.title = column.title || _this.rbkeyService.getRBKey('entity.' + lastEntity.toLowerCase() + '.' + _this.utilityService.listLast(column.propertyIdentifier, '.'));
                if (angular.isUndefined(column.isVisible)) {
                    column.isVisible = true;
                }
            }
            _this.columnOrderBy(listingID, column);
        };
        this.initCollectionConfigData = function (listingID, collectionConfig) {
            //kick off other essential setup
            _this.setupSelect(listingID);
            _this.setupMultiselect(listingID);
            _this.setupExampleEntity(listingID);
            if (collectionConfig != null) {
                angular.forEach(_this.getListing(listingID).filterGroups, function (filterGroup) {
                    collectionConfig.addFilterGroup(filterGroup);
                });
                angular.forEach(_this.getListing(listingID).filters, function (filter) {
                    collectionConfig.addFilter(filter.propertyIdentifier, filter.comparisonValue, filter.comparisonOperator, filter.logicalOperator, filter.hidden);
                });
                angular.forEach(_this.getListing(listingID).orderBys, function (orderBy) {
                    collectionConfig.addOrderBy(orderBy.orderBy);
                });
                angular.forEach(_this.getListing(listingID).aggregates, function (aggregate) {
                    collectionConfig.addDisplayAggregate(aggregate.propertyIdentifier, aggregate.aggregateFunction, aggregate.aggregateAlias);
                });
                //make sure we have necessary properties to make the actions
                angular.forEach(_this.getListing(listingID).actions, function (action) {
                    if (angular.isDefined(action.queryString)) {
                        var parsedProperties = _this.utilityService.getPropertiesFromString(action.queryString);
                        if (parsedProperties && parsedProperties.length) {
                            collectionConfig.addDisplayProperty(_this.utilityService.arrayToList(parsedProperties), "", { isVisible: false });
                        }
                    }
                });
                //also make sure we have necessary color filter properties
                angular.forEach(_this.getListing(listingID).colorFilters, function (colorFilter) {
                    if (angular.isDefined(colorFilter.propertyToCompare)) {
                        collectionConfig.addDisplayProperty(colorFilter.propertyToCompare, "", { isVisible: false });
                    }
                });
                if (_this.getListing(listingID).collectionConfig != null && _this.getListing(listingID).collectionConfig.hasColumns()) {
                    collectionConfig.addDisplayProperty(_this.getListingExampleEntity(listingID).$$getIDName(), undefined, { isVisible: false });
                }
                collectionConfig.setPageShow(_this.getListing(listingID).paginator.pageShow);
                collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.currentPage);
                if (_this.getListing(listingID).multiselectable && (!_this.getListing(listingID).columns || !_this.getListing(listingID).columns.length)) {
                    //check if it has an active flag and if so then add the active flag
                    if (_this.getListing(listingID).exampleEntity.metaData.activeProperty && !_this.getListing(listingID).hasCollectionPromise) {
                        collectionConfig.addFilter('activeFlag', 1, '=', undefined, true);
                    }
                }
                _this.setupHierarchicalExpandable(listingID, collectionConfig);
            }
            _this.setupSortable(listingID);
            _this.updateColumnAndAdministrativeCount(listingID);
        };
        this.setupSortable = function (listingID) {
            _this.attachToListingPageRecordsUpdate(listingID, _this.getPageRecordsWithManualSortOrder, _this.utilityService.createID(32));
        };
        this.setupSelect = function (listingID) {
            if (_this.getListing(listingID).selectFieldName && _this.getListing(listingID).selectFieldName.length) {
                _this.getListing(listingID).selectable = true;
                _this.getListing(listingID).tableclass = _this.utilityService.listAppend(_this.getListing(listingID).tableclass, 'table-select', ' ');
                _this.getListing(listingID).tableattributes = _this.utilityService.listAppend(_this.getListing(listingID).tableattributes, 'data-selectfield="' + _this.getListing(listingID).selectFieldName + '"', ' ');
            }
        };
        this.setupMultiselect = function (listingID) {
            if (_this.getListing(listingID).multiselectFieldName && _this.getListing(listingID).multiselectFieldName.length) {
                _this.getListing(listingID).multiselectable = true;
                _this.getListing(listingID).tableclass = _this.utilityService.listAppend(_this.getListing(listingID).tableclass, 'table-multiselect', ' ');
                _this.getListing(listingID).tableattributes = _this.utilityService.listAppend(_this.getListing(listingID).tableattributes, 'data-multiselectpropertyidentifier="' + _this.getListing(listingID).multiselectPropertyIdentifier + '"', ' ');
                //attach observer so we know when a selection occurs
                _this.getListing(listingID).observerService.attach(_this.getListing(listingID).updateMultiselectValues, _this.getListing(listingID).defaultSelectEvent, _this.getListing(listingID).collectionObject);
                //attach observer so we know when a pagination change occurs
                _this.getListing(listingID).observerService.attach(_this.getListing(listingID).paginationPageChange, 'swPaginationAction');
            }
            if (_this.getListing(listingID).multiselectValues && _this.getListing(listingID).multiselectValues.length) {
                //select all owned ids
                var multiSelectValuesArray = _this.getListing(listingID).multiselectValues.split(',');
                angular.forEach(multiSelectValuesArray, function (value) {
                    _this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID, value);
                });
            }
            if (_this.getListing(listingID).multiselectIdPaths && _this.getListing(listingID).multiselectIdPaths.length) {
                angular.forEach(_this.getListing(listingID).multiselectIdPaths.split(','), function (value) {
                    var id = _this.getListing(listingID).utilityService.listLast(value, '/');
                    _this.getListing(listingID).selectionService.addSelection(_this.getListing(listingID).tableID, id);
                });
            }
        };
        this.setupExampleEntity = function (listingID) {
            _this.getListing(listingID).exampleEntity = _this.$hibachi.getEntityExample(_this.getListingBaseEntityName(listingID));
            if (_this.getListing(listingID).exampleEntity != null) {
                //Look for Hierarchy in example entity
                if (!_this.getListing(listingID).parentPropertyName || (_this.getListing(listingID).parentPropertyName && !_this.getListing(listingID).parentPropertyName.length)) {
                    if (_this.getListing(listingID).exampleEntity.metaData.hb_parentPropertyName) {
                        _this.getListing(listingID).parentPropertyName = _this.getListing(listingID).exampleEntity.metaData.hb_parentPropertyName;
                    }
                }
                if (!_this.getListing(listingID).childPropertyName || (_this.getListing(listingID).childPropertyName && !_this.getListing(listingID).childPropertyName.length)) {
                    if (_this.getListing(listingID).exampleEntity.metaData.hb_childPropertyName) {
                        _this.getListing(listingID).childPropertyName = _this.getListing(listingID).exampleEntity.metaData.hb_childPropertyName;
                    }
                }
            }
        };
        this.setupHierarchicalExpandable = function (listingID, collectionConfig) {
            //Setup Hierachy Expandable
            if (_this.getListing(listingID).parentPropertyName && _this.getListing(listingID).parentPropertyName.length && _this.getListing(listingID).expandable != false) {
                if (angular.isUndefined(_this.getListing(listingID).expandable)) {
                    _this.getListing(listingID).expandable = true;
                }
                _this.getListing(listingID).tableclass = _this.utilityService.listAppend(_this.getListing(listingID).tableclass, 'table-expandable', ' ');
                //add parent property root filter
                if (!_this.getListing(listingID).hasCollectionPromise) {
                    collectionConfig.addFilter(_this.getListing(listingID).parentPropertyName + '.' + _this.getListing(listingID).exampleEntity.$$getIDName(), 'NULL', 'IS', undefined, true, false, false);
                }
                //this.collectionConfig.addDisplayProperty(this.exampleEntity.$$getIDName()+'Path',undefined,{isVisible:false});
                //add children column
                if (_this.getListing(listingID).childPropertyName && _this.getListing(listingID).childPropertyName.length) {
                    if (_this.getListing(listingID).getChildCount || !_this.getListing(listingID).hasCollectionPromise) {
                        collectionConfig.addDisplayAggregate(_this.getListing(listingID).childPropertyName, 'COUNT', _this.getListing(listingID).childPropertyName + 'Count', { isVisible: false, isSearchable: false });
                    }
                }
                _this.getListing(listingID).allpropertyidentifiers = _this.utilityService.listAppend(_this.getListing(listingID).allpropertyidentifiers, _this.getListing(listingID).exampleEntity.$$getIDName() + 'Path');
                _this.getListing(listingID).tableattributes = _this.utilityService.listAppend(_this.getListing(listingID).tableattributes, 'data-parentidproperty=' + _this.getListing(listingID).parentPropertyName + '.' + _this.getListing(listingID).exampleEntity.$$getIDName(), ' ');
            }
        };
        this.updateColumnAndAdministrativeCount = function (listingID) {
            //Setup a variable for the number of columns so that the none can have a proper colspan
            _this.getListing(listingID).columnCount = (_this.getListing(listingID).columns) ? _this.getListing(listingID).columns.length : 0;
            if (_this.getListing(listingID).selectable) {
                _this.getListing(listingID).columnCount++;
            }
            if (_this.getListing(listingID).multiselectable) {
                _this.getListing(listingID).columnCount++;
            }
            if (_this.getListing(listingID).sortable) {
                _this.getListing(listingID).columnCount++;
            }
            if (_this.getListing(listingID).administrativeCount) {
                _this.getListing(listingID).administrativeCount++;
            }
        };
        this.setupDefaultGetCollection = function (listingID) {
            if (_this.getListing(listingID).collectionConfigs.length == 0) {
                _this.getListing(listingID).collectionPromise = _this.getListing(listingID).collectionConfig.getEntity();
                return function () {
                    _this.getListing(listingID).collectionConfig.setCurrentPage(_this.getListing(listingID).paginator.getCurrentPage());
                    _this.getListing(listingID).collectionConfig.setPageShow(_this.getListing(listingID).paginator.getPageShow());
                    if (_this.getListing(listingID).multiSlot) {
                        _this.getListing(listingID).collectionConfig.getEntity().then(function (data) {
                            _this.getListing(listingID).collectionData = data;
                            _this.setupDefaultCollectionInfo(listingID);
                            _this.getListing(listingID).collectionData.pageRecords = data.pageRecords || data.records;
                            _this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData);
                        }, function (reason) {
                            throw ("Listing Service encounter a problem when trying to get collection. Reason: " + reason);
                        });
                    }
                    else {
                        _this.getListing(listingID).collectionPromise.then(function (data) {
                            _this.getListing(listingID).collectionData = data;
                            _this.setupDefaultCollectionInfo(listingID);
                            _this.getListing(listingID).collectionData.pageRecords = data.pageRecords || data.records;
                            _this.getListing(listingID).paginator.setPageRecordsInfo(_this.getListing(listingID).collectionData);
                        }, function (reason) {
                            throw ("Listing Service encounter a problem when trying to get collection. Reason: " + reason);
                        });
                    }
                };
            }
            else {
                return function () {
                    _this.getListing(listingID).collectionData = {};
                    _this.getListing(listingID).collectionData.pageRecords = [];
                    var allGetEntityPromises = [];
                    angular.forEach(_this.getListing(listingID).collectionConfigs, function (collectionConfig, key) {
                        allGetEntityPromises.push(collectionConfig.getEntity());
                    });
                    if (allGetEntityPromises.length) {
                        _this.$q.all(allGetEntityPromises).then(function (results) {
                            angular.forEach(results, function (result, key) {
                                _this.getListing(listingID).listingService.setupColumns(listingID, _this.getListing(listingID).collectionConfigs[key], _this.getListing(listingID).collectionObjects[key]);
                                _this.getListing(listingID).collectionData.pageRecords = _this.getListing(listingID).collectionData.pageRecords.concat(result.records);
                            });
                        }, function (reason) {
                            throw ("listing service had trouble getting collection data because: " + reason);
                        });
                    }
                };
            }
        };
        //End Setup Functions
        //Order By Functions
        //for multi order by
        this.columnOrderBy = function (listingID, column) {
            var isfound = false;
            if (_this.getListing(listingID).collectionConfigs != null) {
                angular.forEach(_this.getListing(listingID).collectionConfig.orderBy, function (orderBy, index) {
                    if (column.propertyIdentifier == orderBy.propertyIdentifier) {
                        isfound = true;
                        _this.getListing(listingID).orderByStates[column.propertyIdentifier] = orderBy.direction;
                    }
                });
            }
            if (!isfound) {
                _this.getListing(listingID).orderByStates[column.propertyIdentifier] = '';
            }
            return _this.getListing(listingID).orderByStates[column.propertyIdentifier];
        };
        //for multi order by
        this.columnOrderByIndex = function (listingID, column) {
            var isfound = false;
            if (column.sorting && column.sorting.active && column.sorting.sortOrder) {
                return column.sorting.sortOrder.toUpperCase();
            }
            if (_this.getListing(listingID).collectionConfig != null) {
                angular.forEach(_this.getListing(listingID).collectionConfig.orderBy, function (orderBy, index) {
                    if (column.propertyIdentifier == orderBy.propertyIdentifier) {
                        isfound = true;
                        _this.getListing(listingID).orderByIndices[column.propertyIdentifier] = index + 1;
                    }
                });
            }
            if (!isfound) {
                _this.getListing(listingID).orderByIndices[column.propertyIdentifier] = '';
            }
            return _this.getListing(listingID).orderByIndices[column.propertyIdentifier];
        };
        //for single column order by
        this.setSingleColumnOrderBy = function (listingID, propertyIdentifier, direction, notify) {
            if (notify === void 0) { notify = true; }
            if (direction.toUpperCase() === "ASC") {
                var oppositeDirection = "DESC";
            }
            else {
                var oppositeDirection = "ASC";
            }
            if (_this.getListing(listingID).collectionConfig != null) {
                var found = false;
                angular.forEach(_this.getListing(listingID).collectionConfig.orderBy, function (orderBy, index) {
                    if (propertyIdentifier == orderBy.propertyIdentifier) {
                        orderBy.direction = direction;
                        found = true;
                    }
                    else {
                        orderBy.direction = oppositeDirection;
                    }
                });
                if (!found) {
                    _this.getListing(listingID).collectionConfig.addOrderBy(propertyIdentifier + "|" + direction);
                }
                if (notify) {
                    _this.observerService.notify(_this.getListingOrderByChangedEventString(listingID));
                }
                _this.getCollection(listingID);
            }
        };
        //for manual sort
        this.setManualSort = function (listingID, toggle) {
            _this.getListing(listingID).sortable = toggle;
            if (toggle) {
                _this.setSingleColumnOrderBy(listingID, "sortOrder", "ASC");
            }
        };
        //for single column order by
        this.toggleOrderBy = function (listingID, column) {
            if (_this.getListing(listingID).hasSingleCollectionConfig()) {
                _this.getListing(listingID).collectionConfig.toggleOrderBy(column.propertyIdentifier, true);
            }
        };
        //End Order By Functions
        this.getColorFilterConditionString = function (colorFilter, pageRecord) {
            if (angular.isDefined(colorFilter.comparisonProperty)) {
                return pageRecord[colorFilter.propertyToCompare.replace('.', '_')] + colorFilter.comparisonOperator + pageRecord[colorFilter.comparisonProperty.replace('.', '_')];
            }
            else {
                return pageRecord[colorFilter.propertyToCompare.replace('.', '_')] + colorFilter.comparisonOperator + colorFilter.comparisonValue;
            }
        };
        //Disable Row Functions
        this.getKeyOfMatchedDisableRule = function (listingID, pageRecord) {
            var disableRuleMatchedKey = -1;
            if (angular.isDefined(_this.getListing(listingID).disableRules)) {
                angular.forEach(_this.getListing(listingID).disableRules, function (rule, key) {
                    if (angular.isDefined(pageRecord[rule.filterPropertyIdentifier])) {
                        if (angular.isString(pageRecord[rule.filterPropertyIdentifier])) {
                            var pageRecordValue = pageRecord[rule.filterPropertyIdentifier].trim();
                        }
                        else {
                            var pageRecordValue = pageRecord[rule.filterPropertyIdentifier];
                        }
                        if (rule.filterComparisonValue == "null") {
                            rule.filterComparisonValue = "";
                        }
                        if (_this.filterService.filterMatch(pageRecordValue, rule.filterComparisonOperator, rule.filterComparisonValue)) {
                            disableRuleMatchedKey = key;
                        }
                        if (disableRuleMatchedKey != -1) {
                            return disableRuleMatchedKey;
                        }
                    }
                });
            }
            return disableRuleMatchedKey;
        };
        this.getPageRecordMatchesDisableRule = function (listingID, pageRecord) {
            return _this.getKeyOfMatchedDisableRule(listingID, pageRecord) != -1;
        };
        //End disable rule functions
        //Expandable Functions
        this.setExpandable = function (listingID, value) {
            if (angular.isDefined(_this.getListing(listingID))) {
                _this.getListing(listingID).expandable = value;
            }
        };
        this.getKeyOfMatchedExpandableRule = function (listingID, pageRecord) {
            var expandableRuleMatchedKey = -1;
            if (angular.isDefined(_this.getListing(listingID)) &&
                angular.isDefined(_this.getListing(listingID).expandableRules)) {
                angular.forEach(_this.getListing(listingID).expandableRules, function (rule, key) {
                    if (angular.isDefined(pageRecord[rule.filterPropertyIdentifier])) {
                        if (angular.isString(pageRecord[rule.filterPropertyIdentifier])) {
                            var pageRecordValue = pageRecord[rule.filterPropertyIdentifier].trim();
                        }
                        else {
                            var pageRecordValue = pageRecord[rule.filterPropertyIdentifier];
                        }
                        if (_this.filterService.filterMatch(pageRecordValue, rule.filterComparisonOperator, rule.filterComparisonValue)) {
                            expandableRuleMatchedKey = key;
                        }
                        if (expandableRuleMatchedKey != -1) {
                            return expandableRuleMatchedKey;
                        }
                    }
                });
            }
            return expandableRuleMatchedKey;
        };
        this.getExampleEntityForExpandableRecord = function (listingID, pageRecord) {
            var childCollectionConfig = _this.getListing(listingID).getPageRecordChildCollectionConfigForExpandableRule(pageRecord);
            if (angular.isDefined(childCollectionConfig)) {
                return _this.$hibachi.getEntityExample(_this.getListing(listingID).getPageRecordChildCollectionConfigForExpandableRule(pageRecord).baseEntityName);
            }
            return _this.getListing(listingID).exampleEntity;
        };
        this.getPageRecordMatchesExpandableRule = function (listingID, pageRecord) {
            return _this.getKeyOfMatchedExpandableRule(listingID, pageRecord) != -1;
        };
        this.hasPageRecordRefreshChildrenEvent = function (listingID, pageRecord) {
            return _this.getPageRecordRefreshChildrenEvent(listingID, pageRecord) != null;
        };
        this.getPageRecordRefreshChildrenEvent = function (listingID, pageRecord) {
            var keyOfExpandableRuleMet = _this.getKeyOfMatchedExpandableRule(listingID, pageRecord);
            if (keyOfExpandableRuleMet != -1) {
                return _this.getListing(listingID).expandableRules[keyOfExpandableRuleMet].refreshChildrenEvent;
            }
        };
        this.getPageRecordChildCollectionConfigForExpandableRule = function (listingID, pageRecord) {
            var keyOfExpandableRuleMet = _this.getKeyOfMatchedExpandableRule(listingID, pageRecord);
            if (_this.getListing(listingID) != null &&
                angular.isFunction(_this.getListing(listingID).exampleEntity.$$getIDName) &&
                angular.isDefined(pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]) &&
                angular.isDefined(_this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]])) {
                return _this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]];
            }
            if (keyOfExpandableRuleMet != -1) {
                var childCollectionConfig = _this.getListing(listingID).expandableRules[keyOfExpandableRuleMet].childrenCollectionConfig.clone();
                angular.forEach(childCollectionConfig.filterGroups[0], function (filterGroup, key) {
                    angular.forEach(filterGroup, function (filter, key) {
                        if (angular.isString(filter.value)
                            && filter.value.length
                            && filter.value.charAt(0) == '$') {
                            filter.value = _this.utilityService.replaceStringWithProperties(filter.value, pageRecord);
                        }
                    });
                });
                _this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]] = childCollectionConfig;
                return _this.getListing(listingID).childCollectionConfigs[pageRecord[_this.getListing(listingID).exampleEntity.$$getIDName()]];
            }
        };
        //Setup a store so that controllers can listing for state changes and fire action requests.
        //To create a store, we instantiate it using the object that holds the state variables,
        //and the reducer. We can also add a middleware to the end if you need.
        this.listingDisplayStore = new Store.IStore(this.state, this.listingDisplayStateReducer);
    }
    return ListingService;
}());
exports.ListingService = ListingService;


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../typings/tsd.d.ts" />
/// <reference path="../../typings/hibachiTypescript.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
var alert_module_1 = __webpack_require__(59);
var loggermodule = angular.module('logger', [alert_module_1.alertmodule.name])
    .run([function () {
    }]);
exports.loggermodule = loggermodule;


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
//import pagination = require('../services/paginationservice');
//var PaginationService = pagination.PaginationService;
//'use strict';
var SWPaginationBarController = /** @class */ (function () {
    //@ngInject
    function SWPaginationBarController(paginationService) {
        this.paginationService = paginationService;
        if (angular.isUndefined(this.paginator)) {
            this.paginator = paginationService.createPagination();
        }
    }
    return SWPaginationBarController;
}());
exports.SWPaginationBarController = SWPaginationBarController;
var SWPaginationBar = /** @class */ (function () {
    //@ngInject
    function SWPaginationBar(hibachiPathBuilder, partialsPath) {
        this.restrict = 'E';
        this.scope = {};
        this.bindToController = {
            paginator: "=?"
        };
        this.controller = SWPaginationBarController;
        this.controllerAs = "swPaginationBar";
        this.link = function (scope, element, attrs) { };
        this.templateUrl = hibachiPathBuilder.buildPartialsPath(partialsPath) + 'paginationbar.html';
    }
    SWPaginationBar.Factory = function () {
        var directive = function (hibachiPathBuilder, partialsPath) { return new SWPaginationBar(hibachiPathBuilder, partialsPath); };
        directive.$inject = ['hibachiPathBuilder', 'partialsPath'];
        return directive;
    };
    return SWPaginationBar;
}());
exports.SWPaginationBar = SWPaginationBar;


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="../../typings/tsd.d.ts" />
/// <reference path="../../typings/hibachiTypescript.d.ts" />
//services
var paginationservice_1 = __webpack_require__(654);
var swpaginationbar_1 = __webpack_require__(652);
var core_module_1 = __webpack_require__(16);
var paginationmodule = angular.module('hibachi.pagination', [core_module_1.coremodule.name])
    // .config(['$provide','baseURL',($provide,baseURL)=>{
    // 	$provide.constant('paginationPartials', baseURL+basePartialsPath+'pagination/components/');
    // }])
    .run([function () {
    }])
    //services
    .service('paginationService', paginationservice_1.PaginationService)
    .directive('swPaginationBar', swpaginationbar_1.SWPaginationBar.Factory())
    //constants
    .constant('partialsPath', 'pagination/components/');
exports.paginationmodule = paginationmodule;


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../../typings/tsd.d.ts" />
/// <reference path="../../../typings/hibachiTypescript.d.ts" />
/*collection service is used to maintain the state of the ui*/
Object.defineProperty(exports, "__esModule", { value: true });
var Pagination = /** @class */ (function () {
    //@ngInject
    function Pagination(observerService, uuid) {
        var _this = this;
        this.observerService = observerService;
        this.uuid = uuid;
        this.pageShow = 10;
        this.currentPage = 1;
        this.pageStart = 0;
        this.pageEnd = 0;
        this.recordsCount = 0;
        this.totalPages = 0;
        this.pageShowOptions = [
            { display: 10, value: 10 },
            { display: 20, value: 20 },
            { display: 50, value: 50 },
            { display: 250, value: 250 },
            { display: "Auto", value: "Auto" }
        ];
        this.autoScrollPage = 1;
        this.autoScrollDisabled = false;
        this.notifyById = true;
        this.getSelectedPageShowOption = function () {
            return _this.selectedPageShowOption;
        };
        this.pageShowOptionChanged = function (pageShowOption) {
            _this.setPageShow(pageShowOption.value);
            _this.currentPage = 1;
            _this.notify('swPaginationAction', { type: 'setPageShow', payload: _this.getPageShow() });
        };
        this.getTotalPages = function () {
            return _this.totalPages;
        };
        this.setTotalPages = function (totalPages) {
            _this.totalPages = totalPages;
        };
        this.getPageStart = function () {
            return _this.pageStart;
        };
        this.setPageStart = function (pageStart) {
            _this.pageStart = pageStart;
        };
        this.getPageEnd = function () {
            return _this.pageEnd;
        };
        this.setPageEnd = function (pageEnd) {
            _this.pageEnd = pageEnd;
        };
        this.getRecordsCount = function () {
            return _this.recordsCount;
        };
        this.setRecordsCount = function (recordsCount) {
            _this.recordsCount = recordsCount;
        };
        this.getPageShowOptions = function () {
            return _this.pageShowOptions;
        };
        this.setPageShowOptions = function (pageShowOptions) {
            _this.pageShowOptions = pageShowOptions;
        };
        this.getPageShow = function () {
            return _this.pageShow;
        };
        this.setPageShow = function (pageShow) {
            _this.pageShow = pageShow;
        };
        this.getCurrentPage = function () {
            return _this.currentPage;
        };
        this.setCurrentPage = function (currentPage) {
            _this.currentPage = currentPage;
            //this.observerService.notifyById('swPaginationAction', this.uuid,{action:'pageChange', currentPage});
            _this.notify('swPaginationAction', { type: 'setCurrentPage', payload: _this.getCurrentPage() });
        };
        this.previousPage = function () {
            if (_this.getCurrentPage() == 1)
                return;
            _this.setCurrentPage(_this.getCurrentPage() - 1);
        };
        this.nextPage = function () {
            if (_this.getCurrentPage() < _this.getTotalPages()) {
                _this.setCurrentPage(_this.getCurrentPage() + 1);
                _this.notify('swPaginationAction', { type: 'nextPage', payload: _this.getCurrentPage() });
            }
        };
        this.hasPrevious = function () {
            return (_this.getPageStart() <= 1);
        };
        this.hasNext = function () {
            return (_this.getPageEnd() === _this.getRecordsCount());
        };
        this.showPreviousJump = function () {
            return (angular.isDefined(_this.getCurrentPage()) && _this.getCurrentPage() > 3);
        };
        this.showNextJump = function () {
            return !!(_this.getCurrentPage() < _this.getTotalPages() - 3 && _this.getTotalPages() > 6);
        };
        this.previousJump = function () {
            _this.setCurrentPage(_this.currentPage - 3);
        };
        this.nextJump = function () {
            _this.setCurrentPage(_this.getCurrentPage() + 3);
        };
        this.showPageNumber = function (pageNumber) {
            if (_this.getCurrentPage() >= _this.getTotalPages() - 3) {
                if (pageNumber > _this.getTotalPages() - 6) {
                    return true;
                }
            }
            if (_this.getCurrentPage() <= 3) {
                if (pageNumber < 6) {
                    return true;
                }
            }
            else {
                var bottomRange = _this.getCurrentPage() - 2;
                var topRange = _this.getCurrentPage() + 2;
                if (pageNumber > bottomRange && pageNumber < topRange) {
                    return true;
                }
            }
            return false;
        };
        this.setPageRecordsInfo = function (collection) {
            _this.setRecordsCount(collection.recordsCount);
            if (_this.getRecordsCount() === 0) {
                _this.setPageStart(0);
            }
            else {
                _this.setPageStart(collection.pageRecordsStart);
            }
            _this.setPageEnd(collection.pageRecordsEnd);
            _this.setTotalPages(collection.totalPages);
            _this.totalPagesArray = [];
            if (angular.isUndefined(_this.getCurrentPage()) || _this.getCurrentPage() < 5) {
                var start = 1;
                var end = (_this.getTotalPages() <= 10) ? _this.getTotalPages() + 1 : 10;
            }
            else {
                var start = (!_this.showNextJump()) ? _this.getTotalPages() - 4 : _this.getCurrentPage() - 3;
                var end = (_this.showNextJump()) ? _this.getCurrentPage() + 5 : _this.getTotalPages() + 1;
            }
            for (var i = start; i < end; i++) {
                _this.totalPagesArray.push(i);
            }
        };
        this.uuid = uuid;
        this.selectedPageShowOption = this.pageShowOptions[0];
        this.observerService.attach(this.setPageRecordsInfo, 'swPaginationUpdate', this.uuid);
    }
    Pagination.prototype.notify = function (event, parameters) {
        if (this.notifyById === true) {
            this.observerService.notifyById(event, this.uuid, parameters);
        }
        else {
            this.observerService.notify(event, parameters);
        }
    };
    return Pagination;
}());
exports.Pagination = Pagination;
var PaginationService = /** @class */ (function () {
    //@ngInject
    function PaginationService(utilityService, observerService) {
        var _this = this;
        this.utilityService = utilityService;
        this.observerService = observerService;
        this.paginations = {};
        this.createPagination = function (id) {
            var uuid = _this.utilityService.createID(10);
            if (angular.isDefined(id)) {
                uuid = id;
            }
            _this.paginations[uuid] = new Pagination(_this.observerService, uuid);
            return _this.paginations[uuid];
        };
        this.getPagination = function (uuid) {
            if (!uuid)
                return;
            return _this.paginations[uuid];
        };
    }
    return PaginationService;
}());
exports.PaginationService = PaginationService;


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/**
 * This validate directive will look at the current element, figure out the context (save, edit, delete) and
 * validate based on that context as defined in the validation properties object.
 */
// 'use strict';
// angular.module('slatwalladmin').directive('swValidate',
Object.defineProperty(exports, "__esModule", { value: true });
// [ '$log','$hibachi', function($log, $hibachi) {
var SWValidate = /** @class */ (function () {
    function SWValidate($log, $hibachi) {
        return {
            restrict: "A",
            require: '^ngModel',
            link: function (scope, elem, attr, ngModel) {
                //Define our contexts and validation property enums.
                var ContextsEnum = {
                    SAVE: { name: "save", value: 0 },
                    DELETE: { name: "delete", value: 1 },
                    EDIT: { name: "edit", value: 2 }
                };
                var ValidationPropertiesEnum = {
                    REGEX: { name: "regex", value: 0 },
                    MIN_VALUE: { name: "minValue", value: 1 },
                    MAX_VALUE: { name: "maxValue", value: 2 },
                    EQ: { name: "eq", value: 3 },
                    NEQ: { name: "neq", value: 4 },
                    UNIQUE: { name: "unique", value: 5 },
                    LTE: { name: "lte", value: 6 },
                    GTE: { name: "gte", value: 7 },
                    MIN_LENGTH: { name: "minLength", value: 8 },
                    MAX_LENGTH: { name: "maxLength", value: 9 },
                    DATA_TYPE: { name: "dataType", value: 10 },
                    REQUIRED: { name: "required", value: 11 }
                };
                scope.validationPropertiesEnum = ValidationPropertiesEnum;
                scope.contextsEnum = ContextsEnum;
                var myCurrentContext = scope.contextsEnum.SAVE; //We are only checking the save context right now.
                var contextNamesArray = getNamesFromObject(ContextsEnum); //Convert for higher order functions.
                var validationPropertiesArray = getNamesFromObject(ValidationPropertiesEnum); //Convert for higher order functions.
                var validationObject = scope.propertyDisplay.object.validations.properties; //Get the scope validation object.
                var errors = scope.propertyDisplay.errors;
                var errorMessages = [];
                var failFlag = 0;
                /**
                * Iterates over the validation object looking for the current elements validations, maps that to a validation function list
                * and calls those validate functions. When a validation fails, an error is set, the elements border turns red.
                */
                function validate(name, context, elementValue) {
                    var validationResults = {};
                    validationResults = { "name": "name", "context": "context", "required": "required", "error": "none", "errorkey": "none" };
                    for (var key in validationObject) {
                        // Look for the current attribute in the
                        // validation parameters.
                        if (key === name || key === name + "Flag") {
                            // Now that we have found the current
                            // validation parameters, iterate
                            // through them looking for
                            // the required parameters that match
                            // the current page context (save,
                            // delete, etc.)
                            for (var inner in validationObject[key]) {
                                var required = validationObject[key][inner].required || "false"; // Get
                                // the
                                // required
                                // value
                                var context = validationObject[key][inner].contexts || "none"; // Get
                                // the
                                // element
                                // context
                                //Setup the validation results object to pass back to caller.
                                validationResults = { "name": key, "context": context, "required": required, "error": "none", "errorkey": "none" };
                                var elementValidationArr = map(checkHasValidationType, validationPropertiesArray, validationObject[key][inner]);
                                //Iterate over the array and call the validate function if it has that property.
                                for (var i = 0; i < elementValidationArr.length; i++) {
                                    if (elementValidationArr[i] == true) {
                                        if (validationPropertiesArray[i] === "regex" && elementValue !== "") { //If element is zero, need to check required 
                                            //Get the regex string to match and send to validation function.
                                            var re = validationObject[key][inner].regex;
                                            var result = validate_RegExp(elementValue, re); //true if pattern match, fail otherwise.
                                            if (result != true) {
                                                errorMessages
                                                    .push("Invalid input");
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["REGEX"].name;
                                                validationResults.fail = true;
                                            }
                                            else {
                                                errorMessages
                                                    .push("Valid input");
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["REGEX"].name;
                                                validationResults.fail = false;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "minValue") {
                                            var validationMinValue = validationObject[key][inner].minValue;
                                            $log.debug(validationMinValue);
                                            var result = validate_MinValue(elementValue, validationMinValue);
                                            $log.debug("e>v" + result + " :" + elementValue, ":" + validationMinValue);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Minimum value is: "
                                                    + validationMinValue);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["MIN_VALUE"].name;
                                                validationResults.fail = true;
                                            }
                                            else {
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["MIN_VALUE"].name;
                                                validationResults.fail = false;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "maxValue") {
                                            var validationMaxValue = validationObject[key][inner].maxValue;
                                            var result = validate_MaxValue(elementValue, validationMaxValue);
                                            $log.debug("Max Value result is: " + result);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Maximum value is: "
                                                    + validationMaxValue);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["MAX_VALUE"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "minLength") {
                                            var validationMinLength = validationObject[key][inner].minLength;
                                            var result = validate_MinLength(elementValue, validationMinLength);
                                            $log.debug("Min Length result is: " + result);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Minimum length must be: "
                                                    + validationMinLength);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["MIN_LENGTH"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "maxLength") {
                                            var validationMaxLength = validationObject[key][inner].maxLength;
                                            var result = validate_MaxLength(elementValue, validationMaxLength);
                                            $log.debug("Max Length result is: " + result);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Maximum length is: "
                                                    + validationMaxLength);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["MAX_LENGTH"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "eq") {
                                            var validationEq = validationObject[key][inner].eq;
                                            var result = validate_Eq(elementValue, validationEq);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Must equal "
                                                    + validationEq);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["EQ"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "neq") {
                                            var validationNeq = validationObject[key][inner].neq;
                                            var result = validate_Neq(elementValue, validationNeq);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Must not equal: "
                                                    + validationNeq);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["NEQ"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "lte") {
                                            var validationLte = validationObject[key][inner].lte;
                                            var result = validate_Lte(elementValue, validationLte);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Must be less than "
                                                    + validationLte);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["LTE"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "gte") {
                                            var validationGte = validationObject[key][inner].gte;
                                            var result = validate_Gte(elementValue, validationGte);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Must be greater than: "
                                                    + validationGte);
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = "invalid-" + ValidationPropertiesEnum["GTE"].name;
                                                validationResults.fail = true;
                                            }
                                            return validationResults;
                                        }
                                        if (validationPropertiesArray[i] === "required") {
                                            var validationRequire = validationObject[key][inner].require;
                                            var result = validate_Required(elementValue, validationRequire);
                                            if (result != true) {
                                                errorMessages
                                                    .push("Required");
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = ValidationPropertiesEnum["REQUIRED"].name;
                                                validationResults.fail = true;
                                            }
                                            else {
                                                errorMessages
                                                    .push("Required");
                                                validationResults.error = errorMessages[errorMessages.length - 1];
                                                validationResults.errorkey = ValidationPropertiesEnum["REQUIRED"].name;
                                                validationResults.fail = false;
                                            }
                                            return validationResults;
                                        }
                                    }
                                }
                            }
                        }
                    } //<---end validate.			
                }
                /**
                * Function to map if we need a validation on this element.
                */
                function checkHasValidationType(validationProp, validationType) {
                    if (validationProp[validationType] != undefined) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
                /**
                * Iterates over the properties object finding which types of validation are needed.
                */
                function map(func, array, obj) {
                    var result = [];
                    forEach(array, function (element) {
                        result.push(func(obj, element));
                    });
                    return result;
                }
                /**
                * Array iteration helper.
                */
                function forEach(array, action) {
                    for (var i = 0; i < array.length; i++)
                        action(array[i]);
                }
                /**
                * Helper function to read all the names in our enums into an array that the higher order functions can use.
                */
                function getNamesFromObject(obj) {
                    var result = [];
                    for (var i in obj) {
                        var name = obj[i].name || "stub";
                        result.push(name);
                    }
                    return result;
                }
                /**
                * Tests the value for a RegExp match given by the pattern string.
                * Validates true if pattern match, false otherwise.
                */
                function validate_RegExp(value, pattern) {
                    var regex = new RegExp(pattern);
                    if (regex.test(value)) {
                        return true;
                    }
                    return false;
                }
                /**
                * Validates true if userValue >= minValue (inclusive)
                */
                function validate_MinValue(userValue, minValue) {
                    return (userValue >= minValue);
                }
                /**
                * Validates true if userValue <= maxValue (inclusive)
                */
                function validate_MaxValue(userValue, maxValue) {
                    return (userValue <= maxValue) ? true : false;
                }
                /**
                * Validates true if length of the userValue >= minLength (inclusive)
                */
                function validate_MinLength(userValue, minLength) {
                    return (userValue.length >= minLength) ? true : false;
                }
                /**
                * Validates true if length of the userValue <= maxLength (inclusive)
                */
                function validate_MaxLength(userValue, maxLength) {
                    return (userValue.length <= maxLength) ? true : false;
                }
                /**
                * Validates true if the userValue == eqValue
                */
                function validate_Eq(userValue, eqValue) {
                    return (userValue == eqValue) ? true : false;
                }
                /**
                * Validates true if the userValue != neqValue
                */
                function validate_Neq(userValue, neqValue) {
                    return (userValue != neqValue) ? true : false;
                }
                /**
                * Validates true if the userValue < decisionValue (exclusive)
                */
                function validate_Lte(userValue, decisionValue) {
                    return (userValue < decisionValue) ? true : false;
                }
                /**
                * Validates true if the userValue > decisionValue (exclusive)
                */
                function validate_Gte(userValue, decisionValue) {
                    return (userValue > decisionValue) ? true : false;
                }
                /**
                * Validates true if the userValue === property
                */
                function validate_EqProperty(userValue, property) {
                    return (userValue === property) ? true : false;
                }
                /**
                * Validates true if the given value is !NaN (Negate, Not a Number).
                */
                function validate_IsNumeric(value) {
                    return !isNaN(value) ? true : false;
                }
                /**
                * Validates true if the given userValue is empty and the field is required.
                */
                function validate_Required(property, userValue) {
                    return (userValue == "" && property == true) ? true : false;
                }
                /**
                * Handles the 'eager' validation on every key press.
                */
                ngModel.$parsers.unshift(function (value) {
                    var name = elem.context.name; //Get the element name for the validate function.
                    var currentValue = elem.val(); //Get the current element value to check validations against.
                    var val = validate(name, myCurrentContext, currentValue) || {};
                    //Check if field is required.				
                    $log.debug(scope);
                    $log.debug(val);
                    ngModel.$setValidity(val.errorkey, !val.fail);
                    return true;
                }); //<---end $parsers
                /**
                * This handles 'lazy' validation on blur.
                */
                elem.bind('blur', function (e) {
                });
            }
        };
    }
    SWValidate.Factory = function () {
        var directive = function ($log, $hibachi) { return new SWValidate($log, $hibachi); };
        directive.$inject = ['$log', '$hibachi'];
        return directive;
    };
    return SWValidate;
}());
exports.SWValidate = SWValidate;


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationDataType = /** @class */ (function () {
    //@ngInject
    function SWValidationDataType(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                var isValidFunction = function (modelValue) {
                    return validationService.validateDataType(modelValue, attributes.swvalidationdatatype);
                };
                ngModel.$validators.swvalidationdatatype = isValidFunction;
                ngModel.$validators['swvalidation' + attributes.swvalidationdatatype] = isValidFunction;
            }
        };
    }
    SWValidationDataType.Factory = function () {
        var directive = function (validationService) { return new SWValidationDataType(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationDataType;
}());
exports.SWValidationDataType = SWValidationDataType;


/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationEq = /** @class */ (function () {
    //@ngInject
    function SWValidationEq(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationeq =
                    function (modelValue, viewValue) {
                        return validationService.validateEq(modelValue, attributes.swvalidationeq);
                    }; //<--end function
            } //<--end link
        };
    }
    SWValidationEq.Factory = function () {
        var directive = function (validationService) { return new SWValidationEq(validationService); };
        directive.$inject = [
            'validationService'
        ];
        return directive;
    };
    return SWValidationEq;
}());
exports.SWValidationEq = SWValidationEq;


/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationGte = /** @class */ (function () {
    function SWValidationGte(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationGte =
                    function (modelValue, viewValue) {
                        return validationService.validateGte(modelValue, attributes.swvalidationGte);
                    }; //<--end function
            } //<--end link
        };
    }
    SWValidationGte.Factory = function () {
        var directive = function (validationService) { return new SWValidationGte(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationGte;
}());
exports.SWValidationGte = SWValidationGte;


/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationLte = /** @class */ (function () {
    function SWValidationLte(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationlte =
                    function (modelValue, viewValue) {
                        return validationService.validateLte(modelValue, attributes.swvalidationlte);
                    };
            }
        };
    }
    SWValidationLte.Factory = function () {
        var directive = function (validationService) { return new SWValidationLte(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationLte;
}());
exports.SWValidationLte = SWValidationLte;


/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationMaxLength = /** @class */ (function () {
    function SWValidationMaxLength(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationmaxlength =
                    function (modelValue, viewValue) {
                        var length = 0;
                        if (viewValue && viewValue.length) {
                            length = viewValue.length;
                        }
                        return validationService.validateMaxLength(length || 0, attributes.swvalidationmaxlength);
                    };
            }
        };
    }
    SWValidationMaxLength.Factory = function () {
        var directive = function (validationService) { return new SWValidationMaxLength(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationMaxLength;
}());
exports.SWValidationMaxLength = SWValidationMaxLength;


/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationMaxValue = /** @class */ (function () {
    function SWValidationMaxValue(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationmaxvalue =
                    function (modelValue, viewValue) {
                        if (viewValue == null) {
                            return true;
                        }
                        validationService.validateMaxValue(viewValue, attributes.swvalidationmaxvalue);
                    };
            }
        };
    }
    SWValidationMaxValue.Factory = function () {
        var directive = function (validationService) { return new SWValidationMaxValue(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationMaxValue;
}());
exports.SWValidationMaxValue = SWValidationMaxValue;


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationMinLength = /** @class */ (function () {
    function SWValidationMinLength($log, validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationminlength =
                    function (modelValue, viewValue) {
                        var length = 0;
                        if (viewValue && viewValue.length) {
                            length = viewValue.length;
                        }
                        return validationService.validateMinLength(length || 0, attributes.swvalidationminlength);
                    };
            }
        };
    }
    SWValidationMinLength.Factory = function () {
        var directive = function ($log, validationService) { return new SWValidationMinLength($log, validationService); };
        directive.$inject = ['$log', 'validationService'];
        return directive;
    };
    return SWValidationMinLength;
}());
exports.SWValidationMinLength = SWValidationMinLength;


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationMinValue = /** @class */ (function () {
    function SWValidationMinValue(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationminvalue =
                    function (modelValue, viewValue) {
                        if (viewValue == null) {
                            return true;
                        }
                        return validationService.validateMinValue(viewValue, attributes.swvalidationminvalue);
                    };
            }
        };
    }
    SWValidationMinValue.Factory = function () {
        var directive = function (validationService) { return new SWValidationMinValue(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationMinValue;
}());
exports.SWValidationMinValue = SWValidationMinValue;


/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationNeq = /** @class */ (function () {
    function SWValidationNeq(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationneq =
                    function (modelValue) {
                        return validationService.validateNeq(modelValue, attributes.swvalidationneq);
                    };
            }
        };
    }
    SWValidationNeq.Factory = function () {
        var directive = function (validationService) { return new SWValidationNeq(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationNeq;
}());
exports.SWValidationNeq = SWValidationNeq;


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationNumeric = /** @class */ (function () {
    function SWValidationNumeric(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationnumeric =
                    function (modelValue, viewValue) {
                        return validationService.validateNumeric(viewValue);
                    };
            }
        };
    }
    SWValidationNumeric.Factory = function () {
        var directive = function (validationService) { return new SWValidationNumeric(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationNumeric;
}());
exports.SWValidationNumeric = SWValidationNumeric;


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationRegex = /** @class */ (function () {
    function SWValidationRegex(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationregex =
                    function (modelValue) {
                        //Returns true if this user value (model value) does match the pattern
                        return validationService.validateRegex(modelValue, attributes.swvalidationregex);
                    };
            }
        };
    }
    SWValidationRegex.Factory = function () {
        var directive = function (validationService) { return new SWValidationRegex(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationRegex;
}());
exports.SWValidationRegex = SWValidationRegex;


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationRequired = /** @class */ (function () {
    //@ngInject
    function SWValidationRequired(validationService) {
        return {
            restrict: "A",
            require: "^ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$validators.swvalidationrequired =
                    function (modelValue, viewValue) {
                        var value = modelValue || viewValue;
                        if (attributes.swvalidationrequired === "true") {
                            return validationService.validateRequired(value);
                        }
                        else {
                            return true;
                        }
                    };
            }
        };
    }
    SWValidationRequired.Factory = function () {
        var directive = function (validationService) { return new SWValidationRequired(validationService); };
        directive.$inject = ['validationService'];
        return directive;
    };
    return SWValidationRequired;
}());
exports.SWValidationRequired = SWValidationRequired;


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationUnique = /** @class */ (function () {
    //@ngInject
    function SWValidationUnique($http, $q, $hibachi, $log, validationService) {
        return {
            restrict: "A",
            require: ["ngModel", "^?swFormField"],
            link: function (scope, element, attributes, controllers) {
                var ngModel = controllers[0];
                ngModel.$asyncValidators.swvalidationunique = function (modelValue, viewValue) {
                    var currentValue = modelValue || viewValue;
                    var property = controllers[1].property;
                    return validationService.validateUnique(currentValue, controllers[1].object, property);
                };
            }
        };
    }
    SWValidationUnique.Factory = function () {
        var directive = function ($http, $q, $hibachi, $log, validationService) { return new SWValidationUnique($http, $q, $hibachi, $log, validationService); };
        directive.$inject = ['$http', '$q', '$hibachi', '$log', 'validationService'];
        return directive;
    };
    return SWValidationUnique;
}());
exports.SWValidationUnique = SWValidationUnique;


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SWValidationUniqueOrNull = /** @class */ (function () {
    //@ngInject
    function SWValidationUniqueOrNull($http, $q, $hibachi, $log, validationService) {
        return {
            restrict: "A",
            require: "ngModel",
            link: function (scope, element, attributes, ngModel) {
                ngModel.$asyncValidators.swvalidationuniqueornull = function (modelValue, viewValue) {
                    var currentValue = modelValue || viewValue;
                    if (scope && scope.propertyDisplay && scope.propertyDisplay.property) {
                        var property = scope.propertyDisplay.property;
                        return validationService.validateUniqueOrNull(currentValue, scope.propertyDisplay.object, property);
                    }
                    else {
                        return $q.resolve(); //nothing to validate yet.
                    }
                };
            }
        };
    }
    SWValidationUniqueOrNull.Factory = function () {
        var directive = function ($http, $q, $hibachi, $log, validationService) { return new SWValidationUniqueOrNull($http, $q, $hibachi, $log, validationService); };
        directive.$inject = ['$http', '$q', '$hibachi', '$log', 'validationService'];
        return directive;
    };
    return SWValidationUniqueOrNull;
}());
exports.SWValidationUniqueOrNull = SWValidationUniqueOrNull;


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/*services return promises which can be handled uniquely based on success or failure by the controller*/
Object.defineProperty(exports, "__esModule", { value: true });
var ValidationService = /** @class */ (function () {
    //@ngInject
    function ValidationService($hibachi, $q) {
        var _this = this;
        this.$hibachi = $hibachi;
        this.$q = $q;
        this.MY_EMAIL_REGEXP = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.validateUnique = function (value, object, property) {
            var deferred = _this.$q.defer();
            //First time the asyncValidators function is loaded the
            //key won't be set  so ensure that we have
            //key and propertyName before checking with the server
            if (object && property) {
                _this.$hibachi.checkUniqueValue(object, property, value)
                    .then(function (unique) {
                    if (unique) {
                        deferred.resolve(); //It's unique
                    }
                    else {
                        deferred.reject(); //Add unique to $errors
                    }
                });
            }
            else {
                deferred.resolve(); //Ensure promise is resolved if we hit this
            }
            return deferred.promise;
        };
        this.validateUniqueOrNull = function (value, object, property) {
            var deferred = _this.$q.defer();
            //First time the asyncValidators function is loaded the
            //key won't be set  so ensure that we have
            //key and propertyName before checking with the server
            if (object && property) {
                _this.$hibachi.checkUniqueOrNullValue(object, property, value)
                    .then(function (unique) {
                    if (unique) {
                        deferred.resolve(); //It's unique
                    }
                    else {
                        deferred.reject(); //Add unique to $errors
                    }
                });
            }
            else {
                deferred.resolve(); //Ensure promise is resolved if we hit this
            }
            return deferred.promise;
        };
        this.validateEmail = function (value) {
            return _this.validateDataType(value, 'email');
        };
        this.validateDataType = function (value, type) {
            if (value == null) {
                return true;
            } //let required validate this
            if (angular.isString(value) && type === "string") {
                return true;
            }
            if (angular.isNumber(parseInt(value)) && type === "numeric") {
                return true;
            }
            if (angular.isArray(value) && type === "array") {
                return true;
            }
            if (angular.isDate(value) && type === "date") {
                return true;
            }
            if (angular.isObject(value) && type === "object") {
                return true;
            }
            if (type === 'email') {
                return _this.MY_EMAIL_REGEXP.test(value);
            }
            if (angular.isUndefined(value && type === "undefined")) {
                return true;
            }
            return false;
        };
        this.validateEq = function (value, expectedValue) {
            return (value === expectedValue);
        };
        this.validateNeq = function (value, expectedValue) {
            return (value !== expectedValue);
        };
        this.validateGte = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            if (angular.isString(value)) {
                value = parseInt(value);
            }
            if (angular.isString(comparisonValue)) {
                comparisonValue = parseInt(comparisonValue);
            }
            return (value >= comparisonValue);
        };
        this.validateLte = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            if (angular.isString(value)) {
                value = parseInt(value);
            }
            if (angular.isString(comparisonValue)) {
                comparisonValue = parseInt(comparisonValue);
            }
            return (value <= comparisonValue);
        };
        this.validateMaxLength = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            return _this.validateLte(value, comparisonValue);
        };
        this.validateMaxValue = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            return _this.validateLte(value, comparisonValue);
        };
        this.validateMinLength = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            return _this.validateGte(value, comparisonValue);
        };
        this.validateMinValue = function (value, comparisonValue) {
            if (comparisonValue === void 0) { comparisonValue = 0; }
            return _this.validateGte(value, comparisonValue);
        };
        this.validateNumeric = function (value) {
            return !isNaN(value);
        };
        this.validateRegex = function (value, pattern) {
            var regex = new RegExp(pattern);
            return regex.test(value);
        };
        this.validateRequired = function (value) {
            if (value) {
                return true;
            }
            else {
                return false;
            }
        };
        this.$hibachi = $hibachi;
        this.$q = $q;
    }
    return ValidationService;
}());
exports.ValidationService = ValidationService;


/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="../../typings/tsd.d.ts" />
/// <reference path="../../typings/hibachiTypescript.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
//components
var swvalidate_1 = __webpack_require__(655);
var swvalidationminlength_1 = __webpack_require__(662);
var swvalidationdatatype_1 = __webpack_require__(656);
var swvalidationeq_1 = __webpack_require__(657);
var swvalidationgte_1 = __webpack_require__(658);
var swvalidationlte_1 = __webpack_require__(659);
var swvalidationmaxlength_1 = __webpack_require__(660);
var swvalidationmaxvalue_1 = __webpack_require__(661);
var swvalidationminvalue_1 = __webpack_require__(663);
var swvalidationneq_1 = __webpack_require__(664);
var swvalidationnumeric_1 = __webpack_require__(665);
var swvalidationregex_1 = __webpack_require__(666);
var swvalidationrequired_1 = __webpack_require__(667);
var swvalidationunique_1 = __webpack_require__(668);
var swvalidationuniqueornull_1 = __webpack_require__(669);
//services
var validationservice_1 = __webpack_require__(670);
var core_module_1 = __webpack_require__(16);
var validationmodule = angular.module('hibachi.validation', [core_module_1.coremodule.name])
    .run([function () {
    }])
    //directives
    .directive('swValidate', swvalidate_1.SWValidate.Factory())
    .directive('swvalidationminlength', swvalidationminlength_1.SWValidationMinLength.Factory())
    .directive('swvalidationdatatype', swvalidationdatatype_1.SWValidationDataType.Factory())
    .directive('swvalidationeq', swvalidationeq_1.SWValidationEq.Factory())
    .directive("swvalidationgte", swvalidationgte_1.SWValidationGte.Factory())
    .directive("swvalidationlte", swvalidationlte_1.SWValidationLte.Factory())
    .directive('swvalidationmaxlength', swvalidationmaxlength_1.SWValidationMaxLength.Factory())
    .directive("swvalidationmaxvalue", swvalidationmaxvalue_1.SWValidationMaxValue.Factory())
    .directive("swvalidationminvalue", swvalidationminvalue_1.SWValidationMinValue.Factory())
    .directive("swvalidationneq", swvalidationneq_1.SWValidationNeq.Factory())
    .directive("swvalidationnumeric", swvalidationnumeric_1.SWValidationNumeric.Factory())
    .directive("swvalidationregex", swvalidationregex_1.SWValidationRegex.Factory())
    .directive("swvalidationrequired", swvalidationrequired_1.SWValidationRequired.Factory())
    .directive("swvalidationunique", swvalidationunique_1.SWValidationUnique.Factory())
    .directive("swvalidationuniqueornull", swvalidationuniqueornull_1.SWValidationUniqueOrNull.Factory())
    //services
    .service("validationService", validationservice_1.ValidationService);
exports.validationmodule = validationmodule;


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWAdminCreateSuperUser = /** @class */ (function () {
    function SWAdminCreateSuperUser($hibachi, workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            scope: {},
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "admincreatesuperuser.html",
            link: function (scope, element, attrs) {
                scope.Account_SetupInitialAdmin = $hibachi.newAccount_SetupInitialAdmin();
            }
        };
    }
    SWAdminCreateSuperUser.Factory = function () {
        var directive = function ($hibachi, workflowPartialsPath, hibachiPathBuilder) { return new SWAdminCreateSuperUser($hibachi, workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$hibachi',
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWAdminCreateSuperUser;
}());
exports.SWAdminCreateSuperUser = SWAdminCreateSuperUser;


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWSchedulePreviewController = /** @class */ (function () {
    function SWSchedulePreviewController() {
    }
    return SWSchedulePreviewController;
}());
var SWSchedulePreview = /** @class */ (function () {
    function SWSchedulePreview(workflowPartialsPath, hibachiPathBuilder) {
        this.workflowPartialsPath = workflowPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'AE';
        this.scope = {};
        this.bindToController = {
            schedule: "="
        };
        this.controller = SWSchedulePreviewController;
        this.controllerAs = "swSchedulePreview";
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath) + "schedulepreview.html";
    }
    SWSchedulePreview.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder) { return new SWSchedulePreview(workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = ['workflowPartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    SWSchedulePreview.$inject = ['workflowPartialsPath', 'hibachiPathBuilder'];
    return SWSchedulePreview;
}());
exports.SWSchedulePreview = SWSchedulePreview;


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowBasic = /** @class */ (function () {
    function SWWorkflowBasic(workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            scope: {
                workflow: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowbasic.html",
            link: function (scope, element, attrs) {
            }
        };
    }
    SWWorkflowBasic.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowBasic(workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowBasic;
}());
exports.SWWorkflowBasic = SWWorkflowBasic;


/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowCondition = /** @class */ (function () {
    function SWWorkflowCondition($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            scope: {
                workflowCondition: "=",
                workflowConditionIndex: "=",
                workflow: "=",
                filterPropertiesList: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowcondition.html",
            link: function (scope, element, attrs) {
                $log.debug('workflowCondition init');
                $log.debug(scope);
                scope.selectBreadCrumb = function (breadCrumbIndex) {
                    //splice out array items above index
                    var removeCount = scope.filterItem.breadCrumbs.length - 1 - breadCrumbIndex;
                    scope.filterItem.breadCrumbs.splice(breadCrumbIndex + 1, removeCount);
                    scope.selectedFilterPropertyChanged(null);
                };
                scope.selectedFilterPropertyChanged = function (selectedFilterProperty) {
                    $log.debug('selectedFilterProperty');
                    $log.debug(selectedFilterProperty);
                    scope.selectedFilterProperty = selectedFilterProperty;
                };
                if (angular.isUndefined(scope.workflowCondition.breadCrumbs)) {
                    scope.workflowCondition.breadCrumbs = [];
                    if (scope.workflowCondition.propertyIdentifier === "") {
                        scope.workflowCondition.breadCrumbs = [
                            {
                                entityAlias: scope.workflow.data.workflowObject,
                                cfc: scope.workflow.data.workflowObject,
                                propertyIdentifier: scope.workflow.data.workflowObject
                            }
                        ];
                    }
                    else {
                        var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');
                        entityAliasArrayFromString.pop();
                        for (var i in entityAliasArrayFromString) {
                            var breadCrumb = {
                                entityAlias: entityAliasArrayFromString[i],
                                cfc: entityAliasArrayFromString[i],
                                propertyIdentifier: entityAliasArrayFromString[i]
                            };
                            scope.workflowCondition.breadCrumbs.push(breadCrumb);
                        }
                    }
                }
                else {
                    angular.forEach(scope.workflowCondition.breadCrumbs, function (breadCrumb, key) {
                        if (angular.isUndefined(scope.filterPropertiesList[breadCrumb.propertyIdentifier])) {
                            var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(breadCrumb.cfc, true);
                            filterPropertiesPromise.then(function (value) {
                                metadataService.setPropertiesList(value, breadCrumb.propertyIdentifier);
                                scope.filterPropertiesList[breadCrumb.propertyIdentifier] = metadataService.getPropertiesListByBaseEntityAlias(breadCrumb.propertyIdentifier);
                                metadataService.formatPropertiesList(scope.filterPropertiesList[breadCrumb.propertyIdentifier], breadCrumb.propertyIdentifier);
                                var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');
                                entityAliasArrayFromString.pop();
                                entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();
                                if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {
                                    for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {
                                        var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];
                                        if (filterProperty.propertyIdentifier === scope.workflowCondition.propertyIdentifier) {
                                            //selectItem from drop down
                                            scope.selectedFilterProperty = filterProperty;
                                            //decorate with value and comparison Operator so we can use it in the Condition section
                                            scope.selectedFilterProperty.value = scope.workflowCondition.value;
                                            scope.selectedFilterProperty.comparisonOperator = scope.workflowCondition.comparisonOperator;
                                        }
                                    }
                                }
                            });
                        }
                        else {
                            var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');
                            entityAliasArrayFromString.pop();
                            entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();
                            if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {
                                for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {
                                    var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];
                                    if (filterProperty.propertyIdentifier === scope.workflowCondition.propertyIdentifier) {
                                        //selectItem from drop down
                                        scope.selectedFilterProperty = filterProperty;
                                        //decorate with value and comparison Operator so we can use it in the Condition section
                                        scope.selectedFilterProperty.value = scope.workflowCondition.value;
                                        scope.selectedFilterProperty.comparisonOperator = scope.workflowCondition.comparisonOperator;
                                    }
                                }
                            }
                        }
                    });
                }
            }
        };
    }
    SWWorkflowCondition.Factory = function () {
        var directive = function ($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowCondition($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'metadataService',
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowCondition;
}());
exports.SWWorkflowCondition = SWWorkflowCondition;


/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowConditionGroupItem = /** @class */ (function () {
    function SWWorkflowConditionGroupItem(workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowconditiongroupitem.html",
            link: function (scope, element, attrs) {
            }
        };
    }
    SWWorkflowConditionGroupItem.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowConditionGroupItem(workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowConditionGroupItem;
}());
exports.SWWorkflowConditionGroupItem = SWWorkflowConditionGroupItem;


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowConditionGroups = /** @class */ (function () {
    function SWWorkflowConditionGroups($log, workflowConditionService, workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            scope: {
                workflowConditionGroupItem: "=",
                workflowConditionGroup: "=",
                workflow: "=",
                filterPropertiesList: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowconditiongroups.html",
            link: function (scope, element, attrs) {
                $log.debug('workflowconditiongroups init');
                scope.addWorkflowCondition = function () {
                    $log.debug('addWorkflowCondition');
                    var workflowCondition = workflowConditionService.newWorkflowCondition();
                    workflowConditionService.addWorkflowCondition(scope.workflowConditionGroupItem, workflowCondition);
                };
                scope.addWorkflowGroupItem = function () {
                    $log.debug('addWorkflowGrouptItem');
                    var workflowConditionGroupItem = workflowConditionService.newWorkflowConditionGroupItem();
                    workflowConditionService.addWorkflowConditionGroupItem(scope.workflowConditionItem, workflowConditionGroupItem);
                };
            }
        };
    }
    SWWorkflowConditionGroups.Factory = function () {
        var directive = function ($log, workflowConditionService, workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowConditionGroups($log, workflowConditionService, workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            'workflowConditionService',
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowConditionGroups;
}());
exports.SWWorkflowConditionGroups = SWWorkflowConditionGroups;


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowTask = /** @class */ (function () {
    function SWWorkflowTask(workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'E',
            scope: {
                workflowTask: "=",
                workflowTasks: "=",
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowtask.html",
            link: function (scope, element, attrs) {
                scope.removeWorkflowTask = function (workflowTask) {
                    var deletePromise = workflowTask.$$delete();
                    deletePromise.then(function () {
                        if (workflowTask === scope.workflowTasks.selectedTask) {
                            delete scope.workflowTasks.selectedTask;
                        }
                        scope.workflowTasks.splice(workflowTask.$$index, 1);
                        for (var i in scope.workflowTasks) {
                            scope.workflowTasks[i].$$index = i;
                        }
                    });
                };
            }
        };
    }
    SWWorkflowTask.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowTask(workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowTask;
}());
exports.SWWorkflowTask = SWWorkflowTask;


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var SWWorkflowTaskActionsController = /** @class */ (function () {
    //@ngInject
    function SWWorkflowTaskActionsController($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder, collectionConfigService, observerService) {
        var _this = this;
        this.$log = $log;
        this.$hibachi = $hibachi;
        this.metadataService = metadataService;
        this.workflowPartialsPath = workflowPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.collectionConfigService = collectionConfigService;
        this.observerService = observerService;
        this.$log.debug('Workflow Task Actions Init');
        this.$log.debug(this.workflowTask);
        this.openActions = false;
        this.observerService.attach(function (item) {
            if (angular.isDefined(_this.emailTemplateCollectionConfig)) {
                _this.emailTemplateCollectionConfig.clearFilters();
                _this.emailTemplateCollectionConfig.addFilter("emailTemplateObject", item.value);
            }
            if (angular.isDefined(_this.printTemplateCollectionConfig)) {
                _this.printTemplateCollectionConfig.clearFilters();
                _this.printTemplateCollectionConfig.addFilter("printTemplateObject", item.value);
            }
        }, 'WorkflowWorkflowObjectOnChange');
        /**
         * Returns the correct object based on the selected object type.
         */
        var getObjectByActionType = function (workflowTaskAction) {
            if (workflowTaskAction.data.actionType === 'email') {
                workflowTaskAction.$$getEmailTemplate();
            }
            else if (workflowTaskAction.data.actionType === 'print') {
                workflowTaskAction.$$getPrintTemplate();
            }
        };
        /**
         * --------------------------------------------------------------------------------------------------------
         * Returns workflow task action, and saves them to the scope variable workflowtaskactions
         * --------------------------------------------------------------------------------------------------------
         */
        this.getWorkflowTaskActions = function () {
            /***
             Note:
             This conditional is checking whether or not we need to be retrieving to
             items all over again. If we already have them, we won't make another
             trip to the database.

             ***/
            if (angular.isUndefined(_this.workflowTask.data.workflowTaskActions)) {
                var workflowTaskPromise = _this.workflowTask.$$getWorkflowTaskActions();
                workflowTaskPromise.then(function () {
                    _this.workflowTaskActions = _this.workflowTask.data.workflowTaskActions;
                    angular.forEach(_this.workflowTaskActions, function (workflowTaskAction) {
                        getObjectByActionType(workflowTaskAction);
                    });
                    _this.$log.debug(_this.workflowTaskActions);
                });
            }
            else {
                _this.workflowTaskActions = _this.workflowTask.data.workflowTaskActions;
            }
            if (angular.isUndefined(_this.workflowTask.data.workflowTaskActions)) {
                _this.workflowTask.data.workflowTaskActions = [];
                _this.workflowTaskActions = _this.workflowTask.data.workflowTaskActions;
            }
        };
        this.getWorkflowTaskActions(); //Call get
        /**
         * --------------------------------------------------------------------------------------------------------
         * Saves the workflow task actions by calling the objects $$save method.
         * @param taskAction
         * --------------------------------------------------------------------------------------------------------
         */
        this.saveWorkflowTaskAction = function (taskAction, context) {
            _this.$log.debug("Context: " + context);
            _this.$log.debug("saving task action and parent task");
            _this.$log.debug(taskAction);
            var savePromise = _this.workflowTaskActions.selectedTaskAction.$$save();
            savePromise.then(function () {
                var taSavePromise = taskAction.$$save;
                //Clear the form by adding a new task action if 'save and add another' otherwise, set save and set finished
                if (context == 'add') {
                    _this.$log.debug("Save and New");
                    _this.addWorkflowTaskAction(taskAction);
                    _this.finished = false;
                }
                else if (context == "finish") {
                    _this.finished = true;
                }
                //Auto save the workflow now that the task action is saved.
                _this.workflowTask.data.workflow.$$save();
            }, function (err) {
                angular.element('a[href="/##j-basic-2"]').click();
                console.warn(err);
            });
        }; //<--end save
        /**
         * Sets the editing state to show/hide the edit screen.
         */
        this.setHidden = function (task) {
            if (!angular.isObject(task)) {
                task = {};
            }
            if (angular.isUndefined(task.hidden)) {
                task.hidden = false;
            }
            else {
                _this.$log.debug("setHidden()", "Setting Hide Value To " + !task.hidden);
                task.hidden = !task.hidden;
            }
        };
        /**
         * --------------------------------------------------------------------------------------------------------
         * Adds workflow action items by calling the workflowTask objects $$addWorkflowTaskAction() method
         * and sets the result to scope.
         * @param taskAction
         * --------------------------------------------------------------------------------------------------------
         */
        this.addWorkflowTaskAction = function (taskAction) {
            var workflowTaskAction = _this.workflowTask.$$addWorkflowTaskAction();
            _this.selectWorkflowTaskAction(workflowTaskAction);
            _this.$log.debug(_this.workflow);
        };
        /**
         * --------------------------------------------------------------------------------------------------------
         * Selects a new task action and populates the task action properties.
         * --------------------------------------------------------------------------------------------------------
         */
        this.selectWorkflowTaskAction = function (workflowTaskAction) {
            _this.$log.debug("Selecting new task action for editing: ");
            _this.$log.debug(workflowTaskAction);
            _this.finished = false;
            _this.workflowTaskActions.selectedTaskAction = undefined;
            var filterPropertiesPromise = _this.$hibachi.getFilterPropertiesByBaseEntityName(_this.workflowTask.data.workflow.data.workflowObject, true);
            filterPropertiesPromise.then(function (value) {
                _this.filterPropertiesList = {
                    baseEntityName: _this.workflowTask.data.workflow.data.workflowObject,
                    baseEntityAlias: "_" + _this.workflowTask.data.workflow.data.workflowObject
                };
                _this.metadataService.setPropertiesList(value, _this.workflowTask.data.workflow.data.workflowObject);
                _this.filterPropertiesList[_this.workflowTask.data.workflow.data.workflowObject] = _this.metadataService.getPropertiesListByBaseEntityAlias(_this.workflowTask.data.workflow.data.workflowObject);
                _this.metadataService.formatPropertiesList(_this.filterPropertiesList[_this.workflowTask.data.workflow.data.workflowObject], _this.workflowTask.data.workflow.data.workflowObject);
                _this.workflowTaskActions.selectedTaskAction = workflowTaskAction;
                _this.emailTemplateSelected = (_this.workflowTaskActions.selectedTaskAction.data.emailTemplate) ? _this.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateName : '';
                _this.emailTemplateCollectionConfig = _this.collectionConfigService.newCollectionConfig("EmailTemplate");
                _this.emailTemplateCollectionConfig.setDisplayProperties("emailTemplateID,emailTemplateName");
                _this.emailTemplateCollectionConfig.addFilter("emailTemplateObject", _this.workflowTask.data.workflow.data.workflowObject);
                _this.printTemplateSelected = (_this.workflowTaskActions.selectedTaskAction.data.printTemplate) ? _this.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateName : '';
                _this.printTemplateCollectionConfig = _this.collectionConfigService.newCollectionConfig("PrintTemplate");
                _this.printTemplateCollectionConfig.setDisplayProperties("printTemplateID,printTemplateName");
                _this.printTemplateCollectionConfig.addFilter("printTemplateObject", _this.workflowTask.data.workflow.data.workflowObject);
            });
        };
        /**
         * Overrides the confirm directive method deleteEntity. This is needed for the modal popup.
         */
        this.deleteEntity = function (entity) {
            _this.removeWorkflowTaskAction(entity);
        };
        /**
         * --------------------------------------------------------------------------------------------------------
         * Removes a workflow task action by calling the selected tasks $$delete method
         * and reindexes the list.
         * --------------------------------------------------------------------------------------------------------
         */
        this.removeWorkflowTaskAction = function (workflowTaskAction) {
            var deletePromise = workflowTaskAction.$$delete();
            deletePromise.then(function () {
                if (workflowTaskAction === _this.workflowTaskActions.selectedTaskAction) {
                    delete _this.workflowTaskActions.selectedTaskAction;
                }
                _this.$log.debug("removeWorkflowTaskAction");
                _this.$log.debug(workflowTaskAction);
                _this.workflowTaskActions.splice(workflowTaskAction.$$actionIndex, 1);
                for (var i in _this.workflowTaskActions) {
                    _this.workflowTaskActions[i].$$actionIndex = i;
                }
            });
        };
        this.searchProcess = {
            name: ''
        };
        /**
         * Watches for changes in the proccess
         */
        this.showProcessOptions = false;
        this.processOptions = [];
        //this.$scope.$watch('swWorkflowTaskActions.searchProcess.name', (newValue, oldValue)=>{
        //    if(newValue !== oldValue){
        //        this.getProcessOptions(this.workflowTask.data.workflow.data.workflowObject);
        //    }
        //});
        /**
         * Retrieves the proccess options for a workflow trigger action.
         */
        this.getProcessOptions = function (objectName) {
            if (!_this.processOptions.length) {
                var proccessOptionsPromise = _this.$hibachi.getProcessOptions(objectName);
                proccessOptionsPromise.then(function (value) {
                    _this.processOptions = value.data;
                });
            }
            _this.showProcessOptions = true;
        };
        /**
         * Changes the selected process option value.
         */
        this.selectProcess = function (processOption) {
            _this.workflowTaskActions.selectedTaskAction.data.processMethod = processOption.value;
            _this.searchProcess.name = processOption.value;
            _this.workflowTaskActions.selectedTaskAction.forms.selectedTaskAction.$setDirty();
            //this.searchProcess = processOption.name;
            _this.showProcessOptions = false;
        };
        this.selectEmailTemplate = function (item) {
            if (angular.isDefined(_this.workflowTaskActions.selectedTaskAction.data.emailTemplate)) {
                _this.workflowTaskActions.selectedTaskAction.data.emailTemplate.data.emailTemplateID = item.emailTemplateID;
            }
            else {
                var templateEmail = _this.$hibachi.newEmailTemplate();
                templateEmail.data.emailTemplateID = item.emailTemplateID;
                _this.workflowTaskActions.selectedTaskAction.$$setEmailTemplate(templateEmail);
            }
        };
        this.selectPrintTemplate = function (item) {
            if (angular.isDefined(_this.workflowTaskActions.selectedTaskAction.data.printTemplate)) {
                _this.workflowTaskActions.selectedTaskAction.data.printTemplate.data.printTemplateID = item.printTemplateID;
            }
            else {
                var templatePrint = _this.$hibachi.newPrintTemplate();
                templatePrint.data.printTemplateID = item.printTemplateID;
                _this.workflowTaskActions.selectedTaskAction.$$setPrintTemplate(templatePrint);
            }
        };
    }
    return SWWorkflowTaskActionsController;
}());
var SWWorkflowTaskActions = /** @class */ (function () {
    function SWWorkflowTaskActions(workflowPartialsPath, hibachiPathBuilder) {
        this.workflowPartialsPath = workflowPartialsPath;
        this.hibachiPathBuilder = hibachiPathBuilder;
        this.restrict = 'AE';
        this.scope = {};
        this.bindToController = {
            workflowTask: "="
        };
        this.controller = SWWorkflowTaskActionsController;
        this.controllerAs = "swWorkflowTaskActions";
        this.link = function ($scope, element, attrs) {
        };
        this.templateUrl = this.hibachiPathBuilder.buildPartialsPath(this.workflowPartialsPath) + "workflowtaskactions.html";
    }
    SWWorkflowTaskActions.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowTaskActions(workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = ['workflowPartialsPath', 'hibachiPathBuilder'];
        return directive;
    };
    SWWorkflowTaskActions.$inject = ['workflowPartialsPath', 'hibachiPathBuilder'];
    return SWWorkflowTaskActions;
}());
exports.SWWorkflowTaskActions = SWWorkflowTaskActions;


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
/**
 * Handles adding, editing, and deleting Workflows Tasks.
 */
var SWWorkflowTasks = /** @class */ (function () {
    function SWWorkflowTasks($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder) {
        return {
            restrict: 'A',
            scope: {
                workflow: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowtasks.html",
            link: function (scope, element, attrs) {
                scope.workflowPartialsPath = hibachiPathBuilder.buildPartialsPath(workflowPartialsPath);
                scope.propertiesList = {};
                function logger(context, message) {
                    $log.debug("SwWorkflowTasks :" + context + " : " + message);
                }
                /**
                 * Sets workflowTasks on the scope by populating with $$getWorkflowTasks()
                 */
                scope.getWorkflowTasks = function () {
                    logger("getWorkflowTasks", "Retrieving items");
                    logger("getWorkflowTasks", "Workflow Tasks");
                    $log.debug(scope.workflowTasks);
                    if (!scope.workflow.$$isPersisted()) {
                        scope.workflow.data.workflowTasks = [];
                        scope.workflowTasks = scope.workflow.data.workflowTasks;
                        return;
                    }
                    /***
                       Note:
                       This conditional is checking whether or not we need to be retrieving to
                       items all over again. If we already have them, we won't make another
                       trip to the database.

                     ***/
                    if (angular.isUndefined(scope.workflow.data.workflowTasks)) {
                        var workflowTasksPromise = scope.workflow.$$getWorkflowTasks();
                        workflowTasksPromise.then(function () {
                            scope.workflowTasks = scope.workflow.data.workflowTasks;
                        });
                    }
                    else {
                        logger("getWorkflowTasks", "Retrieving cached Items");
                        scope.workflowTasks = scope.workflow.data.workflowTasks;
                    }
                    if (angular.isUndefined(scope.workflow.data.workflowTasks)) {
                        //Reset the workflowTasks.
                        logger("getWorkflowTasks", "workflowTasks is undefined.");
                        scope.workflow.data.workflowTasks = [];
                        scope.workflowTasks = scope.workflow.data.workflowTasks;
                    }
                };
                scope.getWorkflowTasks(); //call tasks
                /**
                 * Sets the editing state to show/hide the edit screen.
                 */
                scope.setHidden = function (task) {
                    if (!angular.isObject(task) || angular.isUndefined(task.hidden)) {
                        task.hidden = false;
                    }
                    else {
                        logger("setHidden()", "Setting Hide Value To " + !task.hidden);
                        task.hidden = !task.hidden;
                    }
                };
                /**
                 * Add a workflow task and logs the result.
                 */
                scope.addWorkflowTask = function () {
                    var newWorkflowTask = scope.workflow.$$addWorkflowTask();
                    logger("var newWorkflowTask", newWorkflowTask);
                    scope.selectWorkflowTask(newWorkflowTask);
                };
                /**
                  * Watches the select for changes.
                  */
                scope.$watch('workflowTasks.selectedTask.data.workflow.data.workflowObject', function (newValue, oldValue) {
                    logger("scope.$watch", "Change Detected " + newValue + " from " + oldValue);
                    if ((newValue !== oldValue && angular.isDefined(scope.workflowTasks.selectedTask))) {
                        logger("scope.$watch", "Change to " + newValue);
                        scope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityAlias = '_' + newValue.charAt(0).toLowerCase() + newValue.slice(1);
                        scope.workflowTasks.selectedTask.data.taskConditionsConfig.baseEntityName = newValue;
                    }
                });
                /**
                   * --------------------------------------------------------------------------------------------------------
                   * Saves the workflow task by calling the objects $$save method. In addition to calling save here,
                   * we also refresh the data by calling getWorkflowTasks followed by calling the global entity.$$save.
                   * @param task
                   * --------------------------------------------------------------------------------------------------------
                   */
                scope.saveWorkflowTask = function (task, context) {
                    //scope.workflowTasks.selectedTask.$$setWorkflow(scope.workflow);
                    scope.workflowTasks.selectedTask.$$save().then(function (res) {
                        scope.done = true;
                        delete scope.workflowTasks.selectedTask;
                        if (context === 'add') {
                            scope.addWorkflowTask();
                            scope.finished = true;
                        }
                        else if (context == "finish") {
                            scope.finished = false;
                        }
                        //refresh the task information.
                        delete scope.workflow.data.workflowTasks;
                        scope.getWorkflowTasks();
                        //Save the workflow entity automatically.
                        scope.workflow.$$save();
                    }, function (err) {
                    });
                }; //<--end save*/
                /**
                 * Select a workflow task.
                 */
                scope.selectWorkflowTask = function (workflowTask) {
                    scope.done = false;
                    $log.debug(workflowTask);
                    scope.finished = false;
                    scope.workflowTasks.selectedTask = undefined;
                    var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(scope.workflow.data.workflowObject, true);
                    filterPropertiesPromise.then(function (value) {
                        scope.filterPropertiesList = {
                            baseEntityName: scope.workflow.data.workflowObject,
                            baseEntityAlias: "_" + scope.workflow.data.workflowObject
                        };
                        metadataService.setPropertiesList(value, scope.workflow.data.workflowObject);
                        scope.filterPropertiesList[scope.workflow.data.workflowObject] = metadataService.getPropertiesListByBaseEntityAlias(scope.workflow.data.workflowObject);
                        metadataService.formatPropertiesList(scope.filterPropertiesList[scope.workflow.data.workflowObject], scope.workflow.data.workflowObject);
                        scope.workflowTasks.selectedTask = workflowTask;
                    });
                };
                /* Does a delete of the property using delete */
                scope.softRemoveTask = function (workflowTask) {
                    if (workflowTask === scope.workflowTasks.selectedTask) {
                        delete scope.workflowTasks.selectedTask;
                    }
                    scope.removeIndexFromTasks(workflowTask.$$index);
                    scope.reindexTaskList();
                };
                /* Does an API call delete using $$delete */
                scope.hardRemoveTask = function (workflowTask) {
                    var deletePromise = workflowTask.$$delete();
                    deletePromise.then(function () {
                        if (workflowTask === scope.workflowTasks.selectedTask) {
                            delete scope.workflowTasks.selectedTask;
                        }
                        scope.removeIndexFromTasks(workflowTask.$$index);
                        scope.reindexTaskList();
                    });
                };
                /*Override the delete entity in the confirmation controller*/
                scope.deleteEntity = function (entity) {
                    scope.hardRemoveTask(entity);
                };
                /* Re-indexes the task list */
                scope.reindexTaskList = function () {
                    for (var i in scope.workflowTasks) {
                        logger("ReIndexing the list", i);
                        scope.workflowTasks[i].$$index = i;
                    }
                };
                /* Removes the tasks index from the tasks array */
                scope.removeIndexFromTasks = function (index) {
                    logger("RemoveIndexFromTasks", index);
                    scope.workflowTasks.splice(index, 1);
                };
            }
        };
    }
    SWWorkflowTasks.Factory = function () {
        var directive = function ($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder) { return new SWWorkflowTasks($log, $hibachi, metadataService, workflowPartialsPath, hibachiPathBuilder); };
        directive.$inject = [
            '$log',
            '$hibachi',
            'metadataService',
            'workflowPartialsPath',
            'hibachiPathBuilder'
        ];
        return directive;
    };
    return SWWorkflowTasks;
}());
exports.SWWorkflowTasks = SWWorkflowTasks;


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowTrigger = /** @class */ (function () {
    function SWWorkflowTrigger($http, $hibachi, alertService, metadataService, workflowPartialsPath, hibachiPathBuilder, utilityService) {
        return {
            restrict: 'A',
            replace: true,
            scope: {
                workflowTrigger: "=",
                workflowTriggers: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowtrigger.html",
            link: function (scope, element, attrs) {
                /**
                 * Selects the current workflow trigger.
                 */
                scope.selectWorkflowTrigger = function (workflowTrigger) {
                    scope.done = false;
                    scope.finished = false;
                    scope.workflowTriggers.selectedTrigger = undefined;
                    var filterPropertiesPromise = $hibachi.getFilterPropertiesByBaseEntityName(scope.workflowTrigger.data.workflow.data.workflowObject, true);
                    filterPropertiesPromise.then(function (value) {
                        scope.filterPropertiesList = {
                            baseEntityName: scope.workflowTrigger.data.workflow.data.workflowObject,
                            baseEntityAlias: "_" + scope.workflowTrigger.data.workflow.data.workflowObject
                        };
                        metadataService.setPropertiesList(value, scope.workflowTrigger.data.workflow.data.workflowObject);
                        scope.filterPropertiesList[scope.workflowTrigger.data.workflow.data.workflowObject] = metadataService.getPropertiesListByBaseEntityAlias(scope.workflowTrigger.data.workflow.data.workflowObject);
                        metadataService.formatPropertiesList(scope.filterPropertiesList[scope.workflowTrigger.data.workflow.data.workflowObject], scope.workflowTrigger.data.workflow.data.workflowObject);
                        scope.workflowTriggers.selectedTrigger = workflowTrigger;
                    });
                };
                scope.executingTrigger = false;
                scope.executeWorkflowTrigger = function (workflowTrigger) {
                    if (scope.executingTrigger)
                        return;
                    if (!workflowTrigger.data.workflow.data.workflowTasks || !workflowTrigger.data.workflow.data.workflowTasks.length) {
                        var alert = alertService.newAlert();
                        alert.msg = "You don't have any Task yet!";
                        alert.type = "error";
                        alert.fade = true;
                        alertService.addAlert(alert);
                        return;
                    }
                    scope.executingTrigger = true;
                    var appConfig = $hibachi.getConfig();
                    var urlString = appConfig.baseURL + '/index.cfm/?' + appConfig.action + '=api:workflow.executeScheduleWorkflowTrigger&workflowTriggerID=' + workflowTrigger.data.workflowTriggerID + '&x=' + utilityService.createID();
                    $http.get(urlString).finally(function () {
                        scope.executingTrigger = false;
                        var alert = alertService.newAlert();
                        alert.msg = "Task Triggered Successfully. Check History for Status";
                        alert.type = "success";
                        alert.fade = true;
                        alertService.addAlert(alert);
                    });
                };
                /**
                 * Overrides the delete function for the confirmation modal. Delegates to the normal delete method.
                 */
                scope.deleteEntity = function (entity, index) {
                    scope.deleteTrigger(entity, index);
                };
                /**
                 * Hard deletes a workflow trigger
                 */
                scope.deleteTrigger = function (workflowTrigger, index) {
                    var deleteTriggerPromise = $hibachi.saveEntity('WorkflowTrigger', workflowTrigger.data.workflowTriggerID, {}, 'Delete');
                    deleteTriggerPromise.then(function (value) {
                        scope.workflowTriggers.splice(index, 1);
                    });
                };
            }
        };
    }
    SWWorkflowTrigger.Factory = function () {
        var directive = function ($http, $hibachi, alertService, metadataService, workflowPartialsPath, hibachiPathBuilder, utilityService) { return new SWWorkflowTrigger($http, $hibachi, alertService, metadataService, workflowPartialsPath, hibachiPathBuilder, utilityService); };
        directive.$inject = [
            '$http',
            '$hibachi',
            'alertService',
            'metadataService',
            'workflowPartialsPath',
            'hibachiPathBuilder',
            'utilityService'
        ];
        return directive;
    };
    return SWWorkflowTrigger;
}());
exports.SWWorkflowTrigger = SWWorkflowTrigger;


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowTriggerHistory = /** @class */ (function () {
    function SWWorkflowTriggerHistory(workflowPartialsPath, hibachiPathBuilder, $rootScope, collectionConfigService) {
        return {
            restrict: 'A',
            scope: {
                workflow: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowtriggerhistory.html",
            link: function (scope, element, attrs) {
                $rootScope.workflowID = scope.workflow.data.workflowID;
                //Build the history collection.
                scope.workflowTriggerHistoryCollection = collectionConfigService.newCollectionConfig("WorkflowTriggerHistory");
                scope.workflowTriggerHistoryCollection.addFilter("workflowTrigger.workflow.workflowID", $rootScope.workflowID, "=");
                scope.workflowTriggerHistoryCollection.addDisplayProperty("workflowTrigger.triggerType");
                scope.workflowTriggerHistoryCollection.addDisplayProperty("response");
                scope.workflowTriggerHistoryCollection.addDisplayProperty("endTime");
                scope.workflowTriggerHistoryCollection.addDisplayProperty("startTime");
                scope.workflowTriggerHistoryCollection.addDisplayProperty("successFlag");
            }
        };
    }
    SWWorkflowTriggerHistory.Factory = function () {
        var directive = function (workflowPartialsPath, hibachiPathBuilder, $rootScope, collectionConfigService) { return new SWWorkflowTriggerHistory(workflowPartialsPath, hibachiPathBuilder, $rootScope, collectionConfigService); };
        directive.$inject = [
            'workflowPartialsPath',
            'hibachiPathBuilder',
            '$rootScope',
            'collectionConfigService'
        ];
        return directive;
    };
    return SWWorkflowTriggerHistory;
}());
exports.SWWorkflowTriggerHistory = SWWorkflowTriggerHistory;


/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var SWWorkflowTriggers = /** @class */ (function () {
    function SWWorkflowTriggers($hibachi, workflowPartialsPath, formService, observerService, hibachiPathBuilder, collectionConfigService, scheduleService, dialogService) {
        return {
            restrict: 'E',
            scope: {
                workflow: "="
            },
            templateUrl: hibachiPathBuilder.buildPartialsPath(workflowPartialsPath) + "workflowtriggers.html",
            link: function (scope, element, attrs, formController) {
                scope.schedule = {};
                scope.$watch('workflowTriggers.selectedTrigger', function (newValue, oldValue) {
                    if (newValue !== undefined && newValue !== oldValue) {
                        if (newValue.data.triggerType == 'Schedule') {
                            if (angular.isDefined(newValue.data.schedule)) {
                                scope.schedule.selectedName = newValue.data.schedule.data.scheduleName;
                                scope.selectSchedule(newValue.data.schedule.data);
                            }
                            if (angular.isDefined(newValue.data.scheduleCollection)) {
                                scope.selectedCollection = newValue.data.scheduleCollection.data.collectionName;
                            }
                        }
                        else {
                            scope.searchEvent.name = scope.workflowTriggers.selectedTrigger.triggerEventTitle;
                        }
                    }
                });
                scope.collectionCollectionConfig = collectionConfigService.newCollectionConfig("Collection");
                scope.collectionCollectionConfig.setDisplayProperties("collectionID,collectionName");
                scope.collectionCollectionConfig.addFilter("collectionObject", scope.workflow.data.workflowObject);
                observerService.attach(function (item) {
                    scope.collectionCollectionConfig.clearFilters();
                    scope.collectionCollectionConfig.addFilter("collectionObject", item.value);
                    scope.eventOptions = [];
                }, 'WorkflowWorkflowObjectOnChange');
                scope.scheduleCollectionConfig = collectionConfigService.newCollectionConfig("Schedule");
                scope.scheduleCollectionConfig.setDisplayProperties("scheduleID,scheduleName,daysOfMonthToRun,daysOfWeekToRun,recuringType,frequencyStartTime,frequencyEndTime,frequencyInterval");
                scope.daysOfweek = [];
                scope.daysOfMonth = [];
                scope.$id = 'swWorkflowTriggers';
                /**
                 * Retrieves the workflow triggers.
                 */
                scope.getWorkflowTriggers = function () {
                    /***
                       Note:
                       This conditional is checking whether or not we need to be retrieving to
                       items all over again. If we already have them, we won't make another
                       trip to the database.

                    ***/
                    if (!scope.workflow.$$isPersisted()) {
                        scope.workflow.data.workflowTriggers = [];
                        scope.workflowTriggers = scope.workflow.data.workflowTriggers;
                        return;
                    }
                    if (angular.isUndefined(scope.workflow.data.workflowTriggers)) {
                        var workflowTriggersPromise = scope.workflow.$$getWorkflowTriggers();
                        workflowTriggersPromise.then(function () {
                            scope.workflowTriggers = scope.workflow.data.workflowTriggers;
                            /* resets the workflow trigger */
                            if (angular.isUndefined(scope.workflow.data.workflowTriggers)) {
                                scope.workflow.data.workflowTriggers = [];
                                scope.workflowTriggers = scope.workflow.data.workflowTriggers;
                            }
                            angular.forEach(scope.workflowTriggers, function (workflowTrigger, key) {
                                if (workflowTrigger.data.triggerType === 'Schedule') {
                                    workflowTrigger.$$getSchedule();
                                    workflowTrigger.$$getScheduleCollection();
                                } //<---end if
                            }); //<---end forEach
                        }); //<---end workflow triggers promise
                    }
                    else {
                        //Use the cached versions.
                        scope.workflowTriggers = scope.workflow.data.workflowTriggers;
                    } //<---end else
                };
                scope.getWorkflowTriggers(); //call triggers
                scope.showCollections = false;
                scope.collections = [];
                scope.searchEvent = {
                    name: ''
                };
                /**
                 * Watches for changes in the event
                 */
                scope.showEventOptions = false;
                scope.eventOptions = [];
                /**
                 * Retrieves the event options for a workflow trigger item.
                 */
                scope.getEventOptions = function (objectName) {
                    if (!scope.eventOptions.length) {
                        var eventOptionsPromise = $hibachi.getEventOptions(objectName);
                        eventOptionsPromise.then(function (value) {
                            scope.eventOptions = value.data;
                        });
                    }
                    scope.showEventOptions = !scope.showEventOptions;
                };
                /**
                 * Saves the workflow triggers then cascade a save to the workflow object as well.
                 */
                scope.saveWorkflowTrigger = function (context) {
                    if (!scope.workflowTriggers.selectedTrigger.$$isPersisted()) {
                        scope.workflowTriggers.selectedTrigger.$$setWorkflow(scope.workflow);
                    }
                    var saveWorkflowTriggerPromise = scope.workflowTriggers.selectedTrigger.$$save();
                    saveWorkflowTriggerPromise.then(function () {
                        scope.showEventOptions = true;
                        scope.searchEvent = {
                            name: ''
                        };
                        scope.schedule.selectedName = '';
                        scope.schedulePreview = {};
                        //Clear the form by adding a new task action if 'save and add another' otherwise, set save and set finished
                        if (context == 'add') {
                            scope.addWorkflowTrigger();
                        }
                        else if (context == "finish") {
                            scope.workflowTriggers.selectedTrigger = undefined;
                        }
                        //auto saves the workflow as well.
                        scope.workflow.$$save();
                    });
                };
                scope.closeTrigger = function () {
                    if (!scope.workflowTriggers.selectedTrigger.$$isPersisted()) {
                        scope.workflowTriggers.selectedTrigger.$$setWorkflow();
                    }
                    scope.workflowTriggers.selectedTrigger = undefined;
                };
                /**
                 * Changes the selected trigger value.
                 */
                scope.selectEvent = function (eventOption) {
                    //Needs to clear old and set new.
                    scope.workflowTriggers.selectedTrigger.data.triggerEventTitle = eventOption.name;
                    scope.workflowTriggers.selectedTrigger.data.triggerEvent = eventOption.value;
                    if (eventOption.entityName == scope.workflow.data.workflowObject) {
                        scope.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier = '';
                    }
                    else {
                        scope.workflowTriggers.selectedTrigger.data.objectPropertyIdentifier = eventOption.entityName;
                    }
                    scope.searchEvent.name = eventOption.name;
                    scope.showEventOptions = false;
                    observerService.notifyById('pullBindings', 'WorkflowTriggertriggerEventpullBindings').then(function () {
                    });
                    observerService.notifyById('pullBindings', 'WorkflowTriggertriggerEventTitlepullBindings').then(function () {
                    });
                };
                /**
                 * Selects a new collection.
                 */
                scope.selectCollection = function (collection) {
                    scope.workflowTriggers.selectedTrigger.data.scheduleCollection = collection;
                    scope.showCollections = false;
                };
                /**
                 * Removes a workflow trigger
                 */
                scope.removeWorkflowTrigger = function (workflowTrigger) {
                    if (workflowTrigger === scope.workflowTriggers.selectedTrigger) {
                        delete scope.workflowTriggers.selectedTrigger;
                    }
                    scope.workflowTriggers.splice(workflowTrigger.$$index, 1);
                };
                scope.setAsEvent = function (workflowTrigger) {
                    if (!workflowTrigger.$$isPersisted()) {
                        workflowTrigger.data.saveTriggerHistoryFlag = 0;
                    }
                    //add event,  clear schedule
                };
                scope.setAsSchedule = function (workflowTrigger) {
                    if (!workflowTrigger.$$isPersisted()) {
                        workflowTrigger.data.saveTriggerHistoryFlag = 1;
                    }
                };
                /**
                 * Adds a workflow trigger.
                 */
                scope.addWorkflowTrigger = function () {
                    var newWorkflowTrigger = $hibachi.newWorkflowTrigger();
                    scope.workflowTriggers.selectedTrigger = newWorkflowTrigger;
                };
                scope.addNewSchedule = function () {
                    scope.createSchedule = true;
                    scope.scheduleEntity = $hibachi.newSchedule();
                };
                scope.saveSchedule = function () {
                    if (scope.scheduleEntity.data.recuringType == 'weekly') {
                        scope.scheduleEntity.data.daysOfWeekToRun = scope.daysOfweek.filter(Number).join();
                    }
                    else if (scope.scheduleEntity.data.recuringType == 'monthly') {
                        scope.scheduleEntity.data.daysOfMonthToRun = scope.daysOfMonth.filter(Number).join();
                    }
                    scope.scheduleEntity.$$save().then(function (res) {
                        scope.schedule.selectedName = angular.copy(scope.scheduleEntity.data.scheduleName);
                        scope.selectSchedule(angular.copy(scope.scheduleEntity.data));
                        formService.resetForm(scope.scheduleEntity.forms['scheduleForm']);
                        scope.createSchedule = false;
                    }, function () {
                    });
                };
                scope.selectCollection = function (item) {
                    if (item === undefined) {
                        scope.workflowTriggers.selectedTrigger.$$setScheduleCollection();
                        return;
                    }
                    if (angular.isDefined(scope.workflowTriggers.selectedTrigger.data.scheduleCollection)) {
                        scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID = item.collectionID;
                        scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionName = item.collectionName;
                    }
                    else {
                        var _collection = $hibachi.newCollection();
                        _collection.data.collectionID = item.collectionID;
                        _collection.data.collectionName = item.collectionName;
                        scope.workflowTriggers.selectedTrigger.$$setScheduleCollection(_collection);
                    }
                };
                scope.viewCollection = function () {
                    if (angular.isDefined(scope.workflowTriggers.selectedTrigger.data.scheduleCollection)) {
                        dialogService.addPageDialog('org/Hibachi/client/src/collection/components/criteriacreatecollection', {
                            entityName: 'Collection',
                            entityId: scope.workflowTriggers.selectedTrigger.data.scheduleCollection.data.collectionID,
                            readOnly: true
                        });
                    }
                };
                scope.selectSchedule = function (item) {
                    if (item === undefined) {
                        scope.schedulePreview = {};
                        scope.workflowTriggers.selectedTrigger.$$setSchedule();
                        return;
                    }
                    scope.schedulePreview = scheduleService.buildSchedulePreview(item, 6);
                    if (angular.isDefined(scope.workflowTriggers.selectedTrigger.data.schedule)) {
                        scope.workflowTriggers.selectedTrigger.data.schedule.data.scheduleID = item.scheduleID;
                        scope.workflowTriggers.selectedTrigger.data.schedule.data.scheduleName = item.scheduleName;
                    }
                    else {
                        var _schedule = $hibachi.newSchedule();
                        _schedule.data.scheduleID = item.scheduleID;
                        _schedule.data.scheduleName = item.scheduleName;
                        scope.workflowTriggers.selectedTrigger.$$setSchedule(_schedule);
                    }
                };
            }
        };
    }
    SWWorkflowTriggers.Factory = function () {
        var directive = function ($hibachi, workflowPartialsPath, formService, observerService, hibachiPathBuilder, collectionConfigService, scheduleService, dialogService) { return new SWWorkflowTriggers($hibachi, workflowPartialsPath, formService, observerService, hibachiPathBuilder, collectionConfigService, scheduleService, dialogService); };
        directive.$inject = [
            '$hibachi',
            'workflowPartialsPath',
            'formService',
            'observerService',
            'hibachiPathBuilder',
            'collectionConfigService',
            'scheduleService',
            'dialogService'
        ];
        return directive;
    };
    return SWWorkflowTriggers;
}());
exports.SWWorkflowTriggers = SWWorkflowTriggers;


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
var baseentityservice_1 = __webpack_require__(14);
var ScheduleService = /** @class */ (function (_super) {
    __extends(ScheduleService, _super);
    //@ngInject
    function ScheduleService($injector, $hibachi, utilityService) {
        var _this = _super.call(this, $injector, $hibachi, utilityService, 'Schedule') || this;
        _this.$injector = $injector;
        _this.$hibachi = $hibachi;
        _this.utilityService = utilityService;
        _this.schedulePreview = {};
        _this.clearSchedulePreview = function () {
            _this.schedulePreview = {};
        };
        _this.addSchedulePreviewItem = function (cdate, longMonthName) {
            if (longMonthName === void 0) { longMonthName = true; }
            var weekday = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            var month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            var monthShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
            var currentDate = (cdate.getMonth() + 1) + '-' + cdate.getDate() + '-' + cdate.getFullYear();
            if (_this.schedulePreview[currentDate] === undefined) {
                _this.schedulePreview[currentDate] = {
                    day: cdate.getDate(),
                    month: (longMonthName) ? month[cdate.getMonth()] : monthShort[cdate.getMonth()],
                    year: cdate.getFullYear(),
                    weekday: weekday[cdate.getDay()],
                    times: []
                };
            }
            _this.schedulePreview[currentDate].times.push(cdate.toLocaleTimeString());
        };
        _this.buildSchedulePreview = function (scheduleObject, totalOfPreviews) {
            if (totalOfPreviews === void 0) { totalOfPreviews = 10; }
            _this.clearSchedulePreview();
            var startTime = new Date(Date.parse(scheduleObject.frequencyStartTime));
            var endTime = (scheduleObject.frequencyEndTime.trim()) ? new Date(Date.parse(scheduleObject.frequencyEndTime)) : false;
            var now = new Date();
            var startPoint = new Date();
            startPoint.setHours(startTime.getHours());
            startPoint.setMinutes(startTime.getMinutes());
            startPoint.setSeconds(startTime.getSeconds());
            var daysToRun = [];
            if (scheduleObject.recuringType == 'weekly') {
                daysToRun = scheduleObject.daysOfWeekToRun.toString().split(',');
                if (!daysToRun.length || scheduleObject.daysOfWeekToRun.toString().trim() == '') {
                    return _this.schedulePreview;
                }
            }
            if (scheduleObject.recuringType == 'monthly') {
                daysToRun = scheduleObject.daysOfMonthToRun.toString().split(',');
                if (!daysToRun.length || !scheduleObject.daysOfWeekToRun || scheduleObject.daysOfWeekToRun.toString().trim() == '') {
                    return _this.schedulePreview;
                }
            }
            var datesAdded = 0;
            for (var i = 0;; i++) {
                if (datesAdded >= totalOfPreviews || i >= 500)
                    break;
                var timeToadd = (scheduleObject.frequencyInterval && scheduleObject.frequencyInterval.toString().trim()) ? (scheduleObject.frequencyInterval * i) * 60000 : i * 24 * 60 * 60 * 1000;
                var currentDatetime = new Date(startPoint.getTime() + timeToadd);
                if (currentDatetime < now)
                    continue;
                if (scheduleObject.recuringType == 'weekly') {
                    if (daysToRun.indexOf((currentDatetime.getDay() + 1).toString()) == -1)
                        continue;
                }
                else if (scheduleObject.recuringType == 'monthly') {
                    if (daysToRun.indexOf(currentDatetime.getDate().toString()) == -1)
                        continue;
                }
                if (!endTime) {
                    _this.addSchedulePreviewItem(currentDatetime);
                    datesAdded++;
                }
                else {
                    if (_this.utilityService.minutesOfDay(startTime) <= _this.utilityService.minutesOfDay(currentDatetime)
                        && _this.utilityService.minutesOfDay(endTime) >= _this.utilityService.minutesOfDay(currentDatetime)) {
                        _this.addSchedulePreviewItem(currentDatetime);
                        datesAdded++;
                    }
                }
            }
            return _this.schedulePreview;
        };
        return _this;
    }
    return ScheduleService;
}(baseentityservice_1.BaseEntityService));
exports.ScheduleService = ScheduleService;


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path='../../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../../typings/tsd.d.ts' />
Object.defineProperty(exports, "__esModule", { value: true });
var WorkflowCondition = /** @class */ (function () {
    function WorkflowCondition() {
        this.propertyIdentifer = "";
        this.comparisonOperator = "";
        this.value = "";
        this.displayPropertyIdentifier = "";
        this.$$disabled = false;
        this.$$isClosed = true;
        this.$$isNew = true;
    }
    return WorkflowCondition;
}());
exports.WorkflowCondition = WorkflowCondition;
var WorkflowConditionGroupItem = /** @class */ (function () {
    function WorkflowConditionGroupItem() {
        this.workflowConditionGroup = [];
    }
    return WorkflowConditionGroupItem;
}());
exports.WorkflowConditionGroupItem = WorkflowConditionGroupItem;
var WorkflowConditionService = /** @class */ (function () {
    function WorkflowConditionService($log, $hibachi, alertService) {
        var _this = this;
        this.$log = $log;
        this.newWorkflowCondition = function () {
            return new WorkflowCondition;
        };
        this.addWorkflowCondition = function (groupItem, condition) {
            _this.$log.debug('addWorkflowCondition');
            _this.$log.debug(groupItem);
            _this.$log.debug(condition);
            if (groupItem.length >= 1) {
                condition.logicalOperator = 'AND';
            }
            groupItem.push(condition);
        };
        this.newWorkflowConditionGroupItem = function () {
            return new WorkflowConditionGroupItem;
        };
        this.addWorkflowConditionGroupItem = function (group, groupItem) {
            group.push(groupItem);
        };
    }
    WorkflowConditionService.$inject = ["$log", "$hibachi", "alertService"];
    return WorkflowConditionService;
}());
exports.WorkflowConditionService = WorkflowConditionService;


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../typings/hibachiTypescript.d.ts' />
/// <reference path='../../typings/tsd.d.ts' />
//services
var workflowconditionservice_1 = __webpack_require__(685);
var scheduleservice_1 = __webpack_require__(684);
//directives
var swadmincreatesuperuser_1 = __webpack_require__(672);
var swworkflowbasic_1 = __webpack_require__(674);
var swworkflowcondition_1 = __webpack_require__(675);
var swworkflowconditiongroupitem_1 = __webpack_require__(676);
var swworkflowconditiongroups_1 = __webpack_require__(677);
var swworkflowtask_1 = __webpack_require__(678);
var swworkflowtaskactions_1 = __webpack_require__(679);
var swworkflowtasks_1 = __webpack_require__(680);
var swworkflowtrigger_1 = __webpack_require__(681);
var swworkflowtriggers_1 = __webpack_require__(683);
var swworkflowtriggerhistory_1 = __webpack_require__(682);
var swschedulepreview_1 = __webpack_require__(673);
//filters
var workflowmodule = angular.module('hibachi.workflow', ['hibachi.collection']).config(function () {
})
    //constants
    .constant('workflowPartialsPath', 'workflow/components/')
    //services
    .service('workflowConditionService', workflowconditionservice_1.WorkflowConditionService)
    .service('scheduleService', scheduleservice_1.ScheduleService)
    //directives
    .directive('swAdminCreateSuperUser', swadmincreatesuperuser_1.SWAdminCreateSuperUser.Factory())
    .directive('swWorkflowBasic', swworkflowbasic_1.SWWorkflowBasic.Factory())
    .directive('swWorkflowCondition', swworkflowcondition_1.SWWorkflowCondition.Factory())
    .directive('swWorkflowConditionGroupItem', swworkflowconditiongroupitem_1.SWWorkflowConditionGroupItem.Factory())
    .directive('swWorkflowConditionGroups', swworkflowconditiongroups_1.SWWorkflowConditionGroups.Factory())
    .directive('swWorkflowTask', swworkflowtask_1.SWWorkflowTask.Factory())
    .directive('swWorkflowTaskActions', swworkflowtaskactions_1.SWWorkflowTaskActions.Factory())
    .directive('swWorkflowTasks', swworkflowtasks_1.SWWorkflowTasks.Factory())
    .directive('swWorkflowTrigger', swworkflowtrigger_1.SWWorkflowTrigger.Factory())
    .directive('swWorkflowTriggers', swworkflowtriggers_1.SWWorkflowTriggers.Factory())
    .directive('swWorkflowTriggerHistory', swworkflowtriggerhistory_1.SWWorkflowTriggerHistory.Factory())
    .directive('swSchedulePreview', swschedulepreview_1.SWSchedulePreview.Factory());
exports.workflowmodule = workflowmodule;


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(173);


/***/ })
],[687]);
>>>>>>> 11fc64b0c0986ccb6d968c9383d18f1d8176ec72
